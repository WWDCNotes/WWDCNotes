{"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc21-10023-direct-and-reflect-focus-in-swiftui"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"abstract":[{"text":"With device input — as with all things in life — where you put focus matters. Discover how you can move focus in your app with SwiftUI, programmatically dismiss the keyboard, and build large navigation targets from small views. Together, these APIs can help you simplify your app’s interface and make it more powerful for people to find what they need.","type":"text"}],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10023-Direct-and-reflect-focus-in-SwiftUI","interfaceLanguage":"swift"},"sampleCodeDownload":{"kind":"sampleDownload","action":{"identifier":"https:\/\/developer.apple.com\/wwdc21\/10023","overridingTitle":"Watch Video (11 min)","isActive":true,"type":"reference"}},"sections":[],"metadata":{"roleHeading":"WWDC21","role":"sampleCode","modules":[{"name":"WWDC Notes"}],"title":"Direct and reflect focus in SwiftUI"},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Focus is the system that lets your app take input from keyboards, remotes, game controllers, accessible switch controls, and other sources that – unlike touch inputs – are not tied to specific screen coordinates"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the focus view is often drawn with special embellishments, making it easy for people to predict where their input will be directed"}]}]}],"type":"unorderedList"},{"anchor":"Focus-state-API","level":2,"text":"Focus state API","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"new ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/SwiftUI\/FocusState","type":"reference","isActive":true},{"text":" property wrapper, which controls the placement of the app focus","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"new ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/focused(_:)"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/focused(_:equals:)"},{"text":" view modifiers, which bind the view focus state to the given state value","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"syntax":"swift","code":["struct LoginForm {","  enum Field: Hashable {","    case username","    case password","  }","","  @State private var username = \"\"","  @State private var password = \"\"","  @FocusState private var focusedField: Field?","","  var body: some View {","    Form {","      TextField(\"Username\", text: $username)","        .focused($focusedField, equals: .username)","","      SecureField(\"Password\", text: $password)","        .focused($focusedField, equals: .password)","","      Button(\"Sign In\", action: onSignInTap)","    }","  }","","  \/\/\/ Puts the focus on one of the text fields if their data is missing.","  func onSignInTap() {","    if username.isEmpty {","      focusedField = .username","    } else if password.isEmpty {","      focusedField = .password","    } else {","      handleLogin(username, password)","    }","  }","}"],"type":"codeListing"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Note that the FocusState value is optional (","type":"text"},{"type":"codeVoice","code":"Field?"},{"text":" in the example): ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" is used for cases where focus is in an unrelated part of the screen.","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Focus-sections","level":2,"text":"Focus sections","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"FocusState"},{"text":"s are not just for text fields, but can also be used to navigate the focus of the app (think browsing tvOS)","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"new ","type":"text"},{"type":"codeVoice","code":"focusSection()"},{"text":" view modifier, which tells SwiftUi that this view is capable of accepting focus if it contains any focusable subviews","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"this is used (in tvOS) to navigate between different\/separate focus sections of the screen"}],"type":"paragraph"}]}],"type":"unorderedList"},{"syntax":"swift","code":["struct ContentView: View {","","  var body: some View {","    HStack {","      VStack) {","         ...","      }","      .focusSection()","","      VStack {","        ...","      }","      .focusSection()","    }","  }","}"],"type":"codeListing"},{"anchor":"Written-By","level":2,"text":"Written By","type":"heading"},{"numberOfColumns":5,"columns":[{"size":1,"content":[{"inlineContent":[{"type":"image","identifier":"zntfdr"}],"type":"paragraph"}]},{"size":4,"content":[{"anchor":"Federico-Zanetello","level":3,"text":"Federico Zanetello","type":"heading"},{"inlineContent":[{"overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/zntfdr","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/zntfdr.dev","type":"reference","isActive":true}],"type":"paragraph"}]}],"type":"row"},{"type":"thematicBreak"},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true}],"type":"paragraph"},{"anchor":"Related-Sessions","level":2,"text":"Related Sessions","type":"heading"},{"style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10075-Use-SwiftUI-with-AppKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10018-Whats-new-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10120-Support-Full-Keyboard-Access-in-your-iOS-app"],"type":"links"},{"inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2025 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}]}],"references":{"https://developer.apple.com/documentation/swiftui/view/focused(_:equals:)":{"titleInlineContent":[{"type":"codeVoice","code":"focused(_:equals:)"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/focused(_:equals:)","type":"link","title":"focused(_:equals:)","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/focused(_:equals:)"},"https://developer.apple.com/documentation/swiftui/view/focused(_:)":{"type":"link","title":"focused(_:)","titleInlineContent":[{"code":"focused(_:)","type":"codeVoice"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/focused(_:)","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/focused(_:)"},"https://github.com/zntfdr":{"identifier":"https:\/\/github.com\/zntfdr","title":"GitHub","titleInlineContent":[{"type":"text","text":"GitHub"}],"type":"link","url":"https:\/\/github.com\/zntfdr"},"doc://WWDCNotes/documentation/WWDCNotes":{"abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"type":"topic","title":"WWDC Notes","kind":"symbol","url":"\/documentation\/wwdcnotes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"role":"collection"},"https://zntfdr.dev":{"titleInlineContent":[{"text":"Blog","type":"text"}],"url":"https:\/\/zntfdr.dev","type":"link","title":"Blog","identifier":"https:\/\/zntfdr.dev"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"type":"link","title":"Contributions are welcome!","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"zntfdr.jpeg":{"identifier":"zntfdr.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/zntfdr.jpeg"}],"type":"image","alt":null},"WWDCNotes.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"identifier":"WWDCNotes.png"},"https://developer.apple.com/documentation/SwiftUI/FocusState":{"type":"link","title":"@FocusState","titleInlineContent":[{"code":"@FocusState","type":"codeVoice"}],"url":"https:\/\/developer.apple.com\/documentation\/SwiftUI\/FocusState","identifier":"https:\/\/developer.apple.com\/documentation\/SwiftUI\/FocusState"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10120-Support-Full-Keyboard-Access-in-your-iOS-app":{"kind":"article","title":"Support Full Keyboard Access in your iOS app","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10120-Support-Full-Keyboard-Access-in-your-iOS-app","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10120-support-full-keyboard-access-in-your-ios-app","abstract":[{"type":"text","text":"iPhone and iPad support numerous input modes for those with motor impairments, including touch interaction modification, Switch Control, and Full Keyboard Access. We’ll explore how people can interact with their devices solely through keyboard input, working through a real-life example to discover key APIs. We’ll also take you through some best practices for supporting motor accessibility when you integrate Full Keyboard Access in your apps."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10075-Use-SwiftUI-with-AppKit":{"kind":"article","abstract":[{"type":"text","text":"Discover how the Shortcuts app uses both SwiftUI and AppKit to create a top-tier experience on macOS. Follow along with the Shortcuts team as we explore how you can host SwiftUI views in AppKit code, handle layout and sizing, participate in the responder chain, enable navigational focus, and more. We’ll also show you how to host AppKit views, helping you migrate existing code into a SwiftUI layout within your app."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10075-Use-SwiftUI-with-AppKit","role":"sampleCode","title":"Use SwiftUI with AppKit","url":"\/documentation\/wwdcnotes\/wwdc22-10075-use-swiftui-with-appkit"},"zntfdr":{"identifier":"zntfdr","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/zntfdr.jpeg"}],"type":"image","alt":"Profile image of Federico Zanetello"},"WWDC21.jpeg":{"type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDC21.jpeg","traits":["1x","light"]}],"identifier":"WWDC21.jpeg"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"kind":"article","abstract":[{"type":"text","text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"MusicKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"DocC"},{"type":"text","text":", "},{"type":"codeVoice","code":"StoreKit 2"},{"type":"text","text":", and more."}],"images":[{"type":"icon","identifier":"WWDC21-Icon.png"},{"type":"card","identifier":"WWDC21.jpeg"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","role":"collectionGroup","title":"WWDC21","url":"\/documentation\/wwdcnotes\/wwdc21"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10018-Whats-new-in-SwiftUI":{"url":"\/documentation\/wwdcnotes\/wwdc21-10018-whats-new-in-swiftui","type":"topic","abstract":[{"type":"text","text":"There’s never been a better time to develop your apps with SwiftUI. Discover the latest updates to the UI framework — including lists, buttons, and text fields — and learn how these features can help you more fully adopt SwiftUI in your app. Find out how to create beautiful, visually-rich graphics using the canvas view, materials, and enhancements to symbols. Explore multi-column tables on macOS, refinements to focus and keyboard interaction, and the multi-platform search API. And we’ll show you how to take advantage of features like Swift concurrency, a brand new AttributedString, format styles, localization, and so much more."}],"role":"sampleCode","kind":"article","title":"What’s new in SwiftUI","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10018-Whats-new-in-SwiftUI"},"https://developer.apple.com/wwdc21/10023":{"type":"download","url":"https:\/\/developer.apple.com\/wwdc21\/10023","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc21\/10023"},"WWDC21-Icon.png":{"identifier":"WWDC21-Icon.png","variants":[{"url":"\/images\/WWDCNotes\/WWDC21-Icon.png","traits":["1x","light"]}],"type":"image","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"kind":"article","abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"images":[{"identifier":"zntfdr.jpeg","type":"card"},{"identifier":"zntfdr.jpeg","type":"icon"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","role":"sampleCode","title":"Federico Zanetello (332 notes)","url":"\/documentation\/wwdcnotes\/zntfdr"}}}