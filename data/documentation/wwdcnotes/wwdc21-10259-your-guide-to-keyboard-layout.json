{"sampleCodeDownload":{"kind":"sampleDownload","action":{"identifier":"https:\/\/developer.apple.com\/wwdc21\/10259","type":"reference","overridingTitle":"Watch Video (14 min)","isActive":true}},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc21-10259-your-guide-to-keyboard-layout"]}],"kind":"article","identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10259-Your-guide-to-keyboard-layout","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"UIKeyboardLayoutGuide","type":"heading","text":"UIKeyboardLayoutGuide"},{"type":"paragraph","inlineContent":[{"text":"Here is the old way of listening for keyboard notifications and adjusting your layout:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["    \/\/...","    keyboardGuide.bottomAnchor.constraint(","        equalTo: view.bottomAnchor","    ).isActive = true","    keyboardGuide.topAnchor.constraint(","        equalTo: textView.bottomAnchor","    ).isActive = true","    keyboardHeight = keyboardGuide.heightAnchor.constraint(","        equalToConstant: view.safeAreaInsets.bottom","    )","    NotificationCenter.default.addObserver(","        self,","        selector: #selector(respondToKeyboard),","        name: UIResponder.keyboardWillShowNotification,","        object: nil","    )","}","","@objc func respondToKeyboard(notification: Notification) {","    let info = notification.userInfo","    if let endRect = info?[.keyboardFrameEndUserInfoKey] as? CGRect {","        var offset = view.bounds.size.height - endRect.origin.y","        if offset == 0.0 {","            offset = view.safeAreaInsets.bottom","        }","        let duration = info?[.keyboardAnimationDurationUserInfoKey] as? TimeInterval ?? 2.0","        UIView.animate(","            withDuration: duration,","            animations: {","                self.keyboardHeight.constant = offset","                self.view.layoutIfNeeded()","            }","        )","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"New in iOS15. Here is the suggested new way using UIKeyboardLayoutGuide:"}]},{"syntax":"swift","type":"codeListing","code":["view.keyboardLayoutGuide.topAnchor.constraint(","    equalToSystemSpacingBelow: textView.bottomAnchor,","    multiplier: 1.0",").isActive = true"]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use view.keyboardLayoutGuide"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For most common use cases, simply update to use .topAnchor"}]}]},{"content":[{"inlineContent":[{"text":"Matches keyboard animations like bring up and dismiss","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Follows height changes as the keyboard can be taller or shorter based on content (showing emojis, etc)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"When the keyboard is undocked the guide will drop to the bottom of the screen and be the width of your window","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Anything you’ve tied to the top anchor will follow"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"It accounts for safe-area insets","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"Why-did-Apple-create-a-new-custom-layout-guide-vs-a-generic-layout-guide","text":"Why did Apple create a new custom layout guide vs a generic layout guide?"},{"type":"paragraph","inlineContent":[{"text":"Answer: giving the developer more control over how their layout responds to keyboards","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"You have the ability to fully follow the keyboard in all its incarnations, if you so choose, by using a new property: ","type":"text"},{"type":"codeVoice","code":".followsUndockedKeyboard"},{"text":".","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"If you set it to true, the guide will follow the keyboard when it’s undocked or floating, giving you a lot of control over how your layout responds to wherever the keyboard may be.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"No more automatic drop-to-bottom. No listening for hide keyboard notifications when undocking. The layout guide is where the keyboard is.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"level":2,"type":"heading","anchor":"UITrackingLayoutGuide","text":"UITrackingLayoutGuide"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UIKeyboardLayoutGuide"},{"type":"text","text":" is a subclass of the new "},{"type":"codeVoice","code":"UITrackingLayoutGuide"}]},{"items":[{"content":[{"inlineContent":[{"text":"Tracks the constraints you want to change when it moves around the screen.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can give it an array of constraints that activate when near a specific edge, and deactivate when leaving it"}]}]},{"content":[{"inlineContent":[{"text":"You can give it an array that activates when specifically away from an edge, and deactivates when near it.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"Example-Code","text":"Example Code"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Default keyboard with custom top actions:"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC21-10259-10259-example-default-keyboard-with-top-actions","type":"image"}]},{"level":4,"type":"heading","anchor":"Example-1","text":"Example 1"},{"type":"paragraph","inlineContent":[{"text":"Moving keyboard up causes top actions to shift to bottom:","type":"text"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC21-10259-10259-top-actions-move-to-bottom","type":"image"}]},{"syntax":"swift","type":"codeListing","code":["let awayFromTopConstraints = [","    view.keyboardLayoutGuide.topAnchor.constraint(","        equalTo: editView.bottomAnchor","    )","]","view.keyboardLayoutGuide.setConstraints(","    awayFromTopConstraints,","    activeWhenAwayFrom: .top",")"]},{"type":"paragraph","inlineContent":[{"text":"Code specifies that the constraint that anchors custom keyboard actions to the top of the keyboard is only active when keyboard is away from the top","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let nearTopConstraints = [","    view.safeAreaLayoutGuide.bottomAnchor.constraint(","        equalTo: editView.bottomAnchor","    )","]","view.keyboardLayoutGuide.setConstraints(","    nearTopConstraints,","    activeWhenNearEdge: .top",")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Code specifies that the constraint that will anchor custom keyboard actions to bottom safe area of the view is only active when keyboard is near the top edge"}]},{"level":4,"type":"heading","anchor":"Example-2","text":"Example 2"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Moving keyboard to the right or left edge causes underlying content to shift into open area"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC21-10259-10259-content-shifts-left"}]},{"syntax":"swift","type":"codeListing","code":["\/\/set default behavior","let awayFromSides = [","    imageView.centerXAnchor.constraint(","        equalTo: view.centerXAnchor","    )","]","view.keyboardLayoutGuide.setConstraints(","    awayFromSides,","    activeWhenAwayFrom: [","        .leading,","        .trailing","    ]",")","","\/\/when nearing sides, shift imageView appropriately","let nearTrailingConstraints = [","    imageView.leadingAnchor.constraint(","        equalToSystemSpacingAfter: view.safeAreaLayoutGuide.leadingAnchor,","        multiplier: 1.0","    )","]","view.keyboardLayoutGuide.setConstraints(","    nearTrailingConstraints,","    activeWhenNearEdge: .trailing",")","","let nearLeadingConstraints = [","    view.safeAreaLayoutGuide.trailingAnchor.constraint(","        equalToSystemSpacingAfter: imageView.trailingAnchor, ","        multiplier: 1.0","    )","]","view.keyboardLayoutGuide.setConstraints(","    nearLeadingConstraints,","    activeWhenNearEdge: .leading",")"]},{"level":3,"type":"heading","anchor":"What-is-near-and-awayFrom","text":"What is .near and .awayFrom?"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"A docked keyboard is considered to be near the bottom and awayFrom the other edges"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Undocked and split keyboards can be awayFrom all edges, or they can get near the top edge.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When it’s the floating keyboard, it can be near or awayFrom any edge, and it can even be near two adjacent edges at the same time."}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Above only applies when you set followsUndockedKeyboard to true.","type":"text"}]},{"level":2,"type":"heading","anchor":"Things-to-Know","text":"Things to Know"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Camera text input can be launched by most keyboards. This camera UI can be full screen and it’s behaviour conforms to "},{"type":"codeVoice","code":"UIKeyboardLayoutGuide"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"New in iOS15, the shortcuts bar that shown at the bottom while a hardware keyboard is attached is no longer full width. Now it’s size adapts to language and how many buttons are present.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"If you’re following the undocked keyboard, you can actually use the real leading and trailing edges of the bar","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"This is always "},{"type":"codeVoice","code":".near"},{"type":"text","text":" the bottom and, in its normal position, it’s "},{"type":"codeVoice","code":".awayFrom"},{"type":"text","text":" the other three edges."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If you collapse it into a small launch button, it can be moved around so it can be ","type":"text"},{"code":".near","type":"codeVoice"},{"text":" the leading or trailing edge.","type":"text"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"level":2,"type":"heading","anchor":"Written-By","text":"Written By"},{"numberOfColumns":5,"columns":[{"content":[{"inlineContent":[{"type":"image","identifier":"trav-ma"}],"type":"paragraph"}],"size":1},{"content":[{"level":3,"type":"heading","text":"Travis Ma","anchor":"Travis-Ma"},{"inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/trav-ma","type":"reference","isActive":true,"overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"overridingTitle":"Contributed Notes"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/github.com\/trav-ma","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/www.travisma.me","type":"reference","isActive":true}],"type":"paragraph"}],"size":4}],"type":"row"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","isActive":true}]},{"level":2,"type":"heading","anchor":"Related-Sessions","text":"Related Sessions"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10281-Keep-up-with-the-keyboard","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10276-Use-the-camera-for-keyboard-input-in-your-app"],"type":"links","style":"list"},{"type":"small","inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}]},{"type":"small","inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"abstract":[{"type":"text","text":"Discover how you can use the Keyboard Layout Guide to manage how keyboards work within your iOS or iPadOS app. Learn how you can avoid writing lengthy code blocks when you use UIKeyboardLayoutGuide and UITrackingLayoutGuide to integrate the keyboard into your interface, helping people have a smoother, more enjoyable experience whenever they use the on-screen keyboard within your app."}],"metadata":{"title":"Your guide to keyboard layout","roleHeading":"WWDC21","modules":[{"name":"WWDC Notes"}],"role":"sampleCode"},"references":{"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"WWDCNotes.png"},"WWDC21-10259-10259-top-actions-move-to-bottom":{"alt":"Moving the keyboard up causes top actions to shift to bottom","identifier":"WWDC21-10259-10259-top-actions-move-to-bottom","type":"image","variants":[{"url":"\/images\/WWDC21-10259-10259-top-actions-move-to-bottom.png","traits":["1x","light"]}]},"https://github.com/trav-ma":{"type":"link","titleInlineContent":[{"type":"text","text":"GitHub"}],"url":"https:\/\/github.com\/trav-ma","title":"GitHub","identifier":"https:\/\/github.com\/trav-ma"},"trav-ma":{"alt":"Profile image of Travis Ma","variants":[{"traits":["1x","light"],"url":"\/images\/trav-ma.jpeg"}],"type":"image","identifier":"trav-ma"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"title":"WWDC21","url":"\/documentation\/wwdcnotes\/wwdc21","role":"collectionGroup","abstract":[{"type":"text","text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"MusicKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"DocC"},{"type":"text","text":", "},{"type":"codeVoice","code":"StoreKit 2"},{"type":"text","text":", and more."}]},"https://www.travisma.me":{"url":"https:\/\/www.travisma.me","title":"Blog","titleInlineContent":[{"type":"text","text":"Blog"}],"type":"link","identifier":"https:\/\/www.travisma.me"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10276-Use-the-camera-for-keyboard-input-in-your-app":{"type":"topic","abstract":[{"text":"Learn how you can support Live Text and intelligently pull information from the camera to fill out forms and text fields in your app. We’ll show you how to apply content filtering to capture the correct information when someone uses the camera as keyboard input and apply it to a relevant UITextField, helping your app input data like phone numbers, addresses, and flight information. And we’ll explore how you can create a custom interface, extend other controls like UIImageViews to support this capability, and more.","type":"text"}],"title":"Use the camera for keyboard input in your app","url":"\/documentation\/wwdcnotes\/wwdc21-10276-use-the-camera-for-keyboard-input-in-your-app","role":"sampleCode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10276-Use-the-camera-for-keyboard-input-in-your-app"},"https://developer.apple.com/wwdc21/10259":{"url":"https:\/\/developer.apple.com\/wwdc21\/10259","type":"download","identifier":"https:\/\/developer.apple.com\/wwdc21\/10259","checksum":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10281-Keep-up-with-the-keyboard":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10281-Keep-up-with-the-keyboard","abstract":[{"type":"text","text":"Each year, the keyboard evolves to support an increasing range of languages, sizes, and features. Discover how you can design your app to keep up with the keyboard, regardless of how it appears on a device. We’ll show you how to create frictionless text entry and share important architectural changes to help you understand how the keyboard works within the system."}],"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23-10281-keep-up-with-the-keyboard","title":"Keep up with the keyboard","kind":"article"},"trav-ma.jpeg":{"alt":null,"identifier":"trav-ma.jpeg","type":"image","variants":[{"url":"\/images\/trav-ma.jpeg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/trav-ma":{"abstract":[{"type":"text","text":"Software Development Manager for IQVIA’s Mobile team in Arizona."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/trav-ma","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/trav-ma","images":[{"identifier":"trav-ma.jpeg","type":"card"},{"identifier":"trav-ma.jpeg","type":"icon"}],"title":"Travis Ma (5 notes)"},"doc://WWDCNotes/documentation/WWDCNotes":{"abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","title":"WWDC Notes","url":"\/documentation\/wwdcnotes","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"role":"collection"},"WWDC21-10259-10259-example-default-keyboard-with-top-actions":{"type":"image","identifier":"WWDC21-10259-10259-example-default-keyboard-with-top-actions","alt":"Default keyboard with custom top actions","variants":[{"url":"\/images\/WWDC21-10259-10259-example-default-keyboard-with-top-actions.png","traits":["1x","light"]}]},"WWDC21-10259-10259-content-shifts-left":{"variants":[{"url":"\/images\/WWDC21-10259-10259-content-shifts-left.png","traits":["1x","light"]}],"type":"image","alt":"Moving keyboard to the right causes underlying content to shift to left","identifier":"WWDC21-10259-10259-content-shifts-left"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"type":"link","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing"}}}