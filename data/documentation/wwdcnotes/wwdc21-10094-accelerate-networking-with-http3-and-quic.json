{"sampleCodeDownload":{"kind":"sampleDownload","action":{"type":"reference","isActive":true,"overridingTitle":"Watch Video (19 min)","identifier":"https:\/\/developer.apple.com\/wwdc21\/10094"}},"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"primaryContentSections":[{"content":[{"level":2,"anchor":"Evolution-of-HTTP","text":"Evolution of HTTP","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"HTTP\/1.1","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"initially we had to make a new connection for every resource that we wanted from the server"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"when doing so, a lot of time is spent on connection setup instead of resource transmission"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"we reuse a single HTTP\/1 connection for multiple data transfers, a.k.a. ","type":"text"},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Head-of-line_blocking","isActive":true,"type":"reference"},{"text":", but a request can only be sent after the previous response has ended","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"to over come this, in the past, HTTP implementations used many parallel connections, however this brings inefficient networking behaviors for both client and server","type":"text"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"HTTP\/2 solves head-of-line blocking by multiplexing multiple streams on a single connection","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"requests are sent earlier, and data from different streams can be interleaved"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"this allows more efficient use of a single TCP connection, as idle waiting time is drastically reduced"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"HTTP\/3","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"connections are set up much faster","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"streams are independent (in HTTP\/2, all streams shared a single TCP connection) - packet loss only affect one stream but not others"}]}]},{"content":[{"inlineContent":[{"text":"uses ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/en.wikipedia.org\/wiki\/QUIC"},{"text":" instead of TCP","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"level":3,"anchor":"QUIC","text":"QUIC","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"new transport protocol","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"faster connection setup","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"connection migration support - allows connections to move seamlessly across different network interfaces without reestablishing a session"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Transport_Layer_Security#TLS_1.3","isActive":true,"type":"reference"},{"text":" security","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"standardized by the ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/www.ietf.org"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"based on the same concepts of TCP"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"provides:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"end-to-end encryption"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"multiplexed streams"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"authentication","type":"text"}]}]}]}]}],"type":"unorderedList"},{"level":2,"anchor":"Using-HTTP3","text":"Using HTTP\/3","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"enabled by default in ","type":"text"},{"type":"codeVoice","code":"URLSession"},{"text":" - you only need to enable HTTP\/3 on your server","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"supports HTTP\/3 RFC and Draft 29"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"You can use Instruments to verify that your app uses HTTP\/3 - use the ","type":"text"},{"text":"networking profiling template","type":"text"},{"text":" to inspect HTTP Traffic","type":"text"}]},{"level":2,"anchor":"Using-QUIC","text":"Using QUIC","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When to use QUIC directly:"}]},{"items":[{"content":[{"inlineContent":[{"text":"Non-request\/response pair","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Benefits from multiplexed streams","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Custom protocols","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Using QUIC in your app:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"new "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/network\/nwprotocolquic","isActive":true},{"type":"text","text":" built-in in Network.framework"}],"type":"paragraph"}]}],"type":"unorderedList"},{"code":["\/\/ Create a connection using QUIC","let connection = NWConnection(","  host: \"example.com\", ","  port: 443, ","  using: .quic(alpn: [\"myproto\"]) \/\/ üëàüèª",")","","\/\/ Set the state update handler to be notified when the connection is ready","connection.stateUpdateHandler = { newState in","  switch newState {","  case .ready:","    print(\"Connected using QUIC!\")","  default:","    break","  }","}","","\/\/ Start the connection with callback queue","connection.start(queue: queue)"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Using QUIC streams to send and receive data","type":"text"}]},{"code":["\/\/ Send data on a stream","connection.send(content: data, completion: .contentProcessed { error in","  \/\/ Handle error, if any","  \/\/ Schedule next send","})","","\/\/ Receive incoming data","connection.receive(minimumIncompleteLength: 1, maximumLength: desiredLength) { ","  receivedcontent, context, isComplete, receivedError in","  \/\/ Handle data, error","  \/\/ Schedule next receive","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/network\/nwmultiplexgroup","isActive":true},{"text":" to refer to the underlying transport shared by the group of streams.","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"A Connection Group follows a lifecycle similar to that of the other Network.framework objects and allows you to reason about the state of the underlying QUIC tunnel shared by your QUIC streams"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"It also allows you to create new outgoing streams from a specific QUIC tunnel as well as receive new incoming streams initiated by the remote endpoint"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Establish a tunnel with NWMultiplexGroup:","type":"text"}]},{"code":["\/\/ Create a group","let descriptor = NWMultiplexGroup(to: .hostPort(host: \"example.com\", port: 443))","let group = NWConnectionGroup(with: descriptor, using: .quic(alpn: [\"myproto\"]))","","\/\/ Set the state update handler to be notified when the group is ready","group.stateUpdateHandler = { newState in","  switch newState {","  case .ready:","    print(\"Connected using QUIC!\")","  default:","    break","  }","}","","\/\/ Start the group with callback queue","group.start(queue: queue)"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Manage streams with ","type":"text"},{"code":"NWConnectionGroup","type":"codeVoice"},{"text":":","type":"text"}]},{"code":["\/\/ Create a new outgoing stream","let connection = NWConnection(from: group)","","\/\/ Receive new incoming streams initiated by the remote endpoint","group.newConnectionHandler = { newConnection in","","  \/\/ Set state update handler on incoming stream","  newConnection.stateUpdateHandler = { newState in","    \/\/ Handle stream states","  }","","  \/\/ Start the incoming stream","  newConnection.start(queue: queue)","","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Receive incoming QUIC tunnels from ","type":"text"},{"code":"NWListener","type":"codeVoice"},{"text":":","type":"text"}]},{"code":["\/\/ Set the new connection group handler","listener.newConnectionGroupHandler = { group in","","  group.stateUpdateHandler = { newState in","    \/\/ Handle tunnel states","  }","","  group.newConnectionHandler = { stream in","    \/\/ Set up and start new incoming streams","  }","","  group.start(queue: queue)","","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Access QUIC metadata to learn about and modify streams:","type":"text"}]},{"code":["\/\/ Find the stream ID of a particular QUIC stream","if let metadata = connection.metadata(definition: NWProtocolQUIC.definition)","               as? NWProtocolQUIC.Metadata {","  print(\"QUIC Stream ID is \\(metadata.streamIdentifier)\")","","  \/\/ Some time later...","","  \/\/ Set the application error, if appropriate, before cancelling the stream","  metadata.applicationError = 0x100","  connection.cancel()","}"],"syntax":"swift","type":"codeListing"},{"level":2,"anchor":"Written-By","text":"Written By","type":"heading"},{"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"identifier":"zntfdr","type":"image"}]}]},{"size":4,"content":[{"text":"Federico Zanetello","anchor":"Federico-Zanetello","type":"heading","level":3},{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitle":"Contributed Notes","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}]},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"identifier":"https:\/\/github.com\/zntfdr","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"identifier":"https:\/\/zntfdr.dev","type":"reference"}],"type":"paragraph"}]}],"type":"row","numberOfColumns":5},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}]},{"level":2,"anchor":"Related-Sessions","text":"Related Sessions","type":"heading"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10078-Reduce-networking-delays-for-a-more-responsive-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110403-Meet-Background-Assets","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10095-Use-asyncawait-with-URLSession","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10239-Reduce-network-delays-for-your-app"],"type":"links","style":"list"},{"type":"small","inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}],"kind":"content"}],"kind":"article","metadata":{"roleHeading":"WWDC21","role":"sampleCode","title":"Accelerate networking with HTTP\/3 and QUIC","modules":[{"name":"WWDC Notes"}]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10094-Accelerate-networking-with-HTTP3-and-QUIC"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc21-10094-accelerate-networking-with-http3-and-quic"]}],"abstract":[{"text":"The web is changing, and the next major version of HTTP is here. Learn how HTTP\/3 reduces latency and improves reliability for your app and discover how its underlying transport, QUIC, unlocks new innovations in your own custom protocols using new transport functionality and multi-streaming connection groups.","type":"text"}],"references":{"https://developer.apple.com/documentation/network/nwprotocolquic":{"type":"link","title":"NWProtocolQUIC","titleInlineContent":[{"code":"NWProtocolQUIC","type":"codeVoice"}],"url":"https:\/\/developer.apple.com\/documentation\/network\/nwprotocolquic","identifier":"https:\/\/developer.apple.com\/documentation\/network\/nwprotocolquic"},"https://en.wikipedia.org/wiki/Head-of-line_blocking":{"url":"https:\/\/en.wikipedia.org\/wiki\/Head-of-line_blocking","identifier":"https:\/\/en.wikipedia.org\/wiki\/Head-of-line_blocking","type":"link","titleInlineContent":[{"text":"head-of-line blocking","type":"text"}],"title":"head-of-line blocking"},"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"title":"WWDC Notes","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"url":"\/documentation\/wwdcnotes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","kind":"symbol","role":"collection"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"url":"\/documentation\/wwdcnotes\/wwdc21","role":"collectionGroup","images":[{"identifier":"WWDC21-Icon.png","type":"icon"},{"identifier":"WWDC21.jpeg","type":"card"}],"title":"WWDC21","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","type":"topic","abstract":[{"type":"text","text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"MusicKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"DocC"},{"type":"text","text":", "},{"type":"codeVoice","code":"StoreKit 2"},{"type":"text","text":", and more."}],"kind":"article"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"type":"image"},"https://en.wikipedia.org/wiki/Transport_Layer_Security#TLS_1.3":{"type":"link","title":"TLS 1.3","titleInlineContent":[{"type":"text","text":"TLS 1.3"}],"url":"https:\/\/en.wikipedia.org\/wiki\/Transport_Layer_Security#TLS_1.3","identifier":"https:\/\/en.wikipedia.org\/wiki\/Transport_Layer_Security#TLS_1.3"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110403-Meet-Background-Assets":{"kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110403-meet-background-assets","abstract":[{"text":"Discover how you can use the Background Assets framework to download large files directly from your CDN and improve the initial launch experience of your apps and games. We‚Äôll show you how to schedule background downloads during initial app install, app updates, and periodically as someone uses the app. We‚Äôll also explore how you can manage scheduled downloads to make sure people have the content they want, when they want it.","type":"text"}],"title":"Meet Background Assets","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110403-Meet-Background-Assets"},"WWDC21.jpeg":{"type":"image","alt":null,"identifier":"WWDC21.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC21.jpeg"}]},"WWDC21-Icon.png":{"identifier":"WWDC21-Icon.png","alt":null,"type":"image","variants":[{"url":"\/images\/WWDCNotes\/WWDC21-Icon.png","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10239-Reduce-network-delays-for-your-app":{"abstract":[{"type":"text","text":"CPU performance and network throughput rates keep improving, but the speed of light is one limit that isn‚Äôt going any higher. Learn the APIs and best practices to maximize your app‚Äôs responsiveness and efficiency by keeping network round-trip times low and minimizing the number of round trips when performing network operations."}],"role":"sampleCode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10239-Reduce-network-delays-for-your-app","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10239-reduce-network-delays-for-your-app","title":"Reduce network delays for your app"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10095-Use-asyncawait-with-URLSession":{"url":"\/documentation\/wwdcnotes\/wwdc21-10095-use-asyncawait-with-urlsession","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10095-Use-asyncawait-with-URLSession","title":"Use async\/await with URLSession","abstract":[{"type":"text","text":"Discover how you can adopt Swift concurrency in URLSession using async\/await and AsyncSequence, and how you can apply Swift concurrency concepts to improve your networking code."}],"role":"sampleCode"},"https://github.com/zntfdr":{"url":"https:\/\/github.com\/zntfdr","identifier":"https:\/\/github.com\/zntfdr","type":"link","titleInlineContent":[{"text":"GitHub","type":"text"}],"title":"GitHub"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"type":"link"},"https://developer.apple.com/wwdc21/10094":{"type":"download","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc21\/10094","identifier":"https:\/\/developer.apple.com\/wwdc21\/10094"},"https://en.wikipedia.org/wiki/QUIC":{"url":"https:\/\/en.wikipedia.org\/wiki\/QUIC","identifier":"https:\/\/en.wikipedia.org\/wiki\/QUIC","type":"link","titleInlineContent":[{"type":"text","text":"QUIC"}],"title":"QUIC"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"url":"\/documentation\/wwdcnotes\/zntfdr","role":"sampleCode","images":[{"type":"card","identifier":"zntfdr.jpeg"},{"type":"icon","identifier":"zntfdr.jpeg"}],"title":"Federico Zanetello (332 notes)","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","type":"topic","abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"kind":"article"},"https://www.ietf.org":{"type":"link","title":"Internet Engineering Task Force (IETF)","titleInlineContent":[{"text":"Internet Engineering Task Force (IETF)","type":"text"}],"url":"https:\/\/www.ietf.org","identifier":"https:\/\/www.ietf.org"},"zntfdr.jpeg":{"identifier":"zntfdr.jpeg","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/zntfdr.jpeg"}],"type":"image"},"zntfdr":{"identifier":"zntfdr","alt":"Profile image of Federico Zanetello","type":"image","variants":[{"url":"\/images\/WWDCNotes\/zntfdr.jpeg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10078-Reduce-networking-delays-for-a-more-responsive-app":{"kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10078-Reduce-networking-delays-for-a-more-responsive-app","title":"Reduce networking delays for a more responsive app","type":"topic","abstract":[{"text":"Find out how network latency can affect your apps when trying to get full benefit out of modern network throughput rates. Learn about changes you can make in your app and on your server to boost responsiveness, and prepare your app for improvements coming to the Internet that will offer even lower end-to-end delays.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc22-10078-reduce-networking-delays-for-a-more-responsive-app"},"https://developer.apple.com/documentation/network/nwmultiplexgroup":{"type":"link","title":"NWMultiplexGroup","titleInlineContent":[{"code":"NWMultiplexGroup","type":"codeVoice"}],"url":"https:\/\/developer.apple.com\/documentation\/network\/nwmultiplexgroup","identifier":"https:\/\/developer.apple.com\/documentation\/network\/nwmultiplexgroup"},"https://zntfdr.dev":{"title":"Blog","identifier":"https:\/\/zntfdr.dev","url":"https:\/\/zntfdr.dev","titleInlineContent":[{"type":"text","text":"Blog"}],"type":"link"}}}