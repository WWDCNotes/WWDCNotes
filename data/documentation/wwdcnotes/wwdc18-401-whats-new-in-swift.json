{"metadata":{"modules":[{"name":"WWDC Notes"}],"role":"sampleCode","roleHeading":"WWDC18","title":"What‚Äôs New in Swift"},"sections":[],"kind":"article","abstract":[{"text":"Hear about the latest advancements in Swift, the safe, fast, and expressive language. Find out about improvements to build times, code size, and runtime performance. Learn how to take advantage of new features in your code that eliminate boilerplate, increase safety and security, and improve your overall development productivity.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-401-Whats-New-in-Swift"},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc18-401-whats-new-in-swift"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Faster builds","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Better performances for Swift tools"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Swift 5 is gonna be released in early 2019 (with ABI stability):"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Apps won‚Äôt need to be shipped with Swift embedded in the bundle because they can just use the iOS Swift runtime (after Swift 5 and a new iOS update is released)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"This is a win for every app in memory usage and start up time"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"With Xcode 10 we have two optimizations options:"},{"type":"text","text":" "},{"type":"image","identifier":"WWDC18-401-compilation"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Compilation Mode: this is how your project builds:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Whole Module: all the files in your target are always built together, this enables maximum opportunity for optimization (slow build but get best performance at run time)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Incremental: not all the files are always built all together (faster build but slower run time performance)"}],"type":"paragraph"}]}]}]}]}]},{"content":[{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"‚ö†Ô∏èIn debug mode you should use Incremental otherwise everytime you touch a file every single file in the whole project gets rebuilt ‚ö†Ô∏è","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Optimization Level: this is where you choose which optimization you‚Äôd like to have:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"No optimization","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Optimize for Speed: Faster code, bigger code output","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Optimize for Size: Code size is reduced by 10\/30%, performance is 5% slower"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"(Swift‚Äôs) ARC improvements (which results in faster code runtime)"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"New-in-Swift-42","level":2,"text":"New in Swift 4.2:"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Enums can conform to the new protocol "},{"type":"codeVoice","code":"CaseIterable"},{"type":"text","text":" to gain a new property "},{"type":"codeVoice","code":".allCases"},{"type":"text","text":" (which returns an array of all the possible cases)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Conditional Conformance: if you try to compare two collections (say two arrays, even with Optionals, Dictionaries) of elements that are comparable (aka Equatable), then the two arrays are automatically comparable as well. E.g.:"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["let coins = [[1, 2], [3, 6], [4, 12]]","coins.contains([3, 6]) \/\/ This now works!"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The same works for "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Decodable","type":"codeVoice"},{"type":"text","text":" conformances"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"(Swift 4.1 actually) Synthesized "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" Conformance: A struct\/class is automatically Equatable\/Hashable if all its properties also are. This is super powerful because it works with generics as well! This:"}]}]}]},{"type":"codeListing","syntax":"swift","code":["enum Either<Left, Right> { ","  case left(Left)","  case right(Right) ","}","","extension Either: Equatable where Left: Equatable, Right: Equatable {","  static func ==(a: Either<Left, Right>, b: Either<Left, Right>) { ","    switch (a, b) { ","      case (.left (let x), .left (let y)): return X == y ","      case (.right (let x), .right(let y)): return x == y","      default: return false","    }","  }","} "]},{"type":"paragraph","inlineContent":[{"text":"Is now this:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["enum Either<Left, Right> { ","  case left(Left)","  case right(Right) ","}","","extension Either: Equatable where Left: Equatable, Right: Equatable { }","extension Either: Hashable where Left: Hashable, Right: Hashable { }"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Hashable Improvements: The ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":" protocol doesn‚Äôt require a hash ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":" property anymore but:","type":"text"}]}]}]},{"type":"codeListing","syntax":"swift","code":["protocol Hashable {","  func hash(into hasher: inout Hasher)","}"]},{"type":"paragraph","inlineContent":[{"text":"You can feed the Hasher with multiple values to hash together and the Hasher will take care of creating the hash for you. This is how you now conform to ","type":"text"},{"type":"codeVoice","code":"Hashable"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["extension City: Hashable {","  func hash(into hasher: inout Hasher) {","    name.hash(into: &hasher)","    state.hash(into: &hasher)","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"‚ö†Ô∏èHash values will change every time you run the app."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Generating Random Numbers:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All numeric types have a static random function: the new method, which takes a range as a parameter, returns a random number within that range."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Bool also get a ","type":"text"},{"code":".random()","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Collections get a "},{"type":"codeVoice","code":".randomElement()"},{"type":"text","text":" method, which returns a "},{"type":"codeVoice","code":"Element?"},{"type":"text","text":" (optional because if the collection is empty this method returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Arrays get a ","type":"text"},{"type":"codeVoice","code":".shuffled()"},{"text":" method that returns the same array with elements put in a random order üòç","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"All the methods above have an optional random number generator parameter input that you can use if you want to use your own random number generator instead of the default Swift one."}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Instead of using:","type":"text"}]}]}]},{"type":"codeListing","syntax":"swift","code":["#if os(iOS) || os(watchOS) || os(tvOS)","  import UIKit","  ...","#else","  import AppKit","  ...","#endif"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can now use:"}]},{"type":"codeListing","syntax":"swift","code":["#if canImport(UIKit)","  import UIKit","  ...","#elseif canImport(AppKit)","  import AppKit","  ...","#else","  #error(\"Unsupported platform\")","#endif"]},{"content":[{"inlineContent":[{"type":"text","text":"Note the "},{"type":"codeVoice","code":"canImport"},{"type":"text","text":" macro and the new build error "},{"type":"codeVoice","code":"#error"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside","name":"Note","style":"note"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"No more FIXME\/TODOs in Swift, use #warning instead:"}]}]}]},{"type":"codeListing","syntax":"swift","code":["#warning(\"We need to test this better\")"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This session completely ignores "},{"code":"@dynamicMemberLookup","type":"codeVoice"},{"type":"text","text":"."}]}]}]},{"type":"heading","anchor":"Written-By","level":2,"text":"Written By"},{"type":"row","numberOfColumns":5,"columns":[{"content":[{"inlineContent":[{"type":"image","identifier":"zntfdr"}],"type":"paragraph"}],"size":1},{"content":[{"level":3,"type":"heading","text":"Federico Zanetello","anchor":"Federico-Zanetello"},{"type":"paragraph","inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"type":"reference","isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitle":"Contributed Notes"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/zntfdr"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/zntfdr.dev"}]}],"size":4}]},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true}]},{"type":"heading","anchor":"Related-Sessions","level":2,"text":"Related Sessions"},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-406-Swift-Generics-Expanded","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-408-Building-Faster-in-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-411-Getting-to-Know-Swift-Package-Manager","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-415-Behind-the-Scenes-of-the-Xcode-Build-Process"],"style":"list"},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}],"kind":"content"}],"sampleCodeDownload":{"kind":"sampleDownload","action":{"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc18\/401","overridingTitle":"Watch Video (37 min)","isActive":true}},"references":{"zntfdr.jpeg":{"identifier":"zntfdr.jpeg","type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/zntfdr.jpeg"}]},"zntfdr":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/zntfdr.jpeg"}],"alt":"Profile image of Federico Zanetello","identifier":"zntfdr"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC18-411-Getting-to-Know-Swift-Package-Manager":{"role":"sampleCode","title":"Getting to Know Swift Package Manager","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc18-411-getting-to-know-swift-package-manager","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-411-Getting-to-Know-Swift-Package-Manager","abstract":[{"text":"The Swift Package Manager makes it possible to easily develop and distribute source code in the Swift ecosystem. Learn about its goals, design, unique features, and the opportunities it has for continued evolution.","type":"text"}],"type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"title":"Federico Zanetello (332 notes)","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","url":"\/documentation\/wwdcnotes\/zntfdr","role":"sampleCode","type":"topic","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"images":[{"type":"card","identifier":"zntfdr.jpeg"},{"type":"icon","identifier":"zntfdr.jpeg"}]},"https://github.com/zntfdr":{"url":"https:\/\/github.com\/zntfdr","identifier":"https:\/\/github.com\/zntfdr","title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}],"type":"link"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link"},"WWDC18-Icon.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC18-Icon.png"}],"alt":null,"identifier":"WWDC18-Icon.png"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC18-415-Behind-the-Scenes-of-the-Xcode-Build-Process":{"type":"topic","role":"sampleCode","abstract":[{"text":"Ever wonder what happens when you build your project in Xcode? Learn how Xcode automates the steps required to build an application, and go behind the scenes to learn how clang, swiftc, and the linker work together to turn your source code into a working program.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc18-415-behind-the-scenes-of-the-xcode-build-process","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-415-Behind-the-Scenes-of-the-Xcode-Build-Process","title":"Behind the Scenes of the Xcode Build Process","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC18-408-Building-Faster-in-Xcode":{"kind":"article","type":"topic","role":"sampleCode","title":"Building Faster in Xcode","abstract":[{"text":"Build your apps faster in Xcode 10. Learn how to structure your projects and tweak your code to take full advantage of all processor cores. Whether you‚Äôve made a few small code changes you want to give a try, or you‚Äôre building your full app for release, these techniques will cut the time it takes to build a running app.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-408-Building-Faster-in-Xcode","url":"\/documentation\/wwdcnotes\/wwdc18-408-building-faster-in-xcode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC18-406-Swift-Generics-Expanded":{"role":"sampleCode","title":"Swift Generics (Expanded)","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc18-406-swift-generics-expanded","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-406-Swift-Generics-Expanded","abstract":[{"text":"Generics are one of the most powerful features of Swift, enabling you to write flexible, reusable components while maintaining static type information. Learn about the design of Swift‚Äôs generics, including how to generalize protocols, leverage protocol inheritance to express the varying capabilities of related types, build composable generic components with conditional conformances, and reason about the interaction between class inheritance and generics. This expanded version of the WWDC 2018 session includes a brand-new discussion of recursive constraints.","type":"text"}],"type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC18":{"role":"collectionGroup","title":"WWDC18","type":"topic","abstract":[{"text":"Xcode 10, Swift 4.2, iOS 12, macOS 10.14 (Mojave), tvOS 12, watchOS 5.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc18","images":[{"type":"icon","identifier":"WWDC18-Icon.png"},{"type":"card","identifier":"WWDC18.jpeg"}]},"WWDC18.jpeg":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC18.jpeg"}],"alt":null,"identifier":"WWDC18.jpeg"},"https://developer.apple.com/wwdc18/401":{"url":"https:\/\/developer.apple.com\/wwdc18\/401","identifier":"https:\/\/developer.apple.com\/wwdc18\/401","checksum":null,"type":"download"},"https://zntfdr.dev":{"title":"Blog","url":"https:\/\/zntfdr.dev","titleInlineContent":[{"text":"Blog","type":"text"}],"identifier":"https:\/\/zntfdr.dev","type":"link"},"WWDC18-401-compilation":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC18-401-compilation.png"}],"identifier":"WWDC18-401-compilation","type":"image"},"WWDCNotes.png":{"type":"image","variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"alt":null,"identifier":"WWDCNotes.png"},"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","role":"collection","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"images":[{"identifier":"WWDCNotes.png","type":"icon"}],"url":"\/documentation\/wwdcnotes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","title":"WWDC Notes","kind":"symbol"}}}