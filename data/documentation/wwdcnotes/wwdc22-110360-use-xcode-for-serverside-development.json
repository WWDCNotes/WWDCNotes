{"sampleCodeDownload":{"action":{"isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc22\/110360","overridingTitle":"Watch Video (17 min)","type":"reference"},"kind":"sampleDownload"},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc22-110360-use-xcode-for-serverside-development"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22"]]},"abstract":[{"type":"text","text":"Discover how you can create, build, and deploy a Swift server app alongside your pre-existing Xcode projects within the same workspace. We‚Äôll show you how to create your own local app and test endpoints using Xcode, and explore how you can structure and share code between server and client apps to ease your development process"}],"metadata":{"title":"Use Xcode for server-side development","roleHeading":"WWDC22","role":"sampleCode","modules":[{"name":"WWDC Notes"}]},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110360-Use-Xcode-for-serverside-development"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"What-building-a-server-application-in-Swift-looks-like","text":"What building a server application in Swift looks like","type":"heading"},{"inlineContent":[{"type":"text","text":"Server applications are modeled as Swift packages, here‚Äôs a simple manifest file:"}],"type":"paragraph"},{"code":["\/\/ swift-tools-version: 5.7","","import PackageDescription","","let package = Package(","  name: \"MyServer\",","  platforms: [.macOS(\"12.0\")],","  products: [","    .executable(name: \"MyServer\", targets: [\"MyServer\"]),","  ],","  dependencies: [","    \/\/ üëáüèª Web framework, helps us structure our code and provides basic utilities like routing","    .package(url: \"https:\/\/github.com\/vapor\/vapor.git\", .upToNextMajor(from: \"4.0.0\")),","  ],","  targets: [","    \/\/ üëáüèª This executable target maps the server application entry point","    .executableTarget(","      name: \"MyServer\",","      dependencies: [","        .product(name: \"Vapor\", package: \"vapor\")","      ]","    ),","    .testTarget(","      name: \"MyServerTests\",","      dependencies: [\"MyServer\"]),","  ]",")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Here‚Äôs what our framework entry point might look like:"}],"type":"paragraph"},{"code":["import Vapor","","@main","public struct MyServer {","  public static func main() async throws {","    let webapp = Application()","","    \/\/ üëáüèª our server endpoints","    webapp.get(\"greet\", use: Self.greet) ","    webapp.post(\"echo\", use: Self.echo)","","    \/\/ üëáüèª server bootstrap code (provided by Vapor) üöÄ","    try webapp.run()","  }","","  static func greet(request: Request) async throws -> String {","    return \"Hello from Swift Server\"","  }","","  static func echo(request: Request) async throws -> String {","    if let body = request.body.string {","      return body","    }","    return \"\"","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"To run this server in our local machine via Xcode, we can:","type":"text"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"select the ","type":"text"},{"text":"MyServer","type":"text"},{"text":" scheme (generated for us by Xcode)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"select the ","type":"text"},{"text":"My Mac","type":"text"},{"text":" as the destination","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"hit "},{"type":"text","text":"run"}]}]}]},{"inlineContent":[{"type":"text","text":"Once the application has launched, we can use Xcode console to examine log messages emitted by the server. In the logs we can also see at which ip\/port the server is listening (typically "},{"code":"127.0.0.1:8080","type":"codeVoice"},{"type":"text","text":")"}],"type":"paragraph"},{"inlineContent":[{"text":"For this demo code you can test it via terminal","type":"text"}],"type":"paragraph"},{"code":["curl http:\/\/127.0.0.1:8080\/greet; echo","curl http:\/\/127.0.0.1:8080\/echo --data \"Hello from WWDC 2022\"; echo"],"syntax":"shell","type":"codeListing"},{"level":2,"anchor":"App-side-Client-side","text":"App side (Client side)","type":"heading"},{"inlineContent":[{"text":"To communicate with the server we just created, we can use code similar to:","type":"text"}],"type":"paragraph"},{"code":["import Foundation","","struct MyServerClient {","  let baseURL = URL(string: \"http:\/\/127.0.0.1:8080\")!","","  func greet() async throws -> String {","    let url = baseURL.appendingPathComponent(\"greet\")","    let (data, _) = try await URLSession.shared.data(for: URLRequest(url: url))","    guard let responseBody = String(data: data, encoding: .utf8) else {","      throw Errors.invalidResponseEncoding","    }","    return responseBody","  }","","  enum Errors: Error {","    case invalidResponseEncoding","  }","}"],"syntax":"swift","type":"codeListing"},{"level":2,"anchor":"Deploying-our-server-to-the-cloud","text":"Deploying our server to the cloud","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There are many cloud providers to choose from: AWS, Google Cloud, Azure, Heroku, and many others"}]}]},{"content":[{"inlineContent":[{"text":"most services offer a git push to deploy system","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"to make it possible to just ","type":"text"},{"code":"git push","type":"codeVoice"},{"text":" to deploy, cloud services use technologies like ","type":"text"},{"isActive":true,"identifier":"https:\/\/buildpacks.io","type":"reference"},{"text":" to compile the application remotely and then deploy the binary artifacts to an ephemeral host","type":"text"}]}]}]},{"level":2,"anchor":"Storage-options","text":"Storage options","type":"heading"},{"inlineContent":[{"text":"Strategies:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"files for static data"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"good if application data is static or changes very slowly and manually","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"iCloud"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"for user-centric data or global datasets (no need dedicated server)"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"databases"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"for transactional data","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"the Swift open source community developed database drivers that help interact natively with most databases technologies:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"https:\/\/github.com\/kirilltitov\/FDBSwift","type":"reference","isActive":true},{"text":", ","type":"text"},{"identifier":"https:\/\/github.com\/vapor\/redis","type":"reference","isActive":true},{"text":", Cassandra, ","type":"text"},{"identifier":"https:\/\/github.com\/vapor\/fluent-postgres-driver","type":"reference","isActive":true},{"text":", ","type":"text"},{"identifier":"https:\/\/github.com\/amzn\/smoke-dynamodb","type":"reference","isActive":true},{"text":", ","type":"text"},{"identifier":"https:\/\/github.com\/mongodb\/mongo-swift-driver\/","type":"reference","isActive":true},{"text":", ","type":"text"},{"identifier":"https:\/\/github.com\/vapor\/fluent-sqlite-driver","type":"reference","isActive":true}],"type":"paragraph"}]}]}]}],"type":"unorderedList"}]}]},{"level":2,"anchor":"Written-By","text":"Written By","type":"heading"},{"numberOfColumns":5,"columns":[{"size":1,"content":[{"inlineContent":[{"identifier":"Jeehut","type":"image"}],"type":"paragraph"}]},{"size":4,"content":[{"type":"heading","text":"Cihat G√ºnd√ºz","anchor":"Cihat-G√ºnd√ºz","level":3},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Jeehut","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"isActive":true,"type":"reference","overridingTitle":"Contributed Notes"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/Jeehut","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/x.com\/Jeehut","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/fline.dev","isActive":true,"type":"reference"}]}]}],"type":"row"},{"numberOfColumns":5,"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"identifier":"zntfdr","type":"image"}]}]},{"size":4,"content":[{"anchor":"Federico-Zanetello","text":"Federico Zanetello","level":3,"type":"heading"},{"inlineContent":[{"type":"reference","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"overridingTitle":"Contributed Notes"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/zntfdr","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/zntfdr.dev","isActive":true}],"type":"paragraph"}]}],"type":"row"},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","isActive":true,"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing"}],"type":"paragraph"},{"level":2,"anchor":"Related-Sessions","text":"Related Sessions","type":"heading"},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10171-Meet-Swift-OpenAPI-Generator","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110356-Meet-distributed-actors-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10132-Meet-asyncawait-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10133-Protect-mutable-state-with-Swift-actors","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10644-Use-Swift-on-AWS-Lambda-with-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-410-Creating-Swift-Packages"],"style":"list"},{"inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}],"type":"small"}]}],"kind":"article","references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110356-Meet-distributed-actors-in-Swift":{"abstract":[{"type":"text","text":"Discover distributed actors ‚Äî an extension of Swift‚Äôs actor model that simplifies development of distributed systems. We‚Äôll explore how distributed actor isolation and location transparency can help you avoid the accidental complexity of networking, serialization, and other transport concerns when working with distributed apps and systems."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110356-meet-distributed-actors-in-swift","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110356-Meet-distributed-actors-in-Swift","kind":"article","type":"topic","title":"Meet distributed actors in Swift"},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"identifier":"WWDCNotes.png","type":"image","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10171-Meet-Swift-OpenAPI-Generator":{"abstract":[{"text":"Discover how Swift OpenAPI Generator can help you work with HTTP server APIs whether you‚Äôre extending an iOS app or writing a server in Swift. We‚Äôll show you how this package plugin can streamline your workflow and simplify your codebase by generating code from an OpenAPI document.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10171-Meet-Swift-OpenAPI-Generator","kind":"article","role":"sampleCode","type":"topic","title":"Meet Swift OpenAPI Generator","url":"\/documentation\/wwdcnotes\/wwdc23-10171-meet-swift-openapi-generator"},"https://buildpacks.io":{"url":"https:\/\/buildpacks.io","identifier":"https:\/\/buildpacks.io","titleInlineContent":[{"type":"text","text":"buildpacks"}],"type":"link","title":"buildpacks"},"https://github.com/Jeehut":{"url":"https:\/\/github.com\/Jeehut","identifier":"https:\/\/github.com\/Jeehut","titleInlineContent":[{"type":"text","text":"GitHub"}],"type":"link","title":"GitHub"},"https://zntfdr.dev":{"url":"https:\/\/zntfdr.dev","identifier":"https:\/\/zntfdr.dev","titleInlineContent":[{"type":"text","text":"Blog"}],"type":"link","title":"Blog"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"type":"link","title":"Contributions are welcome!"},"https://x.com/Jeehut":{"url":"https:\/\/x.com\/Jeehut","identifier":"https:\/\/x.com\/Jeehut","titleInlineContent":[{"type":"text","text":"X\/Twitter"}],"type":"link","title":"X\/Twitter"},"Jeehut":{"variants":[{"url":"\/images\/Jeehut.jpeg","traits":["1x","light"]}],"identifier":"Jeehut","type":"image","alt":"Profile image of Cihat G√ºnd√ºz"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","images":[{"type":"card","identifier":"zntfdr.jpeg"},{"type":"icon","identifier":"zntfdr.jpeg"}],"title":"Federico Zanetello (332 notes)","url":"\/documentation\/wwdcnotes\/zntfdr","role":"sampleCode","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}]},"https://github.com/vapor/redis":{"url":"https:\/\/github.com\/vapor\/redis","identifier":"https:\/\/github.com\/vapor\/redis","titleInlineContent":[{"type":"text","text":"Redis"}],"type":"link","title":"Redis"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10133-Protect-mutable-state-with-Swift-actors":{"role":"sampleCode","kind":"article","title":"Protect mutable state with Swift actors","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10133-Protect-mutable-state-with-Swift-actors","abstract":[{"type":"text","text":"Data races occur when two separate threads concurrently access the same mutable state. They are trivial to construct, but are notoriously hard to debug."}],"url":"\/documentation\/wwdcnotes\/wwdc21-10133-protect-mutable-state-with-swift-actors"},"zntfdr":{"variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}],"identifier":"zntfdr","type":"image","alt":"Profile image of Federico Zanetello"},"https://fline.dev":{"url":"https:\/\/fline.dev","identifier":"https:\/\/fline.dev","titleInlineContent":[{"type":"text","text":"Blog"}],"type":"link","title":"Blog"},"https://github.com/zntfdr":{"url":"https:\/\/github.com\/zntfdr","identifier":"https:\/\/github.com\/zntfdr","titleInlineContent":[{"type":"text","text":"GitHub"}],"type":"link","title":"GitHub"},"https://github.com/mongodb/mongo-swift-driver/":{"url":"https:\/\/github.com\/mongodb\/mongo-swift-driver\/","identifier":"https:\/\/github.com\/mongodb\/mongo-swift-driver\/","titleInlineContent":[{"type":"text","text":"MongoDB"}],"type":"link","title":"MongoDB"},"https://developer.apple.com/wwdc22/110360":{"url":"https:\/\/developer.apple.com\/wwdc22\/110360","identifier":"https:\/\/developer.apple.com\/wwdc22\/110360","checksum":null,"type":"download"},"https://github.com/amzn/smoke-dynamodb":{"url":"https:\/\/github.com\/amzn\/smoke-dynamodb","identifier":"https:\/\/github.com\/amzn\/smoke-dynamodb","titleInlineContent":[{"type":"text","text":"DynamoDB"}],"type":"link","title":"DynamoDB"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22","role":"collectionGroup","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"kind":"article","title":"WWDC22","abstract":[{"type":"text","text":"Xcode 14, Swift 5.7, iOS 16, macOS 13 (Ventura), tvOS 16, watchOS 9."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"WeatherKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"ScreenCaptureKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"Swift Regex"},{"type":"text","text":", and more."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10644-Use-Swift-on-AWS-Lambda-with-Xcode":{"role":"sampleCode","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10644-use-swift-on-aws-lambda-with-xcode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10644-Use-Swift-on-AWS-Lambda-with-Xcode","abstract":[{"text":"Serverless functions are increasingly becoming popular for running event-driven or otherwise ad-hoc compute tasks in the cloud, allowing developers to more easily scale and control compute costs. Discover how to use the new Swift AWS Lambda Runtime package to build serverless functions in Swift, debug locally using Xcode, and deploy these functions to the AWS Lambda platform. We‚Äôll show you how Swift shines on AWS Lambda thanks to its low memory footprint, deterministic performance, and quick start time.","type":"text"}],"title":"Use Swift on AWS Lambda with Xcode"},"zntfdr.jpeg":{"variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}],"identifier":"zntfdr.jpeg","type":"image","alt":null},"Jeehut.jpeg":{"variants":[{"url":"\/images\/Jeehut.jpeg","traits":["1x","light"]}],"identifier":"Jeehut.jpeg","type":"image","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-410-Creating-Swift-Packages":{"kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc19-410-creating-swift-packages","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-410-Creating-Swift-Packages","title":"Creating Swift Packages","abstract":[{"text":"Whether you want to publish code to share with the community, or you just want a convenient way to organize the code in your apps, Swift packages are here to help. Learn how to create local packages for your own development, how to customize your package via the manifest file, and how to go about publishing a package for others to use.","type":"text"}],"type":"topic"},"https://github.com/vapor/fluent-sqlite-driver":{"url":"https:\/\/github.com\/vapor\/fluent-sqlite-driver","identifier":"https:\/\/github.com\/vapor\/fluent-sqlite-driver","titleInlineContent":[{"type":"text","text":"SQLite"}],"type":"link","title":"SQLite"},"https://github.com/kirilltitov/FDBSwift":{"url":"https:\/\/github.com\/kirilltitov\/FDBSwift","identifier":"https:\/\/github.com\/kirilltitov\/FDBSwift","titleInlineContent":[{"type":"text","text":"FoundationDB"}],"type":"link","title":"FoundationDB"},"doc://WWDCNotes/documentation/WWDCNotes/Jeehut":{"title":"Cihat G√ºnd√ºz (56 notes)","abstract":[{"type":"text","text":"Spatial-first Indie Developer for Ô£ø Platforms. Actively contributing to Open Source since 2011!"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/jeehut","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Jeehut","kind":"article","type":"topic","images":[{"identifier":"Jeehut.jpeg","type":"card"},{"identifier":"Jeehut.jpeg","type":"icon"}]},"doc://WWDCNotes/documentation/WWDCNotes":{"abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","title":"WWDC Notes","url":"\/documentation\/wwdcnotes","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"role":"collection"},"https://github.com/vapor/fluent-postgres-driver":{"url":"https:\/\/github.com\/vapor\/fluent-postgres-driver","identifier":"https:\/\/github.com\/vapor\/fluent-postgres-driver","titleInlineContent":[{"type":"text","text":"Postgres"}],"type":"link","title":"Postgres"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10132-Meet-asyncawait-in-Swift":{"title":"Meet async\/await in Swift","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10132-Meet-asyncawait-in-Swift","abstract":[{"text":"Swift now supports asynchronous functions ‚Äî a pattern commonly known as async\/await. Discover how the new syntax can make your code easier to read and understand. Learn what happens when a function suspends, and find out how to adapt existing completion handlers to asynchronous functions.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10132-meet-asyncawait-in-swift","kind":"article","role":"sampleCode","type":"topic"}}}