{"sampleCodeDownload":{"kind":"sampleDownload","action":{"isActive":true,"overridingTitle":"Watch Video (35 min)","type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc18\/405"}},"abstract":[{"type":"text","text":"Learn how to use signposts and logging to measure performance.  Understand how the Points of Interest instrument can be used to examine logged data. Get an introduction into creating and using custom instruments."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"kind":"article","primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"Signposts - a new feature of the ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging","isActive":true,"type":"reference"},{"text":" API","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"useful for debugging performance issues","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"integrated with Instruments, which can visualize activity over time using signposts","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Signposts allow you to mark the beginning and end of a piece of work and mark it with some kind of label:"}],"type":"paragraph"},{"code":["import os.signpost","","let refreshLog = OSLog(subsystem: \"…\", category: \"…\")","","os_signpost(.begin, log: refreshLog, name: \"Fetch Asset\")","\/\/ …do actual work…","os_signpost(.end, log: refreshLog, name: \"Fetch Asset\")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Ranges of signposts with different names can overlap - e.g. you can have one signpost covering the whole process and smaller signposts covering specific single tasks that it consists of:","type":"text"}],"type":"paragraph"},{"code":["os_signpost(.begin, log: log, name: \"Load Data\")","","os_signpost(.begin, log: log, name: \"Fetch Asset\")","\/\/ …","os_signpost(.end, log: log, name: \"Fetch Asset\")","","os_signpost(.begin, log: log, name: \"Parse JSON\")","\/\/ …","os_signpost(.end, log: log, name: \"Parse JSON\")","","os_signpost(.end, log: log, name: \"Load Data\")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"If you run multiple tasks of the same kind, to let the system differentiate between them and know which begin matches which end, you can add a “signpost ID”:","type":"text"}],"type":"paragraph"},{"code":["os_signpost(.begin, log: log, name: \"Load Data\")","","for asset in assets {","    let spid = OSSignpostID(log: log)","","    os_signpost(.begin, log: refreshLog, name: \"Fetch Asset\", signpostID: spid)","    \/\/ …do actual work…","    os_signpost(.end, log: refreshLog, name: \"Fetch Asset\", signpostID: spid)","}","","os_signpost(.end, log: log, name: \"Load Data\")"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"You can also pass your model object when generating the signpost ID - then it will always use the same signpost ID for the same object, and you don’t have to store the signpost object, just your model:","type":"text"}],"type":"paragraph"},{"code":["let spid = OSSignpostID(log: log, object: asset)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"There is also an option of passing an additional string argument to begin\/end to provide some context (e.g. to differentiate between different possible ways to finish an activity, like success\/failure). The string also accepts format arguments like "},{"code":"os_log","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["os_signpost(.begin, log: log, name: \"Compute Physics\",","    \"Calculating %{public}s: %d %d %d %d\", description, x1, y2, x2, y2)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Apart from marking the beginning and end, you can also mark specific points in time during the process using the ","type":"text"},{"code":".event","type":"codeVoice"},{"text":" signpost type:","type":"text"}],"type":"paragraph"},{"code":["os_signpost(.event, log: log, name: \"Fetch Asset\",","    \"Received chunk of data, size %d\", size)"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Signposts are very optimized internally, they’re built to minimize the time spent when logging, same as the whole ","type":"text"},{"type":"codeVoice","code":"os_log"},{"text":" API. This means you can emit a lot of signposts even in a very tight window when investigating a performance bottleneck.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you still really want to enable or disable some signpost logs based on some conditions, you can swap your logger object with "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/os\/oslog\/2863695-disabled","isActive":true},{"type":"text","text":":"}],"type":"paragraph"},{"code":["let refreshLog: OSLog","","if ProcessInfo.processInfo.environment.keys.contains(\"SIGNPOSTS_REFRESH\") {","    refreshLog = OSLog(…)","} else {","    refreshLog = .disabled","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"To conditionally disable some expensive code that is only useful for debugging, you can check the "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/os\/oslog\/3006881-signpostsenabled","isActive":true},{"type":"text","text":" property:"}],"type":"paragraph"},{"code":["if refreshLog.signpostsEnabled {","    let information = collectInfo()","    os_signpost(…, information)","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"All APIs are also available in C & ObjC:"}],"type":"paragraph"},{"code":["#include <os\/signpost.h>","","os_signpost_interval_begin()","os_signpost_interval_end()","os_signpost_event_emit()","os_signpost_id_t","OS_LOG_DISABLED"],"syntax":"objc","type":"codeListing"},{"inlineContent":[{"text":"Use the formatter ","type":"text"},{"code":"%{xcode:size-in-bytes}u","type":"codeVoice"},{"text":" to let Xcode & Instruments know that the logged value is a byte size of some data","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"This is one of so called “Engineering types” - find more in the Instruments Help menu, in the Instruments developer guide","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Instruments-tips","level":2,"type":"heading","text":"Instruments tips"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Use the “os_signpost” instrument to profile using signposts"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"After recording some data, you can see the signpost names in the sidebar on the left and signpost ranges with the optional begin\/end comments marked on the chart"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the bottom pane you can see count and duration statistics, grouped by category, signpost, id and comment"}]}]},{"content":[{"inlineContent":[{"text":"Clicking the arrow button next to a specific message row shows you a list of all instances of this specific message (selecting them highlights them on the timeline)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"For metadata like logged byte sizes of downloads, you can choose “Summary: Metadata Statistics” to see total\/min\/max\/avg of each type of value","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Live streaming signpost logs to Instruments (“Immediate mode”) adds some overhead, so if you want to avoid that while debugging some performance-critical code, click and hold the Record button to access recording options and change mode to “Last n seconds”","type":"text"}]}]}]},{"anchor":"Points-of-interest","level":2,"type":"heading","text":"Points of interest"},{"inlineContent":[{"type":"text","text":"Points of interest is a special log category of "},{"type":"codeVoice","code":"OSLog"},{"type":"text","text":". It’s meant for logging important actions taken by the user, like opening some specific screen."}],"type":"paragraph"},{"inlineContent":[{"text":"Normal ","type":"text"},{"code":"os_log","type":"codeVoice"},{"text":" logs and signpost logs logged to this category appear in a special separate Instruments timeline, which lets you visualize what was happening in the app at the moment when something happened on other charts like CPU usage.","type":"text"}],"type":"paragraph"},{"anchor":"Custom-Instruments-packages","level":2,"type":"heading","text":"Custom Instruments packages"},{"inlineContent":[{"text":"You can now build your custom Instruments packages, defined as an XML file in a separate target, which appear as a new kind of template when starting Instruments. This lets you process and present collected signpost data in a different way that makes sense for the specific problem you’re analyzing.","type":"text"}],"type":"paragraph"},{"anchor":"Written-By","level":2,"type":"heading","text":"Written By"},{"columns":[{"content":[{"inlineContent":[{"identifier":"mackuba","type":"image"}],"type":"paragraph"}],"size":1},{"content":[{"type":"heading","level":3,"anchor":"Kuba-Suder","text":"Kuba Suder"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/mackuba","isActive":true,"overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/mackuba","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/mackuba.eu","isActive":true,"type":"reference"}]}],"size":4}],"type":"row","numberOfColumns":5},{"type":"thematicBreak"},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference"}],"type":"paragraph"},{"anchor":"Related-Sessions","level":2,"type":"heading","text":"Related Sessions"},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10226-Debug-with-structured-logging","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-407-Practical-Approaches-to-Great-App-Performance","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC16-721-Unified-Logging-and-Activity-Tracing"]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}],"type":"small"},{"inlineContent":[{"text":"All content copyright © 2012 – 2025 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}],"type":"small"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc18-405-measuring-performance-using-logging"]}],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-405-Measuring-Performance-Using-Logging","interfaceLanguage":"swift"},"metadata":{"title":"Measuring Performance Using Logging","roleHeading":"WWDC18","role":"sampleCode","modules":[{"name":"WWDC Notes"}]},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18"]]},"references":{"mackuba.jpeg":{"type":"image","alt":null,"identifier":"mackuba.jpeg","variants":[{"url":"\/images\/WWDCNotes\/mackuba.jpeg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","title":"WWDC Notes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"url":"\/documentation\/wwdcnotes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","role":"collection","images":[{"identifier":"WWDCNotes.png","type":"icon"}]},"https://mackuba.eu":{"titleInlineContent":[{"type":"text","text":"Blog"}],"url":"https:\/\/mackuba.eu","title":"Blog","type":"link","identifier":"https:\/\/mackuba.eu"},"WWDC18-Icon.png":{"type":"image","identifier":"WWDC18-Icon.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC18-Icon.png"}],"alt":null},"doc://WWDCNotes/documentation/WWDCNotes/mackuba":{"abstract":[{"type":"text","text":"Independent Mac & iOS developer. Sometimes freelancing, mostly working on my own stuff these days."}],"title":"Kuba Suder (16 notes)","type":"topic","url":"\/documentation\/wwdcnotes\/mackuba","role":"sampleCode","images":[{"type":"card","identifier":"mackuba.jpeg"},{"type":"icon","identifier":"mackuba.jpeg"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/mackuba","kind":"article"},"WWDCNotes.png":{"type":"image","alt":null,"identifier":"WWDCNotes.png","variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}]},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","type":"link","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"https://developer.apple.com/documentation/os/logging":{"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/os\/logging","titleInlineContent":[{"type":"codeVoice","code":"os_log"}],"url":"https:\/\/developer.apple.com\/documentation\/os\/logging","title":"os_log"},"WWDC18.jpeg":{"type":"image","alt":null,"identifier":"WWDC18.jpeg","variants":[{"url":"\/images\/WWDCNotes\/WWDC18.jpeg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10226-Debug-with-structured-logging":{"url":"\/documentation\/wwdcnotes\/wwdc23-10226-debug-with-structured-logging","type":"topic","abstract":[{"text":"Discover the debug console in Xcode 15 and learn how you can improve your diagnostic experience through logging. Explore how you can navigate your logs easily and efficiently using advanced filtering and improved visualization. We’ll also show you how to use the dwim-print command to evaluate expressions in your code while debugging.","type":"text"}],"kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10226-Debug-with-structured-logging","title":"Debug with structured logging"},"https://developer.apple.com/documentation/os/oslog/3006881-signpostsenabled":{"titleInlineContent":[{"code":"signpostsEnabled","type":"codeVoice"}],"url":"https:\/\/developer.apple.com\/documentation\/os\/oslog\/3006881-signpostsenabled","title":"signpostsEnabled","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/os\/oslog\/3006881-signpostsenabled"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC16-721-Unified-Logging-and-Activity-Tracing":{"role":"sampleCode","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC16-721-Unified-Logging-and-Activity-Tracing","url":"\/documentation\/wwdcnotes\/wwdc16-721-unified-logging-and-activity-tracing","abstract":[{"type":"text","text":"The new Unified Logging and Tracing System for iOS and macOS uses Activity Tracing for performance, consolidates kernel and user-space logging, and has many other improvements. Learn how Logging and Tracing can help you debug and troubleshoot issues with your apps."}],"title":"Unified Logging and Activity Tracing"},"https://developer.apple.com/documentation/os/oslog/2863695-disabled":{"titleInlineContent":[{"code":"OSLog.disabled","type":"codeVoice"}],"url":"https:\/\/developer.apple.com\/documentation\/os\/oslog\/2863695-disabled","title":"OSLog.disabled","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/os\/oslog\/2863695-disabled"},"mackuba":{"type":"image","identifier":"mackuba","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/mackuba.jpeg"}],"alt":"Profile image of Kuba Suder"},"https://github.com/mackuba":{"type":"link","title":"GitHub","identifier":"https:\/\/github.com\/mackuba","titleInlineContent":[{"text":"GitHub","type":"text"}],"url":"https:\/\/github.com\/mackuba"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC18":{"title":"WWDC18","role":"collectionGroup","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc18","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18","abstract":[{"text":"Xcode 10, Swift 4.2, iOS 12, macOS 10.14 (Mojave), tvOS 12, watchOS 5.","type":"text"}],"images":[{"identifier":"WWDC18-Icon.png","type":"icon"},{"identifier":"WWDC18.jpeg","type":"card"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC18-407-Practical-Approaches-to-Great-App-Performance":{"title":"Practical Approaches to Great App Performance","abstract":[{"text":"All apps benefit from a focus on performance and an increase in overall responsiveness. This information packed session gives you strategies for fixing performance problems using Instruments and other tools. Additionally, get practical advice based on experience in tuning Apple’s own apps including Xcode and Photos on iOS.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc18-407-practical-approaches-to-great-app-performance","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-407-Practical-Approaches-to-Great-App-Performance","kind":"article"},"https://developer.apple.com/wwdc18/405":{"checksum":null,"url":"https:\/\/developer.apple.com\/wwdc18\/405","type":"download","identifier":"https:\/\/developer.apple.com\/wwdc18\/405"}}}