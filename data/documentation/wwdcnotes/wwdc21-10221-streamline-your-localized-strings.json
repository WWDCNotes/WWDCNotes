{"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"sections":[],"kind":"article","metadata":{"title":"Streamline your localized strings","roleHeading":"WWDC21","modules":[{"name":"WWDC Notes"}],"role":"sampleCode"},"abstract":[{"type":"text","text":"When you localize the text within your app, you can help make your app more accessible to a worldwide audience. Discover best practices for building your localization workflow, including how to write and format strings accurately, and learn how to prepare strings for localization in different languages using Xcode."}],"sampleCodeDownload":{"kind":"sampleDownload","action":{"identifier":"https:\/\/developer.apple.com\/wwdc21\/10221","overridingTitle":"Watch Video (27 min)","type":"reference","isActive":true}},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10221-Streamline-your-localized-strings","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc21-10221-streamline-your-localized-strings"]}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Declaring-a-localizable-string","text":"Declaring a localizable string","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Use SwiftUI’s ","type":"text"},{"code":"LocalizedStringKey","type":"codeVoice"},{"text":" initializers, e.g. ","type":"text"},{"code":"Text(\"Hello world\")","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"via variables, e.g. "},{"type":"codeVoice","code":"button.title = NSLocalizedString(\"Order\", comment: \"…\")"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"new Swifty way: ","type":"text"},{"code":"button.title = String(localized: \"Order\")","type":"codeVoice"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Example:","type":"text"}]},{"type":"codeListing","code":["let count = 3","","\/\/ SwiftUI","Button(\"Order \\(count) Tickets\") { … }","","\/\/ Swift","button.title = String(localized: \"Order \\(count) Tickets\")","\/\/ This was previously obtained via .localizedStringWithFormat()"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Do not use "},{"type":"codeVoice","code":"String(format: \"Order %d Tickets\", count)"},{"type":"text","text":", it’s not intended for localization."}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Comment-recommendations","text":"Comment recommendations","level":2},{"type":"paragraph","inlineContent":[{"text":"Tips for a good localized string comment:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"declared the interface element (e.g. ","type":"text"},{"type":"codeVoice","code":"button"},{"text":")","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"define the context"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"explain each variable"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Examples:"}]},{"type":"codeListing","code":["Text(\"Order\", comment: \"Button: confirms concert tickets booking\")","Text(\"\\(ticketCount) Ordered\", comment: \"Order summary: total number of tickets ordered\")"],"syntax":"swift"},{"type":"heading","anchor":"Tables","text":"Tables","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"localized strings can be further organized in tables","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"by default all strings are put in a table named "},{"type":"codeVoice","code":"Localizable"},{"type":"text","text":", which means all strings are stored in a "},{"type":"codeVoice","code":"Localizable.strings"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Localizable.stringsdict"},{"type":"text","text":" file"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Which means that the following example will search for the localization in "},{"type":"codeVoice","code":"fr.lproj\/UserProfile.strings"},{"type":"text","text":" for the French translation (for example)"}]},{"type":"codeListing","code":["Text(","  \"\\(ticketCount) Ordered\",","  tableName: \"UserProfile\",","  comment: \"Profile subtitle: total number of tickets ordered\"",")"],"syntax":"swift"},{"type":"heading","anchor":"Bundle","text":"Bundle","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"This parameter lets you load strings across targets","type":"text"}]}]},{"content":[{"inlineContent":[{"code":".main","type":"codeVoice"},{"type":"text","text":" by default"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"if your app extension wants to use:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"the same localizations as your app, there’s nothing else to do","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"its own localizations, it needs to set "},{"code":".module","type":"codeVoice"},{"type":"text","text":" as the "},{"code":"bundle","type":"codeVoice"},{"type":"text","text":" parameter value"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"if the localization is vended by a framework you’d use:"}]}]}]},{"type":"codeListing","code":["\/\/\/ In the framework","","public enum OrderStatus {","  case pending, processing, complete, canceled, invalid(Error)","","  var displayName: String {","    switch self {","      case .complete: return String(","        localized: \"Complete\",","        bundle: Bundle(for: AnyClassInTicketKit.self),","        comment: \"Standalone ticket status: order finalized\"","      )","      ...","          ","\/\/\/ In the app:","","Text(OrderStatus.complete.displayName)"],"syntax":"swift"},{"type":"heading","anchor":"Written-By","text":"Written By","level":2},{"type":"row","columns":[{"content":[{"inlineContent":[{"identifier":"zntfdr","type":"image"}],"type":"paragraph"}],"size":1},{"content":[{"type":"heading","anchor":"Federico-Zanetello","text":"Federico Zanetello","level":3},{"inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","type":"reference","overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/github.com\/zntfdr","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/zntfdr.dev","type":"reference","isActive":true}],"type":"paragraph"}],"size":4}],"numberOfColumns":5},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}]},{"type":"heading","anchor":"Related-Sessions","text":"Related Sessions","level":2},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10107-Get-it-right-to-left","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10110-Build-global-apps-Localization-by-example","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10109-Whats-new-in-Foundation","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10220-Localize-your-SwiftUI-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10160-Formatters-Make-data-humanfriendly","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-403-Creating-Great-Localized-Experiences-with-Xcode-11"]},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}]}],"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"url":"\/documentation\/wwdcnotes\/wwdc21","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","images":[{"type":"icon","identifier":"WWDC21-Icon.png"},{"type":"card","identifier":"WWDC21.jpeg"}],"kind":"article","role":"collectionGroup","title":"WWDC21","abstract":[{"text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"MusicKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DocC","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit 2","type":"codeVoice"},{"text":", and more.","type":"text"}]},"zntfdr.jpeg":{"alt":null,"identifier":"zntfdr.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/zntfdr.jpeg"}],"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10107-Get-it-right-to-left":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10107-Get-it-right-to-left","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10107-get-it-right-to-left","kind":"article","title":"Get it right (to left)","abstract":[{"type":"text","text":"Discover how to develop your app so that it can be localized into “right-to-left” languages such as Arabic and Hebrew. We’ll take you through important considerations for these languages, share solutions to challenges, and provide best practices for delivering a great right-to-left experience in your app."}]},"https://developer.apple.com/wwdc21/10221":{"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc21\/10221","url":"https:\/\/developer.apple.com\/wwdc21\/10221","checksum":null},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","type":"link"},"WWDCNotes.png":{"type":"image","identifier":"WWDCNotes.png","variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10160-Formatters-Make-data-humanfriendly":{"url":"\/documentation\/wwdcnotes\/wwdc20-10160-formatters-make-data-humanfriendly","type":"topic","kind":"article","abstract":[{"type":"text","text":"Save yourself time and frustration: When you display data in your app — including dates, times, measurements, names, lists, numbers, or strings — learn how to format it correctly and provide a great experience. We’ll walk you through the Formatter APIs as well as how SwiftUI works with stringsdict, and show you how they can help do the heavy lifting of formatting data. Learn about best practices and how to avoid common mistakes."}],"title":"Formatters: Make data human-friendly","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10160-Formatters-Make-data-humanfriendly"},"WWDC21-Icon.png":{"alt":null,"identifier":"WWDC21-Icon.png","variants":[{"url":"\/images\/WWDCNotes\/WWDC21-Icon.png","traits":["1x","light"]}],"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-403-Creating-Great-Localized-Experiences-with-Xcode-11":{"url":"\/documentation\/wwdcnotes\/wwdc19-403-creating-great-localized-experiences-with-xcode-11","kind":"article","type":"topic","abstract":[{"type":"text","text":"Learn how your app can support per-app language settings in iOS 13. Get the details on localizing assets with asset catalogs and simplifying your localization workflow with Xcode 11. Understand how to generate screenshots in multiple languages for localization and testing."}],"title":"Creating Great Localized Experiences with Xcode 11","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-403-Creating-Great-Localized-Experiences-with-Xcode-11"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10220-Localize-your-SwiftUI-app":{"type":"topic","abstract":[{"type":"text","text":"Learn how to localize your SwiftUI app and make it available to a global audience. Explore how you can localize strings in SwiftUI, including those with styles and formatting. We’ll demonstrate how you can save time by having SwiftUI automatically handle tasks such as layout and keyboard shortcuts, and take you through the localization workflow in Xcode 13."}],"kind":"article","title":"Localize your SwiftUI app","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10220-localize-your-swiftui-app","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10220-Localize-your-SwiftUI-app"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10110-Build-global-apps-Localization-by-example":{"url":"\/documentation\/wwdcnotes\/wwdc22-10110-build-global-apps-localization-by-example","abstract":[{"text":"Learn how you can run your apps on devices around the world and help everyone have a great experience — regardless of the language they speak. We’ll explore how Apple APIs can provide a solid foundation when creating apps for diverse audiences, and we’ll share examples, challenges, and best practices from our own experiences.","type":"text"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10110-Build-global-apps-Localization-by-example","role":"sampleCode","title":"Build global apps: Localization by example","type":"topic"},"https://github.com/zntfdr":{"titleInlineContent":[{"type":"text","text":"GitHub"}],"identifier":"https:\/\/github.com\/zntfdr","url":"https:\/\/github.com\/zntfdr","title":"GitHub","type":"link"},"doc://WWDCNotes/documentation/WWDCNotes":{"abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"title":"WWDC Notes","type":"topic","kind":"symbol","role":"collection","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"url":"\/documentation\/wwdcnotes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10109-Whats-new-in-Foundation":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10109-Whats-new-in-Foundation","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10109-whats-new-in-foundation","kind":"article","title":"What’s new in Foundation","abstract":[{"text":"Discover how the latest updates to Foundation can help you improve your app’s localization and internationalization support. Find out about the new AttributedString, designed specifically for Swift, and learn how you can use Markdown to apply style to your localized strings. Explore the grammar agreement engine, which automatically fixes up localized strings so they match grammatical gender and pluralization. And we’ll take you through improvements to date and number formatting that simplify complex requirements while also improving performance.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"title":"Federico Zanetello (332 notes)","type":"topic","kind":"article","role":"sampleCode","images":[{"identifier":"zntfdr.jpeg","type":"card"},{"identifier":"zntfdr.jpeg","type":"icon"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","url":"\/documentation\/wwdcnotes\/zntfdr"},"WWDC21.jpeg":{"type":"image","identifier":"WWDC21.jpeg","variants":[{"url":"\/images\/WWDCNotes\/WWDC21.jpeg","traits":["1x","light"]}],"alt":null},"zntfdr":{"alt":"Profile image of Federico Zanetello","identifier":"zntfdr","variants":[{"url":"\/images\/WWDCNotes\/zntfdr.jpeg","traits":["1x","light"]}],"type":"image"},"https://zntfdr.dev":{"titleInlineContent":[{"type":"text","text":"Blog"}],"identifier":"https:\/\/zntfdr.dev","url":"https:\/\/zntfdr.dev","title":"Blog","type":"link"}}}