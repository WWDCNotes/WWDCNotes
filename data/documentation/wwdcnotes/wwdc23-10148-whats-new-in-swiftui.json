{"kind":"article","abstract":[{"text":"Learn how you can use SwiftUI to build great apps for all Apple platforms. Explore the latest updates to SwiftUI and discover new scene types for visionOS. Simplify your data models with the latest data flow options and learn about the Inspector view. We’ll also take you through enhanced animation APIs, powerful ScrollView improvements, and a host of refinements to help you make tidier tables, improve focus and keyboard input, and so much more.","type":"text"}],"sections":[],"metadata":{"title":"What’s new in SwiftUI","roleHeading":"WWDC23","role":"sampleCode","modules":[{"name":"WWDC Notes"}]},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10148-Whats-new-in-SwiftUI","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc23-10148-whats-new-in-swiftui"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"anchor":"Chapters","type":"heading","text":"Chapters","level":2},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148\/?time=65","type":"reference"},{"text":"","type":"text"},{"text":"\n","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148\/?time=621","type":"reference"},{"text":"","type":"text"},{"text":"\n","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148\/?time=1126","type":"reference"},{"text":"","type":"text"},{"text":"\n","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148\/?time=1638","type":"reference"}],"type":"paragraph"},{"anchor":"Intro","type":"heading","text":"Intro","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"SwiftUI in more places"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Simplified data flow"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Extraordinary animations","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Enhanced interactions","type":"text"}],"type":"paragraph"}]}]},{"anchor":"SwiftUI-in-more-places","type":"heading","text":"SwiftUI in more places","level":1},{"inlineContent":[{"text":"Spatial computing brings SwiftUI into a bold new future with all-new 3D capabilities like volumes; rich experiences with immersive spaces; new 3D gestures, effects, and layout; and deep integration with RealityKit. From core pieces like the Home View in Control Center to familiar apps like TV, Safari, and Freeform; to all-new environments like immersive rehearsals in Keynote; SwiftUI is at the heart of these user experiences","type":"text"}],"type":"paragraph"},{"inlineContent":[{"identifier":"WWDC23-10148-SwiftUI-in-more-places","type":"image"}],"type":"paragraph"},{"anchor":"Scenes-for-spatial-computing","type":"heading","text":"Scenes for spatial computing","level":3},{"inlineContent":[{"type":"text","text":"Scenes for spatial computing uses "},{"code":"WindowGroup","type":"codeVoice"},{"type":"text","text":" (render as 2D windows with 3D controls)."},{"type":"text","text":" "},{"type":"text","text":"Add "},{"code":".windowStyle(.volumetric)","type":"codeVoice"},{"type":"text","text":" to get a volume."}],"type":"paragraph"},{"inlineContent":[{"identifier":"WWDC23-10148-WindowGroup","type":"image"}],"type":"paragraph"},{"anchor":"NavigationSplitViews-are-available","type":"heading","text":"NavigationSplitViews are available.","level":3},{"type":"codeListing","code":["NavigationSplitView {","    SidebarList($selection)","} detail: {","    Detail(for: selection)","}"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-NavigationSplitViews"}],"type":"paragraph"},{"anchor":"TabViews","type":"heading","text":"TabViews","level":3},{"type":"codeListing","code":["TabView {","    DogsTab ()","        .tabItem { ... }","    CatsTab()","        .tabItem { ... }","    BirdsTab ()","        .tabItem { ... }","}"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-TabViews"}],"type":"paragraph"},{"anchor":"Volume-content","type":"heading","text":"Volume content","level":3},{"inlineContent":[{"type":"text","text":"Fill a volume with a static model using "},{"code":"Model3D","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-globe"}],"type":"paragraph"},{"inlineContent":[{"text":"For dynamic, interactive models with lighting effects and more, use the new ","type":"text"},{"type":"codeVoice","code":"RealityView"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Volume content","import SwiftUI ","import RealityKit","","struct Globe: View {","    var body: some View {","        RealityView { content in","            if let earth = try? await ModelEntity(named: \"Earth\") {","                earth.addImageBasedLighting()","                content.add(earth)","            }","        }","    }","}"],"syntax":"swift"},{"anchor":"Immersive-Spaces","type":"heading","text":"Immersive Spaces","level":3},{"inlineContent":[{"type":"text","text":"Use an ImmersiveSpace with the mixed immersion style to connect your app to the real world, combining your content with people’s surroundings. Anchor elements of your app to tables and surfaces, and augment and enrich the real world with virtual objects and effects. Go further with the full immersion style. Your app takes complete control. Build these connected and immersive experiences using the same Model3D and RealityView that work in volumes."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"full immersion style"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"mixed immersion style"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"See more in the session:"}],"type":"paragraph"},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10109"}],"type":"paragraph"},{"anchor":"watchOS-10-redesigned-user-experience","type":"heading","text":"watchOS 10 redesigned user experience","level":2},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-watch"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Newly empowered with new transitions:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"NavigationSplitView","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"TabView gets a new ","type":"text"},{"type":"codeVoice","code":".verticalPagingStyle"},{"text":" driven by the Digital Crown","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"NavigationStack","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"inlineContent":[{"identifier":"WWDC23-10148-watch2","type":"image"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":".containerBackground"},{"text":" modifier lets you configure the background of the container which animate when you push and pop content.","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["\/\/ Container backgrounds","CityDetails(city: city)","    .containerBackground(for: navigation) { ... }"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-watch3"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Multiplatform toolbar placements (","type":"text"},{"code":".topBarLeading","type":"codeVoice"},{"text":" and ","type":"text"},{"code":".topBarTrailing","type":"codeVoice"},{"text":", along with the existing ","type":"text"},{"code":".bottomBar","type":"codeVoice"},{"text":") let you perfectly place small detail views in your Apple Watch apps.","type":"text"}]}]}]},{"type":"codeListing","code":["\/\/ Toolbar placements",".toolbar {","    ToolbarItem(placement: .topBarTrailing) { ... }","    ToolbarItem(placement: .bottomBar) { ...}","}"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-watch4","type":"image"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"New additions"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"DatePicker"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Selection in "},{"type":"codeVoice","code":"List"},{"type":"text","text":"s"}]}]}]}]}]},{"type":"codeListing","code":["\/\/ Newly available","DatePicker(","    \"Time (h:m:s)\",","    selection: $date,","    displayedComponents: hourMinuteAndSecond",")","","NavigationSplitView {","    List(locales, selection: $selectedLocale) { locale in","        ...","    } ","    .containerBackground(...)","} detail: {","    if let selectedLocale { ... }","}"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-watch5","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"See more in the sessions:"},{"type":"text","text":" "},{"type":"text","text":"\u001b"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10138","isActive":true,"type":"reference"},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"text","text":"and"},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10031","isActive":true,"type":"reference"}],"type":"paragraph"},{"anchor":"Interactive-widgets","type":"heading","text":"Interactive widgets","level":2},{"inlineContent":[{"text":"Widgets for the Smart Stack on watchOS 10 let the people using your app see their information on the go.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-watch6"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"SwiftUI is core to widgets wherever they appear, like these other new places. Widgets on the Lock Screen on iPadOS 17 are a great complement to widgets on the Home Screen."}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-iPadWidgets"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Big, bold widgets shine on the iPhone Always-On display with Standby Mode."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"And desktop widgets on macOS Sonoma…"}],"type":"paragraph"},{"anchor":"Interactivity-and-interaction","type":"heading","text":"Interactivity and interaction","level":2},{"inlineContent":[{"text":"Widgets now support interactive controls. Toggle and Button in Widgets can now activate code defined in your own app bundle using App Intents. And you can animate your widgets using SwiftUI transition and animation modifiers.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Widgets for Smart Stack"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Appear when scrolling down","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Also available on iPadOS 17","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Standby Mode for iPhone"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Desktop Widgets on macOS","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Interactive controls for Widgets","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Toggle and Button"}]}]},{"content":[{"inlineContent":[{"text":"Ase App Intents","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"animate with transitions and animations"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Previews leverage macros to allow you to show the widget states with a timeline"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"inlineContent":[{"type":"text","text":"See more in the sessions:"}],"type":"paragraph"},{"inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10027","isActive":true}],"type":"paragraph"},{"inlineContent":[{"text":"and","type":"text"}],"type":"paragraph"},{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10028\/","type":"reference","isActive":true}],"type":"paragraph"},{"anchor":"Previews-for-widgets","type":"heading","text":"Previews for widgets","level":2},{"type":"codeListing","code":["#Preview(as: .systemSmall) {","    CaffeineTrackerWidget()","} timeline: {","    CaffeineLogEntry.log1","    CaffeineLogEntry.log2","    CaffeineLogEntry.log3","    CaffeineLogEntry.log4","}"],"syntax":"swift"},{"anchor":"Xcode-Previews","type":"heading","text":"Xcode Previews","level":4},{"inlineContent":[{"text":"Declare and configure a Preview, add a widget type, and define a timeline for testing. Xcode Previews shows the current widget state and a timeline that lets you see the animations between states. Of course, the new previews work with regular SwiftUI views and apps as well.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["import SwiftUI ","import AppIntents","","struct CaffeineTrackerwidgetView : View {","    var entry: CaffeineLogEntry","    ","    var body: some View {","        VStack (alignment: leading) {","            TotalCaffeineView(totalCaffeine:","                entry.totalCaffeine)","                ","        Spacer ()","        ","        if let log = entry.log {","            LastDrinkView(log: log)","        }","        ","        Spacer ()","        ","        HStack {","            Spacer ()","            LoaDrinkView()","            Spacer ()","            }","    }","    .fontDesign (.rounded)","    .containerBackground(for: .widget) {","        Color.cosmicLatte","        }","    }","}"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-widgets","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"New Previews syntax:"}],"type":"paragraph"},{"type":"codeListing","code":["#Preview(\"good dog\") {","    ZStack(alignment: .bottom) {","        Rectangle()","            .fill(Color.blue.gradient)","        Text(\"Riley\")","            .font(.largeTitle)","            .padding()","            .background(.thinMaterial, in: .capsule)","            .padding()","    }","    .ignoresSafeArea()","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"You can now interact with previews of Mac apps right inside Xcode."}],"type":"paragraph"},{"inlineContent":[{"text":"See more in the sessions:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10252","type":"reference","isActive":true}],"type":"paragraph"},{"inlineContent":[{"text":"and","type":"text"}],"type":"paragraph"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10164"}],"type":"paragraph"},{"anchor":"SwiftUI-extensions-to-other-frameworks","type":"heading","text":"SwiftUI extensions to other frameworks","level":3},{"inlineContent":[{"text":"Several frameworks bring new or improved support:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Authentication Services \/ MapKit"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"HealthKit Swift Charts Continuity device picker"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Apple Pay Later \/ StoreKit \/ In-app purchasing \/ CareKit"}],"type":"paragraph"}]}]},{"anchor":"MapKit","type":"heading","text":"MapKit","level":3},{"inlineContent":[{"text":"MapKit delivers a massive update:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ MapKit","","import SwiftUI ","import MapKit","","Map {","    Marker(item: destination)","    MapPolyline(route)","        .stroke(.blue, lineWidth: 5)    ","    UserAnnotation()","}",".mapControls {","    MapUserLocationButton( )","    MapCompass()","    }"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-mapkit","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"NEW:","type":"text"}]},{"type":"text","text":" Use maps in your view."},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"text":"NEW:","type":"text"}]},{"type":"text","text":" Add markers, polylines and the user’s location."}],"type":"paragraph"},{"type":"codeListing","code":["import SwiftUI","import MapKit","","struct Maps_Snippet: View {","    private let location = CLLocationCoordinate2D(","        latitude: CLLocationDegrees(floatLiteral: 37.3353),","        longitude: CLLocationDegrees(floatLiteral: -122.0097))","","    var body: some View {","        Map {","            Marker(\"Pond\", coordinate: location)","            UserAnnotation()","        }","        .mapControls {","            MapUserLocationButton()","            MapCompass()","        }","    }","}","","#Preview {","    Maps_Snippet()","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"See more in the session:"}],"type":"paragraph"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10043"}],"type":"paragraph"},{"anchor":"SwiftCharts","type":"heading","text":"SwiftCharts","level":3},{"type":"codeListing","code":["\/\/ Swift Charts","Chart {","    ForEach(SalesData.last365Days, id: \\.day) {","        BarMark(","            x: .value(\"Day\", SO.day, unit: .day),","            y: .value(\"Sales\", $0.sales)","        )","    } ","    .foregroundStyle(.blue)","} ",".chartScrollableAxes(.horizontal)",".chartXVisibleDomain(length: 3600 * 24 * 30)",".chartScrollPosition(x: $scrollPosition)"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-charts","type":"image"}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"text":"NEW:","type":"text"}],"type":"strong"},{"text":" Scrolling and selection in charts.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["import SwiftUI","import Charts","","struct ScrollingChart_Snippet: View {","    @State private var scrollPosition = SalesData.last365Days.first!","    @State private var selection: SalesData?","","    var body: some View {","        Chart {","            ...","        }","        .chartScrollableAxes(.horizontal)","        .chartXVisibleDomain(length: 3600 * 24 * 30)","        .chartScrollPosition(x: $scrollPosition)","        .chartXSelection(value: $selection)","    }","}"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-charts2","type":"image"}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"text":"NEW:","type":"text"}],"type":"strong"},{"type":"text","text":" Donut and pie charts with the new "},{"type":"codeVoice","code":"SectorMark"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"codeListing","code":["import SwiftUI","import Charts","","struct DonutChart_Snippet: View {","    var sales = Bagel.salesData","","    var body: some View {","        Chart(sales, id: \\.name) { element in","            SectorMark(","                angle: .value(\"Sales\", element.sales),","                innerRadius: .ratio(0.6),","                angularInset: 1.5)","            .cornerRadius(5)","            .foregroundStyle(by: .value(\"Name\", element.name))","        }","    }","}"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-charts3","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"See more in the session:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10037","type":"reference","isActive":true}],"type":"paragraph"},{"anchor":"StoreKit","type":"heading","text":"StoreKit","level":3},{"inlineContent":[{"inlineContent":[{"type":"text","text":"NEW"}],"type":"strong"},{"type":"text","text":": Cross platform view, for presenting available subscriptions. The view can be customized."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ StoreKit","import SwiftUI ","import StoreKit","","SubscriptionStoreView(groupID: passGroupID) {","    PassMarketingContent()","        .lightMarketingContentStyle()","        .containerBackground(","            for: .subscriptionStoreFullHeight","            ) {","            SkyBackground()","            }","} ",".backgroundStyle(.clear)",".subscriptionStoreButtonLabel(.multiline)",".subscriptionStorePickerItemBackground(.thinMaterial)",".storeButton(.visible, for: .redeemCode)"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-storeKit","type":"image"}],"type":"paragraph"},{"type":"codeListing","code":["import SwiftUI","import StoreKit","","struct SubscriptionStore_Snippet {","    var body: some View {","        SubscriptionStoreView(groupID: passGroupID) {","            MyMarketingContent()","                .lightMarketingContentStyle()","                .containerBackground(for: .subscriptionStoreFullHeight) {","                    SkyBackground()","                }","        }","        .backgroundStyle(.clear)","        .subscriptionStoreButtonLabel(.multiline)","        .subscriptionStorePickerItemBackground(.thinMaterial)","        .storeButton(.visible, for: .redeemCode)","    }","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"See more in the session:"}],"type":"paragraph"},{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10013","type":"reference","isActive":true}],"type":"paragraph"},{"anchor":"Simplified-data-flow","type":"heading","text":"Simplified data flow","level":1},{"inlineContent":[{"identifier":"WWDC23-10148-Simplified-data-flow","type":"image"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"@Observable","type":"codeVoice"},{"text":" macro","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"familiar patterns while keeping code precise and performant","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"simply add ","type":"text"},{"code":"@Observable","type":"codeVoice"},{"text":" to a class","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"no need for "},{"type":"codeVoice","code":"@State"},{"type":"text","text":" or similar things in the view"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"only read values trigger view updates","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"get rid of ","type":"text"},{"code":"@","type":"codeVoice"},{"text":"ObservableObject, ","type":"text"},{"code":"@StateObject","type":"codeVoice"},{"text":" and others, only ","type":"text"},{"code":"@State","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"@Environment","type":"codeVoice"},{"text":" are left","type":"text"}],"type":"paragraph"}]}]}]}]},{"type":"codeListing","code":["\/\/ Observable model","import Foundation","","@Observable","class Dog: Identifiable {","    var id = UUID()","    var name = \"\"","    var age = 1","    var breed = DogBreed.mutt","    var owner: Person?","}"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"@Observable"},{"type":"text","text":" macro"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"And this view is reading the isFavorite property, so when that changes, it will get reevaluated. Invalidation only happens for properties which are read, so you can pass your model through intermediate views without triggering any unnecessary updates.","type":"text"}]}]}]}]}]},{"type":"codeListing","code":["struct DogCard: View {","    var dog: Dog","    ","    var body: some View {","        DogImage(dog: dog)","        .overlay(alignment: bottom) {","            HStack {","                Text(dog.name)","                Spacer()","                Image(systemName: \"heart\")","                    .symbolVariant(","                        dog.isFavorite ? .fill : .none)","            } ","            .background(.thinMaterial)","        }","    }","}"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-observable","type":"image"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"@State"},{"type":"text","text":" can be passed into the environment"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"can then be read either via the type (e.g. "},{"type":"codeVoice","code":"User.self"},{"type":"text","text":") or with a custom key"}]}]}]}]}]},{"inlineContent":[{"text":"SwiftUI includes several tools for defining your state and its relationship to your views, several of which are designed for use with ObservableObject:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"@State"}]}]},{"content":[{"inlineContent":[{"text":"@StateObject","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"@ObservedObject","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"@Environment","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"@EnvironmentObject"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"When using Observable, this is becomes even simpler since it’s designed to work directly with the State and Environment dynamic properties:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"@State"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"@Environment"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Observables are also a natural fit to represent mutable state, like on this form for a new dog sighting. The model is defined using the State dynamic property, and I’m passing bindings to its properties to the form elements responsible for editing that property."}],"type":"paragraph"},{"type":"codeListing","code":["@State private var model = DogDetails ()","    ","    Form {","        Section {","            TextField( \"Name\"', text: $model.dogName)","            DogBreedPicker(selection: $model.dogBreed)","        }","        Section {","            StarRating(selection: $model.rating)","            TextField(\"Location\", text: $model.location)","        }","        Section {","            PhotosPicker(","                \"Add photo...\", selection: $model.photo, ","                matching: .images)","                }","        }","    }"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-state"}],"type":"paragraph"},{"inlineContent":[{"text":"Lastly, Observable types integrate seamlessly into the environment.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["@main","struct WhatsNew2023: App {","    @State private var currentUser: User?","    ","    var body: some Scene {","        WindowGroup {","            ContentView()","                .environment(currentUser)","            }","        }","}","","@Observable final class User { ... }"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Since views throughout our app want a way to fetch the current user, I’ve added it to the environment of my root view. The user profile view then reads the value using the Environment dynamic property. I’m using the type as the environment key here, but custom keys are also supported."}],"type":"paragraph"},{"type":"codeListing","code":["struct ProfileView: View {","    @Environment (User.self) private var currentUser: User?","    ","    var body: some View {","        if let currentUser {","            UserDetails(user: currentUser)","        } else {","            LoginScreen ()","        }","    }","}"],"syntax":"swift"},{"inlineContent":[{"text":"Be sure to watch:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10149","type":"reference"}],"type":"paragraph"},{"anchor":"SwiftData","type":"heading","text":"SwiftData","level":3},{"anchor":"Model-instead-of-Observable-but-gets-its-features","type":"heading","text":"`@Model` instead of `@Observable` (but gets its features)","level":4},{"inlineContent":[{"text":"To set up my Dog model type for SwiftData, I’ll switch from using Observable to the Model macro. This is the only change I need to make. In addition to the persistence provided by SwiftData, models also receive all the benefits of using Observable.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ SwiftData model","import Foundation ","import SwiftData","","@Model","class Dog {","    var name = \"\"","    var age = 1","    var breed = DogBreed.mutt","    var owner: Person?","}"],"syntax":"swift"},{"anchor":"the-changes-needed-to-use-SwiftData","type":"heading","text":"the changes needed to use SwiftData","level":4},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"add a modifier for ","type":"text"},{"code":".modelContainer","type":"codeVoice"},{"text":" with the definition of the model type (","type":"text"},{"code":".modelContainer(for: Dog.self)","type":"codeVoice"},{"text":") added to the ","type":"text"},{"code":"WindowGroup","type":"codeVoice"},{"text":" of the app","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"inside of the view, switch "},{"code":"@State","type":"codeVoice"},{"type":"text","text":" to "},{"code":"@Query","type":"codeVoice"},{"type":"text","text":" which allows e.g. sorting ("},{"code":"@Query(sort: \\.dateSpotted)","type":"codeVoice"},{"type":"text","text":") and efficient data loading even for large datasets"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"also stores document data","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"type":"codeListing","code":["import SwiftUI ","import SwiftData","","@main","struct WhatsNew2023: App {","    var body: some Scene {","        WindowGroup {","            ContentView()","        }","        modelContainer (for: Dog.self)","    }","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Then in my view code, I’ll switch my array of dogs to use the new Query dynamic property instead of @State. Using Query will tell SwiftData to fetch the model values from the underlying database."}],"type":"paragraph"},{"type":"codeListing","code":["import SwiftUI","import SwiftData","","struct RecentDogs: View {","    @Query private var dogs: [Dog] = ...","    ","    var body: some View {","        ScrollView {","            LazyVStack {","                ForEach(dogs) { dog in","                    DogCard (dog: dog)","                }","            }","        }","    }","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Query is incredibly efficient for large data sets and allows for customization in how the data is returned, such as changing the sort order to use the date I spotted the dog:"}],"type":"paragraph"},{"type":"codeListing","code":["struct RecentDogs: View {","    @Query(sort: \\.dateSpotted) private var dogs: [Dog]","    ","    var body: some View {","        ScrollView {","            LazyVStack {","                ForEach(dogs) { dog in","                    DogCard (dog: dog)","                }","            }","        }","    }","}"],"syntax":"swift"},{"anchor":"DocumentContainer","type":"heading","text":"DocumentContainer","level":4},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"DocumentContainer gets updates"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"SwiftData"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Sharing options","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Undo\/Redo support"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Inspector (presenting differently on the respective layouts)","type":"text"}]}]}]}]}]},{"type":"codeListing","code":["\/\/ DocumentGroup with SwiftData model","import SwiftUI ","import SwiftData","","@main","struct WhatsNew2023: App {","    var body: some Scene {","        DocumentGroup(editing: DogTag.self, contentType: •dogTag) {","            ContentView()","        }","    }","}","","extension UTType {","    static var dogTag: UTType {","        ...","    }","}"],"syntax":"swift"},{"inlineContent":[{"text":"Please see:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10187","type":"reference"}],"type":"paragraph"},{"inlineContent":[{"text":"and","type":"text"}],"type":"paragraph"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10154"}],"type":"paragraph"},{"anchor":"DocumentGroup","type":"heading","text":"DocumentGroup","level":3},{"inlineContent":[{"text":"DocumentGroup also gains a number of new platform affordances when running on iOS 17 or iPadOS 17, such as automatic sharing and document renaming support, as well as undo controls in the toolbar.","type":"text"}],"type":"paragraph"},{"anchor":"Inspector","type":"heading","text":"Inspector","level":3},{"inlineContent":[{"text":"Inspector is a new modifier for displaying details about the current selection or context. It’s presented as a distinct section in your interface. On macOS, Inspector presents as a trailing sidebar. as well as on iPadOS in a regular size class. In compact size classes, it will present itself as a sheet.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Inspector","struct ContentView: View {","    @State private var inspectorPresented = true","","    var body: some View {","        DogTagEditor()","            .inspector(isPresented: $inspectorPresented) {","            DogTagInspector()","        }","    }","}"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-inspector"}],"type":"paragraph"},{"inlineContent":[{"identifier":"WWDC23-10148-inspector3","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-inspector4"}],"type":"paragraph"},{"inlineContent":[{"text":"To uncover all the details on Inspector, watch:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10161"}],"type":"paragraph"},{"anchor":"Dialogs","type":"heading","text":"Dialogs","level":3},{"inlineContent":[{"text":"New modifiers to give my image export dialog some useful information, like adjusting the confirmation button’s label.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["ContentView()","    .fileExporter(isPresented: $isExporterPresented, ","        item: selectedItem, ","        contentType: .png, ","        defaultFilename: selectedItem?.name)","{","    handleDataExport($0)","}",".fileExporterFilenameLabel(\"Export Image\")",".fileDialogConfirmationLabel(\"Export Image\")"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-dialog","type":"image"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Dialogs get new powers","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"e.g. severity, suppression toggle"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"HelpLinks"}]}]}],"type":"unorderedList"}]}]},{"type":"codeListing","code":["\/\/ Dialog customizations","","DogTagEditor()","    .confirmationDialog(","        \"Are you sure you want to delete the selected dog tag?\", ","        isPresented: $showDeleteDialog)","{","Button(\"Delete dog tag\", role: .destructive) {","    deleteSelectedTag()","    }","    HelpLink {","     ..","    }","} ",".dialogSeverity(.critical)",".dialogSuppressionToggle(isSuppressed: $suppressed)"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-dialog2","type":"image"}],"type":"paragraph"},{"anchor":"Lists-and-tables","type":"heading","text":"Lists and tables","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lists and Tables"}]},{"items":[{"content":[{"inlineContent":[{"text":"customization of data toggling","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"programmatically expand sections"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"new stylings for tables"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"inlineContent":[{"text":"Lists and tables are a key part of most apps, and SwiftUI has brought some new features and APIs for fine-tuning them in iOS 17 and macOS Sonoma. Tables support customization of their column ordering and visibility. When coupled with the SceneStorage dynamic property, these preferences can be persisted across runs of your app. You provide the table with a value representing the customization state and give each column a unique stable identifier.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Table customization support","struct DogSightingsTable: View {","    @SceneStorage (\"TableConfiguration\")","    private var columnCustomization: TableColumnCustomization<DogSighting>","    ","    var body: some View {","        Table(dogSightings, selection: $selectedSighting,","            columnCustomization: $columnCustomization) {","            TableColumn (\"Dog Name\", value: \\.name)","                .customizationID(\"name\")","            TableColumn(\"Dog Breed\", value: \\.breed.name)","                .customizationID(\"breed\")","                ","            ...","            ","        }","    }","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Tables now also have all the power of OutlineGroup built in. This is great for large data sets that lend themselves to a hierarchical structure, like this one which groups some of my favorite dogs with their proud parents. Simply use the new DisclosureTableRow to represent rows that contain other rows, and build the rest of your table as you would normally."}],"type":"paragraph"},{"type":"codeListing","code":["Table (of: DogGenealogy.self) {","    TableColumn (\"Dog Name\", value: \\.name)","    TableColumn (\"Dog Breed\", value: \\.breed.name)","    TableColumn( \"Age (Dog Years)\") {","        Text ($0.age, format: .number)","    }","    TableColumn (\"Favorite Toy\", value: \\.favoriteToy)","} rows: {","    ForEach(dogs) { dog in","        DisclosureTableRow(dog) {","            ForEach(dog.children) { child in","                TableRow(child)","            }","        }","    }","}"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-tables"}],"type":"paragraph"},{"anchor":"Sections","type":"heading","text":"Sections","level":3},{"inlineContent":[{"text":"Sections within a list or table have gained support for programmatic expansion. I’ve used it here in my app’s sidebar to show the location section as collapsed initially, but while still allowing for expansion. The new initializer takes a binding to a value which reflects the current expansion state of the section.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Programmatic Section expansion","Section(\"Dog Breeds\", isExpanded: $isBreedSectionExpanded) {","    DogBreeds()","}","Section (\"Locations\", isExpanded: SisLocationSectionExpanded) {","    SightingLocations()","}"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-sections"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For smaller data sets, tables have also gained a few new styling affordances, such as how row backgrounds and column headers are displayed."}],"type":"paragraph"},{"type":"codeListing","code":["Table(dogSightings, selection: $selection) {","    TableColumn(\"Breed\" ) {","        Text(SO.name)","    }","    TableColumn(\"Sightings\") {","        Text($0.sightings, format: .number)","    }","    TableColumn(\"Rating\") {","        StarRating($0.rating)","    }","}",".alternatingRowBackgrounds(.disabled)",".tableColumnHeaders(.hidden)"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Custom controls like my star rating will also benefit from the new background prominence environment property. Using a less prominent foreground style when the background is prominent lets my custom control feel right at home in a list."}],"type":"paragraph"},{"type":"codeListing","code":["StarRating(sighting.rating)","    .foregroundStyle(.starRatingForeground)","","struct StarRatingForegroundStyle: ShapeStyle {","    func resolve(in environment: EnvironmentValues)","    -> some ShapeStyle","{","        if environment.backgroundProminence == .increased {","            return AnyShapeStyle(.secondary)","        } else {","            return AnyShapeStyle(.yellow)","        }","    }","}"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-section2","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"We’ve also made big improvements to the performance, particularly when dealing with large data sets. To learn more about this and the ways you can optimize your own SwiftUI views, check out:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10160","type":"reference","isActive":true}],"type":"paragraph"},{"anchor":"Extraordinary-new-animations-APIs","type":"heading","text":"Extraordinary new animations APIs","level":1},{"inlineContent":[{"identifier":"WWDC23-10148-Extraordinary-animations","type":"image"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Keyframe Animator API"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"animate multiple values in parallel"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"give the animator a value of animatable values","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"KeyframeAnimator"},{"type":"text","text":" defines a view, then a list of "},{"type":"codeVoice","code":"KeyframeTrack"},{"type":"text","text":"s with different keyframe animations."}],"type":"paragraph"}]}]}]}]},{"inlineContent":[{"type":"text","text":"Changes to the state trigger my animation. In the first closure, I build a view, modified by my animatable properties, like the vertical offset of my logo. In the second closure, I define how these properties change over time. For example, the first track defines the animation of my verticalTranslation property. I pull my logo down 30 points over the first quarter second using a spring animation. Then I make my Beagle leap and land using a cubic curve. Finally, I bring this dog home with a natural spring animation. I define additional tracks for my other animated properties."},{"type":"text","text":"\n"},{"type":"text","text":"All these tracks run in parallel to create this cool animation. To learn how to leverage keyframe animators in your apps, check out:"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"\u001b"},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10157"}],"type":"paragraph"},{"type":"codeListing","code":["KeyframeAnimator(","    initialValue: LogoAnimationValues(), trigger: runPlan",") { values in","    LogoField(color: color, isFocused: isFocused)","        .scaleEffect(values.scale)","        .rotationEffect(values.rotation, anchor: .bottom)","        .offset(y: values.verticalTranslation)","} keyframes: { _ in","\tKeyframeTrack(\\.verticalTranslation) {","\t\tSpringKeyframe(30, duration: 0.25, spring: .smooth)","\t\tCubicKeyframe(-120, duration: 0.3)","\t\tCubicKeyframe(-120, duration: 0.3)","\t\tSpringKeyframe(0, spring: .bouncy)","\t}","","\tKeyframeTrack(\\.scale) { ... }","\tKeyframeTrack(\\.rotation) { ... }"],"syntax":"swift"},{"anchor":"Phase-Animator","type":"heading","text":"Phase Animator","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"difference to keyframe: sequentially go through animation steps, while keyframe goes through multiple ones in parallel","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"start one animation when the previous one has finished","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"Ex. working on an Apple Watch app to record dog sightings. It’s pretty simple so far, just our happy icon and a button to register a sighting. I’d like to animate this icon when I tap the button. This is a good place for a phase animator. A phase animator is simpler than a keyframe animator. Instead of parallel tracks, it steps through a single sequence of phases. This lets me start one animation when the previous animation finishes. I give the animator a sequence of phases and tell it to run my animation whenever my sightingCount changes. Then in this first closure, I set the rotation and scale of my happy dog based on the current phase. The second closure tells SwiftUI how to animate into each phase."},{"type":"text","text":" "},{"type":"text","text":"They’re now the default animation for apps built on or after iOS 17 and aligned releases."},{"type":"text","text":"\n"},{"type":"text","text":"Haptic feedback is easy with the new sensory feedback API. To play haptic feedback, I just attach the sensoryFeedback modifier, specify what sort of feedback I want and when it should happen."}],"type":"paragraph"},{"type":"codeListing","code":["HappyDog()","    .phaseAnimator(","        SightingPhases.allCases, trigger: sightingCount","    ) { content, phase in","        content","            .rotationEffect(phase.rotation)","            .scaleEffect(phase.scale)","    } animation: { phase in","        switch phase {","        case .shrink: .snappy(duration: 0.1)","        case .spin: .bouncy","        case .grow: .spring(","            duration: 0.2, bounce: 0.1, blendDuration: 0.1)","        case .reset: .linear(duration: 0.0)","        }","    }","    .sensoryFeedback(.increase, trigger: sightingCount)"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-phaseAnimator","type":"image"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"define multiple phases and hand them to the ","type":"text"},{"code":".phaseAnimator","type":"codeVoice"},{"text":" modifier, together with a trigger that triggers the animation whenever a value changes","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"define the content and how the elements of the phases change it (e.g. rotation, scale)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"provide the types of animations for the different phases, e.g. ","type":"text"},{"type":"codeVoice","code":".snappy"},{"text":", ","type":"text"},{"type":"codeVoice","code":".bouncy"},{"text":", or new ","type":"text"},{"type":"codeVoice","code":"spring"},{"text":" options","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Haptic Feedback"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"code":".sensoryFeedback(.increase, trigger: sightingCount)","type":"codeVoice"}]}]}],"type":"unorderedList"}]}]},{"inlineContent":[{"type":"text","text":"Check out the Human Interface Guidelines to learn what sorts of feedback will be best in your apps:"}],"type":"paragraph"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/developer.apple.com\/design\/human-interface-guidelines\/playing-haptics","type":"reference"}],"type":"paragraph"},{"inlineContent":[{"text":"To learn about the fundamentals of animation in SwiftUI, check out:","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10156"}],"type":"paragraph"},{"inlineContent":[{"text":"and","type":"text"}],"type":"paragraph"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10158","type":"reference"}],"type":"paragraph"},{"anchor":"The-visual-effects-modifier","type":"heading","text":"The visual effects modifier","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"works with coordinate spaces"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"and geometry reader somehow","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"sure fun to play around with","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"The visual effects modifier lets me update these dog photos based on their position. And I don’t need a GeometryReader to do it. I’ve got a little simulation that moves a focal point around the screen. This red dot shows what I mean by focal point. I associate a coordinate space with this grid that shows all the dogs."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Coordinate spaces and visual effects","ScrollView {","\tLazyVGrid(columns: columns) {","\t\tForEach(dogs) { dog in","\t\t\tDogCircle(dog: dog, focalPoint: simulation.point)","\t\t}","\t}\t","}",".coordinateSpace(.dogGrid)"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Then inside my DogCircle view, I add a visual effect. The closure gets my content to modify and a geometry proxy. I’m passing the geometry proxy to a helper method to compute the scale."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Coordinate spaces and visual effects","struct DogCircle: View {","\tvar dog: Dog ","\tvar focalPoint: CGPoint","\t","\tvar body: some View {","\t\tDogImage (dog: dog)","\t\t\t.visualEffect { content, geometry in ","\t\t\t\tcontent","\t\t\t\t\t.scale(contentScale(in: geometry))","\t\t\t\t\t.grayscale(contentGrayscale(in: geometry))","\t\t\t\t\t.saturation(contentSaturation (in: geometry))","\t\t\t}","\t\t}","\t}","}"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-visualEffectsModifier"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"I can use the geometry proxy to get the size of my grid view and the frame of a single dog circle relative to my grid view. That lets me compute how far any dog is from the focal point of the simulation, so I can scale up the focused doggos. With visual effects, I can do all of this without using a GeometryReader. And it automatically adapts to different sizes."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Coordinate spaces and visual effects","func contentScale(in geometry: GeometryProxy) -> Double {","guard let gridSize = geometry.bounds (of: .dogGrid)?.size else { return 0 } ","let frame = geometry.frame(in: .dogGrid)","...","}"],"syntax":"swift"},{"anchor":"Style-Text","type":"heading","text":"Style Text","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Text can now be styles with a ","type":"text"},{"type":"codeVoice","code":"foregroundStyle"},{"text":" inside another Text","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Text(\"\\(Text(dog.name).foregroundStyle(stripes)) is a good dog\")"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It works with a Shader"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Can bring Metal shaders into SwiftUI with ShaderLibrary","type":"text"}]}]}]},{"inlineContent":[{"text":"I’m passing my stripeSpacing and angle, along with a color from my asset catalog, to a custom Metal shader.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["var stripes: Shader {","\tShaderLibrary.angledFill(","\t\t.float(stripeSpacing),","\t\t.float(stripleAngle),","\t\t.color(Color(.stripes))","\t)","}","","var stripes: Shader {","\tShaderLibrary.angledFill(","\t\t.float(stripeSpacing),",".\t\t.float(stripeAngle), ","\t\t.color(Color(.stripes))","\t)","}"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-textStyles","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Using SwiftUI’s new ShaderLibrary, I can turn Metal shader functions directly into SwiftUI shape styles, like this one that renders the stripes in Furdinand’s name."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Metal shaders","[[ stitchable ]] half4","angledFill(float2 position, float width, float angle, half4 color)","{","\tfloat pMagnitude = sqrt(position.x * position.x + position.y * position.y);","\tfloat pAngle = angle +","\t\t(position.x == 0.0f ? (M_PI_F \/ 2.0f) : atan(position.y \/ position.x));","\tfloat rotatedX = pMagnitude * cos(pAngle);","\tfloat rotatedY = pMagnitude * sin(pAngle);","\treturn (color + color * fmod(abs(rotatedX + rotatedY), width) \/ width) \/ 2;","}"],"syntax":"swift"},{"inlineContent":[{"text":"If you’d like to take Metal shaders out for a spin, just add a new Metal file to your project and call your shader function using ShaderLibrary in SwiftUI.","type":"text"}],"type":"paragraph"},{"anchor":"Symbol-effect-modifier","type":"heading","text":"Symbol effect modifier","level":3},{"inlineContent":[{"text":"Symbols get a ","type":"text"},{"code":".symbolEffect","type":"codeVoice"},{"text":" modifier with multiple options:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":".pulse"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".variableColor"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".scale"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":".appear\/disappear"}]}]},{"content":[{"inlineContent":[{"code":".replace","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"event notifications with "},{"type":"codeVoice","code":"bounce"}]}]},{"content":[{"inlineContent":[{"text":"new ","type":"text"},{"code":".textScale(.secondary)","type":"codeVoice"},{"text":" modifier automatically scaling","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["Image(systemName: \"..\").symbolEffect(...)"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-symbolEffectModifier","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Check also:"}],"type":"paragraph"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10258","type":"reference"}],"type":"paragraph"},{"anchor":"New-textScale-modifier","type":"heading","text":"New textScale modifier","level":3},{"inlineContent":[{"text":"I want to point out one last feature. Notice the units on the text here. In the past I might have used small caps for this effect, but now I can get this appearance by applying the new textScale modifier to my units.","type":"text"},{"text":"\n","type":"text"},{"text":"And, if Jeff and I bring our app to the Chinese market, the units will be sized correctly, even though the concept of small caps isn’t part of the typography in Chinese.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Text style","Text(\"\\(space) \\(Text(\"PX\").textScale(.secondary))\")","Text (\"\\(angle) \\(Text(\"RAD\").textScale(.secondary))\")"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-textScaleModifier"}],"type":"paragraph"},{"anchor":"The-typesettingLanguage-modifier","type":"heading","text":"The typesettingLanguage modifier","level":3},{"inlineContent":[{"text":"We have another tool to help apps work great in multiple locales. Some languages, like Thai, use taller letter forms. When text from one of these languages is embedded in text localized in a language with shorter letter forms, like English, the taller text can be crowded or clipped. When we know that this might be an issue – for example, if our dog names were globally crowd-sourced – we can apply the typesettingLanguage modifier. This lets SwiftUI know that the text might need more space.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Typesetting language","struct Dog {","\tvar name: String ","\tvar language: Locale.Language","...","}","","var dog = Dog(","\tname: \"lala\", ","\tlanguage: .init(languageCode: .thai))","","Text(","\t\"\"\"","\tWho's a good dog, \\","\t\\(Text(dog.name).typesettingLanguage(dog.language))?","\t\"\"\")"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-typesettingLanguage"}],"type":"paragraph"},{"anchor":"Enhanced-interactions","type":"heading","text":"Enhanced interactions","level":1},{"inlineContent":[{"identifier":"WWDC23-10148-Enhanced-interactions","type":"image"}],"type":"paragraph"},{"anchor":"Scroll-Transition-Effect","type":"heading","text":"Scroll Transition Effect","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"the ","type":"text"},{"code":".scrollTransition","type":"codeVoice"},{"text":" modifier can be applied to elements inside of the ScrollView","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"gets a ","type":"text"},{"code":"content","type":"codeVoice"},{"text":" and a ","type":"text"},{"code":"phase","type":"codeVoice"},{"text":", let’s  apply effects to the ","type":"text"},{"code":"content","type":"codeVoice"},{"text":" with the help of the ","type":"text"},{"code":"phase","type":"codeVoice"},{"text":" properties, e.g. the ","type":"text"},{"code":".isIdentity","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"code":".containerRelativeFrame","type":"codeVoice"},{"type":"text","text":" allows to split the view into parts of the frame ("},{"code":"count","type":"codeVoice"},{"type":"text","text":" ) and define how much each element should span ("},{"code":"span","type":"codeVoice"},{"type":"text","text":")"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"can use a "},{"type":"codeVoice","code":".safeAreaInset"},{"type":"text","text":" modifier with an edge to position this"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".scrollTargetLayout"},{"type":"text","text":" can be aded to the "},{"type":"codeVoice","code":"LazyHStack"},{"type":"text","text":" and then the "},{"type":"codeVoice","code":"ScrollView"},{"type":"text","text":" can get a "},{"type":"codeVoice","code":"scrollTargetBehavior(.viewAligned)"},{"type":"text","text":" modifier"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"paging behavior also possible, or something custom using the ","type":"text"},{"code":"ScrollTargetBehavior","type":"codeVoice"},{"text":" protocol","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".scrollPosition"},{"type":"text","text":" shows the top most item"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"I’d like to add some visual effects to my dog cards as they transition in and out of the visible area of my scroll view. The scroll transition modifier is very similar to the visual effect modifier Curt used earlier for the welcome screen. It lets you apply effects to items in your scroll view."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Scroll transition effects","ScrollView {","\tLazyVStack {","\t\tForEach(dogs) { dog in","\t\t\tDogCard (dog: dog)","\t\t\t\t.scrollTransition { content, phase in","\t\t\tcontent","\t\t\t\t.scaleEffect(phase.isIdentity ? 1 : 0.6) ","\t\t\t\t.opacity (phase.isIdentity ? 1: 0)","\t\t\t}","\t\t}","\t}","}",".safeAreaPadding(.horizontal, 16.0)"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-scrollTransitionEffect","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"I’d also like to add a side-scrolling list of my favorite dog parks to this screen. Above my vertical stack of dogs, I’ll drop in a horizontal stack for the park cards. I’m using the new containerRelativeFrame modifier to size these park cards relative to the visible size of the horizontal scroll view. The count specifies how many chunks to divide the screen into. The span says how many of those chunks each view should take.This is pretty great, but I’d like my park cards to snap into place. The new scrollTargetLayout modifier makes that easy. I’ll add it to the LazyHStack and modify the scroll view to align to views in the targeted layout.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ ScrollView layout enhancements","ScrollView {","\t...","}",".safeAreaInset(edge: .top) {","\tScrollView(.horizontal) {","\t\tLazyHStack {","\t\t\tForEach(parks) { park in","\t\t\t\tParkCard(park: park)","\t\t\t\t\t.containerRelativeFrame(","\t\t\t\t\t.horizontal, count: 5, span: 2, spacing: 8)","\t\t\t}","\t\t}","\t\t.scrollTargetLayout ()","\t} ","\t.scrollTargetBehavior(.viewAligned)","}\t"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-scrollTransitionEffect2","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"Scroll views can also be defined to use a paging behavior. And you can define your own behavior using the scrollTargetBehavior protocol. The new scrollPosition modifier takes a binding to the topmost item’s ID, and it’s updated as I scroll.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Scroll position","ScrollView {","\t...","}","safeAreaInset(edge: .top) {","\t...","}",".scrollPosition(id: $scrolledID)",""],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-scrollTransitionEffect3"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To learn more about all these and the other great improvements to Scroll View, be sure to watch:"}],"type":"paragraph"},{"inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10159","isActive":true}],"type":"paragraph"},{"anchor":"HDR-images","type":"heading","text":"HDR images","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Images support HDR with ","type":"text"},{"type":"codeVoice","code":".allowDynamicRange(.high)"},{"text":" - use sparingly","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"Image now supports rendering content with high dynamic range. By applying the allowedDynamicRange modifier, the beautiful images in our app’s gallery screen can be shown with their full fidelity. It’s best to use this sparingly, though, and usually when the image stands alone."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ HDR images","struct GalleryDetail: View {","\tvar dog: Dog","\t","\tvar body: some View {","\t\tVStack {","\t\t\tCloseButton ()","\t\t\tSpacer ()","\t\t\t","\t\t\tAsyncImage (url: dog.photoURL)","\t\t","\t\t\tSpacer()","\t\t\tImageActions()","\t\t}","\t}\t","}\t\t"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-HDRImages"}],"type":"paragraph"},{"anchor":"new-accessibility-APIs","type":"heading","text":"new accessibility APIs","level":3},{"inlineContent":[{"type":"text","text":"I’m also going to add the new accessibilityZoomAction modifier to my view. This allows assistive technologies like VoiceOver to access the same functionality without using the gesture. I’ll just update the zoom level depending on the action’s direction, and I can see what mischief she’s been up to now. VoiceOver: Zooming image view. Image."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Accessibility zoom","DogImage(dog: dog)","\t.scaleEffect (zoomLevel)","\t.gesture (magnification)","\t.accessibilityZoomAction { action in","\t\tswitch action.direction {","\t\tcase .ZoomIn:","\t\t\tzoomLevel += 0.5 ","\t\tcase .zoomOut:","\t\t\tzoomLevel -= 0.5","\t}","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"For more, be sure to check out:"}],"type":"paragraph"},{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10036","type":"reference","isActive":true}],"type":"paragraph"},{"anchor":"Static-member-syntax-for-custom-colors","type":"heading","text":"Static member syntax for custom colors","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"use static imports of colors defined in the asset catalog with ","type":"text"},{"code":"Color(.tennisBallYellow)","type":"codeVoice"}]}]}]},{"inlineContent":[{"type":"text","text":"Color now supports using static member syntax to look up custom colors defined in your app’s asset catalog. This gives compile-time safety when using them, so you’ll never lose time to a typo. For the document app I showed earlier, I’ve added a menu containing several useful actions to the toolbar. The top section of the menu is a ControlGroup with the new compactMenu style, which shows its items as icons in a horizontal stack. The tag color selector is defined as a picker with the new palette style. Using this style in concert with symbol images gives a great visual representation in menus, especially one like this where I can use the label’s tint to differentiate them."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Static member syntax for custom colors","Picker(\"Tag Color\", selection: $selection) {","\tLabel (\"Tennis Ball Yellow\")","\t\t.tint (Color(.tennisBallYellow))","\t\t.tag(.yellow)","\tLabel(\"Rawhide Brown\")","\t\t.tint(Color(.rawhideBrown))","\t\t.tag (.brown)","\t\t","\t\t...","}"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-staticColors"}],"type":"paragraph"},{"inlineContent":[{"text":"Lastly, the paletteSelectionEffect modifier lets me use a symbol variant to represent the selected item in the picker. With my menu in place, Buddy’s dog tag can now be his favorite color, tennis-ball yellow.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["Picker(\"Tag Color\", selection: $selectedTagColor) {","\tForEach(tagColors) { tagColor in","\t\tLabel(tagColor.title, systemImage: \"tag\")","\t\t\t.tint(tagColor.color)","\t\t\t.tag(tagColor)","\t}","} ",".pickerStyle(.palette)",".paletteSelectionEffect(.symbolVariant(.fill))"],"syntax":"swift"},{"inlineContent":[{"identifier":"WWDC23-10148-staticColors2","type":"image"}],"type":"paragraph"},{"anchor":"The-new-compactMenu-style","type":"heading","text":"The new compactMenu style","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Control group with new compactMenu style (","type":"text"},{"type":"codeVoice","code":".controlGroupStyle(.compactMenu)"},{"text":")","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Pickerstyle with a ","type":"text"},{"code":".pickerStyle(.palette)","type":"codeVoice"},{"text":" and the ","type":"text"},{"code":".paletteSelectionEffect(.symbolVariant(.fill))","type":"codeVoice"}]}]}]},{"inlineContent":[{"text":"The top section of the menu is a ControlGroup with the new compactMenu style, which shows its items as icons in a horizontal stack. The tag color selector is defined as a picker with the new palette style. Using this style in concert with symbol images gives a great visual representation in menus, especially one like this where I can use the label’s tint to differentiate them. Lastly, the paletteSelectionEffect modifier lets me use a symbol variant to represent the selected item in the picker.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["ControlGroup {","\tButton {","\t\tcutSelection()","\t} label: {","\t\tLabel(\"Cut\", systemImage: \"scissors\")","\t}","\tButton {","\t\tcopySelection ()","\t} label: {","\t\tLabel (\"Copy\", systemImage: \"doc.on.doc\")","\t}","}",".controlGroupStyle (.compactMenu)"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-controlGroupStyle"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The tag color selector is defined as a picker with the new palette style. Using this style in concert with symbol images gives a great visual representation in menus, especially one like this where I can use the label’s tint to differentiate them. Lastly, the paletteSelectionEffect modifier lets me use a symbol variant to represent the selected item in the picker."}],"type":"paragraph"},{"type":"codeListing","code":["Picker (\"Tag Color\", selection: $selectedTagColor) {","\tForEach(tagColors) { tagColor in","\t\tLabel(tagColor.title, systemImage: \"tag\")","\t\t\t.tint(tagColor.color)","\t\t\t.tag (tagColor)","\t}\t","} ",".pickerStyle(.palette)",".paletteSelectionEffect(.symbolVariant(.fill))"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-controlGroupStyle2"}],"type":"paragraph"},{"anchor":"Bordered-buttons","type":"heading","text":"Bordered buttons","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"New Button styles (coming after "},{"code":".buttonStyle(.bordered)","type":"codeVoice"},{"type":"text","text":")"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":".buttonBorderShape(.roundedRectangle)","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"buttonBorderShape(.circle)"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Buttons can support drag actions \/ force-clicking (macOS) with the "},{"type":"codeVoice","code":".springLoadingBehavior(.enabled)"},{"type":"text","text":" modifier"}],"type":"paragraph"}]}]},{"inlineContent":[{"identifier":"WWDC23-10148-borderedButtons","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Bordered buttons can now be defined with new built-in shapes, such as circle and rounded rectangle. These new border shape styles work on iOS, watchOS, and macOS."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Bordered button shapes","Button {","\ttoggleGuides()","} label: {","\tLabel(\"Toggle Guides\", systemImage: \"ruler\")","}",".buttonStyle(.bordered)",".buttonBorderShape(. roundedRectangle)","","...","","Button {","\tshowPopover.toggle()","} label: {","\tLabel(\"Add\", systemImage: \"plus\")","}",".buttonStyle(.bordered)",".buttonBorderShape (.circle)"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Buttons on macOS and iOS can now react to drag actions, like this button in my editor that opens a popover."},{"type":"text","text":" "},{"type":"text","text":"The new springLoadingBehavior modifier indicates that a button should trigger its action when a drag pauses over it, or when force-clicking it on macOS."}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Button spring-loading behavior","","Button {","\tshowPopover = true","} label: {","\tLabel(\"Add\", systemImage: \"plus\")",".buttonStyle(.bordered)",".buttonBorderShape(.circle)",".springLoadingBehavior(.enabled)"],"syntax":"swift"},{"inlineContent":[{"type":"image","identifier":"WWDC23-10148-borderedButtons2"}],"type":"paragraph"},{"anchor":"New-highlight-hover-effect-tvOS","type":"heading","text":"New highlight hover effect (tvOS)","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"New ","type":"text"},{"type":"codeVoice","code":".hoverEffect(.highlight)"},{"text":" (only available for tvOS?)","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["\/\/ Highlight hover effect","","struct DogGalleryCard: View {","\t@FocusState private var isFocused: Bool ","\tvar dog: Dog","\t\t","\tvar body: some View {","\t\tButton {","\t\t\topenDogDetail(dog)","\t\t} label: {","\t\t\tDogGalleryImage(dog: dog)","\t\t\t\t.hoverEffect(.highlight)","\t\t\tText(dog.name)","\t\t\t\t.opacity(isFocused ? 1 : 0)","\t\t} ","\t\t.buttonStyle(.borderless)","\t\t.focused (SisFocused)","\t}","}"],"syntax":"swift"},{"anchor":"Handling-Key-Presses","type":"heading","text":"Handling Key Presses","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":".onKeyPress"},{"type":"text","text":" to allow for reaction to any keyboard input"},{"type":"text","text":" "},{"type":"text","text":"Focusable views on platforms with hardware keyboard support can use the onKeyPress modifier to directly react to any keyboard input. The modifier takes a set of keys to match against and an action to perform for the event."}],"type":"paragraph"}]}]},{"type":"codeListing","code":["\/\/ Handling key presses","DogTagEditor()","\t.focusable (true, interactions: •edit)","\t.focusEffectDisabled ()","\t.onKeyPress (characters: letters, phases: .down) { press in","\t\t...","}"],"syntax":"swift"},{"inlineContent":[{"text":"To get your fill of focus-related recipes, be sure to watch","type":"text"}],"type":"paragraph"},{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10162","type":"reference","isActive":true}],"type":"paragraph"},{"anchor":"Wrap-up","type":"heading","text":"Wrap up","level":1},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"SwiftUl in more places","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Simplified data flow"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Extraordinary animations"}]}]},{"content":[{"inlineContent":[{"text":"Enhanced interactions","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Resources","type":"heading","text":"Resources","level":2},{"inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/forums\/create\/question?tag1=755030&tag2=239","isActive":true},{"text":"","type":"text"},{"text":"\n","type":"text"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/forums\/tags\/wwdc2023-10148","isActive":true},{"text":"","type":"text"},{"text":"\n","type":"text"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/design\/Human-Interface-Guidelines\/playing-haptics","isActive":true}],"type":"paragraph"},{"anchor":"Related-Videos","type":"heading","text":"Related Videos","level":1},{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10258","type":"reference","overridingTitle":"Animate symbols in your app - WWDC23","isActive":true,"overridingTitleInlineContent":[{"text":"Animate symbols in your app - WWDC23","type":"text"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10158","type":"reference","overridingTitle":"Animate with springs - WWDC23","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Animate with springs - WWDC23"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10159","type":"reference","overridingTitle":"Beyond scroll views - WWDC23","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Beyond scroll views - WWDC23"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10027","type":"reference","overridingTitle":"Bring widgets to new places - WWDC23","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Bring widgets to new places - WWDC23"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10028\/","type":"reference","overridingTitle":"Bring widgets to life - WWDC23","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Bring widgets to life - WWDC23"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10036","type":"reference","overridingTitle":"Build accessible apps with SwiftUI and UIKit - WWDC23","isActive":true,"overridingTitleInlineContent":[{"text":"Build accessible apps with SwiftUI and UIKit - WWDC23","type":"text"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10154","type":"reference","overridingTitle":"Build an app with SwiftData - WWDC23","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Build an app with SwiftData - WWDC23"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10252","type":"reference","overridingTitle":"Build programmatic UI with Xcode Previews - WWDC23","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Build programmatic UI with Xcode Previews - WWDC23"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10138","type":"reference","overridingTitle":"Design and build apps for watchOS 10 - WWDC23","isActive":true,"overridingTitleInlineContent":[{"text":"Design and build apps for watchOS 10 - WWDC23","type":"text"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10160","type":"reference","overridingTitle":"Demystify SwiftUI performance - WWDC23","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Demystify SwiftUI performance - WWDC23"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10149","type":"reference","overridingTitle":"Discover Observation in SwiftUI - WWDC23","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Discover Observation in SwiftUI - WWDC23"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10037","type":"reference","overridingTitle":"Explore pie charts and interactivity in Swift Charts - WWDC23","isActive":true,"overridingTitleInlineContent":[{"text":"Explore pie charts and interactivity in Swift Charts - WWDC23","type":"text"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10156","type":"reference","overridingTitle":"Explore SwiftUI animation - WWDC23","isActive":true,"overridingTitleInlineContent":[{"text":"Explore SwiftUI animation - WWDC23","type":"text"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10161","type":"reference","overridingTitle":"Inspectors in SwiftUI: Discover the details - WWDC23","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Inspectors in SwiftUI: Discover the details - WWDC23"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10043","type":"reference","overridingTitle":"Meet MapKit for SwiftUI - WWDC23","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Meet MapKit for SwiftUI - WWDC23"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10013","type":"reference","overridingTitle":"Meet StoreKit for SwiftUI - WWDC23","isActive":true,"overridingTitleInlineContent":[{"text":"Meet StoreKit for SwiftUI - WWDC23","type":"text"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10187","type":"reference","overridingTitle":"Meet SwiftData - WWDC23","isActive":true,"overridingTitleInlineContent":[{"text":"Meet SwiftData - WWDC23","type":"text"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10109","type":"reference","overridingTitle":"Meet SwiftUI for spatial computing - WWDC23","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Meet SwiftUI for spatial computing - WWDC23"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10162","type":"reference","overridingTitle":"The SwiftUI cookbook for focus - WWDC23","isActive":true,"overridingTitleInlineContent":[{"text":"The SwiftUI cookbook for focus - WWDC23","type":"text"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10164","type":"reference","overridingTitle":"What’s new in Swift - WWDC23","isActive":true,"overridingTitleInlineContent":[{"text":"What’s new in Swift - WWDC23","type":"text"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10157","type":"reference","overridingTitle":"Wind your way through advanced animations in SwiftUI - WWDC23","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Wind your way through advanced animations in SwiftUI - WWDC23"}]},{"type":"text","text":""},{"type":"text","text":"\n"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10031","type":"reference","overridingTitle":"Update your app for watchOS 10","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Update your app for watchOS 10"}]}],"type":"paragraph"},{"anchor":"Written-By","type":"heading","text":"Written By","level":2},{"type":"row","columns":[{"content":[{"inlineContent":[{"type":"image","identifier":"DaemonLoki"}],"type":"paragraph"}],"size":1},{"content":[{"text":"Stefan Blos","type":"heading","anchor":"Stefan-Blos","level":3},{"type":"paragraph","inlineContent":[{"overridingTitle":"Contributed Notes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/DaemonLoki","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/DaemonLoki","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/x.com\/stefanjblos","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/stefanblos.com","isActive":true,"type":"reference"}]}],"size":4}],"numberOfColumns":5},{"type":"row","columns":[{"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"MortenGregersen"}]}],"size":1},{"content":[{"text":"Morten Bjerg Gregersen","type":"heading","level":3,"anchor":"Morten-Bjerg-Gregersen"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/MortenGregersen","overridingTitle":"Contributed Notes","isActive":true,"type":"reference","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}]},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/MortenGregersen","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"http:\/\/atterdagapps.com","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/x.com\/mortengregersen","isActive":true,"type":"reference"}]}],"size":4}],"numberOfColumns":5},{"type":"row","columns":[{"size":1,"content":[{"inlineContent":[{"type":"image","identifier":"multitudes"}],"type":"paragraph"}]},{"size":4,"content":[{"level":3,"type":"heading","text":"laurent b","anchor":"laurent-b"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/multitudes","type":"reference","overridingTitle":"Contributed Notes","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}]},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/github.com\/multitudes","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/x.com\/wrmultitudes","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/laurentbrusa.hashnode.dev\/","type":"reference","isActive":true}]}]}],"numberOfColumns":5},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}],"type":"paragraph"},{"anchor":"Related-Sessions","type":"heading","text":"Related Sessions","level":2},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10013-Meet-StoreKit-for-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10036-Build-accessible-apps-with-SwiftUI-and-UIKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10037-Explore-pie-charts-and-interactivity-in-Swift-Charts","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10043-Meet-MapKit-for-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10109-Meet-SwiftUI-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10138-Design-and-build-apps-for-watchOS-10","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10149-Discover-Observation-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10154-Build-an-app-with-SwiftData","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10156-Explore-SwiftUI-animation","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10157-Wind-your-way-through-advanced-animations-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10158-Animate-with-springs","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10159-Beyond-scroll-views","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10161-Inspectors-in-SwiftUI-Discover-the-details","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10162-The-SwiftUI-cookbook-for-focus","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10164-Whats-new-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10187-Meet-SwiftData","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10252-Build-programmatic-UI-with-Xcode-Previews","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10258-Animate-symbols-in-your-app"],"style":"list"},{"inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}],"kind":"content"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sampleCodeDownload":{"action":{"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc23\/10148","overridingTitle":"Watch Video (34 min)","isActive":true},"kind":"sampleDownload"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23"]]},"references":{"WWDC23-10148-NavigationSplitViews":{"identifier":"WWDC23-10148-NavigationSplitViews","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-NavigationSplitViews.jpg"}],"alt":"NavigationSplitViews","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10036-Build-accessible-apps-with-SwiftUI-and-UIKit":{"abstract":[{"type":"text","text":"Discover how advancements in UI frameworks make it easier to build rich, accessible experiences. Find out how technologies like VoiceOver can better interact with your app’s interface through accessibility traits and actions. We’ll share the latest updates to SwiftUI that help you refine your accessibility experience and show you how to keep accessibility information up-to-date in your UIKit apps."}],"url":"\/documentation\/wwdcnotes\/wwdc23-10036-build-accessible-apps-with-swiftui-and-uikit","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10036-Build-accessible-apps-with-SwiftUI-and-UIKit","role":"sampleCode","title":"Build accessible apps with SwiftUI and UIKit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10138-Design-and-build-apps-for-watchOS-10":{"kind":"article","abstract":[{"text":"Dive into the details of watchOS design principles and learn how to apply them in your app using SwiftUI. We’ll show you how to build an app for the redesigned user interface to surface timely information, communicate focused content at a glance, and make navigation consistent and predictable.","type":"text"}],"role":"sampleCode","title":"Design and build apps for watchOS 10","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10138-Design-and-build-apps-for-watchOS-10","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23-10138-design-and-build-apps-for-watchos-10"},"https://developer.apple.com/videos/play/wwdc2023/10156":{"title":"Explore SwiftUI animation - WWDC23","titleInlineContent":[{"text":"Explore SwiftUI animation - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10156","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10156"},"https://developer.apple.com/videos/play/wwdc2023/10149":{"title":"Discover Observation in SwiftUI - WWDC23","titleInlineContent":[{"text":"Discover Observation in SwiftUI - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10149","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10149"},"http://atterdagapps.com":{"title":"Blog","titleInlineContent":[{"text":"Blog","type":"text"}],"identifier":"http:\/\/atterdagapps.com","type":"link","url":"http:\/\/atterdagapps.com"},"https://developer.apple.com/design/Human-Interface-Guidelines/playing-haptics":{"title":"Playing haptics","titleInlineContent":[{"text":"Playing haptics","type":"text"}],"identifier":"https:\/\/developer.apple.com\/design\/Human-Interface-Guidelines\/playing-haptics","type":"link","url":"https:\/\/developer.apple.com\/design\/Human-Interface-Guidelines\/playing-haptics"},"https://github.com/multitudes":{"title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}],"identifier":"https:\/\/github.com\/multitudes","type":"link","url":"https:\/\/github.com\/multitudes"},"WWDC23-10148-borderedButtons":{"identifier":"WWDC23-10148-borderedButtons","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-borderedButtons.jpg"}],"alt":"Bordered buttons","type":"image"},"https://developer.apple.com/videos/play/wwdc2023/10148/?time=621":{"title":"10:21 - Simplified data flow","titleInlineContent":[{"text":"10:21 - Simplified data flow","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148\/?time=621","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148\/?time=621"},"https://developer.apple.com/videos/play/wwdc2023/10028/":{"title":"Bring widgets to life - WWDC23","titleInlineContent":[{"text":"Bring widgets to life - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10028\/","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10028\/"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10156-Explore-SwiftUI-animation":{"kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23-10156-explore-swiftui-animation","role":"sampleCode","title":"Explore SwiftUI animation","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10156-Explore-SwiftUI-animation","abstract":[{"type":"text","text":"Explore SwiftUI’s powerful animation capabilities and find out how these features work together to produce impressive visual effects. Learn how SwiftUI refreshes the rendering of a view, determines what to animate, interpolates values over time, and propagates context for the current transaction."}]},"WWDC23-10148-scrollTransitionEffect":{"identifier":"WWDC23-10148-scrollTransitionEffect","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-scrollTransitionEffect.jpg"}],"alt":"Scroll Transition Effect","type":"image"},"WWDC23-10148-inspector3":{"identifier":"WWDC23-10148-inspector3","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-inspector3.jpg"}],"alt":"inspector","type":"image"},"https://x.com/wrmultitudes":{"title":"X\/Twitter","titleInlineContent":[{"text":"X\/Twitter","type":"text"}],"identifier":"https:\/\/x.com\/wrmultitudes","type":"link","url":"https:\/\/x.com\/wrmultitudes"},"multitudes":{"identifier":"multitudes","variants":[{"traits":["1x","light"],"url":"\/images\/multitudes.jpeg"}],"alt":"Profile image of laurent b","type":"image"},"WWDC23-10148-charts2":{"identifier":"WWDC23-10148-charts2","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-charts2.jpg"}],"alt":"charts","type":"image"},"https://developer.apple.com/videos/play/wwdc2023/10161":{"title":"Inspectors in SwiftUI: Discover the details - WWDC23","titleInlineContent":[{"text":"Inspectors in SwiftUI: Discover the details - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10161","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10161"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10161-Inspectors-in-SwiftUI-Discover-the-details":{"kind":"article","abstract":[{"text":"Meet Inspectors — a structural API that can help bring a new level of detail to your apps. We’ll take you through the fundamentals of the API and show you how to adopt it. Learn about the latest updates to sheet presentation customizations and find out how you can combine the two to create perfect presentation experiences.","type":"text"}],"role":"sampleCode","title":"Inspectors in SwiftUI: Discover the details","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10161-Inspectors-in-SwiftUI-Discover-the-details","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23-10161-inspectors-in-swiftui-discover-the-details"},"WWDC23-10148-typesettingLanguage":{"identifier":"WWDC23-10148-typesettingLanguage","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-typesettingLanguage.jpg"}],"alt":"New typesettingLanguage modifier","type":"image"},"WWDC23-10148-staticColors":{"identifier":"WWDC23-10148-staticColors","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-staticColors.jpg"}],"alt":"Static Colors","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/multitudes":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/multitudes","title":"laurent b (33 notes)","images":[{"type":"card","identifier":"multitudes.jpeg"},{"type":"icon","identifier":"multitudes.jpeg"}],"kind":"article","role":"sampleCode","type":"topic","abstract":[{"type":"text","text":"student at 42Berlin 🐬 | 🍎 Swift(UI) app dev  | speciality coffee ☕️ & cycling 🚴🏻‍♂️"}],"url":"\/documentation\/wwdcnotes\/multitudes"},"WWDC23-10148-watch4":{"identifier":"WWDC23-10148-watch4","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-watch4.jpg"}],"alt":"watchOS 10 redesigned user experience","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10164-Whats-new-in-Swift":{"title":"What’s new in Swift","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10164-whats-new-in-swift","abstract":[{"type":"text","text":"Join us for an update on Swift. We’ll show you how APIs are becoming more extensible and expressive with features like parameter packs and macros. We’ll also take you through improvements to interoperability and share how we’re expanding Swift’s performance and safety benefits everywhere from Foundation to large-scale distributed programs on the server."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10164-Whats-new-in-Swift","type":"topic","kind":"article"},"WWDC23-10148-scrollTransitionEffect3":{"identifier":"WWDC23-10148-scrollTransitionEffect3","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-scrollTransitionEffect3.jpg"}],"alt":"Scroll Transition Effect","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10109-Meet-SwiftUI-for-spatial-computing":{"role":"sampleCode","abstract":[{"type":"text","text":"Take a tour of the solar system with us and explore SwiftUI for visionOS! Discover how you can build an entirely new universe of apps with windows, volumes, and spaces. We’ll show you how to get started with SwiftUI on this platform as we build an astronomy app, add 3D content, and create a fully immersive experience to transport people to the stars."}],"type":"topic","title":"Meet SwiftUI for spatial computing","url":"\/documentation\/wwdcnotes\/wwdc23-10109-meet-swiftui-for-spatial-computing","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10109-Meet-SwiftUI-for-spatial-computing"},"WWDC23-10148-Enhanced-interactions":{"identifier":"WWDC23-10148-Enhanced-interactions","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-Enhanced-interactions.png"}],"alt":"Overview of the section titled ‘Enhanced interactions’","type":"image"},"https://developer.apple.com/videos/play/wwdc2023/10043":{"title":"Meet MapKit for SwiftUI - WWDC23","titleInlineContent":[{"text":"Meet MapKit for SwiftUI - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10043","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10043"},"WWDC23-10148-textStyles":{"identifier":"WWDC23-10148-textStyles","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-textStyles.jpg"}],"alt":"Text Styles","type":"image"},"https://developer.apple.com/videos/play/wwdc2023/10027":{"title":"Bring widgets to new places - WWDC23","titleInlineContent":[{"text":"Bring widgets to new places - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10027","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10027"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10258-Animate-symbols-in-your-app":{"title":"Animate symbols in your app","type":"topic","role":"sampleCode","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-10258-animate-symbols-in-your-app","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10258-Animate-symbols-in-your-app","abstract":[{"type":"text","text":"Bring delight to your app with animated symbols. Explore the new Symbols framework, which features a unified API to create and configure symbol effects. Learn how SwiftUI, AppKit, and UIKit make it easy to animate symbols in user interfaces. Discover tips and tricks to seamlessly integrate the new animations alongside other app content. To get the most from this session, we recommend first watching “What’s new in SF Symbols 5.”"}]},"https://developer.apple.com/videos/play/wwdc2023/10013":{"title":"Meet StoreKit for SwiftUI - WWDC23","titleInlineContent":[{"text":"Meet StoreKit for SwiftUI - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10013","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10013"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10013-Meet-StoreKit-for-SwiftUI":{"url":"\/documentation\/wwdcnotes\/wwdc23-10013-meet-storekit-for-swiftui","type":"topic","kind":"article","role":"sampleCode","abstract":[{"text":"Discover how you can use App Store product metadata and Xcode Previews to add in-app purchases to your app with just a few lines of code. Explore a new collection of UI components in StoreKit and learn how you can easily merchandise your products, present subscriptions in a way that helps users make informed decisions, and more.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10013-Meet-StoreKit-for-SwiftUI","title":"Meet StoreKit for SwiftUI"},"WWDC23-10148-charts3":{"identifier":"WWDC23-10148-charts3","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-charts3.jpg"}],"alt":"charts","type":"image"},"WWDC23-10148-dialog2":{"identifier":"WWDC23-10148-dialog2","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-dialog2.jpg"}],"alt":"dialog","type":"image"},"https://developer.apple.com/design/human-interface-guidelines/playing-haptics":{"title":"Playing haptics - Human Interface Guidelines","titleInlineContent":[{"text":"Playing haptics - Human Interface Guidelines","type":"text"}],"identifier":"https:\/\/developer.apple.com\/design\/human-interface-guidelines\/playing-haptics","type":"link","url":"https:\/\/developer.apple.com\/design\/human-interface-guidelines\/playing-haptics"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10157-Wind-your-way-through-advanced-animations-in-SwiftUI":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10157-Wind-your-way-through-advanced-animations-in-SwiftUI","title":"Wind your way through advanced animations in SwiftUI","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23-10157-wind-your-way-through-advanced-animations-in-swiftui","abstract":[{"type":"text","text":"Discover how you can take animation to the next level with the latest updates to SwiftUI. Join us as we wind our way through animation and build out multiple steps, use keyframes to add coordinated multi-track animated effects, and combine APIs in unique ways to make your app spring to life."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10154-Build-an-app-with-SwiftData":{"abstract":[{"text":"Discover how SwiftData can help you persist data in your app. Code along with us as we bring SwiftData to a multi-platform SwiftUI app. Learn how to convert existing model classes into SwiftData models, set up the environment, reflect model layer changes in UI, and build document-based applications backed by SwiftData storage.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10154-build-an-app-with-swiftdata","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10154-Build-an-app-with-SwiftData","title":"Build an app with SwiftData","kind":"article"},"https://developer.apple.com/videos/play/wwdc2023/10157":{"title":"Wind your way through advanced animations in SwiftUI - WWDC23","titleInlineContent":[{"text":"Wind your way through advanced animations in SwiftUI - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10157","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10157"},"WWDC23-10148-watch2":{"identifier":"WWDC23-10148-watch2","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-watch2.jpg"}],"alt":"watchOS 10 redesigned user experience","type":"image"},"multitudes.jpeg":{"identifier":"multitudes.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/multitudes.jpeg"}],"alt":null,"type":"image"},"WWDC23-10148-inspector":{"identifier":"WWDC23-10148-inspector","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-inspector.jpg"}],"alt":"inspector","type":"image"},"https://github.com/DaemonLoki":{"title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}],"identifier":"https:\/\/github.com\/DaemonLoki","type":"link","url":"https:\/\/github.com\/DaemonLoki"},"WWDC23-10148-visualEffectsModifier":{"identifier":"WWDC23-10148-visualEffectsModifier","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-visualEffectsModifier.jpg"}],"alt":"Visual Effects Modifier","type":"image"},"https://developer.apple.com/videos/play/wwdc2023/10252":{"title":"Build programmatic UI with Xcode Previews - WWDC23","titleInlineContent":[{"text":"Build programmatic UI with Xcode Previews - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10252","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10252"},"DaemonLoki":{"identifier":"DaemonLoki","variants":[{"traits":["1x","light"],"url":"\/images\/DaemonLoki.jpeg"}],"alt":"Profile image of Stefan Blos","type":"image"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"https://x.com/stefanjblos":{"title":"X\/Twitter","titleInlineContent":[{"text":"X\/Twitter","type":"text"}],"identifier":"https:\/\/x.com\/stefanjblos","type":"link","url":"https:\/\/x.com\/stefanjblos"},"DaemonLoki.jpeg":{"identifier":"DaemonLoki.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/DaemonLoki.jpeg"}],"alt":null,"type":"image"},"https://developer.apple.com/videos/play/wwdc2023/10109":{"title":"Meet SwiftUI for spatial computing - WWDC23","titleInlineContent":[{"text":"Meet SwiftUI for spatial computing - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10109","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10109"},"https://developer.apple.com/videos/play/wwdc2023/10154":{"title":"Build an app with SwiftData - WWDC23","titleInlineContent":[{"text":"Build an app with SwiftData - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10154","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10154"},"https://developer.apple.com/videos/play/wwdc2023/10164":{"title":"What’s new in Swift - WWDC23","titleInlineContent":[{"text":"What’s new in Swift - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10164","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10164"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}],"alt":null,"type":"image"},"WWDC23-10148-watch3":{"identifier":"WWDC23-10148-watch3","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-watch3.jpg"}],"alt":"watchOS 10 redesigned user experience","type":"image"},"WWDC23-Icon.png":{"identifier":"WWDC23-Icon.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-Icon.png"}],"alt":null,"type":"image"},"https://developer.apple.com/videos/play/wwdc2023/10148/?time=1638":{"title":"27:18 - Enhanced interactions","titleInlineContent":[{"text":"27:18 - Enhanced interactions","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148\/?time=1638","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148\/?time=1638"},"WWDC23-10148-borderedButtons2":{"identifier":"WWDC23-10148-borderedButtons2","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-borderedButtons2.jpg"}],"alt":"Bordered buttons","type":"image"},"WWDC23-10148-section2":{"identifier":"WWDC23-10148-section2","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-section2.jpg"}],"alt":"sections","type":"image"},"WWDC23-10148-controlGroupStyle":{"identifier":"WWDC23-10148-controlGroupStyle","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-controlGroupStyle.jpg"}],"alt":"The new compactMenu style","type":"image"},"WWDC23-10148-watch":{"identifier":"WWDC23-10148-watch","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-watch.jpg"}],"alt":"watchOS 10 redesigned user experience","type":"image"},"WWDC23-10148-textScaleModifier":{"identifier":"WWDC23-10148-textScaleModifier","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-textScaleModifier.jpg"}],"alt":"New textScale modifier","type":"image"},"WWDC23-10148-storeKit":{"identifier":"WWDC23-10148-storeKit","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-storeKit.jpg"}],"alt":"storeKit","type":"image"},"WWDC23-10148-sections":{"identifier":"WWDC23-10148-sections","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-sections.jpg"}],"alt":"sections","type":"image"},"WWDC23-10148-phaseAnimator":{"identifier":"WWDC23-10148-phaseAnimator","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-phaseAnimator.jpg"}],"alt":"Phase Animator","type":"image"},"WWDC23-10148-controlGroupStyle2":{"identifier":"WWDC23-10148-controlGroupStyle2","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-controlGroupStyle2.jpg"}],"alt":"The new compactMenu style","type":"image"},"WWDC23-10148-TabViews":{"identifier":"WWDC23-10148-TabViews","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-TabViews.jpg"}],"alt":"TabViews","type":"image"},"https://developer.apple.com/videos/play/wwdc2023/10031":{"title":"Update your app for watchOS 10","titleInlineContent":[{"text":"Update your app for watchOS 10","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10031","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10031"},"https://developer.apple.com/videos/play/wwdc2023/10160":{"title":"Demystify SwiftUI performance - WWDC23","titleInlineContent":[{"text":"Demystify SwiftUI performance - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10160","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10160"},"https://developer.apple.com/videos/play/wwdc2023/10159":{"title":"Beyond scroll views - WWDC23","titleInlineContent":[{"text":"Beyond scroll views - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10159","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10159"},"https://laurentbrusa.hashnode.dev/":{"title":"Blog","titleInlineContent":[{"text":"Blog","type":"text"}],"identifier":"https:\/\/laurentbrusa.hashnode.dev\/","type":"link","url":"https:\/\/laurentbrusa.hashnode.dev\/"},"MortenGregersen":{"identifier":"MortenGregersen","variants":[{"traits":["1x","light"],"url":"\/images\/MortenGregersen.jpeg"}],"alt":"Profile image of Morten Bjerg Gregersen","type":"image"},"https://developer.apple.com/videos/play/wwdc2023/10138":{"title":"Design and build apps for watchOS 10 - WWDC23","titleInlineContent":[{"text":"Design and build apps for watchOS 10 - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10138","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10138"},"WWDC23-10148-scrollTransitionEffect2":{"identifier":"WWDC23-10148-scrollTransitionEffect2","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-scrollTransitionEffect2.jpg"}],"alt":"Scroll Transition Effect","type":"image"},"WWDC23-10148-SwiftUI-in-more-places":{"identifier":"WWDC23-10148-SwiftUI-in-more-places","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-SwiftUI-in-more-places.png"}],"alt":"Overview of the section titled ‘SwiftUI in more places’","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10252-Build-programmatic-UI-with-Xcode-Previews":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10252-Build-programmatic-UI-with-Xcode-Previews","abstract":[{"type":"text","text":"Learn how you can use the #Preview macro on Xcode 15 to quickly iterate on your UI code written in SwiftUI, UIKit, or AppKit. Explore a collage of unique workflows for interacting with views right in the canvas, find out how to view multiple variations of UI simultaneously, and discover how you can travel through your widget’s timeline in seconds to test the transitions between entries. We’ll also show you how to add previews to libraries, provide sample assets, and preview your views in your physical devices to leverage their capabilities and existing data."}],"type":"topic","title":"Build programmatic UI with Xcode Previews","role":"sampleCode","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-10252-build-programmatic-ui-with-xcode-previews"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10187-Meet-SwiftData":{"title":"Meet SwiftData","role":"sampleCode","type":"topic","abstract":[{"type":"text","text":"SwiftData is a powerful and expressive persistence framework built for Swift. We’ll show you how you can model your data directly from Swift code, use SwiftData to work with your models, and integrate with SwiftUI."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10187-Meet-SwiftData","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-10187-meet-swiftdata"},"WWDC23-10148-mapkit":{"identifier":"WWDC23-10148-mapkit","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-mapkit.jpg"}],"alt":"mapkit","type":"image"},"https://developer.apple.com/forums/tags/wwdc2023-10148":{"title":"Search the forums for tag wwdc2023-10148","titleInlineContent":[{"text":"Search the forums for tag wwdc2023-10148","type":"text"}],"identifier":"https:\/\/developer.apple.com\/forums\/tags\/wwdc2023-10148","type":"link","url":"https:\/\/developer.apple.com\/forums\/tags\/wwdc2023-10148"},"https://developer.apple.com/wwdc23/10148":{"identifier":"https:\/\/developer.apple.com\/wwdc23\/10148","checksum":null,"type":"download","url":"https:\/\/developer.apple.com\/wwdc23\/10148"},"WWDC23-10148-globe":{"identifier":"WWDC23-10148-globe","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-globe.jpg"}],"alt":"volume content","type":"image"},"WWDC23-10148-Simplified-data-flow":{"identifier":"WWDC23-10148-Simplified-data-flow","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-Simplified-data-flow.png"}],"alt":"Overview of the section titled ‘Simplified data flow’","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/MortenGregersen":{"images":[{"identifier":"MortenGregersen.jpeg","type":"card"},{"identifier":"MortenGregersen.jpeg","type":"icon"}],"type":"topic","abstract":[{"text":"Hi 👋 I am Morten - I live in Denmark 🇩🇰","type":"text"}],"title":"Morten Bjerg Gregersen (21 notes)","role":"sampleCode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/MortenGregersen","url":"\/documentation\/wwdcnotes\/mortengregersen"},"WWDC23-10148-widgets":{"identifier":"WWDC23-10148-widgets","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-widgets.jpg"}],"alt":"Widgets","type":"image"},"WWDC23-10148-tables":{"identifier":"WWDC23-10148-tables","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-tables.jpg"}],"alt":"tables","type":"image"},"WWDC23-10148-staticColors2":{"identifier":"WWDC23-10148-staticColors2","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-staticColors2.jpg"}],"alt":"Static Colors","type":"image"},"WWDC23-10148-WindowGroup":{"identifier":"WWDC23-10148-WindowGroup","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-WindowGroup.jpg"}],"alt":"WindowGroup","type":"image"},"WWDC23-10148-symbolEffectModifier":{"identifier":"WWDC23-10148-symbolEffectModifier","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-symbolEffectModifier.jpg"}],"alt":"Symbol effect modifier","type":"image"},"https://developer.apple.com/videos/play/wwdc2023/10187":{"title":"Meet SwiftData - WWDC23","titleInlineContent":[{"text":"Meet SwiftData - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10187","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10187"},"MortenGregersen.jpeg":{"identifier":"MortenGregersen.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/MortenGregersen.jpeg"}],"alt":null,"type":"image"},"WWDC23-10148-state":{"identifier":"WWDC23-10148-state","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-state.jpg"}],"alt":"state example","type":"image"},"https://x.com/mortengregersen":{"title":"X\/Twitter","titleInlineContent":[{"text":"X\/Twitter","type":"text"}],"identifier":"https:\/\/x.com\/mortengregersen","type":"link","url":"https:\/\/x.com\/mortengregersen"},"https://developer.apple.com/videos/play/wwdc2023/10158":{"title":"Animate with springs - WWDC23","titleInlineContent":[{"text":"Animate with springs - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10158","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10158"},"WWDC23-10148-HDRImages":{"identifier":"WWDC23-10148-HDRImages","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-HDRImages.jpg"}],"alt":"HDR images","type":"image"},"WWDC23-10148-inspector4":{"identifier":"WWDC23-10148-inspector4","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-inspector4.jpg"}],"alt":"inspector","type":"image"},"https://stefanblos.com":{"title":"Blog","titleInlineContent":[{"text":"Blog","type":"text"}],"identifier":"https:\/\/stefanblos.com","type":"link","url":"https:\/\/stefanblos.com"},"WWDC23-10148-charts":{"identifier":"WWDC23-10148-charts","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-charts.jpg"}],"alt":"charts","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10043-Meet-MapKit-for-SwiftUI":{"abstract":[{"text":"Discover how expanded SwiftUI support for MapKit has made it easier than ever for you to integrate Maps into your app. We’ll show you how to use SwiftUI to add annotations and overlays to a map, control the camera, and more.","type":"text"}],"role":"sampleCode","title":"Meet MapKit for SwiftUI","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10043-Meet-MapKit-for-SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc23-10043-meet-mapkit-for-swiftui","kind":"article","type":"topic"},"https://developer.apple.com/videos/play/wwdc2023/10037":{"title":"Explore pie charts and interactivity in Swift Charts - WWDC23","titleInlineContent":[{"text":"Explore pie charts and interactivity in Swift Charts - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10037","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10037"},"WWDC23.jpeg":{"identifier":"WWDC23.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23.jpeg"}],"alt":null,"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10159-Beyond-scroll-views":{"kind":"article","abstract":[{"text":"Find out how you can take your scroll views to the next level with the latest APIs in SwiftUI. We’ll show you how to customize scroll views like never before. Explore the relationship between safe areas and a scroll view’s margins, learn how to interact with the content offset of a scroll view, and discover how you can add a bit of flair to your content with scroll transitions.","type":"text"}],"role":"sampleCode","title":"Beyond scroll views","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10159-Beyond-scroll-views","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23-10159-beyond-scroll-views"},"WWDC23-10148-watch6":{"identifier":"WWDC23-10148-watch6","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-watch6.jpg"}],"alt":"watchOS 10 redesigned user experience","type":"image"},"WWDC23-10148-Extraordinary-animations":{"identifier":"WWDC23-10148-Extraordinary-animations","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-Extraordinary-animations.png"}],"alt":"Overview of the section titled ‘Extraordinary animations’","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10162-The-SwiftUI-cookbook-for-focus":{"abstract":[{"type":"text","text":"The SwiftUI team is back in the coding “kitchen” with powerful tools to shape your app’s focus experience. Join us and learn about the staple ingredients that support focus-driven interactions in your app. Discover focus interactions for custom views, find out about key-press handlers for keyboard input, and learn how to support movement and hierarchy with focus sections. We’ll also go through some tasty recipes for common focus patterns in your app."}],"kind":"article","title":"The SwiftUI cookbook for focus","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10162-The-SwiftUI-cookbook-for-focus","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10162-the-swiftui-cookbook-for-focus"},"https://developer.apple.com/videos/play/wwdc2023/10036":{"title":"Build accessible apps with SwiftUI and UIKit - WWDC23","titleInlineContent":[{"text":"Build accessible apps with SwiftUI and UIKit - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10036","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10036"},"https://developer.apple.com/videos/play/wwdc2023/10148/?time=65":{"title":"1:05 - SwiftUI in more places","titleInlineContent":[{"text":"1:05 - SwiftUI in more places","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148\/?time=65","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148\/?time=65"},"WWDC23-10148-dialog":{"identifier":"WWDC23-10148-dialog","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-dialog.jpg"}],"alt":"dialog","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23":{"role":"collectionGroup","abstract":[{"type":"text","text":"Xcode 15, Swift 5.9, iOS 17, macOS 14 (Sonoma), tvOS 17, visionOS 1, watchOS 10."},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"SwiftData","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Observation","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit","type":"codeVoice"},{"text":" views, and more.","type":"text"}],"type":"topic","title":"WWDC23","url":"\/documentation\/wwdcnotes\/wwdc23","kind":"article","images":[{"identifier":"WWDC23-Icon.png","type":"icon"},{"identifier":"WWDC23.jpeg","type":"card"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23"},"https://developer.apple.com/videos/play/wwdc2023/10148/?time=1126":{"title":"18:46 - Extraordinary animations","titleInlineContent":[{"text":"18:46 - Extraordinary animations","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148\/?time=1126","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148\/?time=1126"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10158-Animate-with-springs":{"abstract":[{"text":"Discover how you can bring life to your app with animation! We’ll show you how to create amazing animations when you take advantage of springs and help you learn how to use them in your app.","type":"text"}],"role":"sampleCode","title":"Animate with springs","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10158-Animate-with-springs","url":"\/documentation\/wwdcnotes\/wwdc23-10158-animate-with-springs","kind":"article","type":"topic"},"WWDC23-10148-observable":{"identifier":"WWDC23-10148-observable","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-observable.jpg"}],"alt":"observable","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/DaemonLoki":{"kind":"article","abstract":[{"text":"Machine Learning and AI enthusiast with a passion for mobile app development.","type":"text"}],"role":"sampleCode","title":"Stefan Blos (1 note)","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/DaemonLoki","type":"topic","images":[{"type":"card","identifier":"DaemonLoki.jpeg"},{"type":"icon","identifier":"DaemonLoki.jpeg"}],"url":"\/documentation\/wwdcnotes\/daemonloki"},"https://developer.apple.com/videos/play/wwdc2023/10162":{"title":"The SwiftUI cookbook for focus - WWDC23","titleInlineContent":[{"text":"The SwiftUI cookbook for focus - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10162","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10162"},"WWDC23-10148-watch5":{"identifier":"WWDC23-10148-watch5","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-watch5.jpg"}],"alt":"watchOS 10 redesigned user experience","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10149-Discover-Observation-in-SwiftUI":{"abstract":[{"text":"Simplify your SwiftUI data models with Observation. We’ll share how the Observable macro can help you simplify models and improve your app’s performance. Get to know Observation, learn the fundamentals of the macro, and find out how to migrate from ObservableObject to Observable.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10149-discover-observation-in-swiftui","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10149-Discover-Observation-in-SwiftUI","title":"Discover Observation in SwiftUI","kind":"article"},"WWDC23-10148-iPadWidgets":{"identifier":"WWDC23-10148-iPadWidgets","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10148-iPadWidgets.jpg"}],"alt":"iPad Widgets","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10037-Explore-pie-charts-and-interactivity-in-Swift-Charts":{"title":"Explore pie charts and interactivity in Swift Charts","type":"topic","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-10037-explore-pie-charts-and-interactivity-in-swift-charts","abstract":[{"text":"Swift Charts has come full circle: Get ready to bake up pie and donut charts in your app with the latest improvements to the framework. Learn how to make your charts scrollable, explore the chart selection API for revealing additional details in your data, and find out how enabling additional interactivity can make your charts even more delightful.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10037-Explore-pie-charts-and-interactivity-in-Swift-Charts","role":"sampleCode"},"https://developer.apple.com/forums/create/question?tag1=755030&tag2=239":{"title":"Have a question? Ask with tag wwdc2023-10148","titleInlineContent":[{"text":"Have a question? Ask with tag wwdc2023-10148","type":"text"}],"identifier":"https:\/\/developer.apple.com\/forums\/create\/question?tag1=755030&tag2=239","type":"link","url":"https:\/\/developer.apple.com\/forums\/create\/question?tag1=755030&tag2=239"},"https://github.com/MortenGregersen":{"title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}],"identifier":"https:\/\/github.com\/MortenGregersen","type":"link","url":"https:\/\/github.com\/MortenGregersen"},"doc://WWDCNotes/documentation/WWDCNotes":{"title":"WWDC Notes","kind":"symbol","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"type":"topic","role":"collection","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","url":"\/documentation\/wwdcnotes"},"https://developer.apple.com/videos/play/wwdc2023/10258":{"title":"Animate symbols in your app - WWDC23","titleInlineContent":[{"text":"Animate symbols in your app - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10258","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10258"}}}