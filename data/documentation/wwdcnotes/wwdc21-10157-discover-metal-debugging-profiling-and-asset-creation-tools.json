{"sections":[],"metadata":{"title":"Discover Metal debugging, profiling, and asset creation tools","modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC21","role":"sampleCode"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"üò± ‚ÄúNo Overview Available!‚Äù"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Be the hero to change that by watching the video and providing notes! It‚Äôs super easy:"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}]},{"anchor":"Related-Sessions","type":"heading","level":2,"text":"Related Sessions"},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10099-Meet-RealityKit-Trace","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10125-Bring-your-game-to-Mac-Part-3-Render-with-Metal","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10105-Maximize-your-Metal-ray-tracing-performance","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10106-Profile-and-optimize-your-games-memory","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10148-Optimize-highend-games-for-Apple-GPUs","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10149-Enhance-your-app-with-Metal-ray-tracing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10150-Explore-hybrid-rendering-with-Metal-ray-tracing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10229-Discover-compilation-workflows-in-Metal","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10012-Discover-ray-tracing-with-Metal","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10013-Get-to-know-Metal-function-pointers","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10603-Optimize-Metal-apps-and-games-with-GPU-counters","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10616-Debug-GPUside-errors-in-Metal"],"style":"list"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10157-Discover-Metal-debugging-profiling-and-asset-creation-tools"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc21-10157-discover-metal-debugging-profiling-and-asset-creation-tools"]}],"sampleCodeDownload":{"action":{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2021\/10157","overridingTitle":"Watch Video (39 min)","isActive":true,"type":"reference"},"kind":"sampleDownload"},"kind":"article","hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"abstract":[{"type":"text","text":"Explore how Xcode can help you take your Metal debugging, profiling and asset creation workflows to the next level. Discover the latest tools for ray tracing and GPU profiling, and learn about Metal Debugger workflows. We‚Äôll also show you how to use the Texture Converter tool, which supports all modern GPU texture formats and can easily integrate into your multi-platform asset creation pipelines."}],"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10150-Explore-hybrid-rendering-with-Metal-ray-tracing":{"url":"\/documentation\/wwdcnotes\/wwdc21-10150-explore-hybrid-rendering-with-metal-ray-tracing","role":"sampleCode","abstract":[{"type":"text","text":"Discover how you can combine ray tracing with your rasterization engine to implement simplified graphics techniques and elevate visuals in your app or game. We‚Äôll explore how you can use natural algorithms to accurately simulate the interplays of light, and learn how to take advantage of the latest tools in Xcode to capture, inspect, and debug your ray-traced scenes."}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10150-Explore-hybrid-rendering-with-Metal-ray-tracing","type":"topic","title":"Explore hybrid rendering with Metal ray tracing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10105-Maximize-your-Metal-ray-tracing-performance":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10105-Maximize-your-Metal-ray-tracing-performance","abstract":[{"text":"Learn how to simplify your ray tracing code and increase performance with the power of Metal 3. We‚Äôll explore the GPU debugging and profiling tools that can help you tune your ray tracing applications. We‚Äôll also show you how you can speed up intersection tests and reduce shader code memory accesses and indirections with per-primitive data in an acceleration structure. And we‚Äôll help you implement faster acceleration structure builds and refits to reduce load times and per-frame overhead.","type":"text"}],"title":"Maximize your Metal ray tracing performance","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22-10105-maximize-your-metal-ray-tracing-performance","role":"sampleCode","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10148-Optimize-highend-games-for-Apple-GPUs":{"title":"Optimize high-end games for Apple GPUs","abstract":[{"type":"text","text":"Optimize your high-end games for Apple GPUs: We‚Äôll show you how you can use our rendering and debugging tools to eliminate performance issues and make your games great on Apple platforms. Learn from our experiences working with developers at Larian Studios and 4A Games as we help them optimize their games for Apple GPUs."}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10148-Optimize-highend-games-for-Apple-GPUs","url":"\/documentation\/wwdcnotes\/wwdc21-10148-optimize-highend-games-for-apple-gpus","role":"sampleCode","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","role":"collection","title":"WWDC Notes","type":"topic","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"url":"\/documentation\/wwdcnotes"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10012-Discover-ray-tracing-with-Metal":{"url":"\/documentation\/wwdcnotes\/wwdc20-10012-discover-ray-tracing-with-metal","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10012-Discover-ray-tracing-with-Metal","type":"topic","abstract":[{"type":"text","text":"Achieve photorealistic 3D scenes in your apps and games through ray tracing ‚Äî a core part of the Metal graphics framework and Shading Language. Discover the fundamentals of the Metal ray tracing API and Shading Language extensions for ray tracing, find out how to use them in your graphics apps and games, and learn how to take control of your kernels and combine them into a single compute kernel for optimal performance."}],"title":"Discover ray tracing with Metal","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10013-Get-to-know-Metal-function-pointers":{"abstract":[{"text":"Metal is a low-level, low-overhead hardware-accelerated graphics framework and shader application programming interface for producing stunning visual effects in applications. Discover how to make your shaders written in Metal Shading Language more programmable and extensible by using function pointers. Learn how to take advantage of this new feature for dynamic flow control in Metal shaders. Discover how to use function pointers to specify custom intersection functions in your ray tracing application. We‚Äôll explain how function pointers allow several compilations models so you can balance GPU pipeline size against runtime performance.","type":"text"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10013-Get-to-know-Metal-function-pointers","title":"Get to know Metal function pointers","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc20-10013-get-to-know-metal-function-pointers","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10106-Profile-and-optimize-your-games-memory":{"kind":"article","role":"sampleCode","abstract":[{"type":"text","text":"Learn how Apple platforms calculate and allocate memory for your game. We‚Äôll show you how to use Instruments and the Game Memory template to profile your game, take a memory graph to monitor current memory use, and analyze it using Xcode Memory Debugger and command line tools. We‚Äôll also explore Metal resources in Metal Debugger and provide tips and tricks to further help you optimize memory usage."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10106-Profile-and-optimize-your-games-memory","title":"Profile and optimize your game‚Äôs memory","url":"\/documentation\/wwdcnotes\/wwdc22-10106-profile-and-optimize-your-games-memory"},"WWDC21-Icon.png":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC21-Icon.png"}],"identifier":"WWDC21-Icon.png"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10616-Debug-GPUside-errors-in-Metal":{"type":"topic","abstract":[{"text":"Track down even the trickiest GPU-side programming errors with enhanced reporting in Xcode 12. While Metal‚Äôs API validation layer can catch most problems in a project, GPU errors can cause a host of difficult-to-debug issues.","type":"text"}],"kind":"article","title":"Debug GPU-side errors in Metal","url":"\/documentation\/wwdcnotes\/wwdc20-10616-debug-gpuside-errors-in-metal","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10616-Debug-GPUside-errors-in-Metal"},"WWDC21.jpeg":{"identifier":"WWDC21.jpeg","type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDC21.jpeg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","url":"\/documentation\/wwdcnotes\/wwdc21","kind":"article","type":"topic","title":"WWDC21","abstract":[{"text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"MusicKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DocC","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit 2","type":"codeVoice"},{"text":", and more.","type":"text"}],"role":"collectionGroup","images":[{"type":"icon","identifier":"WWDC21-Icon.png"},{"type":"card","identifier":"WWDC21.jpeg"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10125-Bring-your-game-to-Mac-Part-3-Render-with-Metal":{"role":"sampleCode","title":"Bring your game to Mac, Part 3: Render with Metal","abstract":[{"type":"text","text":"Discover how you can support Metal in your rendering code as we close out our three-part series on bringing your game to Mac. Once you‚Äôve evaluated your existing Windows binary with the game porting toolkit and brought your HLSL shaders over to Metal, learn how you can optimally implement the features that high-end, modern games require. We‚Äôll show you how to manage GPU resource bindings, residency, and synchronization. Find out how to optimize GPU commands submission, render rich visuals with MetalFX Upscaling, and more."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10125-Bring-your-game-to-Mac-Part-3-Render-with-Metal","url":"\/documentation\/wwdcnotes\/wwdc23-10125-bring-your-game-to-mac-part-3-render-with-metal","kind":"article"},"WWDCNotes.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"identifier":"WWDCNotes.png"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10229-Discover-compilation-workflows-in-Metal":{"title":"Discover compilation workflows in Metal","role":"sampleCode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10229-Discover-compilation-workflows-in-Metal","abstract":[{"type":"text","text":"The Metal shading language is a powerful C++ based language that allows apps to render stunning effects while maintaining a flexible shader development pipeline. Discover how to more easily build and extend your render pipelines using Dynamic Libraries and Function Pointers. We‚Äôll also show you how to accelerate your shader compilation at runtime with Binary Function Archives, Function Linking, and Function Stitching."}],"url":"\/documentation\/wwdcnotes\/wwdc21-10229-discover-compilation-workflows-in-metal","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10149-Enhance-your-app-with-Metal-ray-tracing":{"kind":"article","abstract":[{"type":"text","text":"Achieve photorealistic 3D scenes in your apps and games through ray tracing, a core part of the Metal graphics framework and Shading Language. We‚Äôll explore the latest improvements in implementing ray tracing and take you through upgrades to the production rendering process. Discover Metal APIs to help you create more detailed scenes, integrate natively-supported content with motion, and more."}],"title":"Enhance your app with Metal ray tracing","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10149-Enhance-your-app-with-Metal-ray-tracing","url":"\/documentation\/wwdcnotes\/wwdc21-10149-enhance-your-app-with-metal-ray-tracing","role":"sampleCode","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10603-Optimize-Metal-apps-and-games-with-GPU-counters":{"role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10603-Optimize-Metal-apps-and-games-with-GPU-counters","abstract":[{"text":"GPU counters can help you precisely measure GPU utilization to pinpoint bottlenecks and optimize workloads for your Metal apps and games. We‚Äôll walk you through the tools available in the Metal System Trace instrument and Metal Debugger in Xcode 12 to profile your graphics workload, and show you how to use collected data to discover underused and overworked stages of your GPU pipeline. Discover how you can act on that data to improve your app‚Äôs capabilities.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc20-10603-optimize-metal-apps-and-games-with-gpu-counters","title":"Optimize Metal apps and games with GPU counters","kind":"article"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"type":"link","title":"Learn More‚Ä¶","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Learn More‚Ä¶"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10099-Meet-RealityKit-Trace":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10099-Meet-RealityKit-Trace","abstract":[{"text":"Discover how you can use RealityKit Trace to improve the performance of your spatial computing apps. Explore performance profiling guidelines for this platform and learn how the RealityKit Trace template can help you optimize rendering for your apps. We‚Äôll also provide guidance on profiling various types of content in your app to help pinpoint performance issues.","type":"text"}],"kind":"article","title":"Meet RealityKit Trace","url":"\/documentation\/wwdcnotes\/wwdc23-10099-meet-realitykit-trace","type":"topic"},"https://developer.apple.com/videos/play/wwdc2021/10157":{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2021\/10157","checksum":null,"type":"download","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2021\/10157"}}}