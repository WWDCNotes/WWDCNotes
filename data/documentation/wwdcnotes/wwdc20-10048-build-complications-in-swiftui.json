{"metadata":{"role":"sampleCode","modules":[{"name":"WWDC Notes"}],"title":"Build complications in SwiftUI","roleHeading":"WWDC20"},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc20-10048-build-complications-in-swiftui"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Spice up your graphic complications on Apple Watch using SwiftUI. Weâ€™ll teach you how to use custom SwiftUI views in complications on watch faces like Meridian and Infograph, look at some best practices when creating your complications, and show you how to preview your work in Xcode 12."}],"kind":"article","primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"New API","anchor":"New-API"},{"type":"heading","level":3,"text":"Templates","anchor":"Templates"},{"type":"paragraph","inlineContent":[{"text":"With watchOS 7 there are new complication templates that take in just a SwiftUI view, letting us be in total control of what to display in the complication:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"CLKComplicationTemplateGraphicCornerCircularView","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"CLKComplicationTemplateGraphicCircularView"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"CLKComplicationTemplateGraphicRectangularLargeView"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"CLKComplicationTemplateGraphicRectangularFullView"}]}]},{"content":[{"inlineContent":[{"code":"CLKComplicationTemplateGraphicExtraLargeCircularVie","type":"codeVoice"}],"type":"paragraph"}]}]},{"type":"heading","level":3,"text":"Text","anchor":"Text"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"By default ","type":"text"},{"code":"Text","type":"codeVoice"},{"text":" size adapts based on the complication family it will appear on. The default font is SF Rounded.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use the new ","type":"text"},{"type":"codeVoice","code":"Text"},{"text":" date formatters to make the view update live:","type":"text"}]}]}]},{"type":"codeListing","code":["\/\/\/ A style displaying a date as relative to now.","\/\/\/ e.g. 2 hours, 23 minutes","static let relative: Text.DateStyle","","\/\/\/ A style displaying a date as offset from now.","\/\/\/ e.g. +2 hours","static let offset: Text.DateStyle","","\/\/\/ A style displaying a date as timer counting from now.","\/\/\/ e.g. 36:59:01","static let timer: Text.DateStyle"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Examples:"}]},{"type":"codeListing","code":["import SwiftUI","import ClockKit","","struct RelativeText: View {","  var body: some View {","    VStack(alignment: .leading) {","      Text(\"Count Down\")","        .font(.headline)","        .foregroundColor(.accentColor)","      Label(\"Nap Time\", systemImage: \"moon.fill\")","      Text(Date() + 100, style: .relative)","    }","    .frame(maxWidth: .infinity, alignment: .leading)","  }","}","","struct RelativeText_Previews: PreviewProvider {","  static var previews: some View {","    CLKComplicationTemplateGraphicRectangularFullView(RelativeText())","      .previewContext()","  }","}"],"syntax":"swift"},{"type":"codeListing","code":["import SwiftUI","import ClockKit","","struct TimerText: View {","  var body: some View {","    VStack(alignment: .leading) {","      Label(\"Sourdough Timer\", systemImage: \"timer\")","        .foregroundColor(.orange)","      Text(\"Time remaining: \\(Date() + 100, style: .timer)\")","    }","    .frame(maxWidth: .infinity, alignment: .leading)","  }","}","","struct TimerText_Previews: PreviewProvider {","  static var previews: some View {","    CLKComplicationTemplateGraphicRectangularFullView(TimerText())","      .previewContext()","  }","}"],"syntax":"swift"},{"type":"heading","level":3,"text":"ProgressView & Gauge","anchor":"ProgressView--Gauge"},{"type":"paragraph","inlineContent":[{"type":"text","text":"New "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/ProgressView"},{"type":"text","text":" and ["},{"type":"codeVoice","code":"Gauge"},{"type":"text","text":"][] SwiftUI views:"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC20-10048-pvg","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ProgressView"},{"type":"text","text":" comes with two styles:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/circularprogressviewstyle"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/linearprogressviewstyle"}]}]}]},{"type":"codeListing","code":["import SwiftUI","import ClockKit","","struct ProgressSample: View {","  var body: some View {","    ProgressView(value: 0.7) {","      Image(systemName: \"music.note\")","    }","    .progressViewStyle(CircularProgressViewStyle(tint: .red))","  }","}","","struct ProgressSample_Previews: PreviewProvider {","  static var previews: some View {","    CLKComplicationTemplateGraphicCircularView(ProgressSample())","      .previewContext()","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"code":"Gauge","type":"codeVoice"},{"text":" comes with a style:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"CircularGaugeStyle"}]}]},{"content":[{"inlineContent":[{"code":"LinearGaugeStyle","type":"codeVoice"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Both styles come with many optional personalization such as:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"label","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"currentValueLabel"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"minimumValueLabel","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"maximumValueLabel","type":"text"}]}]}]},{"type":"codeListing","code":["import SwiftUI","import ClockKit","","struct GaugeSample: View {","  @State var acidity = 5.8","","  var body: some View {","    Gauge(value: acidity, in: 3...10) {","      Image(systemName: \"drop.fill\")","        .foregroundColor(.green)","    } currentValueLabel: {","      Text(\"\\(acidity, specifier: \"%.1f\")\")","    } minimumValueLabel: {","      Text(\"3\")","    } maximumValueLabel: {","      Text(\"10\")","    }","    .gaugeStyle(CircularGaugeStyle())","  }","}","","struct GaugeSample_Previews: PreviewProvider {","  static var previews: some View {","    CLKComplicationTemplateGraphicCircularView(GaugeSample())","      .previewContext()","  }","}"],"syntax":"swift"},{"type":"heading","level":3,"text":"Complication Template Preview","anchor":"Complication-Template-Preview"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"When previewing templates, we now have a new "},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/previewcontext(_:)","type":"reference","isActive":true},{"type":"text","text":" modifier that will let us preview our complication on a face that is best suited for our complication family (examples above)."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can also set a tinting to our preview as well: "},{"type":"codeVoice","code":".previewContext(faceColor: .blue)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"We can use the new "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/clockkit\/clkcomplicationtemplategraphiccircularopengaugeview\/previewfacecolor\/3593768-allcolors","isActive":true},{"type":"text","text":" to preview our complication with all the colors:"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["struct HistoryView_Previews: PreviewProvider {","  static var previews: some View {","    ForEach(CLKComplicationTemplate.PreviewFaceColor.allColors) { color in","      CLKComplicationTemplateGraphicRectangularFullView(ComplicationHistoryView())","      .previewContext(faceColor: color)","    }","  }","}",""],"syntax":"swift"},{"type":"heading","level":2,"text":"Watch face tinting","anchor":"Watch-face-tinting"},{"type":"paragraph","inlineContent":[{"text":"Some faces alter the tint color, and the color on each complication.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There are two kinds of tinting:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"desaturated tint (default)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"color opacity tint"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC20-10048-tinting","type":"image"}]},{"type":"heading","level":3,"text":"Desaturated tint","anchor":"Desaturated-tint"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Depending on the face, our complication can get completely desaturated, or get one color applied for the whole complication","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"If our complication elements have similar brightness, they will be indistinguishable when the view is desaturated."}],"type":"paragraph"}]}]},{"type":"heading","level":3,"text":"Color opacity tint","anchor":"Color-opacity-tint"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Alternative to Desaturated tint that we can opt-in to"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"This works by splitting our view in two layers, background and foreground:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"what matters for each layer is the opacity"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"each watch face will determine what color to give to each layer (they will be two different colors)","type":"text"}],"type":"paragraph"}]}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"By default all elements are in the background layer, to move elements into the foreground layer, apply the new "},{"code":".complicationForeground()","type":"codeVoice"},{"type":"text","text":" modifier."}]},{"type":"heading","level":3,"text":"Custom tint","anchor":"Custom-tint"},{"type":"paragraph","inlineContent":[{"text":"For more custom tinting, we can get the current ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/clockkit\/complicationrenderingmode","type":"reference"},{"text":" via the ","type":"text"},{"code":"\\.complicationRenderingMode","type":"codeVoice"},{"text":" environment variable: what we can do here is read the current rendering mode and change our layers opacity based on that.","type":"text"}]},{"type":"heading","level":2,"text":"Best practices","anchor":"Best-practices"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Tapping anywhere in a complication will always open the watch app (no buttons or else support)"}]}]},{"content":[{"inlineContent":[{"text":"Use ","type":"text"},{"code":"Text","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Image","type":"codeVoice"},{"text":". and drawing primitives such as ","type":"text"},{"code":"Shape","type":"codeVoice"},{"text":"s, ","type":"text"},{"code":"Path","type":"codeVoice"},{"text":"s, and ","type":"text"},{"code":"Paint","type":"codeVoice"},{"text":"s, other SwiftUI elements are not supported","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"SwiftUI animations are not supported"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Limit expensive drawing such as blurs and formatted text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the default font size as a guide for your complication layout"}]}]},{"content":[{"inlineContent":[{"text":"Circular and Rectangular complication families will mask your view","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Rectangular full view complication features a safe area for layout to help prevent your content from being clipped on the watch face."}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Written By","anchor":"Written-By"},{"type":"row","numberOfColumns":5,"columns":[{"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"zntfdr"}]}],"size":1},{"content":[{"text":"Federico Zanetello","level":3,"type":"heading","anchor":"Federico-Zanetello"},{"inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","isActive":true,"overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/zntfdr","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/zntfdr.dev","isActive":true,"type":"reference"}],"type":"paragraph"}],"size":4}]},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}]},{"type":"heading","level":2,"text":"Related Sessions","anchor":"Related-Sessions"},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10051-Go-further-with-Complications-in-WidgetKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10194-Swift-concurrency-Update-a-sample-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10041-Whats-new-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10046-Create-complications-for-Apple-Watch","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10049-Keep-your-complications-up-to-date","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10100-Meet-Watch-Face-Sharing"],"style":"list"},{"type":"small","inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright Â© 2012 â€“ 2025 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}]}],"sampleCodeDownload":{"action":{"overridingTitle":"Watch Video (22 min)","identifier":"https:\/\/developer.apple.com\/wwdc20\/10048","type":"reference","isActive":true},"kind":"sampleDownload"},"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10048-Build-complications-in-SwiftUI"},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10049-Keep-your-complications-up-to-date":{"url":"\/documentation\/wwdcnotes\/wwdc20-10049-keep-your-complications-up-to-date","kind":"article","abstract":[{"text":"Time is of the essence: Discover how your Apple Watch complications can provide relevant information throughout the day and help people get the information they need, when they need it. Learn best practices for capitalizing on your appâ€™s runtime opportunities, incorporating APIs like background app refresh and URLSession, and implementing well-timed push notifications.","type":"text"}],"type":"topic","title":"Keep your complications up to date","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10049-Keep-your-complications-up-to-date","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10051-Go-further-with-Complications-in-WidgetKit":{"abstract":[{"type":"text","text":"Discover how you can use WidgetKit to create beautiful complications on watch faces. Weâ€™ll introduce you to the watchOS-specific features found in WidgetKit, and help you migrate from existing ClockKit complications."}],"title":"Go further with Complications in WidgetKit","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22-10051-go-further-with-complications-in-widgetkit","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10051-Go-further-with-Complications-in-WidgetKit"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"url":"\/documentation\/wwdcnotes\/zntfdr","type":"topic","title":"Federico Zanetello (332 notes)","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"kind":"article","images":[{"type":"card","identifier":"zntfdr.jpeg"},{"type":"icon","identifier":"zntfdr.jpeg"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20":{"url":"\/documentation\/wwdcnotes\/wwdc20","type":"topic","title":"WWDC20","role":"collectionGroup","abstract":[{"text":"Xcode 12, Swift 5.3, iOS 14, macOS 11 (Big Sur), tvOS 14, watchOS 7.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"WidgetKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit Testing","type":"codeVoice"},{"text":", and more.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20","kind":"article","images":[{"identifier":"WWDC20-Icon.png","type":"icon"},{"identifier":"WWDC20.jpeg","type":"card"}]},"https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccircularopengaugeview/previewfacecolor/3593768-allcolors":{"url":"https:\/\/developer.apple.com\/documentation\/clockkit\/clkcomplicationtemplategraphiccircularopengaugeview\/previewfacecolor\/3593768-allcolors","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/clockkit\/clkcomplicationtemplategraphiccircularopengaugeview\/previewfacecolor\/3593768-allcolors","title":"CLKComplicationTemplate.PreviewFaceColor.allColors","titleInlineContent":[{"type":"codeVoice","code":"CLKComplicationTemplate.PreviewFaceColor.allColors"}]},"https://zntfdr.dev":{"title":"Blog","url":"https:\/\/zntfdr.dev","type":"link","titleInlineContent":[{"type":"text","text":"Blog"}],"identifier":"https:\/\/zntfdr.dev"},"https://developer.apple.com/documentation/clockkit/complicationrenderingmode":{"url":"https:\/\/developer.apple.com\/documentation\/clockkit\/complicationrenderingmode","type":"link","titleInlineContent":[{"code":"ComplicationRenderingMode","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/clockkit\/complicationrenderingmode","title":"ComplicationRenderingMode"},"https://developer.apple.com/documentation/swiftui/view/previewcontext(_:)":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/previewcontext(_:)","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/previewcontext(_:)","title":".previewContext()","titleInlineContent":[{"type":"codeVoice","code":".previewContext()"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10046-Create-complications-for-Apple-Watch":{"url":"\/documentation\/wwdcnotes\/wwdc20-10046-create-complications-for-apple-watch","kind":"article","abstract":[{"text":"When you add complications to a Watch app, people can access glanceable and up to date information directly from their watch face. Weâ€™ll show you how to create and build complications from the ground up and introduce you to Multiple Complications. Learn how to construct timelines, use families and templates, and discover best practices on crafting a thorough complication experience.","type":"text"}],"type":"topic","title":"Create complications for Apple Watch","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10046-Create-complications-for-Apple-Watch","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10194-Swift-concurrency-Update-a-sample-app":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10194-Swift-concurrency-Update-a-sample-app","abstract":[{"type":"text","text":"Discover Swift concurrency in action: Follow along as we update an existing sample app. Get real-world experience with async\/await, actors, and continuations. Weâ€™ll also explore techniques for migrating existing code to Swift concurrency over time."}],"url":"\/documentation\/wwdcnotes\/wwdc21-10194-swift-concurrency-update-a-sample-app","title":"Swift concurrency: Update a sample app","type":"topic","kind":"article"},"zntfdr.jpeg":{"variants":[{"url":"\/images\/WWDCNotes\/zntfdr.jpeg","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"zntfdr.jpeg"},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","title":"WWDC Notes","type":"topic","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","url":"\/documentation\/wwdcnotes","role":"collection"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10100-Meet-Watch-Face-Sharing":{"url":"\/documentation\/wwdcnotes\/wwdc20-10100-meet-watch-face-sharing","kind":"article","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10100-Meet-Watch-Face-Sharing","title":"Meet Watch Face Sharing","abstract":[{"text":"Show off your watchOS appâ€™s complications and create a watch face worth sharing. Learn how to share watch faces inside your watchOS and iOS apps or host them on the web for anyone to find and download. Weâ€™ll also explore best practices for using watch face preview images, and show you how to create a smooth installation experience.","type":"text"}]},"https://developer.apple.com/documentation/swiftui/circularprogressviewstyle":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/circularprogressviewstyle","type":"link","titleInlineContent":[{"code":"CircularProgressViewStyle","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/circularprogressviewstyle","title":"CircularProgressViewStyle"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}]},"WWDC20.jpeg":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC20.jpeg","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"WWDC20.jpeg"},"zntfdr":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/zntfdr.jpeg"}],"type":"image","identifier":"zntfdr","alt":"Profile image of Federico Zanetello"},"WWDC20-10048-pvg":{"alt":null,"type":"image","identifier":"WWDC20-10048-pvg","variants":[{"url":"\/images\/WWDCNotes\/WWDC20-10048-pvg.png","traits":["1x","light"]}]},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"WWDCNotes.png"},"WWDC20-Icon.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC20-Icon.png"}],"type":"image","identifier":"WWDC20-Icon.png","alt":null},"https://developer.apple.com/documentation/swiftui/linearprogressviewstyle":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/linearprogressviewstyle","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/linearprogressviewstyle","title":"LinearProgressViewStyle","titleInlineContent":[{"type":"codeVoice","code":"LinearProgressViewStyle"}]},"WWDC20-10048-tinting":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC20-10048-tinting.png","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"WWDC20-10048-tinting"},"https://developer.apple.com/documentation/swiftui/ProgressView":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/ProgressView","type":"link","titleInlineContent":[{"code":"ProgressView","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/ProgressView","title":"ProgressView"},"https://github.com/zntfdr":{"url":"https:\/\/github.com\/zntfdr","type":"link","identifier":"https:\/\/github.com\/zntfdr","title":"GitHub","titleInlineContent":[{"type":"text","text":"GitHub"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10041-Whats-new-in-SwiftUI":{"kind":"article","abstract":[{"type":"text","text":"SwiftUI can help you build better and more powerful apps for iPhone, iPad, Mac, Apple Watch, and Apple TV.  Learn more about the latest refinements to SwiftUI, including interface improvements like outlines, grids, and toolbars. Take advantage of SwiftUIâ€™s enhanced support across Apple frameworks to enable features like Sign In with Apple. Discover new visual effects, as well as new controls and styles. And find out how the new app and scene APIs enable you to create apps entirely in SwiftUI, as well as custom complications and all new widgets."}],"role":"sampleCode","title":"Whatâ€™s new in SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc20-10041-whats-new-in-swiftui","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10041-Whats-new-in-SwiftUI"},"https://developer.apple.com/wwdc20/10048":{"url":"https:\/\/developer.apple.com\/wwdc20\/10048","type":"download","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc20\/10048"}}}