{"metadata":{"roleHeading":"WWDC21","title":"What’s new in watchOS 8","role":"sampleCode","modules":[{"name":"WWDC Notes"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10002-Whats-new-in-watchOS-8"},"sampleCodeDownload":{"kind":"sampleDownload","action":{"type":"reference","isActive":true,"overridingTitle":"Watch Video (19 min)","identifier":"https:\/\/developer.apple.com\/wwdc21\/10002"}},"sections":[],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"kind":"article","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Always-on-display-dimmed-state","level":2,"text":"Always-on display dimmed state","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Supported on series 5 and 6"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"in watchOS 7, the always-on state showed your app’s UI blurred with the system time overlaid"}]}]},{"content":[{"inlineContent":[{"text":"when you rebuild your app with the watchOS 8 SDK, your app’s UI will now be shown in a dimmed state instead, and is immediately interactive if someone taps the UI","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"You can get notified of of this dimmed state via a new SwiftUI environment property  ","type":"text"},{"type":"codeVoice","code":"isLuminanceReduced"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"You can respond to this state by highlighting information that’s especially important, and hiding information that should stay private"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"In the watch simulator, you click the lock button in the simulator window to simulate a wrist-down event (triggering the dimmed state)","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Guidance:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"the transition from active state to the always-on state should feel seamless","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"don’t drastically alter the UI or reorganize information","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"dim non-essential information and elements, to give more prominence to the piece of information you want to stay highlighted and visible"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"if your UI has large elements that are filled with color or imagery, you may want to reduce those elements to be represented with a stroke or dimmed color","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"redact or remove sensitive information","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"reset animations","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"use SwiftUI’s ","type":"text"},{"code":"TimelineView","type":"codeVoice"},{"text":" to tell watchOS 8 that your inactive app needs to update its UI","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"UI Updates:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Apps with an ongoing, active session (e.g. workout or audio session) can update your UI up to once per second"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"other apps up to once per minute"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"assume your app is visible longer than two minutes"}],"type":"paragraph"}]}]},{"anchor":"HealthKit-data","text":"HealthKit data","level":2,"type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"background delivery of HealthKit data to Watch apps"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"new results come up to once per hours","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"if you have an active complication, up to four times per hour","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"all received results count against background app refresh budget","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Update frequency:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"immediate for critical data types (fall events, low blood oxygen saturation, heart rate events)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"hourly or longer for other events","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Bluetooth","text":"Bluetooth","level":2,"type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"from watchOS 4, Bluetooth devices can connect directly to Apple Watch and make use of Core Bluetooth."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"from watchOS 8, Bluetooth devices can connect during background app refresh opportunities that your app’s complications get when they’re on the active watch face","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"this means that your app’s complications can stay up to date with your Bluetooth device and display updated information throughout the day."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Background app refresh gives your app’s complications that are on the active watch face up to four opportunities per hour to connect and update.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"these opportunities will count against your app’s overall background app refresh budget","type":"text"}]}]}],"type":"unorderedList"}]}]},{"inlineContent":[{"text":"Guidance:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"connect and process your data within a very short period of time"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"new expiration handler on ","type":"text"},{"type":"codeVoice","code":"WKRefreshBackgroundTask"},{"text":", letting you know when you’re about to run out of time","type":"text"}]}]}]},{"anchor":"Location","text":"Location","level":2,"type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"new in watchOS 8, region-based user notifications"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"works similarly to iOS:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"deliver pre-created local notifications","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“when in use” location permission required"}]}]},{"content":[{"inlineContent":[{"text":"limit the number of regions to only include important POIs near someone or locations they’ve shown explicit intent for","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"new Location button, for one-time location authorization without going through authorization prompts each time it’s tapped","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"always-on altimeter API, no need location access"}]}]}]},{"anchor":"More-enhancements","text":"More enhancements","level":2,"type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"respiratory rate API"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"assistive touch"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"large accessibility text size","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"(Xcode 12.5+) Unit testing and UI testing"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Large titles"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"text input improvements:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Scribble or Dictation preference is preserved per app"}]}]},{"content":[{"inlineContent":[{"text":"quick access to changing between input types while entering text","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"text":"SwiftUI’s ","type":"text"},{"code":".searchable","type":"codeVoice"},{"text":" API","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Swipe actions on "},{"type":"codeVoice","code":"List"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Buttons improvements:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"new roles parameter to let the system know how to present and handle specific button types (e.g. destructive buttons)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"new "},{"code":"controlProminence","type":"codeVoice"},{"type":"text","text":" view modifier, which will give those buttons an additional haptic when tapped."}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"text":"SwiftUI ","type":"text"},{"code":"Canvas","type":"codeVoice"},{"text":" for rich programmatic drawing","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Written-By","text":"Written By","level":2,"type":"heading"},{"columns":[{"size":1,"content":[{"inlineContent":[{"type":"image","identifier":"zntfdr"}],"type":"paragraph"}]},{"size":4,"content":[{"level":3,"anchor":"Federico-Zanetello","text":"Federico Zanetello","type":"heading"},{"inlineContent":[{"overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","isActive":true,"overridingTitle":"Contributed Notes","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/zntfdr","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/zntfdr.dev","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"numberOfColumns":5,"type":"row"},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference"}],"type":"paragraph"},{"anchor":"Related-Sessions","text":"Related Sessions","level":2,"type":"heading"},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10005-Connect-Bluetooth-devices-to-Apple-Watch","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10009-Build-a-workout-app-for-Apple-Watch","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10018-Whats-new-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10021-Add-rich-graphics-to-your-SwiftUI-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10048-Principles-of-great-widgets","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10102-Meet-the-Location-Button","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10176-Craft-search-experiences-in-SwiftUI"]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}]}],"abstract":[{"type":"text","text":"watchOS 8 brings all-new opportunities to keep people up to date on their watch face. With new APIs for the Always-On Retina display and updating complications from Bluetooth devices and background delivery of HealthKit data, it’s never been easier to keep your app up to date. Learn about region-based user notifications to leverage location in your app. Explore all the new enhancements to SwiftUI and watchOS that will get you excited to build your next Watch app."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc21-10002-whats-new-in-watchos-8"]}],"references":{"https://github.com/zntfdr":{"type":"link","title":"GitHub","url":"https:\/\/github.com\/zntfdr","identifier":"https:\/\/github.com\/zntfdr","titleInlineContent":[{"type":"text","text":"GitHub"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10009-Build-a-workout-app-for-Apple-Watch":{"url":"\/documentation\/wwdcnotes\/wwdc21-10009-build-a-workout-app-for-apple-watch","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10009-Build-a-workout-app-for-Apple-Watch","title":"Build a workout app for Apple Watch","kind":"article","type":"topic","abstract":[{"type":"text","text":"Build a workout app from scratch using SwiftUI and HealthKit during this code along. Learn how to support the Always On state using timelines to update workout metrics. Follow best design practices for workout apps."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10021-Add-rich-graphics-to-your-SwiftUI-app":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10021-Add-rich-graphics-to-your-SwiftUI-app","title":"Add rich graphics to your SwiftUI app","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10021-add-rich-graphics-to-your-swiftui-app","kind":"article","abstract":[{"type":"text","text":"Learn how you can bring your graphics to life with SwiftUI. We’ll begin by working with safe areas, including the keyboard safe area, and learn how to design beautiful, edge-to-edge graphics that won’t underlap the on-screen keyboard. We’ll also explore the materials and vibrancy you can use in SwiftUI to create easily customizable backgrounds and controls, and go over graphics APIs like drawingGroup and the all new canvas. With these tools, it’s simpler than ever to design fully interactive and interruptible animations and graphics in SwiftUI."}],"role":"sampleCode"},"zntfdr.jpeg":{"type":"image","identifier":"zntfdr.jpeg","variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}],"alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10102-Meet-the-Location-Button":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc21-10102-meet-the-location-button","title":"Meet the Location Button","abstract":[{"text":"Meet CLLocationButton: a secure interface element that provides an easy, low-friction way to grant your app location access only when and where it is needed. Learn how you can add CLLocationButton to new or existing code, how to customize it within interface legibility guidelines, how to recognize and address customization failures, and how it interacts with iOS’s traditional prompt-based Location Services authorization.","type":"text"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10102-Meet-the-Location-Button","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10018-Whats-new-in-SwiftUI":{"type":"topic","role":"sampleCode","kind":"article","title":"What’s new in SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc21-10018-whats-new-in-swiftui","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10018-Whats-new-in-SwiftUI","abstract":[{"text":"There’s never been a better time to develop your apps with SwiftUI. Discover the latest updates to the UI framework — including lists, buttons, and text fields — and learn how these features can help you more fully adopt SwiftUI in your app. Find out how to create beautiful, visually-rich graphics using the canvas view, materials, and enhancements to symbols. Explore multi-column tables on macOS, refinements to focus and keyboard interaction, and the multi-platform search API. And we’ll show you how to take advantage of features like Swift concurrency, a brand new AttributedString, format styles, localization, and so much more.","type":"text"}]},"WWDCNotes.png":{"type":"image","identifier":"WWDCNotes.png","variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10176-Craft-search-experiences-in-SwiftUI":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10176-Craft-search-experiences-in-SwiftUI","title":"Craft search experiences in SwiftUI","abstract":[{"type":"text","text":"Discover how you can help people quickly find specific content within your apps. Learn how to use SwiftUI’s .searchable modifier in conjunction with other views to best incorporate search for your app. And we’ll show you how to elevate your implementation by providing search suggestions to help people understand the types of searches they can perform."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10176-craft-search-experiences-in-swiftui","type":"topic","kind":"article"},"zntfdr":{"type":"image","identifier":"zntfdr","variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}],"alt":"Profile image of Federico Zanetello"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"type":"topic","role":"collectionGroup","kind":"article","title":"WWDC21","images":[{"identifier":"WWDC21-Icon.png","type":"icon"},{"type":"card","identifier":"WWDC21.jpeg"}],"url":"\/documentation\/wwdcnotes\/wwdc21","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","abstract":[{"text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"MusicKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DocC","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit 2","type":"codeVoice"},{"text":", and more.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10005-Connect-Bluetooth-devices-to-Apple-Watch":{"type":"topic","title":"Connect Bluetooth devices to Apple Watch","url":"\/documentation\/wwdcnotes\/wwdc21-10005-connect-bluetooth-devices-to-apple-watch","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10005-Connect-Bluetooth-devices-to-Apple-Watch","abstract":[{"text":"Discover how you can integrate data from Bluetooth accessories into Apple Watch apps and complications. Bluetooth devices can provide medical data, sports stats, and more to Apple Watch, and help people get more out of your software in the process. We’ll show you how to connect to these devices during Background App Refresh to display the most up-to-date information in your Apple Watch complications, provide an overview of Core Bluetooth on watchOS, and explore best practices for Bluetooth accessory design.","type":"text"}],"role":"sampleCode","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10048-Principles-of-great-widgets":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10048-Principles-of-great-widgets","role":"sampleCode","abstract":[{"text":"Explore the foundations of great widgets by keeping them relevant and customizable. Learn how to keep widgets up to date with timeline entries and TimelineReloadPolicies. Discover how to adapt your widget to different presentation environments and physical location. And lastly, find out how to create customizable widgets that someone can personalize to their liking.","type":"text"}],"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc21-10048-principles-of-great-widgets","type":"topic","title":"Principles of great widgets"},"WWDC21-Icon.png":{"type":"image","identifier":"WWDC21-Icon.png","variants":[{"url":"\/images\/WWDC21-Icon.png","traits":["1x","light"]}],"alt":null},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","url":"\/documentation\/wwdcnotes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"title":"WWDC Notes","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","role":"collection","images":[{"identifier":"WWDCNotes.png","type":"icon"}]},"https://zntfdr.dev":{"type":"link","title":"Blog","url":"https:\/\/zntfdr.dev","identifier":"https:\/\/zntfdr.dev","titleInlineContent":[{"type":"text","text":"Blog"}]},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"images":[{"type":"card","identifier":"zntfdr.jpeg"},{"type":"icon","identifier":"zntfdr.jpeg"}],"type":"topic","role":"sampleCode","title":"Federico Zanetello (332 notes)","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"url":"\/documentation\/wwdcnotes\/zntfdr","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr"},"https://developer.apple.com/wwdc21/10002":{"type":"download","url":"https:\/\/developer.apple.com\/wwdc21\/10002","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc21\/10002"},"WWDC21.jpeg":{"type":"image","identifier":"WWDC21.jpeg","alt":null,"variants":[{"url":"\/images\/WWDC21.jpeg","traits":["1x","light"]}]},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"type":"link","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}]}}}