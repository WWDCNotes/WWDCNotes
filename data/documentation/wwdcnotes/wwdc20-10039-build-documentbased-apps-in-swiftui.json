{"metadata":{"modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC20","title":"Build document-based apps in SwiftUI","role":"sampleCode"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Learn how to build a document-based app entirely in SwiftUI! We’ll walk you through the DocumentGroup API and how it composes with your App and Scenes, allowing you to add out-of-the-box support for document management — such as document browsing and standard commands — no heavy lifting required. You’ll learn to set up Universal Type Identifiers as well as gain understanding into what makes a top-notch document-based app."}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20"]]},"kind":"article","sampleCodeDownload":{"action":{"type":"reference","overridingTitle":"Watch Video (12 min)","isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc20\/10039"},"kind":"sampleDownload"},"primaryContentSections":[{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Document-based apps are apps whose primary workflow is opening user’s files of a specific type from the disk, editing them and saving them back to disk - as opposed to apps that work with data kept in their own internal databases.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"There are also apps of mixed type, where document-focused features are a part of the UI, e.g.:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Xcode is primarily document-based, but it also has non-document parts like documentation, organizer"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Mail generally works with an internally managed database, but can also open single email files from any place on disk"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For document-based apps, use the "},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/documentgroup"},{"type":"text","text":" scene as the main scene of the app:"}]},{"type":"codeListing","code":["DocumentGroup(newDocument: MyDocument()) { file in","    TextEditor(text: file.$document.text)","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"You can also mix "},{"type":"codeVoice","code":"DocumentGroup"},{"type":"text","text":" and "},{"type":"codeVoice","code":"WindowGroup"},{"type":"text","text":" in apps that should have both document-based and non-document-based windows."}],"type":"paragraph"},{"inlineContent":[{"type":"codeVoice","code":"DocumentGroup"},{"type":"text","text":" automatically provides various document management features expected on the given platform:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"menu items like File > Open\/Save in the macOS menu"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"state tracking and file renaming\/moving using the titlebar popup on macOS"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Handoff between devices"}]}]},{"content":[{"inlineContent":[{"text":"a document browser and a navigation bar with search field on iOS","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"DocumentGroup"},{"text":" initializer takes a document object which represents a single document of a type handled by the given document group, and a view closure that describes the view hierarchy to be rendered for each document’s scene. The closure’s argument (","type":"text"},{"type":"codeVoice","code":"file"},{"text":") gives you a binding that provides read-write data to the document’s data model. The binding lets SwiftUI know when you update the document contents through the binding, so it can automatically handle things like registering undo actions and marking the document state as dirty.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/texteditor","type":"reference"},{"type":"text","text":" - a new built-in text view type kind of like "},{"code":"UITextView","type":"codeVoice"}],"type":"paragraph"},{"anchor":"Document-types","text":"Document types","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"Document-based apps have a “Document Types” section in the "},{"type":"codeVoice","code":"Info.plist"},{"type":"text","text":", where you declare Uniform Type Identifiers of document types associated with your app:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Imported types ⭢ documents from other apps or sources that your app is able to open","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Exported types ⭢ document types owned by your app","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"The type that implements the document model conforms to "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/filedocument"},{"type":"text","text":" (for value types) and declares its own "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/uniformtypeidentifiers\/uttype"},{"type":"text","text":" instances that represent imported and exported file types:"}],"type":"paragraph"},{"syntax":"swift","code":["import UniformTypeIdentifiers","","extension UTType {","    static var exampleText: UTType {","        UTType(importedAs: \"com.example.plain-text\")","    }","","    static let shapeEditDocument =","        UTType(exportedAs: \"com.example.ShapeEdit.shapes\")","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"An imported type needs to be a computed property, because the value returned from the constructor may change between calls while the app is running, depending on system configuration. Exported type can just be assigned once and stored. (This is also explained in a tech talk video which talks specifically about UTIs, “"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/tech-talks\/10696\/","isActive":true},{"type":"text","text":"”.)"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The document type provides a list of types (public types and app’s own types) that it can accept:"}],"type":"paragraph"},{"syntax":"swift","code":["static var readableContentTypes: [UTType] { [.exampleText] }"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"It also has methods for reading and writing its document to\/from a file, which you need to implement, using e.g. Codable to encode\/decode the value into your chosen format:"}],"type":"paragraph"},{"syntax":"swift","code":["init(fileWrapper: FileWrapper, contentType: UTType) throws { ... }","","func write(to fileWrapper: inout FileWrapper, contentType: UTType) throws { ... }"],"type":"codeListing"},{"inlineContent":[{"text":"In those methods, you can assume that the content type is one of those you declared as accepted by your app.","type":"text"}],"type":"paragraph"},{"anchor":"Written-By","text":"Written By","level":2,"type":"heading"},{"numberOfColumns":5,"columns":[{"content":[{"inlineContent":[{"type":"image","identifier":"mackuba"}],"type":"paragraph"}],"size":1},{"content":[{"text":"Kuba Suder","anchor":"Kuba-Suder","level":3,"type":"heading"},{"inlineContent":[{"type":"reference","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/mackuba","overridingTitle":"Contributed Notes"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/mackuba"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/mackuba.eu"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/x.com\/kuba_suder"}],"type":"paragraph"}],"size":4}],"type":"row"},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}],"type":"paragraph"},{"anchor":"Related-Sessions","text":"Related Sessions","level":2,"type":"heading"},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10056-Build-better-documentbased-apps","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10037-App-essentials-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10041-Whats-new-in-SwiftUI"]},{"inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}],"type":"small"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10039-Build-documentbased-apps-in-SwiftUI"},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc20-10039-build-documentbased-apps-in-swiftui"]}],"references":{"https://developer.apple.com/documentation/uniformtypeidentifiers/uttype":{"title":"UTType","url":"https:\/\/developer.apple.com\/documentation\/uniformtypeidentifiers\/uttype","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/uniformtypeidentifiers\/uttype","titleInlineContent":[{"code":"UTType","type":"codeVoice"}]},"https://developer.apple.com/documentation/swiftui/documentgroup":{"title":"DocumentGroup","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/documentgroup","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/documentgroup","titleInlineContent":[{"type":"codeVoice","code":"DocumentGroup"}]},"https://github.com/mackuba":{"title":"GitHub","url":"https:\/\/github.com\/mackuba","type":"link","identifier":"https:\/\/github.com\/mackuba","titleInlineContent":[{"text":"GitHub","type":"text"}]},"https://mackuba.eu":{"title":"Blog","url":"https:\/\/mackuba.eu","type":"link","identifier":"https:\/\/mackuba.eu","titleInlineContent":[{"type":"text","text":"Blog"}]},"https://developer.apple.com/wwdc20/10039":{"url":"https:\/\/developer.apple.com\/wwdc20\/10039","checksum":null,"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc20\/10039"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10041-Whats-new-in-SwiftUI":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"SwiftUI can help you build better and more powerful apps for iPhone, iPad, Mac, Apple Watch, and Apple TV.  Learn more about the latest refinements to SwiftUI, including interface improvements like outlines, grids, and toolbars. Take advantage of SwiftUI’s enhanced support across Apple frameworks to enable features like Sign In with Apple. Discover new visual effects, as well as new controls and styles. And find out how the new app and scene APIs enable you to create apps entirely in SwiftUI, as well as custom complications and all new widgets."}],"role":"sampleCode","title":"What’s new in SwiftUI","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10041-Whats-new-in-SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc20-10041-whats-new-in-swiftui"},"doc://WWDCNotes/documentation/WWDCNotes/mackuba":{"images":[{"identifier":"mackuba.jpeg","type":"card"},{"type":"icon","identifier":"mackuba.jpeg"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/mackuba","url":"\/documentation\/wwdcnotes\/mackuba","abstract":[{"text":"Independent Mac & iOS developer. Sometimes freelancing, mostly working on my own stuff these days.","type":"text"}],"title":"Kuba Suder (16 notes)","role":"sampleCode","type":"topic"},"mackuba":{"alt":"Profile image of Kuba Suder","type":"image","variants":[{"url":"\/images\/mackuba.jpeg","traits":["1x","light"]}],"identifier":"mackuba"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10037-App-essentials-in-SwiftUI":{"title":"App essentials in SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc20-10037-app-essentials-in-swiftui","abstract":[{"text":"Thanks to the new App protocol, SwiftUI now supports building entire apps! See how Apps, Scenes, and Views fit together. Learn how easy it is to implement the features people expect from a best-in-class product while saving time and reducing complexity. Easily add expected functionality to your interface using the new commands modifier, and explore the ins and outs of the new WindowGroup API.","type":"text"}],"type":"topic","kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10037-App-essentials-in-SwiftUI"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"WWDC20-Icon.png":{"alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC20-Icon.png"}],"identifier":"WWDC20-Icon.png"},"mackuba.jpeg":{"alt":null,"type":"image","variants":[{"url":"\/images\/mackuba.jpeg","traits":["1x","light"]}],"identifier":"mackuba.jpeg"},"https://developer.apple.com/videos/play/tech-talks/10696/":{"title":"Uniform Type Identifiers — a reintroduction","url":"https:\/\/developer.apple.com\/videos\/play\/tech-talks\/10696\/","type":"link","titleInlineContent":[{"text":"Uniform Type Identifiers — a reintroduction","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/tech-talks\/10696\/"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc20","abstract":[{"type":"text","text":"Xcode 12, Swift 5.3, iOS 14, macOS 11 (Big Sur), tvOS 14, watchOS 7."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"WidgetKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"StoreKit Testing"},{"type":"text","text":", and more."}],"title":"WWDC20","images":[{"identifier":"WWDC20-Icon.png","type":"icon"},{"identifier":"WWDC20.jpeg","type":"card"}],"role":"collectionGroup"},"https://developer.apple.com/documentation/swiftui/filedocument":{"title":"FileDocument","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/filedocument","type":"link","titleInlineContent":[{"code":"FileDocument","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/filedocument"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10056-Build-better-documentbased-apps":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10056-build-better-documentbased-apps","type":"topic","title":"Build better document-based apps","abstract":[{"type":"text","text":"Discover how you can use the latest features in iPadOS to improve your document-based apps. We’ll show you how to take advantage of UIDocument as well as existing desktop-class iPad and document-based APIs to add new features in your app. Find out how to convert data models to UIDocument, present documents with UIDocumentViewController, learn how to migrate your apps to the latest APIs, and explore best practices."}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10056-Build-better-documentbased-apps"},"WWDC20.jpeg":{"alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC20.jpeg"}],"identifier":"WWDC20.jpeg"},"WWDCNotes.png":{"alt":null,"type":"image","variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"identifier":"WWDCNotes.png"},"https://developer.apple.com/documentation/swiftui/texteditor":{"title":"TextEditor()","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/texteditor","type":"link","titleInlineContent":[{"code":"TextEditor()","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/texteditor"},"https://x.com/kuba_suder":{"title":"X\/Twitter","url":"https:\/\/x.com\/kuba_suder","type":"link","titleInlineContent":[{"type":"text","text":"X\/Twitter"}],"identifier":"https:\/\/x.com\/kuba_suder"},"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","kind":"symbol","url":"\/documentation\/wwdcnotes","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"title":"WWDC Notes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"role":"collection"}}}