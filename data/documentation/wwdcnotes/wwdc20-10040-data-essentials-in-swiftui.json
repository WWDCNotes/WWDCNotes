{"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Questions to ask when creating a new View","level":2,"anchor":"Questions-to-ask-when-creating-a-new-View"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"What data does this view need?"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"How will the view manipulate that data? Is it read only?"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Where will the data come from? (To determine the source of truth)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Who owns the data? (where the source of truth should come from)"}]}]}],"type":"unorderedList"},{"type":"heading","text":"Why do we need to use property wrappers to store our data?","level":2,"anchor":"Why-do-we-need-to-use-property-wrappers-to-store-our-data"},{"inlineContent":[{"type":"text","text":"Our views only exist temporarily: after SwiftUI completes their rendering, the structs instances go away."},{"type":"text","text":" "},{"type":"text","text":"When we add a property wrapper such as "},{"type":"codeVoice","code":"@State"},{"type":"text","text":" to our "},{"type":"codeVoice","code":"View"},{"type":"text","text":", SwiftUI takes over its managent, making sure it’s there even when our "},{"type":"codeVoice","code":"View"},{"type":"text","text":"s are re-instantiated over and over."}],"type":"paragraph"},{"type":"heading","text":"When to use what, for view-only sources of truth","level":2,"anchor":"When-to-use-what-for-view-only-sources-of-truth"},{"type":"heading","text":"Swift Properties","level":3,"anchor":"Swift-Properties"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Use properties for data that is not mutated by the view (a.k.a. data that the view only reads, but not mutates).","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","text":"`@State`","level":3,"anchor":"State"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"code":"State","type":"codeVoice"},{"type":"text","text":" for transient data owned by the view."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By using "},{"code":"@State","type":"codeVoice"},{"type":"text","text":", we’re saying that the source of truth belongs to this View (a.k.a. it’s local to this view)."}]}]}],"type":"unorderedList"},{"type":"heading","text":"`@Binding`","level":3,"anchor":"Binding"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" for reading and mutating data owned by an ancestor."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" creates a data dependency between our view and the ancestor owning that source of truth."}]}]},{"content":[{"inlineContent":[{"text":"It’s ok to build a new binding from an existing binding.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","text":"`ObservableObject`","level":2,"anchor":"ObservableObject"},{"items":[{"content":[{"inlineContent":[{"text":"We can think of ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"text":" as our interface to the real, UI-independent data\/models. It represents SwiftUI’s ","type":"text"},{"type":"codeVoice","code":"View"},{"text":"s data depenency.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":" represents the part of our model\/data that exposes data to our view, but it is not necessarily the whole data\/model."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Classes conforming to "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":" automatically gain a publisher, however we can write our own, for example we can use a publisher for a timer, or use a KVO publisher to observe an existing model."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"When our type conforms to "},{"code":"ObservableObject","type":"codeVoice"},{"type":"text","text":", we’re creating a new Source of Truth and teaching SwiftUI how to react to its changes."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","text":"`@Published`","level":3,"anchor":"Published"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"code":"@Published","type":"codeVoice"},{"type":"text","text":" on the properties of our types conforming to "},{"code":"@ObservableObject","type":"codeVoice"},{"type":"text","text":" when we want SwiftUI to be notified of their changes."}]}]}],"type":"unorderedList"},{"type":"heading","text":"When to use what, for `ObservableObject`","level":2,"anchor":"When-to-use-what-for-ObservableObject"},{"type":"heading","text":"`ObservedObject`","level":3,"anchor":"ObservedObject"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"code":"ObservedObject","type":"codeVoice"},{"type":"text","text":" when the source of truth is separate from its UI."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"SwiftUI does not get ownership of the ","type":"text"},{"type":"codeVoice","code":"ObservedObject"},{"text":" instance we’re providing, it’s our responsibility to manage its lifecycle.","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","text":"`@StateObject`","level":3,"anchor":"StateObject"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Similar to ","type":"text"},{"code":"ObservedObject","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI will instantiate the "},{"code":"@StateObject","type":"codeVoice"},{"type":"text","text":" associated value just before running our view "},{"code":"body","type":"codeVoice"},{"type":"text","text":" for the first time."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"SwiftUI will keep the instance alive for the whole lifecycle of the view.","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","text":"`@EnvironmentObject`","level":3,"anchor":"EnvironmentObject"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"code":"@EnvironmentObject","type":"codeVoice"},{"text":" when we need to pass data between views that have other views in-between that don’t need that data.","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","text":"Behind the scenes of SwiftUI Property Wrappers","level":2,"anchor":"Behind-the-scenes-of-SwiftUI-Property-Wrappers"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whenever we use "},{"type":"codeVoice","code":"@ObserveObject"},{"type":"text","text":" in our views, SwiftUI will subscribe to the "},{"type":"codeVoice","code":"objectWillChange"},{"type":"text","text":" publisher of that specific "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Whenever the ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"text":" will change, all the views ","type":"text"},{"inlineContent":[{"text":"subscribed","type":"text"}],"type":"emphasis"},{"text":" to it will be updated.","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","text":"Performance Tips","level":2,"anchor":"Performance-Tips"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Ensure that our "},{"type":"codeVoice","code":"View"},{"type":"text","text":"s initialization is cheap."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Make ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" a pure function, no side effects.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Avoid making assumptions on when and how often "},{"code":"body","type":"codeVoice"},{"type":"text","text":" is called."}]}]}],"type":"unorderedList"},{"type":"heading","text":"Event Sources","level":2,"anchor":"Event-Sources"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/outlinesubgroupchildren\/onreceive(_:perform:)","isActive":true}]}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/outlinesubgroupchildren\/onchange(of:perform:)","type":"reference","isActive":true}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/outlinesubgroupchildren\/onopenurl(perform:)","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/outlinesubgroupchildren\/oncontinueuseractivity(_:perform:)"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"The closure associtate with these events is launched in the main thread, dispatch to less priority queues to avoid slow updates"}],"type":"paragraph"},{"type":"heading","text":"Source of Truth Lifetime Extended Lifetime","level":2,"anchor":"Source-of-Truth-Lifetime-Extended-Lifetime"},{"inlineContent":[{"type":"text","text":"In iOS 14 SwiftUI can automatically manage restoring the state of our app even after our process has been killed. this it done via two new property wrappers:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/scenestorage","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/appstorage"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Both are lightweight stores that we use in conjunction with our model.","type":"text"}],"type":"paragraph"},{"type":"heading","text":"`@SceneStorage`","level":3,"anchor":"SceneStorage"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Per scene storage","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Accessible to "},{"type":"codeVoice","code":"View"},{"type":"text","text":"s"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Used to restore the scene"}]}]},{"content":[{"inlineContent":[{"text":"It’s basically a ","type":"text"},{"type":"codeVoice","code":"Scene"},{"text":"’s version of ","type":"text"},{"type":"codeVoice","code":"@State"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","text":"`@AppStorage`","level":3,"anchor":"AppStorage"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Uses UserDefauts behind the scenes","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Per app storage"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Accessible to "},{"code":"View","type":"codeVoice"},{"type":"text","text":"s and "},{"code":"App","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use it to store small sets of data, such as the app settings","type":"text"}]}]}],"type":"unorderedList"},{"type":"heading","text":"Written By","level":2,"anchor":"Written-By"},{"type":"row","numberOfColumns":5,"columns":[{"content":[{"inlineContent":[{"identifier":"zntfdr","type":"image"}],"type":"paragraph"}],"size":1},{"content":[{"type":"heading","text":"Federico Zanetello","level":3,"anchor":"Federico-Zanetello"},{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","type":"reference","overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}]},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"identifier":"https:\/\/github.com\/zntfdr","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"identifier":"https:\/\/zntfdr.dev","type":"reference"}]}],"size":4}]},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}],"type":"paragraph"},{"type":"heading","text":"Related Sessions","level":2,"anchor":"Related-Sessions"},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10072-Use-SwiftUI-with-UIKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10019-Discover-concurrency-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10022-Demystify-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10031-Stacks-Grids-and-Outlines-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10037-App-essentials-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10041-Whats-new-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10119-Introduction-to-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10149-Structure-your-app-for-SwiftUI-previews"]},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}]}],"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc20-10040-data-essentials-in-swiftui"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20"]]},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10040-Data-Essentials-in-SwiftUI","interfaceLanguage":"swift"},"sections":[],"metadata":{"modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC20","title":"Data Essentials in SwiftUI","role":"sampleCode"},"kind":"article","sampleCodeDownload":{"action":{"identifier":"https:\/\/developer.apple.com\/wwdc20\/10040","type":"reference","overridingTitle":"Watch Video (36 min)","isActive":true},"kind":"sampleDownload"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Data is a complex part of any app, but SwiftUI makes it easy to ensure a smooth, data-driven experience from prototyping to production. Discover @State and @Binding, two powerful tools that can preserve and seamlessly update your Source of Truth. We’ll also show you how ObservableObject lets you connect your views to your data model. Learn about some tricky challenges and cool new ways to solve them — directly from the experts!","type":"text"}],"references":{"WWDC20-Icon.png":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDC20-Icon.png"}],"identifier":"WWDC20-Icon.png"},"https://developer.apple.com/documentation/swiftui/scenestorage":{"type":"link","titleInlineContent":[{"type":"codeVoice","code":"@SceneStorage"}],"title":"@SceneStorage","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/scenestorage","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/scenestorage"},"https://developer.apple.com/documentation/swiftui/appstorage":{"titleInlineContent":[{"type":"codeVoice","code":"@AppStorage"}],"title":"@AppStorage","type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/appstorage","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/appstorage"},"https://developer.apple.com/documentation/swiftui/outlinesubgroupchildren/onchange(of:perform:)":{"type":"link","titleInlineContent":[{"type":"codeVoice","code":"onChange"}],"title":"onChange","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/outlinesubgroupchildren\/onchange(of:perform:)","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/outlinesubgroupchildren\/onchange(of:perform:)"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10041-Whats-new-in-SwiftUI":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10041-Whats-new-in-SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc20-10041-whats-new-in-swiftui","kind":"article","title":"What’s new in SwiftUI","abstract":[{"text":"SwiftUI can help you build better and more powerful apps for iPhone, iPad, Mac, Apple Watch, and Apple TV.  Learn more about the latest refinements to SwiftUI, including interface improvements like outlines, grids, and toolbars. Take advantage of SwiftUI’s enhanced support across Apple frameworks to enable features like Sign In with Apple. Discover new visual effects, as well as new controls and styles. And find out how the new app and scene APIs enable you to create apps entirely in SwiftUI, as well as custom complications and all new widgets.","type":"text"}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10037-App-essentials-in-SwiftUI":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10037-App-essentials-in-SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc20-10037-app-essentials-in-swiftui","title":"App essentials in SwiftUI","abstract":[{"text":"Thanks to the new App protocol, SwiftUI now supports building entire apps! See how Apps, Scenes, and Views fit together. Learn how easy it is to implement the features people expect from a best-in-class product while saving time and reducing complexity. Easily add expected functionality to your interface using the new commands modifier, and explore the ins and outs of the new WindowGroup API.","type":"text"}],"role":"sampleCode","kind":"article","type":"topic"},"https://developer.apple.com/wwdc20/10040":{"checksum":null,"type":"download","url":"https:\/\/developer.apple.com\/wwdc20\/10040","identifier":"https:\/\/developer.apple.com\/wwdc20\/10040"},"https://developer.apple.com/documentation/swiftui/outlinesubgroupchildren/oncontinueuseractivity(_:perform:)":{"title":"onContinueUserActivity","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/outlinesubgroupchildren\/oncontinueuseractivity(_:perform:)","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/outlinesubgroupchildren\/oncontinueuseractivity(_:perform:)","type":"link","titleInlineContent":[{"code":"onContinueUserActivity","type":"codeVoice"}]},"doc://WWDCNotes/documentation/WWDCNotes":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","role":"collection","type":"topic","url":"\/documentation\/wwdcnotes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"kind":"symbol","title":"WWDC Notes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}]},"https://github.com/zntfdr":{"url":"https:\/\/github.com\/zntfdr","type":"link","identifier":"https:\/\/github.com\/zntfdr","title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}]},"zntfdr":{"variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}],"identifier":"zntfdr","alt":"Profile image of Federico Zanetello","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10149-Structure-your-app-for-SwiftUI-previews":{"abstract":[{"text":"When you use SwiftUI previews during development, you can quickly create apps that are more flexible and maintainable. Discover ways to improve the preview experience by making small tweaks to your project. Find out how to preview multiple files at once, how to manage data flow for previews, and how to use sample data while previewing. We’ll also give you strategies for defining view inputs to make them more previewable and testable.","type":"text"}],"title":"Structure your app for SwiftUI previews","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10149-Structure-your-app-for-SwiftUI-previews","url":"\/documentation\/wwdcnotes\/wwdc20-10149-structure-your-app-for-swiftui-previews","type":"topic","role":"sampleCode","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10031-Stacks-Grids-and-Outlines-in-SwiftUI":{"title":"Stacks, Grids, and Outlines in SwiftUI","kind":"article","abstract":[{"text":"Display detailed data in your SwiftUI apps more quickly and efficiently with improved stacks and new list and outline views. Now available on iOS and iPadOS for the first time, outlines are a new multi-platform tool for expressing hierarchical data that work alongside stacks and lists. Learn how to use new and improved tools in SwiftUI to display more content on screen when using table views, create smooth-scrolling and responsive stacks, and build out list views for content that needs more than a vStack can provide. Take your layout options even further with the new grid view, as well as disclosure groups.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10031-Stacks-Grids-and-Outlines-in-SwiftUI","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10031-stacks-grids-and-outlines-in-swiftui","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","url":"\/documentation\/wwdcnotes\/zntfdr","title":"Federico Zanetello (332 notes)","kind":"article","images":[{"identifier":"zntfdr.jpeg","type":"card"},{"identifier":"zntfdr.jpeg","type":"icon"}],"role":"sampleCode"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10022-Demystify-SwiftUI":{"title":"Demystify SwiftUI","kind":"article","abstract":[{"text":"Peek behind the curtain into the core tenets of SwiftUI philosophy: Identity, Lifetime, and Dependencies. Find out about common patterns, learn the principles that drive the framework, and discover how you can use them to guarantee correctness and performance for your app.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10022-Demystify-SwiftUI","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10022-demystify-swiftui","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10072-Use-SwiftUI-with-UIKit":{"abstract":[{"text":"Learn how to take advantage of the power of SwiftUI in your UIKit app. Build custom UICollectionView and UITableView cells seamlessly with SwiftUI using UIHostingConfiguration. We’ll also show you how to manage data flow between UIKit and SwiftUI components within your app.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10072-Use-SwiftUI-with-UIKit","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10072-use-swiftui-with-uikit","type":"topic","kind":"article","title":"Use SwiftUI with UIKit"},"https://zntfdr.dev":{"title":"Blog","identifier":"https:\/\/zntfdr.dev","url":"https:\/\/zntfdr.dev","type":"link","titleInlineContent":[{"type":"text","text":"Blog"}]},"https://developer.apple.com/documentation/swiftui/outlinesubgroupchildren/onopenurl(perform:)":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/outlinesubgroupchildren\/onopenurl(perform:)","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/outlinesubgroupchildren\/onopenurl(perform:)","title":"onOpenURL","titleInlineContent":[{"type":"codeVoice","code":"onOpenURL"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10019-Discover-concurrency-in-SwiftUI":{"kind":"article","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10019-Discover-concurrency-in-SwiftUI","abstract":[{"text":"Discover how you can use Swift’s concurrency features to build even better SwiftUI apps. We’ll show you how concurrent workflows interact with your ObservableObjects, and explore how you can use them directly in your SwiftUI views and models. Find out how to use await to make your app run smoothly on the SwiftUI runloop, and learn how to fetch remote images quickly with the AsyncImage API. And we’ll take you through the process of enabling additional asynchronous flows in your custom views.","type":"text"}],"title":"Discover concurrency in SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc21-10019-discover-concurrency-in-swiftui"},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"identifier":"WWDCNotes.png","alt":null,"type":"image"},"zntfdr.jpeg":{"type":"image","identifier":"zntfdr.jpeg","variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}],"alt":null},"https://developer.apple.com/documentation/swiftui/outlinesubgroupchildren/onreceive(_:perform:)":{"title":"onReceive","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/outlinesubgroupchildren\/onreceive(_:perform:)","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/outlinesubgroupchildren\/onreceive(_:perform:)","type":"link","titleInlineContent":[{"code":"onReceive","type":"codeVoice"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10119-Introduction-to-SwiftUI":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10119-Introduction-to-SwiftUI","abstract":[{"type":"text","text":"Explore the world of declarative-style programming: Discover how to build a fully-functioning SwiftUI app from scratch as we explain the benefits of writing declarative code and how SwiftUI and Xcode can combine forces to help you build great apps, faster."}],"kind":"article","title":"Introduction to SwiftUI","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc20-10119-introduction-to-swiftui"},"WWDC20.jpeg":{"type":"image","identifier":"WWDC20.jpeg","variants":[{"url":"\/images\/WWDC20.jpeg","traits":["1x","light"]}],"alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20":{"url":"\/documentation\/wwdcnotes\/wwdc20","title":"WWDC20","images":[{"type":"icon","identifier":"WWDC20-Icon.png"},{"type":"card","identifier":"WWDC20.jpeg"}],"abstract":[{"text":"Xcode 12, Swift 5.3, iOS 14, macOS 11 (Big Sur), tvOS 14, watchOS 7.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"type":"codeVoice","code":"WidgetKit"},{"text":", ","type":"text"},{"type":"codeVoice","code":"StoreKit Testing"},{"text":", and more.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20","kind":"article","type":"topic","role":"collectionGroup"}}}