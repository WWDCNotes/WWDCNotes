{"abstract":[{"type":"text","text":"Discover how you can use Swift’s concurrency features to build even better SwiftUI apps. We’ll show you how concurrent workflows interact with your ObservableObjects, and explore how you can use them directly in your SwiftUI views and models. Find out how to use await to make your app run smoothly on the SwiftUI runloop, and learn how to fetch remote images quickly with the AsyncImage API. And we’ll take you through the process of enabling additional asynchronous flows in your custom views."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"metadata":{"roleHeading":"WWDC21","modules":[{"name":"WWDC Notes"}],"role":"sampleCode","title":"Discover concurrency in SwiftUI"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"ObservableObject-+-MainActor","text":"ObservableObject + @MainActor"},{"type":"paragraph","inlineContent":[{"text":"Imagine a view with the following class as a dependency:","type":"text"}]},{"type":"codeListing","code":["class Photos: ObservableObject { ","  @Published var items: [SpacePhoto] = [] ","","  func updateItems() { ","    let fetched = \/* fetch new items *\/ ","    items = fetched ","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When we assign to "},{"type":"codeVoice","code":"items"},{"type":"text","text":" (second row in "},{"type":"codeVoice","code":"updateItems()"},{"type":"text","text":"):"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"an ","type":"text"},{"code":"objectWillChange","type":"codeVoice"},{"text":" event will trigger","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"then the new data will be stored in "},{"type":"codeVoice","code":"items"},{"type":"text","text":"’s storage"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"When SwiftUI receives an ","type":"text"},{"code":"objectWillChange","type":"codeVoice"},{"text":" event:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"it takes a snapshot of the object (","type":"text"},{"inlineContent":[{"text":"before","type":"text"}],"type":"strong"},{"text":" its storage is updated).","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"once the storage is updated, SwiftUI compares the previous snapshot with the current value","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"if the values are different, SwiftUI will update the view (and all other views depending on this "},{"type":"codeVoice","code":"Photos"},{"type":"text","text":" object)"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"This flow works great as long as we are on the main thread\/loop. If we assign to ","type":"text"},{"type":"codeVoice","code":"items"},{"text":" in another thread, both SwiftUI snapshots might be taken before the ","type":"text"},{"type":"codeVoice","code":"items"},{"text":" storage is actually updated, meaning that the snapshot comparison will find unchanged values, thus not updating our views.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"New in Swift 5.5, we can declare our ","type":"text"},{"type":"codeVoice","code":"ObservableObject"},{"text":" class with swift’s ","type":"text"},{"type":"codeVoice","code":"@MainActor"},{"text":" attribute and, instead of asynchronous callbacks, use the new ","type":"text"},{"type":"codeVoice","code":"await"},{"text":" syntax to makes sure all operations are executed in the main thread.","type":"text"}]},{"type":"heading","level":2,"anchor":"New-SwiftUI-features","text":"New SwiftUI features"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/emptyview\/task(_:)","isActive":true},{"type":"text","text":" is a new view modifier that lets you run a task for the view lifetime"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"it starts when the view appears (similar to "},{"type":"codeVoice","code":"onAppear"},{"type":"text","text":")"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"it gets cancelled when the view disappears (similar to "},{"type":"codeVoice","code":"onDisappear"},{"type":"text","text":")"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"text":"use ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/asyncimage"},{"text":" to asynchronously load and display an image","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["AsyncImage(url: photo.url) { image in","  image","    .resizable()","    .aspectRatio(contentMode: .fill)","} placeholder: {","  ProgressView()","}",".frame(minWidth: 0, minHeight: 400)"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"use "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/refreshable(action:)","isActive":true},{"type":"text","text":" to add pull to refresh capabilities in your views"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"as the ","type":"text"},{"code":"action","type":"codeVoice"},{"text":" parameter expects an ","type":"text"},{"code":"async","type":"codeVoice"},{"text":" closure, the refresh indicator stays visible for the duration of the awaited operation","type":"text"}],"type":"paragraph"}]}]}]}]},{"type":"heading","level":2,"anchor":"Written-By","text":"Written By"},{"type":"row","columns":[{"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"zntfdr"}]}],"size":1},{"content":[{"text":"Federico Zanetello","anchor":"Federico-Zanetello","level":3,"type":"heading"},{"inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"overridingTitle":"Contributed Notes","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/zntfdr","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/zntfdr.dev","isActive":true,"type":"reference"}],"type":"paragraph"}],"size":4}],"numberOfColumns":5},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}]},{"type":"heading","level":2,"anchor":"Related-Sessions","text":"Related Sessions"},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10142-Efficiency-awaits-Background-tasks-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10018-Whats-new-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10022-Demystify-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10132-Meet-asyncawait-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10133-Protect-mutable-state-with-Swift-actors","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10134-Explore-structured-concurrency-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10294-Meet-MusicKit-for-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10040-Data-Essentials-in-SwiftUI"],"style":"list"},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}]},{"type":"small","inlineContent":[{"text":"All content copyright © 2012 – 2025 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}],"kind":"content"}],"sampleCodeDownload":{"action":{"overridingTitle":"Watch Video (22 min)","identifier":"https:\/\/developer.apple.com\/wwdc21\/10019","type":"reference","isActive":true},"kind":"sampleDownload"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10019-Discover-concurrency-in-SwiftUI"},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc21-10019-discover-concurrency-in-swiftui"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency":{"title":"Eliminate data races using Swift Concurrency","url":"\/documentation\/wwdcnotes\/wwdc22-110351-eliminate-data-races-using-swift-concurrency","abstract":[{"type":"text","text":"Join us as we explore one of the core concepts in Swift concurrency: isolation of tasks and actors. We’ll take you through Swift’s approach to eliminating data races and its effect on app architecture. We’ll also discuss the importance of atomicity in your code, share the nuances of Sendable checking to maintain isolation, and revisit assumptions about ordering work in a concurrent system."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency","kind":"article","role":"sampleCode","type":"topic"},"zntfdr":{"identifier":"zntfdr","alt":"Profile image of Federico Zanetello","variants":[{"url":"\/images\/WWDCNotes\/zntfdr.jpeg","traits":["1x","light"]}],"type":"image"},"https://zntfdr.dev":{"identifier":"https:\/\/zntfdr.dev","type":"link","url":"https:\/\/zntfdr.dev","titleInlineContent":[{"type":"text","text":"Blog"}],"title":"Blog"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10022-Demystify-SwiftUI":{"title":"Demystify SwiftUI","kind":"article","abstract":[{"text":"Peek behind the curtain into the core tenets of SwiftUI philosophy: Identity, Lifetime, and Dependencies. Find out about common patterns, learn the principles that drive the framework, and discover how you can use them to guarantee correctness and performance for your app.","type":"text"}],"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10022-demystify-swiftui","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10022-Demystify-SwiftUI"},"doc://WWDCNotes/documentation/WWDCNotes":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"role":"collection","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"title":"WWDC Notes","url":"\/documentation\/wwdcnotes","kind":"symbol"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10040-Data-Essentials-in-SwiftUI":{"url":"\/documentation\/wwdcnotes\/wwdc20-10040-data-essentials-in-swiftui","kind":"article","title":"Data Essentials in SwiftUI","type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10040-Data-Essentials-in-SwiftUI","abstract":[{"text":"Data is a complex part of any app, but SwiftUI makes it easy to ensure a smooth, data-driven experience from prototyping to production. Discover @State and @Binding, two powerful tools that can preserve and seamlessly update your Source of Truth. We’ll also show you how ObservableObject lets you connect your views to your data model. Learn about some tricky challenges and cool new ways to solve them — directly from the experts!","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10134-Explore-structured-concurrency-in-Swift":{"title":"Explore structured concurrency in Swift","kind":"article","abstract":[{"type":"text","text":"When you have code that needs to run at the same time as other code, it’s important to choose the right tool for the job. We’ll take you through the different kinds of concurrent tasks you can create in Swift, show you how to create groups of tasks, and find out how to cancel tasks in progress. We’ll also provide guidance on when you may want to use unstructured tasks."}],"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10134-explore-structured-concurrency-in-swift","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10134-Explore-structured-concurrency-in-Swift"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10294-Meet-MusicKit-for-Swift":{"abstract":[{"type":"text","text":"MusicKit makes it easy to integrate Apple Music into your app. Explore the Swift-based framework: We’ll take you through the basic process of using MusicKit — including how to find, request, and play content — and show you how you can incorporate music subscription workflows into your app if someone hasn’t yet signed up to Apple Music."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10294-Meet-MusicKit-for-Swift","role":"sampleCode","title":"Meet MusicKit for Swift","url":"\/documentation\/wwdcnotes\/wwdc21-10294-meet-musickit-for-swift","type":"topic","kind":"article"},"WWDC21.jpeg":{"type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDC21.jpeg","traits":["1x","light"]}],"identifier":"WWDC21.jpeg"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10142-Efficiency-awaits-Background-tasks-in-SwiftUI":{"title":"Efficiency awaits: Background tasks in SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc22-10142-efficiency-awaits-background-tasks-in-swiftui","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10142-Efficiency-awaits-Background-tasks-in-SwiftUI","kind":"article","abstract":[{"text":"Background Tasks help apps respond to system events and keep time-sensitive data up to date. Learn how you can use the SwiftUI Background Tasks API to handle tasks succinctly. We’ll show you how to use Swift Concurrency to handle network responses, background refresh, and more — all while preserving performance and power.","type":"text"}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10133-Protect-mutable-state-with-Swift-actors":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10133-Protect-mutable-state-with-Swift-actors","url":"\/documentation\/wwdcnotes\/wwdc21-10133-protect-mutable-state-with-swift-actors","role":"sampleCode","abstract":[{"text":"Data races occur when two separate threads concurrently access the same mutable state. They are trivial to construct, but are notoriously hard to debug.","type":"text"}],"title":"Protect mutable state with Swift actors","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10132-Meet-asyncawait-in-Swift":{"title":"Meet async\/await in Swift","kind":"article","abstract":[{"type":"text","text":"Swift now supports asynchronous functions — a pattern commonly known as async\/await. Discover how the new syntax can make your code easier to read and understand. Learn what happens when a function suspends, and find out how to adapt existing completion handlers to asynchronous functions."}],"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10132-meet-asyncawait-in-swift","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10132-Meet-asyncawait-in-Swift"},"WWDC21-Icon.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDC21-Icon.png","traits":["1x","light"]}],"identifier":"WWDC21-Icon.png"},"zntfdr.jpeg":{"identifier":"zntfdr.jpeg","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/zntfdr.jpeg","traits":["1x","light"]}],"type":"image"},"https://github.com/zntfdr":{"identifier":"https:\/\/github.com\/zntfdr","type":"link","url":"https:\/\/github.com\/zntfdr","titleInlineContent":[{"type":"text","text":"GitHub"}],"title":"GitHub"},"https://developer.apple.com/wwdc21/10019":{"type":"download","url":"https:\/\/developer.apple.com\/wwdc21\/10019","identifier":"https:\/\/developer.apple.com\/wwdc21\/10019","checksum":null},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"title":"Federico Zanetello (332 notes)","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"url":"\/documentation\/wwdcnotes\/zntfdr","kind":"article","type":"topic","images":[{"identifier":"zntfdr.jpeg","type":"card"},{"identifier":"zntfdr.jpeg","type":"icon"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10018-Whats-new-in-SwiftUI":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10018-Whats-new-in-SwiftUI","title":"What’s new in SwiftUI","abstract":[{"text":"There’s never been a better time to develop your apps with SwiftUI. Discover the latest updates to the UI framework — including lists, buttons, and text fields — and learn how these features can help you more fully adopt SwiftUI in your app. Find out how to create beautiful, visually-rich graphics using the canvas view, materials, and enhancements to symbols. Explore multi-column tables on macOS, refinements to focus and keyboard interaction, and the multi-platform search API. And we’ll show you how to take advantage of features like Swift concurrency, a brand new AttributedString, format styles, localization, and so much more.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10018-whats-new-in-swiftui","role":"sampleCode","type":"topic"},"https://developer.apple.com/documentation/swiftui/emptyview/task(_:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/emptyview\/task(_:)","titleInlineContent":[{"type":"codeVoice","code":"task(_:)"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/emptyview\/task(_:)","title":"task(_:)","type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"kind":"article","images":[{"type":"icon","identifier":"WWDC21-Icon.png"},{"type":"card","identifier":"WWDC21.jpeg"}],"title":"WWDC21","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","abstract":[{"type":"text","text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"code":"MusicKit","type":"codeVoice"},{"type":"text","text":", "},{"code":"DocC","type":"codeVoice"},{"type":"text","text":", "},{"code":"StoreKit 2","type":"codeVoice"},{"type":"text","text":", and more."}],"url":"\/documentation\/wwdcnotes\/wwdc21","role":"collectionGroup","type":"topic"},"WWDCNotes.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"identifier":"WWDCNotes.png"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"title":"Contributions are welcome!"},"https://developer.apple.com/documentation/swiftui/view/refreshable(action:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/refreshable(action:)","titleInlineContent":[{"type":"codeVoice","code":"refreshable(action:)"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/refreshable(action:)","title":"refreshable(action:)","type":"link"},"https://developer.apple.com/documentation/swiftui/asyncimage":{"type":"link","titleInlineContent":[{"type":"codeVoice","code":"AsyncImage"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/asyncimage","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/asyncimage","title":"AsyncImage"}}}