{"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/skhillon","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Contributors","title":"Sarthak Khillon (19 notes)","modules":[{"name":"WWDC Notes"}],"role":"sampleCode","images":[{"type":"card","identifier":"skhillon.jpeg"},{"type":"icon","identifier":"skhillon.jpeg"}]},"kind":"article","variants":[{"paths":["\/documentation\/wwdcnotes\/skhillon"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"text":"No Bio on GitHub","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Links","type":"heading","text":"Links"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"https:\/\/x.com\/SarthakKhillon","type":"reference","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/www.linkedin.com\/in\/sarthakkhillon\/","isActive":true,"type":"reference"}],"type":"paragraph"}]}]},{"level":2,"anchor":"Contributions","type":"heading","text":"Contributions"},{"type":"paragraph","inlineContent":[{"text":"Contributed 19 session notes in total. Their most active year was 2020.","type":"text"}]},{"level":3,"anchor":"2020","type":"heading","text":"2020"},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10647-Become-a-Simulator-expert","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10611-Explore-ARKit-4","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10111-Boost-performance-and-security-with-modern-networking","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10185-Visually-edit-SwiftUI-views","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10160-Formatters-Make-data-humanfriendly","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10206-Designed-for-iPad","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10687-Triage-test-failures-with-XCTIssue","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10217-Explore-numerical-computing-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10221-Get-your-test-results-faster","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10099-Explore-the-Action-and-Vision-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10162-Design-for-location-privacy","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10167-Safely-manage-pointers-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10165-Embrace-Swift-type-inference"]},{"level":3,"anchor":"2019","type":"heading","text":"2019"},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-607-Bringing-People-into-AR","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-262-Embedding-and-Sharing-Visually-Rich-Links"]},{"level":3,"anchor":"2016","type":"heading","text":"2016"},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC16-419-Protocol-and-Value-Oriented-Programming-in-UIKit-Apps","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC16-416-Understanding-Swift-Performance"]},{"level":3,"anchor":"2015","type":"heading","text":"2015"},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC15-414-Building-Better-Apps-with-Value-Types-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC15-408-ProtocolOriented-Programming-in-Swift"]}]}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Contributors"]]},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10217-Explore-numerical-computing-in-Swift":{"role":"sampleCode","title":"Explore numerical computing in Swift","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10217-Explore-numerical-computing-in-Swift","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10217-explore-numerical-computing-in-swift","abstract":[{"text":"Meet Swift Numerics: a new Swift package for computational mathematics. Take a tour of the protocols and types available in the package and find out how you can use them to write generic code. We’ll also show you how and when to use the new Float16 type to improve performance and reduce memory usage.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC16-416-Understanding-Swift-Performance":{"role":"sampleCode","title":"Understanding Swift Performance","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC16-416-Understanding-Swift-Performance","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc16-416-understanding-swift-performance","abstract":[{"text":"In this advanced session, find out how structs, classes, protocols, and generics are implemented in Swift. Learn about their relative costs in different dimensions of performance. See how to apply this information to speed up your code.","type":"text"}]},"Contributors.jpeg":{"identifier":"Contributors.jpeg","variants":[{"url":"\/images\/Contributors.jpeg","traits":["1x","light"]}],"alt":null,"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10167-Safely-manage-pointers-in-Swift":{"role":"sampleCode","title":"Safely manage pointers in Swift","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10167-Safely-manage-pointers-in-Swift","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10167-safely-manage-pointers-in-swift","abstract":[{"text":"Come with us as we delve into unsafe pointer types in Swift. Discover the requirements for each type and how to use it correctly. We’ll discuss typed pointers, drop down to raw pointers, and finally circumvent pointer type safety entirely by binding memory.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/Contributors":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Contributors","url":"\/documentation\/wwdcnotes\/contributors","title":"Contributors","abstract":[{"text":"WWDCNotes is only possible thanks to these awesome volunteers! Contribute now to get listed here as well.","type":"text"}],"images":[{"type":"icon","identifier":"WWDCNotes.png"},{"type":"card","identifier":"Contributors.jpeg"}],"role":"article","kind":"article","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10687-Triage-test-failures-with-XCTIssue":{"role":"sampleCode","title":"Triage test failures with XCTIssue","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10687-Triage-test-failures-with-XCTIssue","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10687-triage-test-failures-with-xctissue","abstract":[{"text":"Put your test failures to work: Learn how to triage and diagnose uncaught issues in your app using the latest testing APIs in Xcode. We’ll show you how to help ease your testing workflow and put failures into context to help you deliver the best quality product.","type":"text"}]},"WWDCNotes.png":{"identifier":"WWDCNotes.png","variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"alt":null,"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-262-Embedding-and-Sharing-Visually-Rich-Links":{"role":"sampleCode","title":"Embedding and Sharing Visually Rich Links","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-262-Embedding-and-Sharing-Visually-Rich-Links","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc19-262-embedding-and-sharing-visually-rich-links","abstract":[{"text":"The new Link Presentation framework enables app developers to easily present URLs in a rich, beautiful, and consistent way. Learn how to use Link Presentation to retrieve metadata from a URL, present the rich link content inside your app, and provide link metadata to the new share sheet experience in iOS.","type":"text"}]},"https://x.com/SarthakKhillon":{"title":"X\/Twitter","identifier":"https:\/\/x.com\/SarthakKhillon","titleInlineContent":[{"text":"X\/Twitter","type":"text"}],"type":"link","url":"https:\/\/x.com\/SarthakKhillon"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10099-Explore-the-Action-and-Vision-app":{"role":"sampleCode","title":"Explore the Action & Vision app","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10099-Explore-the-Action-and-Vision-app","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10099-explore-the-action-and-vision-app","abstract":[{"text":"It’s now easy to create an app for fitness or sports coaching that takes advantage of machine learning — and to prove it, we built our own. Learn how we designed the Action & Vision app using Object Detection and Action Classification in Create ML along with the new Body Pose Estimation, Trajectory Detection, and Contour Detection features in the Vision framework. Explore how you can create an immersive application for gameplay or training from setup to analysis and feedback. And follow along in Xcode with a full sample project.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10185-Visually-edit-SwiftUI-views":{"role":"sampleCode","title":"Visually edit SwiftUI views","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10185-Visually-edit-SwiftUI-views","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10185-visually-edit-swiftui-views","abstract":[{"text":"Help your apps be the best versions of themselves: Discover how you can leverage Xcode Previews and SwiftUI to quickly iterate upon and improve your app. Find out how you can use the Previews canvas to build your app from the ground up, and view your interface in different environments like Light or Dark mode or with accessibility features like Dynamic Type enabled.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10221-Get-your-test-results-faster":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10221-Get-your-test-results-faster","role":"sampleCode","type":"topic","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc20-10221-get-your-test-results-faster","abstract":[{"type":"text","text":"Improve your testing suite to speed up your feedback loop and get fixes in faster. Learn more about the latest improvements to testing in Xcode, including how to leverage test plans, Xcodebuild updates, and APIs to eliminate never-ending and badly-behaved tests. We’ll explore Test Timeouts and Execution Time Allowances in XCTest, examine device parallelization, and detail recommended practices for balancing performance with clear fault localization."}],"title":"Get your test results faster"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10160-Formatters-Make-data-humanfriendly":{"role":"sampleCode","title":"Formatters: Make data human-friendly","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10160-Formatters-Make-data-humanfriendly","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10160-formatters-make-data-humanfriendly","abstract":[{"text":"Save yourself time and frustration: When you display data in your app — including dates, times, measurements, names, lists, numbers, or strings — learn how to format it correctly and provide a great experience. We’ll walk you through the Formatter APIs as well as how SwiftUI works with stringsdict, and show you how they can help do the heavy lifting of formatting data. Learn about best practices and how to avoid common mistakes.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10111-Boost-performance-and-security-with-modern-networking":{"role":"sampleCode","title":"Boost performance and security with modern networking","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10111-Boost-performance-and-security-with-modern-networking","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10111-boost-performance-and-security-with-modern-networking","abstract":[{"type":"text","text":"Speed up your app and make it more nimble, private and secure with modern networking APIs. Learn about networking protocols like IPv6, HTTP\/2, TLS 1.3 and Encrypted DNS, and how incorporating these within your app and server can provide faster performance and reduce both your power consumption and thermal impact. In addition, discover how adopting the latest security protocols can help you better protect privacy within your app."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC16-419-Protocol-and-Value-Oriented-Programming-in-UIKit-Apps":{"role":"sampleCode","title":"Protocol and Value Oriented Programming in UIKit Apps","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC16-419-Protocol-and-Value-Oriented-Programming-in-UIKit-Apps","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc16-419-protocol-and-value-oriented-programming-in-uikit-apps","abstract":[{"type":"text","text":"Building on last year’s Protocol-Oriented Programming and Building Better Apps with Value Types sessions, this year’s session will highlight tips and tricks for building better Swift apps. See how you can incorporate these design approaches into a real MVC-based Cocoa Touch app, especially in the view and controller layers, where you might not have thought of using these techniques before."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10611-Explore-ARKit-4":{"role":"sampleCode","title":"Explore ARKit 4","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10611-Explore-ARKit-4","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10611-explore-arkit-4","abstract":[{"text":"ARKit 4 enables you to build the next generation of augmented reality apps to transform how people connect with the world around them. We’ll walk you through the latest improvements to Apple’s augmented reality platform, including how to use Location Anchors to connect virtual objects with a real-world longitude, latitude, and altitude. Discover how to harness the LiDAR Scanner on iPad Pro and obtain a depth map of your environment. And learn how to track faces in AR on more devices, including the iPad Air (3rd generation), iPad mini (5th generation), and all devices with the A12 Bionic chip or later that have a front-facing camera.","type":"text"}]},"skhillon.jpeg":{"identifier":"skhillon.jpeg","variants":[{"url":"\/images\/skhillon.jpeg","traits":["1x","light"]}],"alt":null,"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC15-414-Building-Better-Apps-with-Value-Types-in-Swift":{"role":"sampleCode","title":"Building Better Apps with Value Types in Swift","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC15-414-Building-Better-Apps-with-Value-Types-in-Swift","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc15-414-building-better-apps-with-value-types-in-swift","abstract":[{"text":"Swift supports rich first-class value types in the form of powerful structs, which provide new ways to architect your apps. Learn about the differences between reference and value types, how value types help you elegantly solve common problems around mutability and thread safety, and discover how Swift’s unique capabilities might change the way you think about abstraction.","type":"text"}]},"https://www.linkedin.com/in/sarthakkhillon/":{"title":"Blog","identifier":"https:\/\/www.linkedin.com\/in\/sarthakkhillon\/","titleInlineContent":[{"text":"Blog","type":"text"}],"type":"link","url":"https:\/\/www.linkedin.com\/in\/sarthakkhillon\/"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-607-Bringing-People-into-AR":{"role":"sampleCode","title":"Bringing People into AR","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-607-Bringing-People-into-AR","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc19-607-bringing-people-into-ar","abstract":[{"text":"ARKit 3 enables a revolutionary capability for robust integration of real people into AR scenes. Learn how apps can use live motion capture to animate virtual characters or be applied to 2D and 3D simulation. See how People Occlusion enables even more immersive AR experiences by enabling virtual content to pass behind people in the real world.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10647-Become-a-Simulator-expert":{"role":"sampleCode","title":"Become a Simulator expert","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10647-Become-a-Simulator-expert","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10647-become-a-simulator-expert","abstract":[{"text":"Simulator runs your iOS, iPadOS, tvOS, or watchOS apps directly on your Mac — no separate device required. We’ll give you a tour of the app’s latest tools and features and show you how to sharpen your Simulator skills. Discover how to test pointer and trackpad support, adjust Simulator preferences, and use command line tools like simctl to help you simulate push notifications in a development environment.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10206-Designed-for-iPad":{"role":"sampleCode","title":"Designed for iPad","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10206-Designed-for-iPad","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10206-designed-for-ipad","abstract":[{"text":"Discover the building blocks for designing a great iPad app: Learn how to minimize use of modal interfaces and leverage the new sidebar to increase efficiency by streamlining navigation and facilitating powerful drag and drop interactions. See how to take advantage of iPad’s versatile interaction opportunities by supporting multitouch, pencil, keyboard, and trackpad. And create adaptive layouts that respond to all size classes and orientation to support a great multitasking experience. These techniques will not only improve your iPad app — they’ll make it easier to create a Mac Catalyst app that truly feels right at home on macOS.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10162-Design-for-location-privacy":{"role":"sampleCode","title":"Design for location privacy","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10162-Design-for-location-privacy","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10162-design-for-location-privacy","abstract":[{"text":"When someone uses iPhone or iPad, they have control over how their location is shared with the apps they use — including sharing an approximate location rather than precise coordinates. This creates a more private experience across their device, and it impacts all apps that rely on location data or use it to supplement certain elements of their experience.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC15-408-ProtocolOriented-Programming-in-Swift":{"role":"sampleCode","title":"Protocol-Oriented Programming in Swift","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC15-408-ProtocolOriented-Programming-in-Swift","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc15-408-protocoloriented-programming-in-swift","abstract":[{"text":"At the heart of Swift’s design are two incredibly powerful ideas: protocol-oriented programming and first class value semantics. Each of these concepts benefit predictability, performance, and productivity, but together they can change the way we think about programming. Find out how you can apply these ideas to improve the code you write.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes":{"url":"\/documentation\/wwdcnotes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"title":"WWDC Notes","type":"topic","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"kind":"symbol","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","role":"collection"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10165-Embrace-Swift-type-inference":{"role":"sampleCode","title":"Embrace Swift type inference","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10165-Embrace-Swift-type-inference","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10165-embrace-swift-type-inference","abstract":[{"text":"Swift uses type inference to help you write clean, concise code without compromising type safety. We’ll show you how the compiler seeks out clues in your code to solve the type inference puzzle. Discover what happens when the compiler can’t come to a solution, and find out how Xcode 12 integrates error tracking to help you understand and fix mistakes at compile time.","type":"text"}]}}}