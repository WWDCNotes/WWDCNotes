{"sampleCodeDownload":{"action":{"overridingTitle":"Watch Video","type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc24\/10132"},"kind":"sampleDownload"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc24-10132-evolve-your-document-launch-experience"]}],"primaryContentSections":[{"content":[{"type":"heading","text":"Design Overview","anchor":"Design-Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"New design for the launch experience you can adopt, looks like this:"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC24-10132-New-Design","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The header ist customizable, with a background color or image, foreground and background accessory views, and primary and secondary buttons:"}]},{"type":"tabNavigator","tabs":[{"title":"Background Color or Image","content":[{"type":"paragraph","inlineContent":[{"identifier":"WWDC24-10132-Background","type":"image"}]}]},{"title":"Accessory Views","content":[{"type":"paragraph","inlineContent":[{"identifier":"WWDC24-10132-Accessories","type":"image"}]}]},{"title":"Primary Button","content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC24-10132-Primary-button"}]}]},{"title":"Secondary Button","content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC24-10132-Secondary-button"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The big title is the name of the app. The document browser can be found below:"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC24-10132-Document-browser","type":"image"}]},{"type":"heading","text":"Getting Started","anchor":"Getting-Started","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"For a SwiftUI app, it’s enough to recompile with iOS 18 SDKs. It will automatically use the new style then."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Works also in UIKit if "},{"code":"UIDocumentViewController","type":"codeVoice"},{"type":"text","text":" is the apps root view controller. No need for "},{"code":"UIDocumentBrowserViewController","type":"codeVoice"},{"type":"text","text":" anymore, the "},{"code":"UIDocumentViewController","type":"codeVoice"},{"type":"text","text":" includes one automatically starting in iOS 18."}]},{"type":"paragraph","inlineContent":[{"text":"Instead of this for iOS 17 when using UIKit:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["class DocumentViewController: UIDocumentViewController { ... }","","let documentViewController = DocumentViewController()","let browserViewController = UIDocumentBrowserViewController(","    forOpening: [.plainText]",")","window.rootViewController = browserViewController","browserViewController.delegate = self","","\/\/ MARK: UIDocumentBrowserViewControllerDelegate","","func documentBrowser(","    _ browser: UIDocumentBrowserViewController, ","    didPickDocumentsAt documentURLs: [URL]",") {","    guard let url = documentURLs.first else { return }","    documentViewController.document = StoryDocument(fileURL: url)","    browser.present(documentViewController, animated: true)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can write this in iOS 18 in UIKit:"}]},{"syntax":"swift","type":"codeListing","code":["class DocumentViewController: UIDocumentViewController { ... }","","let documentViewController = DocumentViewController()","window.rootViewController = documentViewController"]},{"type":"heading","text":"Customization","anchor":"Customization","level":2},{"type":"paragraph","inlineContent":[{"text":"In SwiftUI, you can use the new experience using a ","type":"text"},{"type":"codeVoice","code":"DocumentGroupLaunchScene"},{"text":" like this:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["DocumentGroupLaunchScene {","    NewDocumentButton(\"Start Writing\")","} background: {","    Image(.pinkJungle)","        .resizable()","        .aspectRatio(contentMode: .fill)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can add accessory views and position them like so:"}]},{"syntax":"swift","type":"codeListing","code":["DocumentGroupLaunchScene {","    NewDocumentButton(\"Start Writing\")","} background: {","...","} overlayAccessoryView: { geometry in","    ZStack {","        Image(.robot)","            .position(","                x: geometry.titleViewFrame.minX, ","                y: geometry.titleViewFrame.minY","            )","        Image(.plant)","            .position(","                x: geometry.titleViewFrame.maxX, ","                y: geometry.titleViewFrame.maxY","            )","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In UIKit you can customize using the "},{"type":"codeVoice","code":"launchOptions"},{"type":"text","text":" property like this:"}]},{"syntax":"swift","type":"codeListing","code":["class DocumentViewController: UIDocumentViewController {","    override func viewDidLoad() {","        super.viewDidLoad()","","        \/\/ Update the background","        launchOptions.background.image = UIImage(resource: .pinkJungle)","","        \/\/ Add foreground accessories","        launchOptions.foregroundAccessoryView = ForegroundAccessoryView()","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"Templates are a grat way to speed up the coherence to specific format, layout, or style and are supported. They can be stored on disk or downloaded from the Web.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When presenting a custom picker for your templates in SwiftUI, use a "},{"type":"codeVoice","code":"CheckedContinutation"},{"type":"text","text":" like so:"}]},{"syntax":"swift","type":"codeListing","code":["@State private var creationContinuation: CheckedContinuation<StoryDocument?, any Error>?","@State private var isTemplatePickerPresented = false","","DocumentGroupLaunchScene {","    NewDocumentButton(\"Start Writing\")","    NewDocumentButton(\"Choose a Template\", for: StoryDocument.self) {","        try await withCheckedThrowingContinuation { continuation in","            self.creationContinuation = continuation","            self.isTemplatePickerPresented = true","        }","    }","    .sheet(isPresented: $isTemplatePickerPresented) {","        TemplatePicker(continuation: $creationContinuation","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then in you custom picker, you "},{"type":"codeVoice","code":"resume"},{"type":"text","text":" the continuation like so:"}]},{"syntax":"swift","type":"codeListing","code":["struct TemplatePicker: View {","    @Binding var creationContinuation: CheckedContinuation<StoryDocument?, any Error>?","","    var body: some View {","        Button(\"Three Act Structure\") {","            creationContinuation?.resume(returning: StoryDocument.threeActStructure())","            creationContinuation = nil","        }","    }","}","","extension StoryDocument {","    static func threeActStructure() -> Self {","        Self.init(...)","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"In UIKit, define an intent:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["extension UIDocument.CreationIntent {","    static let template = UIDocument.CreationIntent(\"template\")","}"]},{"type":"paragraph","inlineContent":[{"text":"Then in the document view controller setup, assign the action to the ","type":"text"},{"type":"codeVoice","code":"launchOptions"},{"text":", assign the browser delegate and read the ","type":"text"},{"type":"codeVoice","code":"activeDocumentCreationIntent"},{"text":" like so:","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["launchOptions.secondaryAction = LaunchOptions.createDocumentAction(with: .template) ","launchOptions.browserViewController.delegate = self","","\/\/ MARK: UIDocumentBrowserViewControllerDelegate","","func documentBrowser(","    _ browser: UIDocumentBrowserViewController, ","    didRequestDocumentCreationWithHandler importHandler: @escaping (URL?, ImportMode) -> Void) ","{","    switch browser.activeDocumentCreationIntent {","    case .template: ","        presentTemplatePicker(with: importHandler)","    default:","        let newDocumentURL = \/\/ ...","        importHandler(newDocumentURL, .copy)","    }","}"]},{"type":"heading","text":"Written By","anchor":"Written-By","level":2},{"columns":[{"size":1,"content":[{"inlineContent":[{"identifier":"Jeehut","type":"image"}],"type":"paragraph"}]},{"size":4,"content":[{"anchor":"Cihat-G%C3%BCnd%C3%BCz","type":"heading","text":"Cihat Gündüz","level":3},{"type":"paragraph","inlineContent":[{"overridingTitle":"Contributed Notes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Jeehut","type":"reference","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}]},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/Jeehut","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/fline.dev","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/x.com\/Jeehut","type":"reference","isActive":true}]}]}],"type":"row","numberOfColumns":5},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}]},{"type":"heading","text":"Related Sessions","anchor":"Related-Sessions","level":2},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10039-Build-documentbased-apps-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10056-Build-better-documentbased-apps"]},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}]},{"type":"small","inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}],"kind":"content"}],"kind":"article","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10132-Evolve-your-document-launch-experience"},"sections":[],"metadata":{"modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC24","role":"sampleCode","title":"Evolve your document launch experience"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24"]]},"abstract":[{"type":"text","text":"Make your document-based app stand out, and bring its unique identity into focus with the new document launch experience. Learn how to leverage the new API to customize the first screen people see when they launch your app. Utilize the new system-provided design, and amend it with custom actions, delightful decorative views, and impressive animations."}],"references":{"WWDC24-10132-Document-browser":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC24-10132-Document-browser.jpeg"}],"type":"image","identifier":"WWDC24-10132-Document-browser"},"https://fline.dev":{"type":"link","url":"https:\/\/fline.dev","identifier":"https:\/\/fline.dev","title":"Blog","titleInlineContent":[{"type":"text","text":"Blog"}]},"https://x.com/Jeehut":{"url":"https:\/\/x.com\/Jeehut","identifier":"https:\/\/x.com\/Jeehut","type":"link","title":"X\/Twitter","titleInlineContent":[{"text":"X\/Twitter","type":"text"}]},"WWDC24.jpeg":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC24.jpeg"}],"type":"image","identifier":"WWDC24.jpeg"},"WWDCNotes.png":{"type":"image","alt":null,"identifier":"WWDCNotes.png","variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}]},"WWDC24-Icon.png":{"identifier":"WWDC24-Icon.png","type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDC24-Icon.png","traits":["1x","light"]}]},"WWDC24-10132-New-Design":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC24-10132-New-Design.jpeg"}],"type":"image","identifier":"WWDC24-10132-New-Design"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10039-Build-documentbased-apps-in-SwiftUI":{"title":"Build document-based apps in SwiftUI","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10039-Build-documentbased-apps-in-SwiftUI","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc20-10039-build-documentbased-apps-in-swiftui","type":"topic","abstract":[{"type":"text","text":"Learn how to build a document-based app entirely in SwiftUI! We’ll walk you through the DocumentGroup API and how it composes with your App and Scenes, allowing you to add out-of-the-box support for document management — such as document browsing and standard commands — no heavy lifting required. You’ll learn to set up Universal Type Identifiers as well as gain understanding into what makes a top-notch document-based app."}]},"WWDC24-10132-Secondary-button":{"type":"image","alt":null,"identifier":"WWDC24-10132-Secondary-button","variants":[{"url":"\/images\/WWDCNotes\/WWDC24-10132-Secondary-button.jpeg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10056-Build-better-documentbased-apps":{"abstract":[{"type":"text","text":"Discover how you can use the latest features in iPadOS to improve your document-based apps. We’ll show you how to take advantage of UIDocument as well as existing desktop-class iPad and document-based APIs to add new features in your app. Find out how to convert data models to UIDocument, present documents with UIDocumentViewController, learn how to migrate your apps to the latest APIs, and explore best practices."}],"title":"Build better document-based apps","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10056-Build-better-documentbased-apps","url":"\/documentation\/wwdcnotes\/wwdc23-10056-build-better-documentbased-apps","kind":"article","role":"sampleCode"},"Jeehut.jpeg":{"identifier":"Jeehut.jpeg","type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/Jeehut.jpeg","traits":["1x","light"]}]},"https://github.com/Jeehut":{"title":"GitHub","titleInlineContent":[{"type":"text","text":"GitHub"}],"url":"https:\/\/github.com\/Jeehut","type":"link","identifier":"https:\/\/github.com\/Jeehut"},"WWDC24-10132-Accessories":{"type":"image","alt":null,"identifier":"WWDC24-10132-Accessories","variants":[{"url":"\/images\/WWDCNotes\/WWDC24-10132-Accessories.jpeg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/Jeehut":{"abstract":[{"text":"Spatial-first Indie Developer for  Platforms. Actively contributing to Open Source since 2011!","type":"text"}],"title":"Cihat Gündüz (61 notes)","images":[{"identifier":"Jeehut.jpeg","type":"card"},{"identifier":"Jeehut.jpeg","type":"icon"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Jeehut","url":"\/documentation\/wwdcnotes\/jeehut","kind":"article","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes":{"url":"\/documentation\/wwdcnotes","kind":"symbol","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"type":"topic","role":"collection","title":"WWDC Notes"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","title":"Contributions are welcome!","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24":{"abstract":[{"type":"text","text":"Xcode 16, Swift 6, iOS 18, macOS 15 (Sequoia), tvOS 18, visionOS 2, watchOS 11."},{"type":"text","text":" "},{"type":"text","text":"New APIs: Swift Testing, "},{"type":"codeVoice","code":"FinanceKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"TabletopKit"},{"type":"text","text":", and more."}],"title":"WWDC24","images":[{"identifier":"WWDC24-Icon.png","type":"icon"},{"identifier":"WWDC24.jpeg","type":"card"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24","url":"\/documentation\/wwdcnotes\/wwdc24","kind":"article","role":"collectionGroup"},"https://developer.apple.com/wwdc24/10132":{"url":"https:\/\/developer.apple.com\/wwdc24\/10132","checksum":null,"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc24\/10132"},"WWDC24-10132-Background":{"type":"image","alt":null,"identifier":"WWDC24-10132-Background","variants":[{"url":"\/images\/WWDCNotes\/WWDC24-10132-Background.jpeg","traits":["1x","light"]}]},"WWDC24-10132-Primary-button":{"alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDC24-10132-Primary-button.jpeg","traits":["1x","light"]}],"type":"image","identifier":"WWDC24-10132-Primary-button"},"Jeehut":{"identifier":"Jeehut","type":"image","alt":"Profile image of Cihat Gündüz","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/Jeehut.jpeg"}]}}}