{"primaryContentSections":[{"content":[{"text":"Key takeaways","type":"heading","level":2,"anchor":"Key-takeaways"},{"inlineContent":[{"type":"text","text":"ü§ì Code completion is coming and it is based on the context"}],"type":"paragraph"},{"inlineContent":[{"text":"üèéÔ∏è There are build settings for your way to Swift 6 language mode","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"üöÄ Faster builds with Explicit built modules","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"üß™ New open source Testing framework","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"üî• Instruments has gotten a Flame Graph view","type":"text"}],"type":"paragraph"},{"text":"Presenters","type":"heading","level":2,"anchor":"Presenters"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Daisy Hernandez, Xcode Previews Engineer"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Jake Petroules, Build Experience Manager"}]}]}],"type":"unorderedList"},{"level":2,"anchor":"Edit","text":"Edit","type":"heading"},{"level":3,"anchor":"Code-completion","text":"Code completion","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The new code completion uses the context like function names and comments to suggest code. Trained for Swift and Apple SDKs.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In Build Settings, you can now enable warnings for the upcoming language features in Swift 6 language mode. You find the settings in the section ‚ÄúSwift Compiler - Upcoming Features‚Äù."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn more in the session: ‚ÄúMigrate your app to Swift 6‚Äù"}]},{"level":2,"type":"heading","text":"Previews","anchor":"Previews"},{"level":3,"type":"heading","text":"Previewable macro","anchor":"Previewable-macro"},{"type":"paragraph","inlineContent":[{"text":"In previews you can now use the ","type":"text"},{"type":"codeVoice","code":"@Previewable"},{"text":" macro and have a state property to use in the preview:","type":"text"}]},{"code":["#Preview {","    @Previewable @State var currentFace = RobotFace.heart","    RobotFaceSelectorView(currentFace: $currentFace)","}"],"syntax":"swift","type":"codeListing"},{"level":3,"type":"heading","text":"PreviewModifier","anchor":"PreviewModifier"},{"type":"paragraph","inlineContent":[{"text":"If you need the share environment and data between previews, you can use ","type":"text"},{"code":"PreviewModifier","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"It lets you create a modifier for a preview and it is shared between previews.","type":"text"},{"text":" ","type":"text"},{"text":"In the following example, the Preview trait is extended with a static sampler for robot names:","type":"text"}]},{"code":["struct SampleRobotNamer: PreviewModifier {","    typealias Context = RobotNamer","","    static func makeSharedContext() async throws -> Context {","        let url = URL(fileURLWithPath: \"\/tmp\/local_names.txt\")","        return try await RobotNamer(url: url)","    }","    ","    func body(content: Content, context: Context) -> some View {","        content.environment(context)","    }","}","","extension PreviewTrait where T == Preview.ViewTraits {","    @MainActor static var sampleNamer: Self = .modifier(SampleRobotNamer())","}","","#Preview(traits: .sampleNamer) {","    RobotNameSelectorView()","}"],"syntax":"swift","type":"codeListing"},{"level":2,"type":"heading","text":"Build","anchor":"Build"},{"level":3,"type":"heading","text":"Explicit Modules","anchor":"Explicit-Modules"},{"content":[{"inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"This feature provides improved parallelism, better diagnostics, and faster debugging, all without changing a single line of code."}]}],"type":"paragraph"}],"type":"aside","style":"note","name":"Note"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"C\/Objective-C: On by default"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Swift: Opt-in","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Can be enabled in Build Settings under ‚ÄúExplicitly Built Modules‚Äù"}]},{"type":"paragraph","inlineContent":[{"text":"It works by:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Scan"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Can be found in the build log as ‚ÄúScan dependencies of ","type":"text"},{"text":"‚Äù","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Build modules","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Can be found in the build log as ‚ÄúCompiling Clang\/Swift module ","type":"text"},{"text":"‚Äù","type":"text"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Build source (the app code)","type":"text"}]}]}]},{"content":[{"inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Previously, these operations were performed implicitly as part of compiling your source files. Now, you get a much more detailed breakdown of the build, better parallelism, and clearer error messages if the build fails due to a module issue."}]}],"type":"paragraph"}],"type":"aside","style":"note","name":"Note"},{"type":"paragraph","inlineContent":[{"text":"Learn more in the session: ‚ÄúDemystify explicitly built modules‚Äù","type":"text"}]},{"level":2,"type":"heading","text":"Debug","anchor":"Debug"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Faster debugging with explicit modules"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Smaller, faster debug symbols with DWARF5 on macOS Sequoia and iOS 18","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Thread performance checker now also check:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Disk write diagnostics"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Launch diagnostics"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"The diagnostics in the Xcode Organizer now also shows the slowest code path signatures if your app takes a long time to launch on customer devices.","type":"text"}]},{"level":3,"type":"heading","text":"Unified Backtrace View","anchor":"Unified-Backtrace-View"},{"type":"paragraph","inlineContent":[{"text":"A new Unified Backtrace View is available in the debug bar. It shows the code of the call stack in a vertical view.","type":"text"}]},{"level":3,"type":"heading","text":"RealityKit debugger","anchor":"RealityKit-debugger"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The new RealityKit debugger can capture a snapshot of your running app‚Äôs entity hierarchy, which can be inspected in 3D."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn more in the sessions:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Break into the RealityKit debugger","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Run, break, and inspect: Explore effective debugging in LLDB","type":"text"}]}]}]},{"level":2,"type":"heading","text":"Test","anchor":"Test"},{"type":"paragraph","inlineContent":[{"text":"New framework: Swift Testing","type":"text"}]},{"code":["import Testing","@testable import BOTanist","","\/\/ When using the default init Plant(type:) make sure the planting style is graft","@Test","func plantingRoses() {","    \/\/ First create the two Plant structs","    let plant = Plant(type: .rose)","    let expected = Plant(type: .rose, style: .graft)","","    \/\/ Verify with #expect","    #expect(plant == expected)","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Tests can be in suites and have a list of inputs:"}]},{"code":["import Testing","@testable import BOTanist","","@Suite struct AnimationStateTests {","    @Test(arguments: [AnimationState.idle, .plant, .walkLoop])","    func validToTransitionToCelebrate(from state: AnimationState) async throws {","        #expect(state.isValidNextState(.celebrate) == true)","    }","}"],"syntax":null,"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Tests can be tagged:"}]},{"code":["extension Tag {","    @Tag static var planting: Self","}","","@Test(.tags(.planting))","func myTestMethod() async throws {","    ...","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Tags can also be used to inlcude and exclude tests in a test plan.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Learn more in the sessions:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Meet Swift Testing"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Go further with Swift Testing","type":"text"}],"type":"paragraph"}]}]},{"level":3,"type":"heading","text":"Bonus","anchor":"Bonus"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Run tests again: Command + Shift + A, write ‚Äútest again‚Äù"}]},{"level":2,"type":"heading","text":"Profile","anchor":"Profile"},{"type":"paragraph","inlineContent":[{"type":"text","text":"From 18:43 Jake shows how to debug hangs with the new ‚ÄúFlame Graph‚Äù."}]},{"level":2,"type":"heading","text":"Written By","anchor":"Written-By"},{"columns":[{"size":1,"content":[{"inlineContent":[{"identifier":"MortenGregersen","type":"image"}],"type":"paragraph"}]},{"size":4,"content":[{"type":"heading","text":"Morten Bjerg Gregersen","level":3,"anchor":"Morten-Bjerg-Gregersen"},{"inlineContent":[{"overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"overridingTitle":"Contributed Notes","isActive":true,"type":"reference","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/MortenGregersen"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/MortenGregersen"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"http:\/\/atterdagapps.com"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/x.com\/mortengregersen"}],"type":"paragraph"}]}],"type":"row","numberOfColumns":5},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference"}]},{"level":2,"type":"heading","text":"Related Sessions","anchor":"Related-Sessions"},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10169-Migrate-your-app-to-Swift-6","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10171-Demystify-explicitly-built-modules","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10172-Break-into-the-RealityKit-debugger","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10198-Run-Break-Inspect-Explore-effective-debugging-in-LLDB","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10179-Meet-Swift-Testing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10195-Go-further-with-Swift-Testing"]},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}],"kind":"content"}],"metadata":{"title":"What‚Äôs new in Xcode 16","roleHeading":"WWDC24","role":"sampleCode","modules":[{"name":"WWDC Notes"}]},"sampleCodeDownload":{"kind":"sampleDownload","action":{"overridingTitle":"Watch Video (22 min)","identifier":"https:\/\/developer.apple.com\/wwdc24\/10135","type":"reference","isActive":true}},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10135-Whats-new-in-Xcode-16","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc24-10135-whats-new-in-xcode-16"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24"]]},"abstract":[{"type":"text","text":"Discover the latest productivity and performance improvements in Xcode 16. Learn about enhancements to code completion, diagnostics, and Xcode Previews. Find out more about updates in builds and explore improvements in debugging and Instruments."}],"references":{"MortenGregersen":{"type":"image","alt":"Profile image of Morten Bjerg Gregersen","identifier":"MortenGregersen","variants":[{"url":"\/images\/MortenGregersen.jpeg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/MortenGregersen":{"role":"sampleCode","images":[{"identifier":"MortenGregersen.jpeg","type":"card"},{"identifier":"MortenGregersen.jpeg","type":"icon"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/MortenGregersen","type":"topic","title":"Morten Bjerg Gregersen (21 notes)","kind":"article","abstract":[{"text":"Hi üëã I am Morten - I live in Denmark üá©üá∞","type":"text"}],"url":"\/documentation\/wwdcnotes\/mortengregersen"},"MortenGregersen.jpeg":{"type":"image","alt":null,"identifier":"MortenGregersen.jpeg","variants":[{"url":"\/images\/MortenGregersen.jpeg","traits":["1x","light"]}]},"https://x.com/mortengregersen":{"title":"X\/Twitter","url":"https:\/\/x.com\/mortengregersen","type":"link","titleInlineContent":[{"type":"text","text":"X\/Twitter"}],"identifier":"https:\/\/x.com\/mortengregersen"},"https://developer.apple.com/wwdc24/10135":{"url":"https:\/\/developer.apple.com\/wwdc24\/10135","checksum":null,"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc24\/10135"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10172-Break-into-the-RealityKit-debugger":{"title":"Break into the RealityKit debugger","url":"\/documentation\/wwdcnotes\/wwdc24-10172-break-into-the-realitykit-debugger","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10172-Break-into-the-RealityKit-debugger","role":"sampleCode","abstract":[{"type":"text","text":"Meet the RealityKit debugger and discover how this new tool lets you inspect the entity hierarchy of spatial apps, debug rogue transformations, find missing entities, and detect which parts of your code are causing problems for your systems."}]},"WWDC24.jpeg":{"type":"image","alt":null,"identifier":"WWDC24.jpeg","variants":[{"url":"\/images\/WWDC24.jpeg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10171-Demystify-explicitly-built-modules":{"title":"Demystify explicitly built modules","url":"\/documentation\/wwdcnotes\/wwdc24-10171-demystify-explicitly-built-modules","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10171-Demystify-explicitly-built-modules","role":"sampleCode","abstract":[{"type":"text","text":"Explore how builds are changing in Xcode 16 with explicitly built modules. Discover how modules are used to build your code, how explicitly built modules improve transparency in compilation tasks, and how you can optimize your build by sharing modules across targets."}]},"WWDC24-Icon.png":{"type":"image","alt":null,"identifier":"WWDC24-Icon.png","variants":[{"url":"\/images\/WWDC24-Icon.png","traits":["1x","light"]}]},"WWDCNotes.png":{"type":"image","alt":null,"identifier":"WWDCNotes.png","variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}]},"http://atterdagapps.com":{"title":"Blog","url":"http:\/\/atterdagapps.com","type":"link","titleInlineContent":[{"type":"text","text":"Blog"}],"identifier":"http:\/\/atterdagapps.com"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes":{"url":"\/documentation\/wwdcnotes","title":"WWDC Notes","role":"collection","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10198-Run-Break-Inspect-Explore-effective-debugging-in-LLDB":{"title":"Run, Break, Inspect: Explore effective debugging in LLDB","url":"\/documentation\/wwdcnotes\/wwdc24-10198-run-break-inspect-explore-effective-debugging-in-lldb","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10198-Run-Break-Inspect-Explore-effective-debugging-in-LLDB","role":"sampleCode","abstract":[{"type":"text","text":"Learn how to use LLDB to explore and debug codebases. We‚Äôll show you how to make the most of crashlogs and backtraces, and how to supercharge breakpoints with actions and complex stop conditions. We‚Äôll also explore how the ‚Äúp‚Äù command and the latest features in Swift 6 can enhance your debugging experience."}]},"https://github.com/MortenGregersen":{"title":"GitHub","url":"https:\/\/github.com\/MortenGregersen","type":"link","titleInlineContent":[{"type":"text","text":"GitHub"}],"identifier":"https:\/\/github.com\/MortenGregersen"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10179-Meet-Swift-Testing":{"title":"Meet Swift Testing","url":"\/documentation\/wwdcnotes\/wwdc24-10179-meet-swift-testing","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10179-Meet-Swift-Testing","role":"sampleCode","abstract":[{"type":"text","text":"Introducing Swift Testing: a new package for testing your code using Swift. Explore the building blocks of its powerful new API, discover how it can be applied in common testing workflows, and learn how it relates to XCTest and open source Swift."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24":{"url":"\/documentation\/wwdcnotes\/wwdc24","abstract":[{"text":"Xcode 16, Swift 6, iOS 18, macOS 15 (Sequoia), tvOS 18, visionOS 2, watchOS 11.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: Swift Testing, ","type":"text"},{"code":"FinanceKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"TabletopKit","type":"codeVoice"},{"text":", and more.","type":"text"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24","type":"topic","title":"WWDC24","role":"collectionGroup","images":[{"type":"icon","identifier":"WWDC24-Icon.png"},{"type":"card","identifier":"WWDC24.jpeg"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10195-Go-further-with-Swift-Testing":{"title":"Go further with Swift Testing","abstract":[{"text":"Learn how to write a sweet set of (test) suites using Swift Testing‚Äôs baked-in features. Discover how to take the building blocks further and use them to help expand tests to cover more scenarios, organize your tests across different suites, and optimize your tests to run in parallel.","type":"text"}],"type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10195-Go-further-with-Swift-Testing","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10195-go-further-with-swift-testing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10169-Migrate-your-app-to-Swift-6":{"title":"Migrate your app to Swift 6","url":"\/documentation\/wwdcnotes\/wwdc24-10169-migrate-your-app-to-swift-6","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10169-Migrate-your-app-to-Swift-6","role":"sampleCode","abstract":[{"type":"text","text":"Experience Swift 6 migration in action as we update an existing sample app. Learn how to migrate incrementally, module by module, and how the compiler helps you identify code that‚Äôs at risk of data races.  Discover different techniques for ensuring clear isolation boundaries and eliminating concurrent access to shared mutable state."}]}}}