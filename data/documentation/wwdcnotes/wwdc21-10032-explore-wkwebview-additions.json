{"abstract":[{"type":"text","text":"Explore the latest updates to WKWebView. We’ll show you how to use APIs to manipulate web content without JavaScript, explore delegates that can help with WebRTC and Downloads, and share how you can easily create a richer web experience within your app."}],"kind":"article","sections":[],"primaryContentSections":[{"content":[{"level":2,"text":"What’s new in `SFSafariViewController`","type":"heading","anchor":"Whats-new-in-SFSafariViewController"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"New API to bring one of your app extensions to a customized button on "},{"type":"codeVoice","code":"SFSafariViewController"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Tapping that button will run your app extensions directly from "},{"type":"codeVoice","code":"SFSafariViewController"},{"type":"text","text":"’s toolbar, including running JavaScript on the page"}],"type":"paragraph"}]}],"type":"unorderedList"},{"code":["import UIKit","import SafariServices","","class ViewController: UIViewController {","  func showSafariViewController (pageURL: URL) {","    let configuration = SFSafariViewController.Configuration()","    configuration.activityButton = SFSafariViewController.ActivityButton(","      templateImage: UlImage(named: \"example_image\")!,","      extensionIdentifier: \"com.example.extension\"","    )","    ","    let safariViewController = SFSafariViewController(url: pageURL, configuration: configuration)","    present(safariViewController, animated: true)","  }","}"],"syntax":"swift","type":"codeListing"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"For anything more than this, you will need to use ","type":"text"},{"code":"WKWebView","type":"codeVoice"},{"text":".","type":"text"}]}],"style":"note","type":"aside"},{"level":2,"text":"What’s new in `WKWebView`","type":"heading","anchor":"Whats-new-in-WKWebView"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"new APIs to allow you to easily interact with the content in your web view without having to deal with injecting JavaScript:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"access theme and related colors for a website"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"manage text interaction"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"control media playback"}]}]}]}]},{"content":[{"inlineContent":[{"text":"new browser-level APIs, previously only available to Safari.app:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"disable HTTPS upgrade","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"control media capture (getUserMedia)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"manage downloads"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"level":3,"text":"Access colors","type":"heading","anchor":"Access-colors"},{"inlineContent":[{"text":"Get ","type":"text"},{"code":"themeColor","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["class ViewController : UIViewController {","  var headerView: UIView","  var webView: WKWebView","  var observations: [NSKevValueObservation] = []","","  override func viewDidLoad() {","    let observation = webView.observe(\\.themeColor) { \/\/ 👈🏻","      [unowned self] webView, _ in","      self.headerView.backgroundColor=webView.themeColor","    }","    observations.append (observation)","  }","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"themeColor"},{"type":"text","text":" isn’t set, there’s an alternate calculated background color exposed as "},{"type":"codeVoice","code":"underPageBackgroundColor"},{"type":"text","text":":"}],"type":"paragraph"},{"code":["class ViewController : UIViewController {","  var headerView: UIView","  var webView: WKWebView","  var observations: [NSKeyValueObservation] = []","  ","  override func viewDidLoad() {","    let observation = webView.observe(\\.underPageBackgroundColor) { \/\/ 👈🏻","      [unowned self] webView,_ in","      self.headerView.backgroundColor = webView.underPageBackgroundColor","    }","    observations.append (observation)","  }","}"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"Text interaction","type":"heading","anchor":"Text-interaction"},{"inlineContent":[{"type":"text","text":"Disable\/enable text interaction:"}],"type":"paragraph"},{"code":["override func loadView(){","  let preferences = WKPreferences()","  preferences.textInteractionEnabled = false","  ","  let webConfiguration = WKWebViewConfiguration()","  configuration.preferences = preferences","","  webView = WKWebView(frame: .zero, configuration: preferences)","","  ...","}"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"Media playback","type":"heading","anchor":"Media-playback"},{"inlineContent":[{"type":"text","text":"Pause all media:"}],"type":"paragraph"},{"code":["await webView.pauseAllMediaPlayback()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"Close all media windows:","type":"text"}],"type":"paragraph"},{"code":["await webView.closeAllMediaPresentations()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Request media state:"}],"type":"paragraph"},{"code":["let playbackState = await webView.requestMediaPlaybackState()"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"Set Media Playback Suspended State"}],"type":"paragraph"},{"code":["await webView.setAllMediaPlaybackSuspended(true)"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"Disable HTTPS upgrade","type":"heading","anchor":"Disable-HTTPS-upgrade"},{"code":["override func loadView(){","  let webConfiguration = WKWebViewConfiguration()","  webConfiguration.upgradeknownHostsToHTTPS = false","  webView = WKWebView(frame: .zero, configuration: webConfiguration)","  ...","}"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"Control media capture (getUserMedia)","type":"heading","anchor":"Control-media-capture-getUserMedia"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"WKWebView"},{"type":"text","text":" supports "},{"type":"codeVoice","code":"getUserMedia"},{"type":"text","text":" from iOS 14.3; which allows WebRTC functions to work inside your app"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"From iOS 15, you can load your web content from a custom scheme handler; the user request prompt will show your app as the origin of the request, rather than show a request from the website URL","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"New api to prompt user for camera and microphone permissions when working with web content"}]}]}],"type":"unorderedList"},{"code":["\/\/ Prompt for microphone access only","class ViewController: UIViewController, WKUIDelegate{","  var webView: WKWebView","  ","  override func viewDidLoad() { ","    webView.uiDelegate = self","    webView.load(URLRequest (url: URL(string: \"https:\/\/recordMyMic.example.org\")!))","  }","","  func webView(","    _ webView: WKWebView,","    decideMediaCapturePermissionFor origin: WKSecurityOrigin,","    initiatedByFrame frame: WKFrameInfo,","    type: WKMediaCaptureType","  ) async -> WKPermissionDecision {","    return type == .microphone? .prompt: .deny","  }","}"],"syntax":"swift","type":"codeListing"},{"level":3,"text":"Manage downloads","type":"heading","anchor":"Manage-downloads"},{"inlineContent":[{"text":"Three ways to initiate a download from the web:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"The Web Content can initiate a download via Javascript:","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"code":["let a = document.createElement('a'):","let b = new Blob([1,2,3]);","a.href = URL.createObjectURL (b);","a.download = \"filename.dat\":","a.click();"],"syntax":"js","type":"codeListing"},{"start":2,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The server can initiate a download by responding like this, after calling a "},{"type":"codeVoice","code":"loadRequest"},{"type":"text","text":" on your web view"}]}]}],"type":"orderedList"},{"code":["HTTP\/1.1 200 OK","Content-Disposition: attachment; filename=\"filename.dat\"","Content-Length: 100"],"syntax":"js","type":"codeListing"},{"start":3,"items":[{"content":[{"inlineContent":[{"text":"App via new API","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"code":["class ViewController : UIViewController, WKDownloadDelegate {","  @IBOutlet var textField: UITextField!","  @IBOutlet var webView: WKWebView!","  ","  @IBAction func downloadFile() {","    guard let url = URL(string: textField.text ??\"') else { return }","    async {","      let download = await webView.startDownload(using: URLRequest (url: url))","      download.delegate = self","    }","  }"],"syntax":"swift","type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Whatever method you use, when you get the "},{"code":"WKDownload","type":"codeVoice"},{"type":"text","text":" object, you need to set the "},{"code":"delegate","type":"codeVoice"},{"type":"text","text":" property on that object to be able to tell it where to write the bytes to disk. If you do not, the download will automatically be cancelled"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"If a download fails, the data to resume the download will be handed to you if you implement the "},{"identifier":"https:\/\/developer.apple.com\/documentation\/webkit\/wkdownloaddelegate\/3727345-download","isActive":true,"type":"reference"},{"type":"text","text":" method on the delegate"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"text":"Written By","type":"heading","anchor":"Written-By"},{"numberOfColumns":5,"type":"row","columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"zntfdr"}]}]},{"size":4,"content":[{"text":"Federico Zanetello","level":3,"anchor":"Federico-Zanetello","type":"heading"},{"inlineContent":[{"type":"reference","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitle":"Contributed Notes","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/zntfdr","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/zntfdr.dev","isActive":true}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}],"type":"paragraph"},{"level":2,"text":"Related Sessions","type":"heading","anchor":"Related-Sessions"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10027-Explore-Safari-Web-Extension-improvements","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10029-Design-for-Safari-15","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10030-Develop-advanced-web-content","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10031-Discover-Web-Inspector-improvements","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10033-Meet-privacypreserving-ad-attribution","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10104-Meet-Safari-Web-Extensions-on-iOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10188-Discover-WKWebView-enhancements"],"style":"list","type":"links"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10032-Explore-WKWebView-additions","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"role":"sampleCode","roleHeading":"WWDC21","modules":[{"name":"WWDC Notes"}],"title":"Explore WKWebView additions"},"sampleCodeDownload":{"action":{"isActive":true,"type":"reference","overridingTitle":"Watch Video (21 min)","identifier":"https:\/\/developer.apple.com\/wwdc21\/10032"},"kind":"sampleDownload"},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc21-10032-explore-wkwebview-additions"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"WWDC21.jpeg":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC21.jpeg"}],"identifier":"WWDC21.jpeg","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"role":"collectionGroup","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","images":[{"identifier":"WWDC21-Icon.png","type":"icon"},{"identifier":"WWDC21.jpeg","type":"card"}],"title":"WWDC21","type":"topic","abstract":[{"text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"MusicKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DocC","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"StoreKit 2"},{"type":"text","text":", and more."}],"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc21"},"https://developer.apple.com/documentation/webkit/wkdownloaddelegate/3727345-download":{"type":"link","titleInlineContent":[{"type":"codeVoice","code":"download(_:didFailWithError:resumeData:)"}],"identifier":"https:\/\/developer.apple.com\/documentation\/webkit\/wkdownloaddelegate\/3727345-download","title":"download(_:didFailWithError:resumeData:)","url":"https:\/\/developer.apple.com\/documentation\/webkit\/wkdownloaddelegate\/3727345-download"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10029-Design-for-Safari-15":{"kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10029-design-for-safari-15","type":"topic","title":"Design for Safari 15","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10029-Design-for-Safari-15","abstract":[{"type":"text","text":"Meet Safari 15: redesigned and ready to help people explore the web. Discover how you can approach designing websites and apps for Safari, and learn how to incorporate the tab bar in your designs. We’ll also take you through features like Live Text and accessibility best practices, explore the latest updates to CSS and Form Controls, and learn how to use the aspect-ratio property in CSS to create incredible websites."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10104-Meet-Safari-Web-Extensions-on-iOS":{"url":"\/documentation\/wwdcnotes\/wwdc21-10104-meet-safari-web-extensions-on-ios","abstract":[{"text":"Safari Web Extensions use HTML, CSS, and JavaScript to offer people powerful browser customizations — and you can now create them for every device that supports Safari. Learn how to build a Safari Web Extension that works for all devices, and discover how you can convert an existing extension to Safari through Xcode and the Safari Web Extension Converter.","type":"text"}],"role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10104-Meet-Safari-Web-Extensions-on-iOS","kind":"article","title":"Meet Safari Web Extensions on iOS"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10033-Meet-privacypreserving-ad-attribution":{"abstract":[{"text":"Discover how you can measure your ad campaigns in apps and on the web without compromising privacy. We’ll introduce you to Private Click Measurement and explore SKAdNetwork, which provides you with a more secure, private, and useful way to measure your app installs.","type":"text"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10033-Meet-privacypreserving-ad-attribution","url":"\/documentation\/wwdcnotes\/wwdc21-10033-meet-privacypreserving-ad-attribution","type":"topic","title":"Meet privacy-preserving ad attribution","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10188-Discover-WKWebView-enhancements":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10188-Discover-WKWebView-enhancements","role":"sampleCode","title":"Discover WKWebView enhancements","url":"\/documentation\/wwdcnotes\/wwdc20-10188-discover-wkwebview-enhancements","type":"topic","kind":"article","abstract":[{"type":"text","text":"WKWebView is the best way to present rich, interactive web content right within your app. Explore new APIs that help you convert apps using WebViews or UIWebViews while adding entirely new capabilities. Learn about better ways to handle JavaScript, fine tune the rendering process, export web content, and more."}]},"https://developer.apple.com/wwdc21/10032":{"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc21\/10032","url":"https:\/\/developer.apple.com\/wwdc21\/10032","checksum":null},"zntfdr":{"type":"image","alt":"Profile image of Federico Zanetello","identifier":"zntfdr","variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes":{"role":"collection","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"title":"WWDC Notes","type":"topic","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"kind":"symbol","url":"\/documentation\/wwdcnotes"},"WWDC21-Icon.png":{"type":"image","alt":null,"identifier":"WWDC21-Icon.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC21-Icon.png"}]},"https://github.com/zntfdr":{"type":"link","title":"GitHub","titleInlineContent":[{"type":"text","text":"GitHub"}],"identifier":"https:\/\/github.com\/zntfdr","url":"https:\/\/github.com\/zntfdr"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10030-Develop-advanced-web-content":{"url":"\/documentation\/wwdcnotes\/wwdc21-10030-develop-advanced-web-content","abstract":[{"text":"Develop in JavaScript, WebGL, or WebAssembly? Learn how the latest updates to Safari and WebKit — including language changes to class syntax — can help simplify your development process, enhance performance, and improve security. We’ll explore several web APIs that can help provide better interoperability and bring new capabilities to your web content.","type":"text"}],"role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10030-Develop-advanced-web-content","kind":"article","title":"Develop advanced web content"},"zntfdr.jpeg":{"type":"image","alt":null,"identifier":"zntfdr.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/zntfdr.jpeg"}]},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"type":"link","title":"Contributions are welcome!","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"https://zntfdr.dev":{"type":"link","title":"Blog","titleInlineContent":[{"type":"text","text":"Blog"}],"identifier":"https:\/\/zntfdr.dev","url":"https:\/\/zntfdr.dev"},"WWDCNotes.png":{"type":"image","alt":null,"identifier":"WWDCNotes.png","variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10027-Explore-Safari-Web-Extension-improvements":{"url":"\/documentation\/wwdcnotes\/wwdc21-10027-explore-safari-web-extension-improvements","abstract":[{"text":"Learn how you can extend Safari’s functionality with Safari Web Extensions. We’ll introduce you to the latest WebExtension APIs, explore non-persistent background page support — a particularly relevant topic if you’re developing for iOS — and discover how you can use the Declarative Net Request WebExtensions API to block content on the web. Finally, we’ll show you how to customize tabs in Safari 15.","type":"text"}],"role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10027-Explore-Safari-Web-Extension-improvements","kind":"article","title":"Explore Safari Web Extension improvements"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"kind":"article","images":[{"type":"card","identifier":"zntfdr.jpeg"},{"identifier":"zntfdr.jpeg","type":"icon"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/zntfdr","type":"topic","title":"Federico Zanetello (332 notes)","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10031-Discover-Web-Inspector-improvements":{"url":"\/documentation\/wwdcnotes\/wwdc21-10031-discover-web-inspector-improvements","abstract":[{"text":"Web Inspector provides the tools for you to understand and debug your web pages on macOS, iOS, and iPadOS. We’ll take you through the latest features and improvements to Web Inspector, including a new overlay for inspecting CSS Grid containers on your pages, even more configurable breakpoints to make debugging simpler, and the ability to create and edit Audits.","type":"text"}],"role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10031-Discover-Web-Inspector-improvements","kind":"article","title":"Discover Web Inspector improvements"}}}