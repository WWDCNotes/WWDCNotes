{"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10181-Ultimate-application-performance-survival-guide"},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Performance optimization can seem like a daunting task — with many metrics to track and tools to use. Fear not: Our survival guide to app performance is here to help you understand tooling, metrics, and paradigms that can help smooth your development process and contribute to a great experience for people using your app."}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc21-10181-ultimate-application-performance-survival-guide"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"WWDC Notes"}],"role":"sampleCode","title":"Ultimate application performance survival guide","roleHeading":"WWDC21"},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Introduction","anchor":"Introduction","level":2},{"inlineContent":[{"type":"text","text":"Eight key metrics to track for application performance:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Battery Usage","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Launch Time"}]}]},{"content":[{"inlineContent":[{"text":"Hang Rate","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Memory"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Disk Writes","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Scrolling"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Terminations","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"MXSignposts","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"Toolset:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Xcode Organizer"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"MetricKit","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Instruments","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"XCTest","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"App Store Connect API","type":"text"}]}]}]},{"type":"heading","text":"Metrics and resolutions","anchor":"Metrics-and-resolutions","level":2},{"type":"heading","text":"Battery life","anchor":"Battery-life","level":3},{"inlineContent":[{"text":"Subsystems to pay attention to improve battery life:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"CPU","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Networking"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Location","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"audio"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Bluetooth"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"GPU"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"During development I can monitor battery impact via the energy gauge in the Debug navigator.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"High CPU utilization"},{"type":"text","text":" is when CPU use is greater than 20%"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"CPU Wake Overhead"},{"type":"text","text":" is regions where the CPU wakes from an idle state, and there’s an incurred energy cost"}]}]}]},{"inlineContent":[{"text":"After shipping the app, we can monitor our app performance via MetricKit.","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["class AppMetrics: MXMetricManagerSubscriber {","  init() {","    let shared = MXMetricManager.shared","    shared.add(self)","  }","","  deinit {","    let shared = MXMetricManager.shared","    shared.remove(self)","  }","","  \/\/ Receive daily metrics","  func didReceive(_ payloads: [MXMetricPayload]) {","    \/\/ Process metrics","  }","","  \/\/ Receive diagnostics","  func didReceive(_ payloads: [MXDiagnosticPayload]) {","    \/\/ Process metrics","  }","}"],"syntax":"swift"},{"inlineContent":[{"text":"This data is also automatically collected (from devices that have given consent) and is available in the Xcode Organizer.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"New in Xcode 13, the Organizer has ","type":"text"},{"code":"Regression","type":"codeVoice"},{"text":" pane:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"isolates all the metrics that have increased significantly in the most recent version of our app"}]}]}]},{"inlineContent":[{"type":"text","text":"Alternatively we can use the AppStore API."}],"type":"paragraph"},{"type":"heading","text":"Hang Rate and Scrolling","anchor":"Hang-Rate-and-Scrolling","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"A hang is when the app is unresponsive to user input or actions for at least ","type":"text"},{"code":"250 milliseconds","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Stuttering scrolls occur when new content isn’t ready for the next screen refresh"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"I can use Instruments to detect the cause of my hangs by using the ","type":"text"},{"type":"codeVoice","code":"Thread State"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"System Call Traces"},{"text":":","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"the ","type":"text"},{"code":"Thread State Trace","type":"codeVoice"},{"text":" instrument shows a timeline of the thread’s state and when the OS has scheduled the thread to run","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"I can see how long a thread was blocked for in the details section","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"System Call Trace","type":"codeVoice"},{"text":" shows a narrative that details the system calls entered and how long they took","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"write performance tests with XCTest that launch and scrolls through the app","type":"text"}]}]}]},{"type":"codeListing","code":["func testScrollingAnimationPerformance() throws {  ","  app.launch()","  app.staticTexts[\"Meal Planner\"].tap()","  let foodCollection = app.collectionViews.firstMatch","","  let measureOptions = XCTMeasureOptions()","  measureOptions.invocationOptions = [.manuallyStop]","      ","  measure(","    metrics: [XCTOSSignpostMetric.scrollDecelerationMetric],","    options: measureOptions","  ) {","    foodCollection.swipeUp(velocity: .fast)","    stopMeasuring()","    foodCollection.swipeDown(velocity: .fast)","  }","}"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"New in iOS 15 and macOS 12, MetricKit will deliver all diagnostics, including hangs, in my app immediately after an issue occurs"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"In the case of scroll hitches, iOS 15 introduces a new API within MetricKit to tag custom animations using MXSignpost","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"MXSignpost is a wrapper API shipped with MetricKit that allows to mark critical code sections for telemetry"}]}]}]},{"type":"codeListing","code":["func startAnimating() {","  \/\/ Mark the beginning of animations","  mxSignpostAnimationIntervalBegin(","    log: MXMetricManager.makeLogHandle(category: \"animation_telemetry\"), ","    name: \"custom_animation”)","  }","","  func animationDidComplete() {","  \/\/ Mark the end of the animation to receive the collected hitch rate telemetry","  mxSignpost(OSSignpostType.end, ","    log: MXMetricManager.makeLogHandle(category: \"animation_telemetry\"), ","    name: \"custom_animation\")","}"],"syntax":"swift"},{"type":"heading","text":"Disk Writes","anchor":"Disk-Writes","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"profile your app using the File Activity template in Instruments"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"this records file system use in the form of system calls, to easily identify places in the app’s code where you’re accessing the file system.","type":"text"}]}]}]},{"inlineContent":[{"text":"Best practices:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"batching your write operations","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"use Core Data for frequently-changing data"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"avoiding rapid file creation and deletion","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"write performance tests with XCTest to measure the disk usage","type":"text"}]}]}]},{"type":"codeListing","code":["\/\/ Example performance XCTest","","\/\/\/ The test measures the amount of data written to disk by the code in the block and shows the result within Xcode itself","\/\/\/ You can set a baseline of the amount of data expected to be written to disk so that the test fails if the code in the block exceeds that. ","func testSaveMeal() {","  let app = XCUIApplication()","  let options = XCTMeasureOptions()","  options.invocationOptions = [.manuallyStart]","","  measure(metrics: [XCTStorageMetric(application: app)], options: options) {","    app.launch()","    startMeasuring()","","    let firstCell = app.cells.firstMatch","    firstCell.buttons[\"Save meal\"].firstMatch.tap()","","    let savedButton = firstCell.buttons[\"Saved\"].firstMatch","    XCTAssertTrue(savedButton.waitForExistence(timeout: 2))","  }","}"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can look for the sources of these writes by taking a look at Xcode Organizer "},{"type":"codeVoice","code":"Disk Writes"},{"type":"text","text":" Reports"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"these are collection of reports that are generated when your app writes more than 1 GB in a 24-hour period","type":"text"}]}]}]},{"type":"heading","text":"Launch time and Termination","anchor":"Launch-time-and-Termination","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Launch time is the amount of time between when the user taps your app icon and when the first frame gets rendered in your app"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Process exits can happen for many different reasons, like hitting and exceeding the system memory limit or timing out on launch","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"we can profile app launch time by using the "},{"type":"codeVoice","code":"App Launch template"},{"type":"text","text":" in Instruments"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"this template runs the app for five seconds, during which it gathers a time profile and Thread State Trace of what was going on while the app was launching","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"we can also measure launch times in a performance XCTest by using the ","type":"text"},{"type":"codeVoice","code":"XCTApplicationsLaunchMetric"},{"text":" in a measure block.","type":"text"}]}]}]},{"type":"heading","text":"Memory","anchor":"Memory","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"profile the memory use by using the Leaks, Allocations, and VM Tracker templates in Instruments","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Leaks will examine my process’s heap and check for leaked memory"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Allocations will analyze the memory life cycle of my app"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"VM Tracker will show the virtual memory space of the app over time"}]}]}],"type":"unorderedList"}]}]},{"type":"heading","text":"Written By","anchor":"Written-By","level":2},{"type":"row","columns":[{"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"zntfdr"}]}],"size":1},{"content":[{"anchor":"Federico-Zanetello","text":"Federico Zanetello","type":"heading","level":3},{"inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","type":"reference","overridingTitle":"Contributed Notes","isActive":true,"overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}]},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/zntfdr","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/zntfdr.dev","type":"reference","isActive":true}],"type":"paragraph"}],"size":4}],"numberOfColumns":5},{"type":"thematicBreak"},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true}],"type":"paragraph"},{"type":"heading","text":"Related Sessions","anchor":"Related-Sessions","level":2},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10100-Optimize-app-power-and-performance-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10087-Diagnose-Power-and-Performance-regressions-in-your-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10180-Detect-and-diagnose-memory-issues","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10203-Triage-TestFlight-crashes-in-Xcode-Organizer","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10258-Understand-and-eliminate-hangs-from-your-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10057-Identify-trends-with-the-Power-and-Performance-API","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10076-Diagnose-performance-issues-with-the-Xcode-Organizer","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10077-Eliminate-animation-hitches-with-XCTest","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10081-Whats-new-in-MetricKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-411-Getting-Started-with-Instruments"]},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2025 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}]}],"sampleCodeDownload":{"kind":"sampleDownload","action":{"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc21\/10181","overridingTitle":"Watch Video (24 min)","isActive":true}},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10057-Identify-trends-with-the-Power-and-Performance-API":{"title":"Identify trends with the Power and Performance API","kind":"article","role":"sampleCode","abstract":[{"text":"Track your app’s performance metrics in custom team dashboards, bug reporting systems, and other custom workflows with the Power and Performance Metrics and Diagnostics API. Explore how you can access the same data that drives the Power and Performance analysis tools in Xcode to quickly identify trends and regressions. Learn how to leverage diagnostic signatures and logs — including call stack trees — to prioritize and debug issues. And discover how you can integrate this API with your development team’s existing tools to troubleshoot issues quickly, offering better overall performance for people who use your app.","type":"text"}],"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10057-identify-trends-with-the-power-and-performance-api","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10057-Identify-trends-with-the-Power-and-Performance-API"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10087-Diagnose-Power-and-Performance-regressions-in-your-app":{"type":"topic","role":"sampleCode","title":"Diagnose Power and Performance regressions in your app","abstract":[{"text":"Quickly discover how to identify priorities when viewing power and performance regressions. Learn how to track metrics that have regressed with device-and percentile-specific information, so you can focus your efforts on optimization and save valuable development time. We’ll also show you how to track down common anti-patterns in your app that wear out device storage, help you customize your workflows, and add App Store Connect APIs to help you stay up to date on your app’s real-world performance.","type":"text"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10087-Diagnose-Power-and-Performance-regressions-in-your-app","url":"\/documentation\/wwdcnotes\/wwdc21-10087-diagnose-power-and-performance-regressions-in-your-app"},"zntfdr":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/zntfdr.jpeg"}],"type":"image","alt":"Profile image of Federico Zanetello","identifier":"zntfdr"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDCNotes.png"}]},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"images":[{"identifier":"zntfdr.jpeg","type":"card"},{"identifier":"zntfdr.jpeg","type":"icon"}],"title":"Federico Zanetello (332 notes)","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/zntfdr","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"type":"topic","images":[{"type":"icon","identifier":"WWDC21-Icon.png"},{"type":"card","identifier":"WWDC21.jpeg"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","role":"collectionGroup","abstract":[{"type":"text","text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"code":"MusicKit","type":"codeVoice"},{"type":"text","text":", "},{"code":"DocC","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"StoreKit 2"},{"text":", and more.","type":"text"}],"title":"WWDC21","url":"\/documentation\/wwdcnotes\/wwdc21","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10100-Optimize-app-power-and-performance-for-spatial-computing":{"title":"Optimize app power and performance for spatial computing","abstract":[{"text":"Learn how you can create powerful apps and games for visionOS by optimizing for performance and efficiency. We’ll cover the unique power characteristics of the platform, explore building a performance plan, and share some of the tools and strategies to test and optimize your apps.","type":"text"}],"kind":"article","type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10100-optimize-app-power-and-performance-for-spatial-computing","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10100-Optimize-app-power-and-performance-for-spatial-computing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10076-Diagnose-performance-issues-with-the-Xcode-Organizer":{"url":"\/documentation\/wwdcnotes\/wwdc20-10076-diagnose-performance-issues-with-the-xcode-organizer","kind":"article","role":"sampleCode","abstract":[{"text":"Analyze aggregated power and performance data from multiple versions of your app with just a few clicks. We’ll introduce you to the latest version of the Xcode Organizer and its interactive interface, where you can easily compare and contrast app metrics across releases. Explore disk write diagnostics and scroll hitch metrics, and learn how you can use these to offer better performance, reduce battery consumption, and improve device health for people using your app.","type":"text"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10076-Diagnose-performance-issues-with-the-Xcode-Organizer","title":"Diagnose performance issues with the Xcode Organizer"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!"},"https://github.com/zntfdr":{"type":"link","title":"GitHub","titleInlineContent":[{"type":"text","text":"GitHub"}],"url":"https:\/\/github.com\/zntfdr","identifier":"https:\/\/github.com\/zntfdr"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10180-Detect-and-diagnose-memory-issues":{"title":"Detect and diagnose memory issues","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc21-10180-detect-and-diagnose-memory-issues","type":"topic","abstract":[{"text":"Discover how you can understand and diagnose memory performance problems with Xcode. We’ll take you through the latest updates to Xcode’s tools, explore Metrics, check out the memgraph collection feature in XCTest, and learn how to catch regressions using a Performance XCTest.","type":"text"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10180-Detect-and-diagnose-memory-issues"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10077-Eliminate-animation-hitches-with-XCTest":{"title":"Eliminate animation hitches with XCTest","abstract":[{"text":"Animations can dramatically enhance the user experience of your app, provide a sense of direct manipulation, and help people to better understand the results of their actions. Animation hitches can break that experience. Discover how to use XCTest to detect interruptions to smooth scrolling and animations, and learn how to catch regressions before they affect the people relying on your app.","type":"text"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10077-Eliminate-animation-hitches-with-XCTest","url":"\/documentation\/wwdcnotes\/wwdc20-10077-eliminate-animation-hitches-with-xctest","kind":"article","role":"sampleCode"},"https://zntfdr.dev":{"identifier":"https:\/\/zntfdr.dev","url":"https:\/\/zntfdr.dev","type":"link","titleInlineContent":[{"type":"text","text":"Blog"}],"title":"Blog"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-411-Getting-Started-with-Instruments":{"title":"Getting Started with Instruments","abstract":[{"type":"text","text":"The Instruments app in Xcode provides a rich set of tools and templates for profiling your app performance. Learn all about Instruments and gain strategies for identifying bottlenecks in your code. See just how to leverage the power of time profiling and points of interest tracking to make meaningful changes to your code that can dramatically improve app responsiveness."}],"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc19-411-getting-started-with-instruments","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-411-Getting-Started-with-Instruments","kind":"article","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10203-Triage-TestFlight-crashes-in-Xcode-Organizer":{"title":"Triage TestFlight crashes in Xcode Organizer","abstract":[{"text":"Learn how Xcode Organizer makes it easier and faster to triage and fix crashes. We’ll explore how you can get access to crash information and feedback from your TestFlight testers just moments after they occur. And we’ll show you how to analyze crashes, view metrics, and even share crash information among your team.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10203-Triage-TestFlight-crashes-in-Xcode-Organizer","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10203-triage-testflight-crashes-in-xcode-organizer","type":"topic"},"https://developer.apple.com/wwdc21/10181":{"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc21\/10181","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc21\/10181"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10258-Understand-and-eliminate-hangs-from-your-app":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10258-understand-and-eliminate-hangs-from-your-app","abstract":[{"text":"Discover how you can track down hangs and delays in your app. We’ll show you tools and methods to discover hangs and their causes, learn about anti-patterns that can lead to hangs, explore best practices for eliminating hangs like GCD, and provide guidance on when you should consider asynchronous code to improve your app performance.","type":"text"}],"title":"Understand and eliminate hangs from your app","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10258-Understand-and-eliminate-hangs-from-your-app"},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"title":"WWDC Notes","role":"collection","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"url":"\/documentation\/wwdcnotes"},"zntfdr.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/zntfdr.jpeg"}],"type":"image","alt":null,"identifier":"zntfdr.jpeg"},"WWDC21.jpeg":{"alt":null,"type":"image","identifier":"WWDC21.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC21.jpeg"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10081-Whats-new-in-MetricKit":{"type":"topic","role":"sampleCode","abstract":[{"type":"text","text":"Quickly detect power and performance regressions and troubleshoot app issues when you adopt MetricKit. Discover the latest trackable metrics for your app, including CPU instructions, animation hitches, and exit reasons. And learn about diagnostics in MetricKit that can help you troubleshoot hangs, crashes, and disk writes."}],"title":"What’s new in MetricKit","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10081-Whats-new-in-MetricKit","url":"\/documentation\/wwdcnotes\/wwdc20-10081-whats-new-in-metrickit"},"WWDC21-Icon.png":{"identifier":"WWDC21-Icon.png","alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC21-Icon.png"}]}}}