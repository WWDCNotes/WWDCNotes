{"kind":"article","abstract":[{"type":"text","text":"Join us for an update on Swift. Discover the latest language advancements that make your code easier to read and write. Explore the growing number of APIs available as Swift packages. And we‚Äôll introduce you to Swift‚Äôs async\/await syntax, structured concurrency, and actors."}],"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc21-10192-whats-new-in-swift"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"Swift 5.5 is the best release yet, including:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Async and Concurrent programming"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Advances in the packages experience"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"New standard library packages","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Features enhancing dev experience"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Diversity","level":2,"type":"heading","text":"Diversity"},{"inlineContent":[{"text":"‚ù§Ô∏è The heart of the Swift Project is not the code but the community.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Diversity is a core value.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Evidence shows open source projects that have a diverse community with a wide set","type":"text"},{"text":" ","type":"text"},{"text":"of perspectives helps the community thrive and the project make better decisions.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/swift.org\/diversity\/","isActive":true}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"‚ÄúThe mission of Diversity in Swift is to foster an inclusive Swift community by"},{"type":"text","text":" "},{"type":"text","text":"creating more pathways for a diverse group of developers, increasing the engagement and"},{"type":"text","text":" "},{"type":"text","text":"retention of those developers, and helping developers of all backgrounds establish"},{"type":"text","text":" "},{"type":"text","text":"leadership and technical expertise within the community.‚Äù"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Highlight a variety of voices in the community. Community groups to help those with a"},{"type":"text","text":" "},{"type":"text","text":"similar background get started."}]},{"text":"üì¶ Swift Packages","level":2,"anchor":"üì¶-Swift-Packages","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Being able to find and use open source packages is an important part of the ecosystem.","type":"text"},{"text":" ","type":"text"},{"text":"The community built ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/swiftpackageindex.com"},{"text":" to help with this. üéâüéâüéâ","type":"text"},{"text":" ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Aside"}]},{"text":": Thank you ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/SwiftPackageIndex\/SwiftPackageIndex-Server\/graphs\/contributors"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In Xcode 13 and Swift 5.5, you can find packaged directly."}]},{"text":"üì¶üì¶üì¶ Swift Package Collections","level":2,"anchor":"üì¶üì¶üì¶-Swift-Package-Collections","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Search screen in Xcode","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Anyone can publish them (JSON file)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Curated list of of packages for different use cases","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Searchable"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Example: a set of packages for a computer science class, a set for a specific problem domain, organization, etc.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Xcode comes pre-wired with a set of Apple standard packages."},{"type":"text","text":"\n"},{"type":"text","text":"See "},{"isActive":true,"identifier":"https:\/\/swift.org\/blog\/package-collections","type":"reference"},{"type":"text","text":" for more details."}]},{"text":"Apple Packages","level":3,"anchor":"Apple-Packages","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Swift Algorithms ","type":"text"},{"inlineContent":[{"text":"(new)","type":"text"}],"type":"strong"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Swift Crypto","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Swift Argument Parser"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Atomics "},{"type":"strong","inlineContent":[{"type":"text","text":"(new)"}]}]}]},{"content":[{"inlineContent":[{"text":"Swift Collections ","type":"text"},{"inlineContent":[{"type":"text","text":"(new)"}],"type":"strong"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Protobuf"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Swift NIO"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Numerics"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Swift System ","type":"text"},{"inlineContent":[{"text":"(new)","type":"text"}],"type":"strong"}]}]}]},{"text":"·†Ö Swift Collections","level":2,"anchor":"-Swift-Collections","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Similar to Swift standard library types.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Deque (pronounced deck)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Ordered Set","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Ordered Dictionary","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Deque has a fast O(1) append and prepend operation"}]},{"type":"paragraph","inlineContent":[{"text":"Ordered set is like an array in that it maintains order and random access but like a set because it makes sure elements are unique (and has fast lookup).","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Ordered dictionary is an alternate to dictionary when order is important or you need random access to elements."}]},{"text":"Swift Algorithms","level":2,"anchor":"Swift-Algorithms","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Open source package of algorithms on sequence and collection types.  There are already over 40 algorithms there.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"generating all the combinations or permutations"}]}]},{"content":[{"inlineContent":[{"text":"iterating by groups (chunks)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"selecting smallest \/ largest \/ random elements from a collection","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is a session about algorithms and collections and how you can use them to make your code better."}]},{"text":"Swift System","level":2,"anchor":"Swift-System","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Idiomatic, low-level interfaces to system calls."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Strong types","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Memory safety","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Error handling","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"macOS, Linux and Windows support","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Supports thing like "},{"type":"codeVoice","code":"FileDescriptors"},{"type":"text","text":", "},{"type":"codeVoice","code":"FilePath"},{"type":"text","text":"."}]},{"syntax":"swift","code":["import System","","var path: FilePath = \"\/tmp\/WWDC2021.txt\"","print(path.lastComponent)","print(path.extension)","path.extension = nil","path.extension = \"pdf\"","\/\/ etc"],"type":"codeListing"},{"text":"Swift Numerics","level":2,"anchor":"Swift-Numerics","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"New this year","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Float16"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Complex<Float>"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Elementary functions support for ","type":"text"},{"code":"Complex","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Optimizations above the C library versions."}]}]}]},{"text":"ArgumentParser","level":2,"anchor":"ArgumentParser","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Improvements this year:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Code completion for Fish shell"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Joined short options ("},{"type":"codeVoice","code":"-Ddebug"},{"type":"text","text":")"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Improved error messages","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now used by Swift Package Manager in Xcode 12.5."}]},{"text":"Swift on Server","level":2,"anchor":"Swift-on-Server","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Static linking on Linux"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Improved JSON performance","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Enhanced AWS Lambda runtime library","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Cold start 33% faster"}]},{"type":"paragraph","inlineContent":[{"text":"40% faster invocation times on AWS gateway","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Uses new async\/await instead of completion closures"}]},{"text":"DocC","level":2,"anchor":"DocC","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Documentation compiler integrated in Xcode 13","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Markdown in source code","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"There are four other sessions about this","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"It will become open source later this year.  ü•≥ü•≥ü•≥"}],"type":"paragraph"}]}]},{"text":"Improvements to Type Checker","level":2,"anchor":"Improvements-to-Type-Checker","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Fewer expression too complex error","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Array literals type checking sped up"}]}]}]},{"text":"Build Improvements","level":2,"anchor":"Build-Improvements","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Faster incremental builds when changing imported modules"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Faster startup time before launching compiles"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Fewer recompilations after changing extension body."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"As an example, now less than a tenth of the files rebuilt after a module changes resulting in a one-third speedup.  Incremental builds.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The first part of the compiler (the driver) is now written in Swift.  It is now the default.","type":"text"}]},{"text":"Memory Management","level":2,"anchor":"Memory-Management","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Class instances use ARC (automatic reference counting).","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The compiler now uses a smarter way to track references and can eliminate retain release traffic."}]},{"type":"paragraph","inlineContent":[{"text":"Improves runtime and code size but is an compiler option ‚ÄúOptimize Object Lifetimes‚Äù","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is a session about this."}]},{"text":"Ergonomic improvements","level":2,"anchor":"Ergonomic-improvements","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0284-multiple-variadic-parameters.md","isActive":true,"type":"reference"},{"text":": Multiple variadic parameters","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0287-implicit-member-chains.md","type":"reference","isActive":true},{"text":": Implicit member chains","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0289-result-builders.md","isActive":true,"type":"reference"},{"text":": Result builders","type":"text"}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0293-extend-property-wrappers-to-function-and-closure-parameters.md"},{"type":"text","text":": Property wrappers on parameters"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0295-codable-synthesis-for-enums-with-associated-values.md"},{"text":": Codable synthesis for associated value enums","type":"text"}]}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0299-extend-generic-static-member-lookup.md","type":"reference","isActive":true},{"text":": Static member lookup in generic contexts","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0307-allow-interchangeable-use-of-double-cgfloat-types.md"},{"type":"text","text":": Interchangeable use of CGFloat and Double"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0309-unlock-existential-types-for-all-protocols.md","isActive":true,"type":"reference"},{"text":": #if for postfix member expressions","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The SE standards for Swift Evolution."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"What follows is a series of examples of how these features can simplify your code."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Result builders was refined over the year and now has a whole session devoted to it.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Making enums with associated values ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":", instead of being pages of boilerplate is now just adding ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":" and letting the compiler do the work.","type":"text"}]}]}]},{"text":"Flexible static member lookup","level":2,"anchor":"Flexible-static-member-lookup","type":"heading"},{"syntax":"swift","code":["protocol Coffee { ... }","struct RegularCoffee: Coffee {}","struct Cappuccino: Coffee {}","","extension Coffee where Self == Cappucino {","  static var cappucino: Cappucino = { Cappucino() }","}","","func brew<CoffeeType: Coffee>(_: CoffeeType) { ... }","","brew(.cappucino.large)   \/\/ Beautify enum-like syntax!"],"type":"codeListing"},{"text":"Improved property wrappers","level":3,"anchor":"Improved-property-wrappers","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"You can use property wrappers can now be used on function (and closures) parameters.","type":"text"}]},{"text":"SwiftUI example","level":2,"anchor":"SwiftUI-example","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The before and after is pretty remarkable!"}]},{"type":"paragraph","inlineContent":[{"text":"In Swift you can pass a binding to SwiftUI ","type":"text"},{"type":"codeVoice","code":"List"},{"text":" to get access to the projection and wrapped value.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"There is a session about this.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"It makes your code simpler!","type":"text"}]},{"text":"Asynchronous and Concurrent Programming","level":2,"anchor":"Asynchronous-and-Concurrent-Programming","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Synchronous: code statements execute one-by-one and in-order","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Asynchronous: code suspends execution waiting for op to finish, then continues","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Concurrent: multiple code statements executing at once","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Without Swift‚Äôs new features you often write async code using completion handlers (closure)."}]},{"type":"paragraph","inlineContent":[{"text":"Later, after the network request finishes, the callback happens.","type":"text"},{"text":" ","type":"text"},{"text":"Only then can you deal with errors, which can be awkward.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"URLSession"},{"text":"‚Äôs ","type":"text"},{"type":"codeVoice","code":"dataTask"},{"text":" is changed to this:","type":"text"}]},{"syntax":"swift","code":["let (data, response) = try await URLSession.shared.data(for: request)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The await will suspend the operation but "},{"type":"strong","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" block the thread so other"},{"type":"text","text":" "},{"type":"text","text":"work can continue on that thread.  This allows a small number of threads"},{"type":"text","text":" "},{"type":"text","text":"to be shared among several asynchronous processes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The code can then continue inline making it easy to follow."}]},{"type":"paragraph","inlineContent":[{"text":"There are other sessions about this.","type":"text"}]},{"text":"Concurrency","level":2,"anchor":"Concurrency","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Concurrency builds on the async\/await idea.","type":"text"}]},{"syntax":"swift","code":["func titleImage() async throws -> Image {","  async let background = renderBackground()","  async let foreground = renderForeground()","  let title = try renderTitle()","  return try await merge(background, foreground, title)","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"async let","type":"codeVoice"},{"text":" spawns off another concurrent operation.","type":"text"},{"text":"\n","type":"text"},{"text":"The ","type":"text"},{"code":"merge","type":"codeVoice"},{"text":" operation has to be marked with an ","type":"text"},{"code":"await","type":"codeVoice"},{"text":" to signal that","type":"text"},{"text":" ","type":"text"},{"text":"this thread may suspend.  This function ","type":"text"},{"inlineContent":[{"type":"text","text":"will not return"}],"type":"strong"},{"text":" until the","type":"text"},{"text":" ","type":"text"},{"text":"background tasks complete.  Even if an error is thrown, Swift","type":"text"},{"text":" ","type":"text"},{"text":"will ensure everything completes before returning.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift will signal unfinished tasks that an error was thrown as an optimization."},{"type":"text","text":" "},{"type":"text","text":"The Structured concurrency in Swift session describes this in greater detail."}]},{"text":"Actors","level":2,"anchor":"Actors","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This is another concurrency construct that helps you manage shared mutable data.  Here is an example","type":"text"},{"text":" ","type":"text"},{"text":"that will corrupt if accessed from multiple threads:","type":"text"}]},{"syntax":"swift","code":["class Statistics {","  private var counter: Int = 0","  func increment() {","    counter += 1","  }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The fix is simple.  Change ","type":"text"},{"code":"class","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"actor","type":"codeVoice"},{"text":":","type":"text"}]},{"syntax":"swift","code":["actor Statistics {","  private var counter: Int = 0","  func increment() {","    counter += 1","  }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The Swift compiler prevents corruption by suspending operations","type":"text"},{"text":" ","type":"text"},{"text":"until it is safe to make the change.  That is why you typically","type":"text"},{"text":" ","type":"text"},{"text":"need to call them with ","type":"text"},{"code":"await","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"They also work with async\/await."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Actors are like classes (reference types) but allow the Swift compiler"},{"type":"text","text":" "},{"type":"text","text":"and runtime to protect against data races."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is a full session about this."}]},{"text":"Future of Swift 6","level":2,"anchor":"Future-of-Swift-6","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"async\/await\/actors is a basis"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Swift 6 will have additional capability enable ‚ÄúSafe concurrency‚Äù"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Make concurrent programming just as hard as normal programming","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"More efficiency"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Make Swift 6 better by telling swift.org about your experiences!"}]},{"type":"paragraph","inlineContent":[{"text":"You can try a new compiler toolchain!","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Participate in the forums","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Participate in the mentorship program.","type":"text"},{"text":" ","type":"text"},{"text":"The only requirement is a desire to improve Swift for everyone in the community.","type":"text"}]},{"text":"Written By","level":2,"anchor":"Written-By","type":"heading"},{"columns":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"rayfix","type":"image"}]}],"size":1},{"content":[{"level":3,"anchor":"Ray-Fix","text":"Ray Fix","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"reference","overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/rayfix","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/rayfix","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/","isActive":true}]}],"size":4}],"type":"row","numberOfColumns":5},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}]},{"text":"Related Sessions","level":2,"anchor":"Related-Sessions","type":"heading"},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10018-Whats-new-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10132-Meet-asyncawait-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10133-Protect-mutable-state-with-Swift-actors","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10134-Explore-structured-concurrency-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10166-Meet-DocC-documentation-in-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10167-Elevate-your-DocC-documentation-in-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10197-Discover-and-curate-Swift-Packages-using-Collections","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10235-Build-interactive-tutorials-using-DocC","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10236-Host-and-automate-your-DocC-documentation","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10253-Write-a-DSL-in-Swift-using-result-builders","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10254-Swift-concurrency-Behind-the-scenes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10256-Meet-the-Swift-Algorithms-and-Collections-packages","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10217-Explore-numerical-computing-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10644-Use-Swift-on-AWS-Lambda-with-Xcode"],"style":"list"},{"type":"small","inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}]},{"type":"small","inlineContent":[{"text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10192-Whats-new-in-Swift"},"metadata":{"modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC21","title":"What‚Äòs new in Swift","role":"sampleCode"},"sampleCodeDownload":{"kind":"sampleDownload","action":{"isActive":true,"type":"reference","overridingTitle":"Watch Video (32 min)","identifier":"https:\/\/developer.apple.com\/wwdc21\/10192"}},"sections":[],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"rayfix.jpeg":{"alt":null,"type":"image","identifier":"rayfix.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/rayfix.jpeg"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10236-Host-and-automate-your-DocC-documentation":{"role":"sampleCode","kind":"article","title":"Host and automate your DocC documentation","type":"topic","abstract":[{"type":"text","text":"Find out how you can easily host your Swift package and framework DocC documentation online. We‚Äôll take you through configuring your web server to host your generated DocC archives, and help you learn to use the xcodebuild tool to automate documentation generation and keep your web content synchronized and up to date."}],"url":"\/documentation\/wwdcnotes\/wwdc21-10236-host-and-automate-your-docc-documentation","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10236-Host-and-automate-your-DocC-documentation"},"https://swiftpackageindex.com":{"type":"link","titleInlineContent":[{"type":"text","text":"Swift Package Index"}],"title":"Swift Package Index","identifier":"https:\/\/swiftpackageindex.com","url":"https:\/\/swiftpackageindex.com"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10167-Elevate-your-DocC-documentation-in-Xcode":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10167-elevate-your-docc-documentation-in-xcode","abstract":[{"text":"Great documentation can help people effectively and easily adopt your Swift framework. Discover how you can create rich, conceptual articles to accompany your API. You‚Äôll learn best practices for writing articles, including how to structure your documentation, and find out how to create automatically managed links that connect your docs together.","type":"text"}],"role":"sampleCode","title":"Elevate your DocC documentation in Xcode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10167-Elevate-your-DocC-documentation-in-Xcode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10134-Explore-structured-concurrency-in-Swift":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10134-explore-structured-concurrency-in-swift","abstract":[{"text":"When you have code that needs to run at the same time as other code, it‚Äôs important to choose the right tool for the job. We‚Äôll take you through the different kinds of concurrent tasks you can create in Swift, show you how to create groups of tasks, and find out how to cancel tasks in progress. We‚Äôll also provide guidance on when you may want to use unstructured tasks.","type":"text"}],"role":"sampleCode","title":"Explore structured concurrency in Swift","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10134-Explore-structured-concurrency-in-Swift"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10018-Whats-new-in-SwiftUI":{"url":"\/documentation\/wwdcnotes\/wwdc21-10018-whats-new-in-swiftui","title":"What‚Äôs new in SwiftUI","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10018-Whats-new-in-SwiftUI","role":"sampleCode","kind":"article","abstract":[{"text":"There‚Äôs never been a better time to develop your apps with SwiftUI. Discover the latest updates to the UI framework ‚Äî including lists, buttons, and text fields ‚Äî and learn how these features can help you more fully adopt SwiftUI in your app. Find out how to create beautiful, visually-rich graphics using the canvas view, materials, and enhancements to symbols. Explore multi-column tables on macOS, refinements to focus and keyboard interaction, and the multi-platform search API. And we‚Äôll show you how to take advantage of features like Swift concurrency, a brand new AttributedString, format styles, localization, and so much more.","type":"text"}],"type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10132-Meet-asyncawait-in-Swift":{"url":"\/documentation\/wwdcnotes\/wwdc21-10132-meet-asyncawait-in-swift","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10132-Meet-asyncawait-in-Swift","type":"topic","title":"Meet async\/await in Swift","abstract":[{"text":"Swift now supports asynchronous functions ‚Äî a pattern commonly known as async\/await. Discover how the new syntax can make your code easier to read and understand. Learn what happens when a function suspends, and find out how to adapt existing completion handlers to asynchronous functions.","type":"text"}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10197-Discover-and-curate-Swift-Packages-using-Collections":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc21-10197-discover-and-curate-swift-packages-using-collections","type":"topic","role":"sampleCode","title":"Discover and curate Swift Packages using Collections","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10197-Discover-and-curate-Swift-Packages-using-Collections","abstract":[{"text":"Whether you‚Äôre curating packages for your team, for education purposes, or to share with other developers, Swift Package Collections can help you discover, explore and import new packages into your project. Discover improvements in the Swift Package workflow using Collections, and learn how you can curate, create, sign, and share your own Swift Package Collections.","type":"text"}]},"https://developer.apple.com/wwdc21/10192":{"url":"https:\/\/developer.apple.com\/wwdc21\/10192","type":"download","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc21\/10192"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10256-Meet-the-Swift-Algorithms-and-Collections-packages":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10256-Meet-the-Swift-Algorithms-and-Collections-packages","type":"topic","title":"Meet the Swift Algorithms and Collections packages","url":"\/documentation\/wwdcnotes\/wwdc21-10256-meet-the-swift-algorithms-and-collections-packages","role":"sampleCode","abstract":[{"text":"Discover two of the latest additions to the list of open-source Swift packages from Apple: Swift Algorithms and Swift Collections. Not only can you use these packages immediately, they also incubate new algorithms and data structures for eventual inclusion in the Swift Standard Library. We‚Äôll show you how you can integrate these packages into your projects and select the right algorithms and data structures to make your code clearer and faster.","type":"text"}],"kind":"article"},"rayfix":{"alt":"Profile image of Ray Fix","type":"image","identifier":"rayfix","variants":[{"traits":["1x","light"],"url":"\/images\/rayfix.jpeg"}]},"https://":{"type":"link","titleInlineContent":[{"type":"text","text":"Blog"}],"title":"Blog","identifier":"https:\/\/","url":"https:\/\/"},"doc://WWDCNotes/documentation/WWDCNotes":{"role":"collection","title":"WWDC Notes","url":"\/documentation\/wwdcnotes","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"kind":"symbol"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"title":"Contributions are welcome!","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10235-Build-interactive-tutorials-using-DocC":{"kind":"article","abstract":[{"type":"text","text":"Discover how you can author immersive tutorials from scratch with DocC. We‚Äôll demonstrate how you can bring together rich instructions, example code, and images through the DocC syntax to showcase your Swift framework in action. And we‚Äôll go over how to create progressive training that can provide interactive learning opportunities and help people better understand use cases for your framework."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10235-Build-interactive-tutorials-using-DocC","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10235-build-interactive-tutorials-using-docc","title":"Build interactive tutorials using DocC"},"https://github.com/rayfix":{"type":"link","titleInlineContent":[{"type":"text","text":"GitHub"}],"title":"GitHub","identifier":"https:\/\/github.com\/rayfix","url":"https:\/\/github.com\/rayfix"},"https://github.com/apple/swift-evolution/blob/be686706919cab796b47b8c528a1fa52028a8335/proposals/0307-allow-interchangeable-use-of-double-cgfloat-types.md":{"url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0307-allow-interchangeable-use-of-double-cgfloat-types.md","type":"link","titleInlineContent":[{"text":"SE-0307","type":"text"}],"title":"SE-0307","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0307-allow-interchangeable-use-of-double-cgfloat-types.md"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10217-Explore-numerical-computing-in-Swift":{"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc20-10217-explore-numerical-computing-in-swift","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10217-Explore-numerical-computing-in-Swift","abstract":[{"type":"text","text":"Meet Swift Numerics: a new Swift package for computational mathematics. Take a tour of the protocols and types available in the package and find out how you can use them to write generic code. We‚Äôll also show you how and when to use the new Float16 type to improve performance and reduce memory usage."}],"title":"Explore numerical computing in Swift"},"https://github.com/apple/swift-evolution/blob/be686706919cab796b47b8c528a1fa52028a8335/proposals/0284-multiple-variadic-parameters.md":{"type":"link","titleInlineContent":[{"type":"text","text":"SE-0284"}],"title":"SE-0284","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0284-multiple-variadic-parameters.md","url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0284-multiple-variadic-parameters.md"},"https://github.com/apple/swift-evolution/blob/be686706919cab796b47b8c528a1fa52028a8335/proposals/0293-extend-property-wrappers-to-function-and-closure-parameters.md":{"url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0293-extend-property-wrappers-to-function-and-closure-parameters.md","type":"link","titleInlineContent":[{"text":"SE-0293","type":"text"}],"title":"SE-0293","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0293-extend-property-wrappers-to-function-and-closure-parameters.md"},"https://github.com/apple/swift-evolution/blob/be686706919cab796b47b8c528a1fa52028a8335/proposals/0309-unlock-existential-types-for-all-protocols.md":{"type":"link","titleInlineContent":[{"type":"text","text":"SE-0308"}],"title":"SE-0308","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0309-unlock-existential-types-for-all-protocols.md","url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0309-unlock-existential-types-for-all-protocols.md"},"https://github.com/apple/swift-evolution/blob/be686706919cab796b47b8c528a1fa52028a8335/proposals/0299-extend-generic-static-member-lookup.md":{"url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0299-extend-generic-static-member-lookup.md","type":"link","titleInlineContent":[{"text":"SE-0299","type":"text"}],"title":"SE-0299","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0299-extend-generic-static-member-lookup.md"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10133-Protect-mutable-state-with-Swift-actors":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10133-Protect-mutable-state-with-Swift-actors","url":"\/documentation\/wwdcnotes\/wwdc21-10133-protect-mutable-state-with-swift-actors","title":"Protect mutable state with Swift actors","kind":"article","abstract":[{"type":"text","text":"Data races occur when two separate threads concurrently access the same mutable state. They are trivial to construct, but are notoriously hard to debug."}],"type":"topic","role":"sampleCode"},"WWDCNotes.png":{"type":"image","variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"identifier":"WWDCNotes.png","alt":null},"https://github.com/SwiftPackageIndex/SwiftPackageIndex-Server/graphs/contributors":{"url":"https:\/\/github.com\/SwiftPackageIndex\/SwiftPackageIndex-Server\/graphs\/contributors","type":"link","titleInlineContent":[{"text":"Dave Verwer, Sven A. Schmidt. and others","type":"text"}],"title":"Dave Verwer, Sven A. Schmidt. and others","identifier":"https:\/\/github.com\/SwiftPackageIndex\/SwiftPackageIndex-Server\/graphs\/contributors"},"https://swift.org/blog/package-collections":{"type":"link","titleInlineContent":[{"type":"text","text":"swift.org\/blog\/package-collections"}],"title":"swift.org\/blog\/package-collections","identifier":"https:\/\/swift.org\/blog\/package-collections","url":"https:\/\/swift.org\/blog\/package-collections"},"https://github.com/apple/swift-evolution/blob/be686706919cab796b47b8c528a1fa52028a8335/proposals/0289-result-builders.md":{"url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0289-result-builders.md","type":"link","titleInlineContent":[{"text":"SE-0289","type":"text"}],"title":"SE-0289","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0289-result-builders.md"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10253-Write-a-DSL-in-Swift-using-result-builders":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10253-Write-a-DSL-in-Swift-using-result-builders","type":"topic","abstract":[{"text":"Some problems are easier to solve by creating a customized programming language, or ‚Äúdomain-specific language.‚Äù While creating a DSL traditionally requires writing your own compiler, you can instead use result builders with Swift 5.4 to make your code both easier to read and maintain. We‚Äôll take you through best practices for designing a custom language for Swift: Learn about result builders and trailing closure arguments, explore modifier-style methods and why they work well, and discover how you can extend Swift‚Äôs normal language rules to turn Swift into a DSL.","type":"text"}],"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc21-10253-write-a-dsl-in-swift-using-result-builders","title":"Write a DSL in Swift using result builders","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/rayfix":{"kind":"article","url":"\/documentation\/wwdcnotes\/rayfix","role":"sampleCode","images":[{"identifier":"rayfix.jpeg","type":"card"},{"type":"icon","identifier":"rayfix.jpeg"}],"type":"topic","title":"Ray Fix (1 note)","abstract":[{"text":"No Bio on GitHub","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/rayfix"},"https://swift.org/diversity/":{"type":"link","titleInlineContent":[{"type":"text","text":"Swift.org :: Diversity in Swift"}],"title":"Swift.org :: Diversity in Swift","identifier":"https:\/\/swift.org\/diversity\/","url":"https:\/\/swift.org\/diversity\/"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10254-Swift-concurrency-Behind-the-scenes":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10254-Swift-concurrency-Behind-the-scenes","title":"Swift concurrency: Behind the scenes","role":"sampleCode","abstract":[{"type":"text","text":"Dive into the details of Swift concurrency and discover how Swift provides greater safety from data races and thread explosion while simultaneously improving performance. We‚Äôll explore how Swift tasks differ from Grand Central Dispatch, how the new cooperative threading model works, and how to ensure the best performance for your apps."}],"kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10254-swift-concurrency-behind-the-scenes"},"WWDC21-Icon.png":{"alt":null,"type":"image","identifier":"WWDC21-Icon.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC21-Icon.png"}]},"https://github.com/apple/swift-evolution/blob/be686706919cab796b47b8c528a1fa52028a8335/proposals/0287-implicit-member-chains.md":{"type":"link","titleInlineContent":[{"type":"text","text":"SE-0287"}],"title":"SE-0287","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0287-implicit-member-chains.md","url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0287-implicit-member-chains.md"},"https://github.com/apple/swift-evolution/blob/be686706919cab796b47b8c528a1fa52028a8335/proposals/0295-codable-synthesis-for-enums-with-associated-values.md":{"url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0295-codable-synthesis-for-enums-with-associated-values.md","type":"link","titleInlineContent":[{"text":"SE-0295","type":"text"}],"title":"SE-0295","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/be686706919cab796b47b8c528a1fa52028a8335\/proposals\/0295-codable-synthesis-for-enums-with-associated-values.md"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10644-Use-Swift-on-AWS-Lambda-with-Xcode":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10644-use-swift-on-aws-lambda-with-xcode","role":"sampleCode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10644-Use-Swift-on-AWS-Lambda-with-Xcode","title":"Use Swift on AWS Lambda with Xcode","abstract":[{"type":"text","text":"Serverless functions are increasingly becoming popular for running event-driven or otherwise ad-hoc compute tasks in the cloud, allowing developers to more easily scale and control compute costs. Discover how to use the new Swift AWS Lambda Runtime package to build serverless functions in Swift, debug locally using Xcode, and deploy these functions to the AWS Lambda platform. We‚Äôll show you how Swift shines on AWS Lambda thanks to its low memory footprint, deterministic performance, and quick start time."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10166-Meet-DocC-documentation-in-Xcode":{"abstract":[{"text":"Discover how you can use DocC to build and share documentation for Swift packages and frameworks. We‚Äôll show you how to begin generating documentation from your own code ‚Äî or from third-party code you depend upon ‚Äî and write and format it using Markdown. And we‚Äôll also take you through the export process, helping you generate DocC archives to share with the public.","type":"text"}],"role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10166-Meet-DocC-documentation-in-Xcode","title":"Meet DocC documentation in Xcode","url":"\/documentation\/wwdcnotes\/wwdc21-10166-meet-docc-documentation-in-xcode","kind":"article"},"WWDC21.jpeg":{"type":"image","variants":[{"url":"\/images\/WWDC21.jpeg","traits":["1x","light"]}],"identifier":"WWDC21.jpeg","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"role":"collectionGroup","title":"WWDC21","url":"\/documentation\/wwdcnotes\/wwdc21","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","images":[{"identifier":"WWDC21-Icon.png","type":"icon"},{"identifier":"WWDC21.jpeg","type":"card"}],"abstract":[{"type":"text","text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"code":"MusicKit","type":"codeVoice"},{"type":"text","text":", "},{"code":"DocC","type":"codeVoice"},{"type":"text","text":", "},{"code":"StoreKit 2","type":"codeVoice"},{"text":", and more.","type":"text"}],"kind":"article"}}}