{"sampleCodeDownload":{"kind":"sampleDownload","action":{"overridingTitle":"Watch Video (24 min)","isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc21\/10015"}},"sections":[],"metadata":{"roleHeading":"WWDC21","role":"sampleCode","modules":[{"name":"WWDC Notes"}],"title":"Build apps that share data through CloudKit and Core Data"},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"New databaseScope: "},{"type":"codeVoice","code":".shared"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"New APIs for sharing objects and accepting invitations","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Record Zone Sharing"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Allows cloud encryption","type":"text"}]}]}]},{"type":"heading","anchor":"What-is-sharing","text":"What is “sharing?”","level":2},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The presenter shows the process of creating a shared album. Then uses a "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/CoreData\/synchronizing-a-local-store-to-the-cloud","isActive":true},{"type":"text","text":" to demonstrate how to share a newly created post to others through email."}]}],"style":"note"},{"type":"heading","anchor":"How-do-we-share","text":"How do we share?","level":2},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“Sharing” is by far the most complicated feature built in NSPersistentCloudKitContainer."}]}],"style":"note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Data is stored in different stores. Using a single managedObjectContext, an application can manage objects in both stores."}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC21-10015-stores","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To do this, we have to tell NSPersistentCloudKitContainer to mirror the shared CloudKit database to a new persistence store:"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"add a new description by copying the private store description with a different URL"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"set the databaseScope to "},{"type":"codeVoice","code":".shared"},{"type":"text","text":" (This is new in iOS 15)"}]}]}]},{"type":"codeListing","code":["let containerIdentifier = \/\/...","let sharedStoreDescription = privateStoreDescription.copy()","let sharedStoreURL = storesURL.appendingPathComponent(\"shared.sqlite\")","sharedStoreDescription.url = sharedStoreURL ","","let sharedStoreOptions = NSPersistentCloudKitContainerOptions(containerIdentifier: containerIdentifier)","","sharedStoreOptions.databaseScope = .shared \/\/ new in iOS 15","sharedStoreDescription.cloudKitContainerOptions = sharedStoreOptions","container.persistentStoreDescriptions.append(sharedStoreDescription)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"And then we can adopt a new method on NSPersistentCloudKitContainer to create the share:"}]},{"type":"codeListing","code":["open func share(_ managedObjects: [NSManagedObject],","                to share: CKShare?,","                completion completion: @escaping (Set<NSManagedObjectID>?,","                                                  CKShare?,","                                                  CKContainer?,","                                                  Error?) -> Void)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This is how the demo uses it:","type":"text"}]},{"type":"codeListing","code":["\/\/ DetailViewController+Sharing.swift","@IBAction func shareNoteAction(_ sender: Any) {","  let container = AppDelegate.sharedAppDelegate.coreDataStack.persistentContainer","  let cloudSharingController = UICloudSharingController {","    (controller, completion: @escaping (CKShare?, CKContainer?, Error?) -> Void) in","    \/\/ HERE!","    container.share([self.post!], ","                    to: nil) { objectIDs, share, container, error in","            completion(share, container, error)","        }","  }","  cloudSharingController.delegate = self","","  if let popover = cloudSharingController.popoverPresentationController {","    popover.barButtonItem = barButtonItem","  }","  present(cloudSharingController, animated: true) {}","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The new method is invoked in the create-share phase of a UICloudSharingController’s workflow.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Last thing is to be able to accept invitation by using another new method:"}]},{"type":"codeListing","code":["open func  acceptShareInvitations(fromMetadata metadata: [CKShare.Metadata],","                                  into persistentStore: NSPersistentStore,","                                  completion: (([CKShare.Metadata]?, Error?) -> Void)? = nil)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is used in the AppDelegate:"}]},{"type":"codeListing","code":["func application(_ application: UIApplication,","                 userDidAcceptCloudKitShare cloudKitShareMetadata: CKShare.Metadata) {","    let sharedStore = AppDelegate.sharedAppDelegate.coreDataStack.sharedPersistentStore","    let container = AppDelegate.sharedAppDelegate.coreDataStack.persistentContainer","    container.acceptShareInvitations(from: [cloudKitShareMetadata], ","                                     into: sharedStore, ","                                     completion: nil)","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After we accept the share invitations, the NSPersistentCloudKitContainer will automatically save all of the shared objects to the local store."}]},{"type":"paragraph","inlineContent":[{"text":"For further clarification, there are some crucial concepts to be identified.","type":"text"}]},{"type":"heading","anchor":"Owners-and-participants","text":"Owners and participants","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Owners create and share objects","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Participants operate on shared objects","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Shared-objects","text":"Shared objects","level":3},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"NSManagedObject is turned into CKRecord"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"NSPersistentCloudKitContainer uses "},{"inlineContent":[{"type":"text","text":"Record Zone Sharing"}],"type":"strong"},{"type":"text","text":" to share objects"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Record-Zone-Sharing","text":"Record Zone Sharing","level":4},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC21-10015-zones"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"NSPersistentCloudKitContainer will create zones we owned, whether or not they are shared, in the private database. For shared zones, NSPersistentCloudKitContainer will also create a CKShare record to control who can access these zones. Other paticipants, if allowed, can add and modify records in these shared zones."}]},{"type":"paragraph","inlineContent":[{"text":"In the shared database, we would see shared zone that other users have shared with us. And if we are allowed to, we can add and modify records in these zones just as they can in the zones we owned.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Most of the time, NSPersistentCloudKitContainer can infer where records belong. But we can also tell it to store objects in a specific zone:"}]},{"type":"codeListing","code":["\/\/ DetailViewController+Sharing.swift","@IBAction func shareNoteAction(_ sender: Any) {","  let container = AppDelegate.sharedAppDelegate.coreDataStack.persistentContainer","  let cloudSharingController = UICloudSharingController {","    (controller, completion: @escaping (CKShare?, CKContainer?, Error?) -> Void) in","    \/\/ HERE! Using an existing share","    container.share([self.post!], ","                    to: self.share) { objectIDs, share, container, error in","            completion(share, container, error)","        }","  }","  cloudSharingController.delegate = self","","  if let popover = cloudSharingController.popoverPresentationController {","    popover.barButtonItem = barButtonItem","  }","  present(cloudSharingController, animated: true) {}","}"],"syntax":"swift"},{"type":"heading","anchor":"Applications-change-with-sharing","text":"Applications change with sharing","level":4},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Decorate shared objects"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Conditionalize editing"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Display participants"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"We can get the CKShare for a specific shared object with the new API:","type":"text"}]},{"type":"codeListing","code":["\/\/ Fetch Shares to access metadata","open func fetchShares(matching objectIDs: [NSManagedObjectID]","                      throws -> [NSManagedObjectID: CKShare])","","\/\/ Conditionalize Editing","open func canUpdateRecord(forManagedObjectWith objectID: NSManagedObjectID) -> Bool","open func canDeleteRecord(forManagedObjectWith objectID: NSManagedObjectID) -> Bool","open func canModifyManagedObjects(in store: NSPersistentStore) -> Bool"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While in the demo, there is a protocol "},{"code":"SharingProvider","type":"codeVoice"},{"type":"text","text":" built to accomplish these customizations:"}]},{"type":"codeListing","code":["protocol SharingProvider {","  func isShared(object: NSManagedObject) -> Bool","  func isShared(objectID: NSManagedObjectID) -> Bool","  func participants(for object: NSManagedObject) -> [RenderableShareParticipant]","  func shares(matching objectIDs: [NSManagedObjectID]) throws -> [NSManagedObjectID: RenderableShare]","  func canEdit(object: NSManagedObject) -> Bool","  func canDelete(object: NSManagedObject) -> Bool","}"],"syntax":"swift"},{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"Check out ","type":"text"},{"code":"BlockBasedShareProvider","type":"codeVoice"},{"text":" if you are interesting in testing.","type":"text"}]}],"style":"note"},{"type":"heading","anchor":"Sensitive-data","text":"Sensitive data","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"New ","type":"text"},{"code":"CKRecord.encryptedValues","type":"codeVoice"},{"text":" payload","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Encryption using the user’s keychain","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"One click adoption in Core Data"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC21-10015-encryption","type":"image"}]},{"type":"paragraph","inlineContent":[{"text":"Or if you prefer to do it in code:","type":"text"}]},{"type":"codeListing","code":["open class NSAttributeDescription: NSPropertyDescription {","    @available(iOS 15.0, *)","    open var allowsCloudEncryption: Bool","}"],"syntax":"swift"},{"type":"heading","anchor":"A-note-about-encrypted-values","text":"A note about encrypted values","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"CKRecord field types can only be set once"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Once the schema is pushed to production it is forever","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Remember to use initializeSchema","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Written-By","text":"Written By","level":2},{"type":"row","numberOfColumns":5,"columns":[{"size":1,"content":[{"inlineContent":[{"type":"image","identifier":"davidleee"}],"type":"paragraph"}]},{"size":4,"content":[{"type":"heading","level":3,"text":"David Lee","anchor":"David-Lee"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/davidleee","overridingTitle":"Contributed Notes","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/davidleee","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/davidleee.com","isActive":true,"type":"reference"}]}]}]},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}]},{"type":"heading","anchor":"Related-Sessions","text":"Related Sessions","level":2},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10119-Optimize-your-use-of-Core-Data-and-CloudKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10003-There-and-back-again-Data-transfer-on-Apple-Watch","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10017-Bring-Core-Data-concurrency-to-Swift-and-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10086-Whats-new-in-CloudKit"],"style":"list"},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2025 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}]}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10015-Build-apps-that-share-data-through-CloudKit-and-Core-Data-"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"abstract":[{"type":"text","text":"Learn how to easily build apps that share data between multiple iCloud users with NSPersistentCloudKitContainer. Discover how to create informative experiences around shared data and learn about the CloudKit technologies that support these features in Core Data."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc21-10015-build-apps-that-share-data-through-cloudkit-and-core-data-"]}],"references":{"davidleee":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/davidleee.jpeg"}],"alt":"Profile image of David Lee","type":"image","identifier":"davidleee"},"WWDC21-10015-encryption":{"type":"image","variants":[{"url":"\/images\/WWDCNotes\/WWDC21-10015-encryption.png","traits":["1x","light"]}],"alt":null,"identifier":"WWDC21-10015-encryption"},"https://developer.apple.com/documentation/CoreData/synchronizing-a-local-store-to-the-cloud":{"identifier":"https:\/\/developer.apple.com\/documentation\/CoreData\/synchronizing-a-local-store-to-the-cloud","titleInlineContent":[{"text":"demo project","type":"text"}],"url":"https:\/\/developer.apple.com\/documentation\/CoreData\/synchronizing-a-local-store-to-the-cloud","type":"link","title":"demo project"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10017-Bring-Core-Data-concurrency-to-Swift-and-SwiftUI":{"title":"Bring Core Data concurrency to Swift and SwiftUI","type":"topic","abstract":[{"type":"text","text":"Discover how Core Data is adopting the new concurrency capabilities of Swift 5.5, leading to more concise, efficient, and safe asynchronous code. We’ll show you how to update Core Data in your apps to work with concurrency, and detail the many other improvements throughout the framework that make working with Swift and SwiftUI more expressive and powerful."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10017-Bring-Core-Data-concurrency-to-Swift-and-SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc21-10017-bring-core-data-concurrency-to-swift-and-swiftui","role":"sampleCode","kind":"article"},"WWDC21-10015-zones":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC21-10015-zones.png"}],"alt":null,"type":"image","identifier":"WWDC21-10015-zones"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"type":"link","title":"Contributions are welcome!","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"WWDC21.jpeg":{"alt":null,"identifier":"WWDC21.jpeg","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC21.jpeg"}]},"davidleee.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/davidleee.jpeg"}],"alt":null,"type":"image","identifier":"davidleee.jpeg"},"WWDC21-10015-stores":{"type":"image","variants":[{"url":"\/images\/WWDCNotes\/WWDC21-10015-stores.png","traits":["1x","light"]}],"alt":null,"identifier":"WWDC21-10015-stores"},"WWDCNotes.png":{"alt":null,"identifier":"WWDCNotes.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDCNotes.png"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10086-Whats-new-in-CloudKit":{"title":"What’s new in CloudKit","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10086-whats-new-in-cloudkit","abstract":[{"type":"text","text":"CloudKit provides a secure, convenient, and reliable cloud database for your apps — and it’s only getting better. Discover how you can unravel your threads with support for async\/await and convenience API additions. We’ll also show you how to encourage collaboration between people using your app through sharing entire record zones of data, and explore how to adopt CloudKit features like encrypted values and help protect sensitive data within your app."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10086-Whats-new-in-CloudKit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10003-There-and-back-again-Data-transfer-on-Apple-Watch":{"abstract":[{"text":"Advances in Apple Watch give you more ways to communicate to and from your app, and new audiences to consider. Learn what strategies are available for data communication and how to choose the right tool for the job. Compare and contrast the benefits of using technologies such as iCloud Keychain, Watch Connectivity, Core Data, and more.","type":"text"}],"type":"topic","role":"sampleCode","title":"There and back again: Data transfer on Apple Watch","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10003-There-and-back-again-Data-transfer-on-Apple-Watch","url":"\/documentation\/wwdcnotes\/wwdc21-10003-there-and-back-again-data-transfer-on-apple-watch","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10119-Optimize-your-use-of-Core-Data-and-CloudKit":{"kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-10119-optimize-your-use-of-core-data-and-cloudkit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10119-Optimize-your-use-of-Core-Data-and-CloudKit","abstract":[{"type":"text","text":"Join us as we explore the three parts of the development cycle that can help you optimize your Core Data and CloudKit implementation. We’ll show you how you can analyze your app’s architecture and feature set to verify assumptions, explore changes in behavior after ingesting large data sets, and get actionable feedback to make improvements to your workflow."}],"title":"Optimize your use of Core Data and CloudKit","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes":{"url":"\/documentation\/wwdcnotes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"role":"collection","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"kind":"symbol","title":"WWDC Notes"},"doc://WWDCNotes/documentation/WWDCNotes/davidleee":{"url":"\/documentation\/wwdcnotes\/davidleee","title":"David Lee (5 notes)","images":[{"type":"card","identifier":"davidleee.jpeg"},{"type":"icon","identifier":"davidleee.jpeg"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/davidleee","role":"sampleCode","type":"topic","kind":"article","abstract":[{"text":"Indie iOS developer🧑🏻‍💻","type":"text"}]},"https://github.com/davidleee":{"title":"GitHub","url":"https:\/\/github.com\/davidleee","type":"link","titleInlineContent":[{"type":"text","text":"GitHub"}],"identifier":"https:\/\/github.com\/davidleee"},"https://developer.apple.com/wwdc21/10015":{"type":"download","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc21\/10015","url":"https:\/\/developer.apple.com\/wwdc21\/10015"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"title":"WWDC21","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","type":"topic","images":[{"type":"icon","identifier":"WWDC21-Icon.png"},{"type":"card","identifier":"WWDC21.jpeg"}],"role":"collectionGroup","kind":"article","abstract":[{"text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"type":"codeVoice","code":"MusicKit"},{"text":", ","type":"text"},{"type":"codeVoice","code":"DocC"},{"text":", ","type":"text"},{"type":"codeVoice","code":"StoreKit 2"},{"text":", and more.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21"},"WWDC21-Icon.png":{"alt":null,"identifier":"WWDC21-Icon.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC21-Icon.png"}]},"https://davidleee.com":{"type":"link","title":"Blog","identifier":"https:\/\/davidleee.com","titleInlineContent":[{"text":"Blog","type":"text"}],"url":"https:\/\/davidleee.com"}}}