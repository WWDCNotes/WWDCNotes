{"schemaVersion":{"major":0,"minor":3,"patch":0},"sampleCodeDownload":{"action":{"overridingTitle":"Watch Video (8 min)","isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc20\/10684","type":"reference"},"kind":"sampleDownload"},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc20-10684-swans-quest-chapter-4-the-sequence-completes"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"Swan’s Quest, Chapter 4: The sequence completes","role":"sampleCode","roleHeading":"WWDC20","modules":[{"name":"WWDC Notes"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10684-Swans-Quest-Chapter-4-The-sequence-completes"},"abstract":[{"type":"text","text":"Swift Playgrounds presents “Swan’s Quest,” an interactive adventure in four chapters for all ages. It’s time for the grand finale: You’ve honed your skills with tones, but in this chapter our Hero needs to sequence multi-part harmony."}],"primaryContentSections":[{"content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"style":"note","name":"Note","content":[{"inlineContent":[{"text":"Swan’s Quest is a series of challenges where each chapter has a specific programming challenge for you that will build on the prior chapters.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"inlineContent":[{"text":"Download the ","type":"text"},{"code":".playgroundbook","type":"codeVoice"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/sample-code\/swift\/swans-quest\/the-sequence-completes.zip","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"},{"anchor":"Sample-Instruments","level":2,"type":"heading","text":"Sample Instruments"},{"inlineContent":[{"text":"In this challenge we will need to play multiple tones at the same time, we will need a step sequencer in order to do that.","type":"text"}],"type":"paragraph"},{"anchor":"What-is-a-step-sequencer","level":3,"type":"heading","text":"What is a step sequencer?"},{"inlineContent":[{"text":"TL;DR: In short it lets us play multiple tones at the same time using the same timer.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"A sequencer is a multi-track timing loop: i","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"it’s divided into equal chunks\/steps which play in sequence over a predefined duration.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"each track represents an instance of a pitched instrument.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Sequencers are also used with non pitched instruments like percussion.","type":"text"}],"type":"paragraph"},{"anchor":"Solution","level":2,"type":"heading","text":"Solution"},{"anchor":"Advice-from-the-Lizard","level":3,"type":"heading","text":"Advice from the Lizard"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"main"}]}]}],"type":"unorderedList"},{"syntax":"swift","type":"codeListing","code":["func performance(owner: Assessable) {","    playInstrument(.piano, note: MIDINotes.c2)","    owner.endPerformance()","}",""]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"sequencer"}]}]}],"type":"unorderedList"},{"syntax":"swift","type":"codeListing","code":["public protocol MIDINoteProtocol {","    ","    \/\/\/ note as an 8-bit MIDI code","    var midiCode: UInt8 { get }","}","","public protocol TrackProtocol {","    associatedtype NoteType : MIDINoteProtocol","    ","    \/\/\/ The kind of instrument that the track sequences","    var instrument: Instrument.Kind { get }","    ","    \/\/\/ Number of beats contained in the sequence","    var length: Int { get }","    ","    \/\/\/ MIDI code for the sequence frame","    func note(for frame: Int) -> NoteType","}","","\/\/ The Wizard has provided a MIDI Notes implementation for you.","public enum MIDINotes : UInt8, MIDINoteProtocol {","    case rest = 0","    ","    case c1  = 24","    case cs1 = 25","    case d1  = 26","    case ds1 = 27","    case e1  = 28","    case f1  = 29","    case fs1 = 30","    case g1  = 31","    case gs1 = 32","    case a1  = 33","    case as1 = 34","    case b1  = 35","    ","    case c2  = 36","    case cs2 = 37","    case d2  = 38","    case ds2 = 39","    case e2  = 40","    case f2  = 41","    case fs2 = 42","    case g2  = 43","    case gs2 = 44","    case a2  = 45","    case as2 = 46","    case b2  = 47","    ","    case c3  = 48","    case cs3 = 49","    case d3  = 50","    case ds3 = 51","    case e3  = 52","    case f3  = 53","    case fs3 = 54","    case g3  = 55","    case gs3 = 56","    case a3  = 57","    case as3 = 58","    case b3  = 59","    ","    case c4  = 60","    case cs4 = 61","    case d4  = 62","    case ds4 = 63","    case e4  = 64","    case f4  = 65","    case fs4 = 66","    case g4  = 67","    case gs4 = 68","    case a4  = 69","    case as4 = 70","    case b4  = 71","    ","    case c5  = 72","    case cs5 = 73","    case d5  = 74","    case ds5 = 75","    case e5  = 76","    case f5  = 77","    case fs5 = 78","    case g5  = 79","    case gs5 = 80","    case a5  = 81","    case as5 = 82","    case b5  = 83","    ","    \/\/\/ note as an 8-bit MIDI code","    public var midiCode: UInt8 {","        return self.rawValue","    }","}","","public class Track : TrackProtocol {","    public var instrument: Instrument.Kind","    public var length: Int","    public var notes: [MIDINotes]","    ","    public init(_ instrument: Instrument.Kind, length: Int = 0, notes: [MIDINotes]) {","        self.instrument = instrument","        self.length = length","        self.notes = notes","    }","    ","    public func note(for frame: Int) -> MIDINotes {","        guard frame < notes.count else {","            return .rest","        }","        return notes[frame]","    }","}"]},{"anchor":"Perfomance-at-Swan-Hall","type":"heading","text":"Perfomance at Swan Hall","level":3},{"syntax":"swift","type":"codeListing","code":["let bass: [MIDINotes] = [","    .g3, .rest, .g2, .rest,","    .c3, .g3, .c4, .rest,","    .b4, .rest, .as4, .rest,","    .f2, .rest, .f3, .e3,","    .d3, .rest, .g2, .rest,","    .c4, .rest, .rest, .rest,","    .a3, .rest, .fs3, .rest,","    .f3, .d3, .c4, .a3","]","","let treble: [MIDINotes] = [","    .rest, .b3, .c4, .d4,","    .e4, .rest, .rest, .d4,","    .e4, .a4, .g4, .e4,","    .d4, .c4, .a3, .rest,","    .rest, .c4, .e4, .f4,","    .g4, .rest, .rest, .a4,","    .g4, .e4, .c4, .e4,","    .d4, .rest, .rest, .rest","]","","func performance(owner: Assessable) {","    let numberOfBeats = 32   \/\/ two bars of 4\/4","    let duration = 16.0      \/\/ seconds","    ","    let tracks = [","        Track(.bassGuitar, length: numberOfBeats, notes: bass), ","        Track(.piano, length: numberOfBeats, notes: treble)","    ]","    ","    let interval = duration \/ Double(numberOfBeats)","    var index = 0","    Timer.scheduledTimer(withTimeInterval: interval, repeats: true, block: { timer in","        for track in tracks {","            playInstrument(track.instrument, note: track.note(for: index))","        }","        ","        index += 1","        if index >= numberOfBeats {","            timer.invalidate()","            owner.endPerformance()","        }","    })","}"]},{"anchor":"Written-By","type":"heading","text":"Written By","level":2},{"columns":[{"content":[{"inlineContent":[{"identifier":"zntfdr","type":"image"}],"type":"paragraph"}],"size":1},{"content":[{"level":3,"text":"Federico Zanetello","type":"heading","anchor":"Federico-Zanetello"},{"type":"paragraph","inlineContent":[{"overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"type":"reference","isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitle":"Contributed Notes"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/zntfdr"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/zntfdr.dev"}]}],"size":4}],"type":"row","numberOfColumns":5},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}],"type":"paragraph"},{"anchor":"Related-Sessions","type":"heading","text":"Related Sessions","level":2},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10643-Build-a-SwiftUI-view-in-Swift-Playgrounds","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10654-Create-Swift-Playgrounds-content-for-iPad-and-Mac","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10681-Swans-Quest-Chapter-1-Voices-in-the-dark","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10682-Swans-Quest-Chapter-2-A-time-for-tones","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10683-Swans-Quest-Chapter-3-The-notable-scroll"],"style":"list"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}],"kind":"content"}],"sections":[],"kind":"article","hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20"]]},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10683-Swans-Quest-Chapter-3-The-notable-scroll":{"type":"topic","title":"Swan’s Quest, Chapter 3: The notable scroll","url":"\/documentation\/wwdcnotes\/wwdc20-10683-swans-quest-chapter-3-the-notable-scroll","abstract":[{"type":"text","text":"Swift Playgrounds presents “Swan’s Quest,” an interactive adventure in four chapters for all ages. Calling all musicians! In this chapter, our Hero has found a mysterious scroll of music, and only you can help decode it. (Don’t worry if you can’t read music, our clever Lizard is standing by to assist. It’s sure to be a note-worthy experience.)"}],"role":"sampleCode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10683-Swans-Quest-Chapter-3-The-notable-scroll"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}]},"https://zntfdr.dev":{"identifier":"https:\/\/zntfdr.dev","type":"link","title":"Blog","url":"https:\/\/zntfdr.dev","titleInlineContent":[{"text":"Blog","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10643-Build-a-SwiftUI-view-in-Swift-Playgrounds":{"type":"topic","title":"Build a SwiftUI view in Swift Playgrounds","url":"\/documentation\/wwdcnotes\/wwdc20-10643-build-a-swiftui-view-in-swift-playgrounds","abstract":[{"type":"text","text":"Easily prototype and play around with SwiftUI views when you use them with Swift Playgrounds. We’ll show you how to build a SwiftUI view in a Xcode-compatible playground, and explore tools to help you easily edit and preview your code."}],"role":"sampleCode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10643-Build-a-SwiftUI-view-in-Swift-Playgrounds"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10654-Create-Swift-Playgrounds-content-for-iPad-and-Mac":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10654-Create-Swift-Playgrounds-content-for-iPad-and-Mac","type":"topic","title":"Create Swift Playgrounds content for iPad and Mac","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc20-10654-create-swift-playgrounds-content-for-ipad-and-mac","abstract":[{"type":"text","text":"Learn how to create Swift Playgrounds books that work fluidly across both Mac and iPad and help people of all ages explore the fun of coding in Swift. We’ll walk you through how to customize content for each platform while considering platform settings, and help you take advantage of them in your playgrounds while still providing a smooth cross-platform experience."}],"kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10682-Swans-Quest-Chapter-2-A-time-for-tones":{"type":"topic","title":"Swan’s Quest, Chapter 2: A time for tones","url":"\/documentation\/wwdcnotes\/wwdc20-10682-swans-quest-chapter-2-a-time-for-tones","abstract":[{"type":"text","text":"Swift Playgrounds presents “Swan’s Quest,” an interactive adventure in four chapters for all ages. In this chapter, our Hero needs your help decoding the Swan’s scroll. Call forth the best of your audio abilities on this one — you’re going to need them."}],"role":"sampleCode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10682-Swans-Quest-Chapter-2-A-time-for-tones"},"https://developer.apple.com/wwdc20/10684":{"identifier":"https:\/\/developer.apple.com\/wwdc20\/10684","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc20\/10684","type":"download"},"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"images":[{"type":"icon","identifier":"WWDCNotes.png"}],"kind":"symbol","title":"WWDC Notes","role":"collection","url":"\/documentation\/wwdcnotes"},"zntfdr.jpeg":{"variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}],"identifier":"zntfdr.jpeg","alt":null,"type":"image"},"WWDCNotes.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}],"identifier":"WWDCNotes.png","alt":null,"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10681-Swans-Quest-Chapter-1-Voices-in-the-dark":{"type":"topic","title":"Swan’s Quest, Chapter 1: Voices in the dark","url":"\/documentation\/wwdcnotes\/wwdc20-10681-swans-quest-chapter-1-voices-in-the-dark","abstract":[{"type":"text","text":"Swift Playgrounds presents “Swan’s Quest,” an interactive adventure in four chapters for all ages. In this chapter, our Hero must navigate a dark cave — and the only way to light the torches is to make them accessible."}],"role":"sampleCode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10681-Swans-Quest-Chapter-1-Voices-in-the-dark"},"https://developer.apple.com/sample-code/swift/swans-quest/the-sequence-completes.zip":{"identifier":"https:\/\/developer.apple.com\/sample-code\/swift\/swans-quest\/the-sequence-completes.zip","titleInlineContent":[{"type":"text","text":"here"}],"url":"https:\/\/developer.apple.com\/sample-code\/swift\/swans-quest\/the-sequence-completes.zip","title":"here","type":"link"},"WWDC20.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDC20.jpeg"}],"identifier":"WWDC20.jpeg","alt":null,"type":"image"},"https://github.com/zntfdr":{"identifier":"https:\/\/github.com\/zntfdr","titleInlineContent":[{"type":"text","text":"GitHub"}],"url":"https:\/\/github.com\/zntfdr","title":"GitHub","type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20":{"type":"topic","images":[{"type":"icon","identifier":"WWDC20-Icon.png"},{"type":"card","identifier":"WWDC20.jpeg"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20","title":"WWDC20","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc20","role":"collectionGroup","abstract":[{"type":"text","text":"Xcode 12, Swift 5.3, iOS 14, macOS 11 (Big Sur), tvOS 14, watchOS 7."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"code":"WidgetKit","type":"codeVoice"},{"type":"text","text":", "},{"code":"StoreKit Testing","type":"codeVoice"},{"type":"text","text":", and more."}]},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"type":"topic","title":"Federico Zanetello (332 notes)","role":"sampleCode","url":"\/documentation\/wwdcnotes\/zntfdr","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"images":[{"identifier":"zntfdr.jpeg","type":"card"},{"identifier":"zntfdr.jpeg","type":"icon"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr"},"zntfdr":{"variants":[{"traits":["1x","light"],"url":"\/images\/zntfdr.jpeg"}],"identifier":"zntfdr","alt":"Profile image of Federico Zanetello","type":"image"},"WWDC20-Icon.png":{"variants":[{"url":"\/images\/WWDC20-Icon.png","traits":["1x","light"]}],"identifier":"WWDC20-Icon.png","alt":null,"type":"image"}}}