{"metadata":{"modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC21","role":"sampleCode","title":"Add rich graphics to your SwiftUI app"},"kind":"article","hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"sampleCodeDownload":{"kind":"sampleDownload","action":{"identifier":"https:\/\/developer.apple.com\/wwdc21\/10021","overridingTitle":"Watch Video (23 min)","isActive":true,"type":"reference"}},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10021-Add-rich-graphics-to-your-SwiftUI-app"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Safe-area","text":"Safe area","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"By default, SwiftUI positions your content within the safe area, avoiding anything that would obscure or clip your view, like the Home indicator or any bars that are being shown.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The safe area is represented as a region that is inset from the outermost full area where a view is shown.","type":"text"}]}]}],"type":"unorderedList"},{"level":2,"anchor":"BackgroundForeground-view-modifiers","text":"Background\/Foreground view modifiers","type":"heading"},{"inlineContent":[{"type":"codeVoice","code":".background()"},{"type":"text","text":" view modifier has new overloads with new behaviors:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"previous ","type":"text"},{"code":".background()","type":"codeVoice"},{"text":" view modifiers were applied with the same bounds to the view they were called on.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"to make previous "},{"type":"codeVoice","code":".background()"},{"type":"text","text":" effects go beyond the safe area, we had to call "},{"type":"codeVoice","code":".ignoreSafeArea()"},{"type":"text","text":" on the background content, e.g. "},{"type":"codeVoice","code":".background { Color.red.ignoresSafeArea() }"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"the new background modifier gives you this behavior automatically by default"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"the new overloads can accept:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"a specific style, like ","type":"text"},{"code":"Color","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Gradient","type":"codeVoice"},{"text":", or the new materials (think UIKit’s ","type":"text"},{"code":"UIVibrancyEffect","type":"codeVoice"},{"text":")","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a shape, to clip the background to a specific shape (when we use this, the background no longer goes beyond the safe area)"}]}]}]}]}],"type":"unorderedList"},{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/disclosuregroup\/foregroundstyle(_:)","type":"reference","isActive":true},{"type":"text","text":" is a new view modifier that applies styles on top of another view."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"similar to the new background overloads, it accepts styles"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"when passing a "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/foregroundstyle"},{"type":"text","text":" between "},{"type":"codeVoice","code":".secondary"},{"type":"text","text":" and "},{"type":"codeVoice","code":".quaternary"},{"type":"text","text":", the content might be shown with an effect called Vibrancy, which blends the colors behind it. This happens when you explicitly add a background with a material, or when your content is in a system component, like a sidebar, that adds the material for you."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Any given text can have a single foreground style applied to it, but multiple colors within its ranges (thanks to the new "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/attributedstring","isActive":true},{"type":"text","text":" API)."}]}]}],"type":"unorderedList"},{"inlineContent":[{"code":".safeAreaInset(edge:content:)","type":"codeVoice"},{"type":"text","text":" is a new modifier that lets us reduce the content safe area of the view is applied to."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"it kind of work like an overlay, where the overlay placement is now considered part of the unsafe area"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"for example, this allows to place views on top of "},{"type":"codeVoice","code":"ScrollView"},{"type":"text","text":", and the edges of the scroll view content (not frame) will not be obscured by those views defined within "},{"type":"codeVoice","code":".safeAreaInset(edge:content:)"}]}]}],"type":"unorderedList"},{"level":2,"anchor":"Canvas","text":"Canvas","type":"heading"},{"inlineContent":[{"type":"text","text":"Previously we had the "},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/drawinggroup(opaque:colormode:)","type":"reference","isActive":true},{"type":"text","text":" view modifier:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"drawingGroup tells SwiftUI to combine all of the views it contains in a single layer to draw","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"drawingGroup works well for graphical elements, but shouldn’t be used with UI controls, like text fields and lists"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"New "},{"code":"Canvas","type":"codeVoice"},{"type":"text","text":" view"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"addresses some "},{"type":"codeVoice","code":"drawingGroup(opaque:colorMode:)"},{"type":"text","text":" shortcoming such as bookkeeping and storage required for each view"}]}]},{"content":[{"inlineContent":[{"text":"similar to UIKit\/AppKit ","type":"text"},{"type":"codeVoice","code":"drawRect"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Example:"}],"type":"paragraph"},{"syntax":"swift","code":["Canvas { context, size in ","  var image = context.resolve(Image(systemName: \"sparkle\"))","  image.shading = .color(.blue)","  let imageSize = image.size ","  context.blendMode = .screen","","  for i in 0..<10 {","    let frame = CGRect(","      x: 0.5 * size.width + Double(i) * imageSize.width, y: 0.5 * size. height, ","      width: imageSize.width, height: imageSize.height","    ) ","    var innerContext = context","    innerContext.opacity = 0.5 ","    innerContext.fill(Ellipse().path (in: frame), with: .color (.cyan))","    context.draw(image, in: frame) ","  }","}"],"type":"codeListing"},{"level":2,"anchor":"TimelineView","text":"TimelineView","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"new view letting you control exactly how something changes over time","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"configurable via schedules like timers and animations"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"anchor":"Written-By","text":"Written By","type":"heading"},{"columns":[{"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"zntfdr"}]}],"size":1},{"content":[{"anchor":"Federico-Zanetello","type":"heading","text":"Federico Zanetello","level":3},{"type":"paragraph","inlineContent":[{"isActive":true,"overridingTitle":"Contributed Notes","type":"reference","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/zntfdr"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/zntfdr.dev"}]}],"size":4}],"numberOfColumns":5,"type":"row"},{"type":"thematicBreak"},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}],"type":"paragraph"},{"level":2,"anchor":"Related-Sessions","text":"Related Sessions","type":"heading"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10002-Whats-new-in-watchOS-8","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10018-Whats-new-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10119-SwiftUI-Accessibility-Beyond-the-basics"],"type":"links","style":"list"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2025 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc21-10021-add-rich-graphics-to-your-swiftui-app"]}],"abstract":[{"type":"text","text":"Learn how you can bring your graphics to life with SwiftUI. We’ll begin by working with safe areas, including the keyboard safe area, and learn how to design beautiful, edge-to-edge graphics that won’t underlap the on-screen keyboard. We’ll also explore the materials and vibrancy you can use in SwiftUI to create easily customizable backgrounds and controls, and go over graphics APIs like drawingGroup and the all new canvas. With these tools, it’s simpler than ever to design fully interactive and interruptible animations and graphics in SwiftUI."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"type":"topic","role":"collectionGroup","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","kind":"article","images":[{"type":"icon","identifier":"WWDC21-Icon.png"},{"type":"card","identifier":"WWDC21.jpeg"}],"title":"WWDC21","abstract":[{"text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"MusicKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DocC","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit 2","type":"codeVoice"},{"text":", and more.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21"},"https://zntfdr.dev":{"identifier":"https:\/\/zntfdr.dev","url":"https:\/\/zntfdr.dev","titleInlineContent":[{"text":"Blog","type":"text"}],"type":"link","title":"Blog"},"https://developer.apple.com/documentation/swiftui/disclosuregroup/foregroundstyle(_:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/disclosuregroup\/foregroundstyle(_:)","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/disclosuregroup\/foregroundstyle(_:)","titleInlineContent":[{"code":".foregroundStyle(_:)","type":"codeVoice"}],"type":"link","title":".foregroundStyle(_:)"},"WWDC21-Icon.png":{"identifier":"WWDC21-Icon.png","variants":[{"url":"\/images\/WWDCNotes\/WWDC21-Icon.png","traits":["1x","light"]}],"alt":null,"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10018-Whats-new-in-SwiftUI":{"abstract":[{"text":"There’s never been a better time to develop your apps with SwiftUI. Discover the latest updates to the UI framework — including lists, buttons, and text fields — and learn how these features can help you more fully adopt SwiftUI in your app. Find out how to create beautiful, visually-rich graphics using the canvas view, materials, and enhancements to symbols. Explore multi-column tables on macOS, refinements to focus and keyboard interaction, and the multi-platform search API. And we’ll show you how to take advantage of features like Swift concurrency, a brand new AttributedString, format styles, localization, and so much more.","type":"text"}],"role":"sampleCode","title":"What’s new in SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc21-10018-whats-new-in-swiftui","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10018-Whats-new-in-SwiftUI","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10002-Whats-new-in-watchOS-8":{"title":"What’s new in watchOS 8","abstract":[{"type":"text","text":"watchOS 8 brings all-new opportunities to keep people up to date on their watch face. With new APIs for the Always-On Retina display and updating complications from Bluetooth devices and background delivery of HealthKit data, it’s never been easier to keep your app up to date. Learn about region-based user notifications to leverage location in your app. Explore all the new enhancements to SwiftUI and watchOS that will get you excited to build your next Watch app."}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10002-Whats-new-in-watchOS-8","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10002-whats-new-in-watchos-8","kind":"article"},"WWDC21.jpeg":{"identifier":"WWDC21.jpeg","alt":null,"type":"image","variants":[{"url":"\/images\/WWDCNotes\/WWDC21.jpeg","traits":["1x","light"]}]},"https://developer.apple.com/documentation/swiftui/view/drawinggroup(opaque:colormode:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/drawinggroup(opaque:colormode:)","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/drawinggroup(opaque:colormode:)","titleInlineContent":[{"code":"drawingGroup(opaque:colorMode:)","type":"codeVoice"}],"type":"link","title":"drawingGroup(opaque:colorMode:)"},"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","role":"collection","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","kind":"symbol","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"title":"WWDC Notes","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"url":"\/documentation\/wwdcnotes"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10119-SwiftUI-Accessibility-Beyond-the-basics":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10119-SwiftUI-Accessibility-Beyond-the-basics","abstract":[{"type":"text","text":"Go beyond the basics to deliver an exceptional accessibility experience. Learn how to use the new SwiftUI Previews in Xcode to explore the latest accessibility APIs and create fantastic, accessible apps for everyone. Find out how you can customize the automatic accessibility built into SwiftUI to make your own custom controls accessible. Explore best practices and identify where to improve your app’s navigation experience using grouping and focus. And help supercharge navigation for VoiceOver users with the addition of rotors."}],"kind":"article","role":"sampleCode","title":"SwiftUI Accessibility: Beyond the basics","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10119-swiftui-accessibility-beyond-the-basics"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"title":"Contributions are welcome!","type":"link"},"https://github.com/zntfdr":{"identifier":"https:\/\/github.com\/zntfdr","url":"https:\/\/github.com\/zntfdr","titleInlineContent":[{"text":"GitHub","type":"text"}],"type":"link","title":"GitHub"},"https://developer.apple.com/documentation/swiftui/foregroundstyle":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/foregroundstyle","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/foregroundstyle","titleInlineContent":[{"code":"ForegroundStyle","type":"codeVoice"}],"type":"link","title":"ForegroundStyle"},"https://developer.apple.com/wwdc21/10021":{"identifier":"https:\/\/developer.apple.com\/wwdc21\/10021","url":"https:\/\/developer.apple.com\/wwdc21\/10021","checksum":null,"type":"download"},"zntfdr":{"identifier":"zntfdr","alt":"Profile image of Federico Zanetello","type":"image","variants":[{"url":"\/images\/WWDCNotes\/zntfdr.jpeg","traits":["1x","light"]}]},"zntfdr.jpeg":{"identifier":"zntfdr.jpeg","variants":[{"url":"\/images\/WWDCNotes\/zntfdr.jpeg","traits":["1x","light"]}],"alt":null,"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"title":"Federico Zanetello (332 notes)","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"type":"topic","role":"sampleCode","images":[{"type":"card","identifier":"zntfdr.jpeg"},{"type":"icon","identifier":"zntfdr.jpeg"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","url":"\/documentation\/wwdcnotes\/zntfdr"},"https://developer.apple.com/documentation/foundation/attributedstring":{"identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/attributedstring","url":"https:\/\/developer.apple.com\/documentation\/foundation\/attributedstring","titleInlineContent":[{"type":"text","text":"AttributedString"}],"type":"link","title":"AttributedString"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","alt":null,"type":"image","variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}]}}}