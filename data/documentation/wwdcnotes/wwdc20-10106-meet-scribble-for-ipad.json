{"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20"]]},"sampleCodeDownload":{"action":{"overridingTitle":"Watch Video (14 min)","isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc20\/10106","type":"reference"},"kind":"sampleDownload"},"sections":[],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10106-Meet-Scribble-for-iPad","interfaceLanguage":"swift"},"abstract":[{"text":"Scribble offers a lightweight, ergonomic, and enjoyable way of entering text on iPad with Apple Pencil. Discover how people can take advantage of Scribble and handwritten text in apps that use standard text input controls or that implement a custom text editing experience. You’ll learn how it integrates into TextKit, and when you’ll need to adopt the new UIScribbleInteraction and UIIndirectScribbleInteraction APIs to provide a delightful and consistent experience with Scribble in your app.","type":"text"}],"kind":"article","metadata":{"roleHeading":"WWDC20","modules":[{"name":"WWDC Notes"}],"title":"Meet Scribble for iPad","role":"sampleCode"},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc20-10106-meet-scribble-for-ipad"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"text":"Writing experience","level":2,"anchor":"Writing-experience","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can write directly on a text field without the need to select the field first."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"You can draw a horizontal line to select text and perform the normal text editing actions."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"You can also scratch out some text that you want to delete.","type":"text"}]}]}]},{"text":"Scribble Supporting APIs","level":2,"anchor":"Scribble-Supporting-APIs","type":"heading"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Scribble relies on standard Text controls\/inputs (","type":"text"},{"type":"codeVoice","code":"UITextField"},{"text":", ","type":"text"},{"type":"codeVoice","code":"UITextView"},{"text":", …)","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Scribble does not support password fields (because Apple’s recommended way to input password is via auto fill)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"for custom UI elements Scribble relies on UIKit’s text input protocols ("},{"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uitextinput","type":"reference","isActive":true},{"type":"text","text":", "},{"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uikeyinput","type":"reference","isActive":true},{"type":"text","text":", "},{"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uitextinputtraits","type":"reference","isActive":true},{"type":"text","text":", "},{"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uitextinteraction","type":"reference","isActive":true},{"type":"text","text":")"}],"type":"paragraph"}]}]},{"text":"New APIs","level":2,"anchor":"New-APIs","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Scribble introduces two interactions, ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiscribbleinteraction","type":"reference"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiindirectscribbleinteraction","type":"reference"},{"text":", which are used to customize the behavior of Scribble in your app.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Both interactions are added to views where the custom behavior takes place.","type":"text"}]},{"text":"UIScribbleInteraction","level":3,"anchor":"UIScribbleInteraction","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The interaction has a delegate, and this delegate is where an app can customize the Scribble experience, for example:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"disabling Scribble on the view","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"delaying that view from becoming first responder until handwriting has momentarily paused","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"being informed when Scribble handwriting begins or ends"}],"type":"paragraph"}]}]},{"text":"UIIndirectScribbleInteraction","level":3,"anchor":"UIIndirectScribbleInteraction","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Thanks to this interaction:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"we can allow writing outside a input control.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"this is also the interaction to use for UI that would become editable in response to a tap gesture."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is done via the interaction’s delegate. Which will provide the system information about elements, aka regions within the view that can be written into."}]},{"type":"heading","text":"Written By","anchor":"Written-By","level":2},{"type":"row","columns":[{"size":1,"content":[{"inlineContent":[{"type":"image","identifier":"zntfdr"}],"type":"paragraph"}]},{"size":4,"content":[{"level":3,"text":"Federico Zanetello","type":"heading","anchor":"Federico-Zanetello"},{"inlineContent":[{"type":"reference","overridingTitle":"Contributed Notes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/zntfdr","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/zntfdr.dev","isActive":true}],"type":"paragraph"}]}],"numberOfColumns":5},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}]},{"type":"heading","text":"Related Sessions","anchor":"Related-Sessions","level":2},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10109-Support-hardware-keyboards-in-your-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-221-TextKit-Best-Practices"]},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}],"kind":"content"}],"references":{"zntfdr.jpeg":{"alt":null,"identifier":"zntfdr.jpeg","type":"image","variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}]},"https://developer.apple.com/documentation/uikit/uitextinput":{"title":"UITextInput","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uitextinput","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uitextinput","titleInlineContent":[{"type":"codeVoice","code":"UITextInput"}],"type":"link"},"WWDC20.jpeg":{"alt":null,"identifier":"WWDC20.jpeg","type":"image","variants":[{"url":"\/images\/WWDC20.jpeg","traits":["1x","light"]}]},"https://developer.apple.com/documentation/uikit/uitextinteraction":{"title":"UITextInteraction","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uitextinteraction","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uitextinteraction","titleInlineContent":[{"type":"codeVoice","code":"UITextInteraction"}],"type":"link"},"WWDC20-Icon.png":{"alt":null,"identifier":"WWDC20-Icon.png","type":"image","variants":[{"url":"\/images\/WWDC20-Icon.png","traits":["1x","light"]}]},"WWDCNotes.png":{"alt":null,"identifier":"WWDCNotes.png","type":"image","variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}]},"zntfdr":{"alt":"Profile image of Federico Zanetello","identifier":"zntfdr","type":"image","variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}]},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10109-Support-hardware-keyboards-in-your-app":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10109-Support-hardware-keyboards-in-your-app","title":"Support hardware keyboards in your app","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10109-support-hardware-keyboards-in-your-app","abstract":[{"type":"text","text":"When people use hardware keyboards with your app, they’re not only getting a more tactile and familiar typing experience — they can quickly navigate or use keyboard shortcuts, too. Discover how you can best support hardware keyboards for your iPadOS and Mac Catalyst apps: We’ll demystify the responder chain and show you best practices for implementing custom keyboard shortcuts. Learn how easy it is to get up and running with common system keyboard shortcuts, use modifier flags with gesture recognizers, and leverage the raw keyboard event API to respond to key down and key up events."}]},"https://zntfdr.dev":{"title":"Blog","url":"https:\/\/zntfdr.dev","identifier":"https:\/\/zntfdr.dev","titleInlineContent":[{"text":"Blog","type":"text"}],"type":"link"},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","role":"collection","title":"WWDC Notes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","url":"\/documentation\/wwdcnotes"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC18-221-TextKit-Best-Practices":{"title":"TextKit Best Practices","url":"\/documentation\/wwdcnotes\/wwdc18-221-textkit-best-practices","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-221-TextKit-Best-Practices","kind":"article","type":"topic","abstract":[{"text":"Leverage the abilities of TextKit to provide the best experience possible displaying and editing text. Get the best performance out of your app by using TextKit effectively. Learn the concepts to do more complex handling, layout and presentation.","type":"text"}]},"https://developer.apple.com/documentation/uikit/uiindirectscribbleinteraction":{"type":"link","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uiindirectscribbleinteraction","titleInlineContent":[{"type":"codeVoice","code":"UIIndirectScribbleInteraction"}],"title":"UIIndirectScribbleInteraction","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiindirectscribbleinteraction"},"https://developer.apple.com/documentation/uikit/uitextinputtraits":{"type":"link","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uitextinputtraits","titleInlineContent":[{"code":"UITextInputTraits","type":"codeVoice"}],"title":"UITextInputTraits","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uitextinputtraits"},"https://developer.apple.com/documentation/uikit/uikeyinput":{"type":"link","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uikeyinput","titleInlineContent":[{"type":"codeVoice","code":"UIKeyInput"}],"title":"UIKeyInput","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uikeyinput"},"https://developer.apple.com/documentation/uikit/uiscribbleinteraction":{"type":"link","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uiscribbleinteraction","titleInlineContent":[{"code":"UIScribbleInteraction","type":"codeVoice"}],"title":"UIScribbleInteraction","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiscribbleinteraction"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"title":"Federico Zanetello (332 notes)","images":[{"identifier":"zntfdr.jpeg","type":"card"},{"identifier":"zntfdr.jpeg","type":"icon"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","url":"\/documentation\/wwdcnotes\/zntfdr","role":"sampleCode","type":"topic","kind":"article","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}]},"https://developer.apple.com/wwdc20/10106":{"type":"download","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc20\/10106","identifier":"https:\/\/developer.apple.com\/wwdc20\/10106"},"https://github.com/zntfdr":{"title":"GitHub","url":"https:\/\/github.com\/zntfdr","identifier":"https:\/\/github.com\/zntfdr","titleInlineContent":[{"text":"GitHub","type":"text"}],"type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20":{"title":"WWDC20","url":"\/documentation\/wwdcnotes\/wwdc20","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20","role":"collectionGroup","kind":"article","images":[{"identifier":"WWDC20-Icon.png","type":"icon"},{"identifier":"WWDC20.jpeg","type":"card"}],"type":"topic","abstract":[{"text":"Xcode 12, Swift 5.3, iOS 14, macOS 11 (Big Sur), tvOS 14, watchOS 7.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"WidgetKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit Testing","type":"codeVoice"},{"text":", and more.","type":"text"}]}}}