{"primaryContentSections":[{"content":[{"text":"Introducing SwiftUI","type":"heading","anchor":"Introducing-SwiftUI","level":2},{"type":"paragraph","inlineContent":[{"text":"Command click on an element (via swift code or in the live preview) to …:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Embed it in something else","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Change layout (spacing, alignment, padding…)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Extract it somewhere else (refactoring)"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Modifiers","type":"heading","anchor":"Modifiers","level":2},{"type":"paragraph","inlineContent":[{"text":"Lets us customize the way views look or behave.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"NavigationView"},{"type":"text","text":" to wrap a view into a navigational view."}]},{"text":"How Views Work","type":"heading","anchor":"How-Views-Work","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"They’re ","type":"text"},{"code":"Struct","type":"codeVoice"},{"text":"s that conform to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Behind the scenes, SwiftUI aggressively collapses our view hierarchy into an efficient data structure for rendering."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"View"},{"text":" defines a piece of UI","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"View"},{"type":"text","text":" protocol only has one requirement: a "},{"type":"codeVoice","code":"body"},{"type":"text","text":" property of type "},{"type":"codeVoice","code":"some View"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI knows when to fetch a new rendering of a view because, in addition to defining a piece of UI, a view "},{"inlineContent":[{"type":"text","text":"defines its dependencies"}],"type":"strong"},{"type":"text","text":"."}]}]}],"type":"unorderedList"},{"text":"`@State`","type":"heading","anchor":"State","level":2},{"type":"paragraph","inlineContent":[{"text":"When SwiftUI sees a view with a ","type":"text"},{"code":"@State","type":"codeVoice"},{"text":" variable, it allocates storage for that variable on the view’s behalf.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"In the following memory diagram, the green section is our view memory, and the purple section is memory that SwiftUI is managing for us:","type":"text"}]},{"type":"codeListing","code":["struct RoomDetail: View {","  let room: Room ","  @State private var zoomed = false ","","  var body: some View {","    Image(room.imageName)","      .resizable() ","      .aspectRatio(contentMode: . fit)","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"identifier":"WWDC19-204-memory","type":"image"}]},{"type":"paragraph","inlineContent":[{"text":"If the body property reads the ","type":"text"},{"code":"@State","type":"codeVoice"},{"text":" property, SwiftUI knows that it’ll need to ask for a new body automatically.","type":"text"}]},{"text":"`ObservableObject`","type":"heading","anchor":"ObservableObject","level":2},{"type":"paragraph","inlineContent":[{"text":"Has a ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/combine\/observableobject\/3362556-objectwillchange","type":"reference","isActive":true},{"text":" property:","type":"text"}]},{"type":"codeListing","code":["import Combine","import SwiftUI","","class RoomStore: ObservableObject {","  var rooms: [Room] {","    willSet {","      objectWillChange.send()","    }","  }","","  init(rooms: [Room] = []) {","    self.rooms = rooms","  }","","  \/\/ This declaration is synthesized by conforming to `ObservableObject`,","  \/\/ no need to declare it.","  var objectWillChange = ObservableObjectPublisher()","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Later on we can use a "},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/observedobject"},{"type":"text","text":" property wrapper with an "},{"code":"ObservableObject","type":"codeVoice"},{"type":"text","text":" instance to tell SwiftUI to observe for changes and, potentially, trigger a new rendering of the view if necessary."}]},{"text":"Live View Protips","type":"heading","anchor":"Live-View-Protips","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"code":"Group","type":"codeVoice"},{"type":"text","text":" in the previews screen to show multiple views."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Preview multiple category sizes:"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"codeListing","code":["struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    Group {","      ContentView(store: RoomStore(rooms: testData))","","      ContentView(store: RoomStore(rooms: testData))","        .environment(\\.sizeCategory, .extraExtraExtraLarge)","    }","  }","}"],"syntax":"swift"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Preview Light\/Dark mode:"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"codeListing","code":["struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    Group {","      ContentView(store: RoomStore(rooms: testData))","","      ContentView(store: RoomStore(rooms: testData))","        .environment(\\.colorScheme, .dark)","    }","  }","}"],"syntax":"swift"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Preview multiple localizations:"}]}]}],"type":"unorderedList"},{"type":"codeListing","code":["struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    Group {","      ContentView(store: RoomStore(rooms: testData))","","      ContentView(store: RoomStore(rooms: testData))","        .environment(\\.layoutDirection, .rightToLeft)","        .environment(\\.locale, Locale(idenfifier: \"ar\")) ","    }","  }","}"],"syntax":"swift"},{"text":"Written By","type":"heading","anchor":"Written-By","level":2},{"numberOfColumns":5,"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"identifier":"zntfdr","type":"image"}]}]},{"size":4,"content":[{"text":"Federico Zanetello","anchor":"Federico-Zanetello","level":3,"type":"heading"},{"inlineContent":[{"overridingTitle":"Contributed Notes","type":"reference","isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}]},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/zntfdr"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/zntfdr.dev"}],"type":"paragraph"}]}],"type":"row"},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}]},{"text":"Related Sessions","type":"heading","anchor":"Related-Sessions","level":2},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10042-Build-SwiftUI-apps-for-tvOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-103-Platforms-State-of-the-Union","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-216-SwiftUI-Essentials","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-219-SwiftUI-on-watchOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-226-Data-Flow-Through-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-231-Integrating-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-233-Mastering-Xcode-Previews","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-237-Building-Custom-Views-with-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-238-Accessibility-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-240-SwiftUI-On-All-Devices","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-401-Whats-New-in-Xcode-11","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-404-Getting-Started-with-Xcode"],"style":"list","type":"links"},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-204-Introducing-SwiftUI-Building-Your-First-App","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19"]]},"abstract":[{"text":"See SwiftUI in action! Watch as engineers from the SwiftUI team build a fully-functioning app from scratch. Understand the philosophy driving this new framework and learn about the benefits of declarative-style programming. Take a look under the hood to understand how SwiftUI operates and learn how SwiftUI and Xcode 11 work together to help you to build great apps, faster.","type":"text"}],"sampleCodeDownload":{"kind":"sampleDownload","action":{"overridingTitle":"Watch Video (54 min)","type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc19\/204"}},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc19-204-introducing-swiftui-building-your-first-app"]}],"metadata":{"roleHeading":"WWDC19","title":"Introducing SwiftUI: Building Your First App","modules":[{"name":"WWDC Notes"}],"role":"sampleCode"},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","sections":[],"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-238-Accessibility-in-SwiftUI":{"abstract":[{"type":"text","text":"Making your app accessible is critical, but just as important is designing a fantastic accessibility experience. Learn what makes a great experience and how to make your app understandable, navigable, and interactable. SwiftUI builds accessibility into your app for you! Discover how much you get with no extra adoption, like accessible images and controls. Identify where you can add supplemental accessibility information with the new SwiftUI Accessibility API, which gives you the tools to add information to elements such as labels, values, and hints."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-238-Accessibility-in-SwiftUI","title":"Accessibility in SwiftUI","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc19-238-accessibility-in-swiftui","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10042-Build-SwiftUI-apps-for-tvOS":{"type":"topic","title":"Build SwiftUI apps for tvOS","kind":"article","abstract":[{"text":"Add a new dimension to your tvOS app with SwiftUI. We’ll show you how to build layouts powered by SwiftUI and customize your interface with custom buttons, provide more functionality in your app with a context menu, check if views are focused, and manage default focus.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10042-Build-SwiftUI-apps-for-tvOS","url":"\/documentation\/wwdcnotes\/wwdc20-10042-build-swiftui-apps-for-tvos","role":"sampleCode"},"WWDC19.jpeg":{"identifier":"WWDC19.jpeg","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC19.jpeg"}],"type":"image"},"zntfdr.jpeg":{"type":"image","identifier":"zntfdr.jpeg","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/zntfdr.jpeg"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-240-SwiftUI-On-All-Devices":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-240-SwiftUI-On-All-Devices","role":"sampleCode","abstract":[{"text":"Once you’ve learned the basics of SwiftUI, you’ve learned what you need to know to use SwiftUI anywhere. You can use the same SwiftUI skills for making an iOS app as you would for making an app on watchOS, tvOS or macOS. We’ll cover the basics, and then dig into more detail about how  SwiftUI can help you make changes to your app on every Apple device. Hear about design principles for each platform and learn about how much code you can share across platforms. See how to incorporate device-specific features and how to make changes in SwiftUI by following along with a starter project, available for download.","type":"text"}],"kind":"article","title":"SwiftUI On All Devices","url":"\/documentation\/wwdcnotes\/wwdc19-240-swiftui-on-all-devices","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"title":"Federico Zanetello (332 notes)","type":"topic","role":"sampleCode","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","kind":"article","images":[{"type":"card","identifier":"zntfdr.jpeg"},{"type":"icon","identifier":"zntfdr.jpeg"}],"url":"\/documentation\/wwdcnotes\/zntfdr"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-219-SwiftUI-on-watchOS":{"title":"SwiftUI on watchOS","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-219-SwiftUI-on-watchOS","kind":"article","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc19-219-swiftui-on-watchos","abstract":[{"text":"SwiftUI allows a whole new world of possibilities when developing watchOS apps and notifications. From custom animations to providing an intuitive feel with Digital Crown haptics, SwiftUI helps you build exciting and immersive experiences for Apple Watch. See how easy it is to create custom elements with animations, embed gesture-driven animations within notifications, and learn about the enhanced debugging support to make watchOS app development faster than ever.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-237-Building-Custom-Views-with-SwiftUI":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-237-Building-Custom-Views-with-SwiftUI","role":"sampleCode","abstract":[{"text":"Learn how to build custom views and controls in SwiftUI with advanced composition, layout, graphics, and animation. See a demo of a high performance, animatable control and watch it made step by step in code. Gain a deeper understanding of the layout system of SwiftUI.","type":"text"}],"kind":"article","title":"Building Custom Views with SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc19-237-building-custom-views-with-swiftui","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-216-SwiftUI-Essentials":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-216-SwiftUI-Essentials","role":"sampleCode","abstract":[{"type":"text","text":"Take your first deep-dive into building an app with SwiftUI. Learn about Views and how they work. From basic controls to sophisticated containers like lists and navigation stacks, SwiftUI enables the creation of great user interfaces, faster and more easily. See how basic controls like Button are both simple yet versatile. Discover how to compose these pieces into larger, full-featured user interfaces that facilitate building great apps with SwiftUI. Build your SwiftUI skills as you learn the essentials of Apple’s new declarative framework."}],"kind":"article","title":"SwiftUI Essentials","url":"\/documentation\/wwdcnotes\/wwdc19-216-swiftui-essentials","type":"topic"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-233-Mastering-Xcode-Previews":{"role":"sampleCode","type":"topic","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc19-233-mastering-xcode-previews","title":"Mastering Xcode Previews","abstract":[{"text":"Xcode 11 displays previews of your user interface right in the editor, streamlining the edit-debug-run cycle into a seamless workflow. Learn how previews work, how to optimize the structure of your SwiftUI app for previews, and how to add preview support to your existing views and view controllers.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-233-Mastering-Xcode-Previews"},"https://developer.apple.com/documentation/swiftui/observedobject":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/observedobject","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/observedobject","title":"@ObservedObject","type":"link","titleInlineContent":[{"type":"codeVoice","code":"@ObservedObject"}]},"doc://WWDCNotes/documentation/WWDCNotes":{"role":"collection","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","title":"WWDC Notes","type":"topic","kind":"symbol","url":"\/documentation\/wwdcnotes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19":{"role":"collectionGroup","images":[{"type":"icon","identifier":"WWDC19-Icon.png"},{"type":"card","identifier":"WWDC19.jpeg"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19","title":"WWDC19","type":"topic","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc19","abstract":[{"text":"Xcode 11, Swift 5.1, iOS 13, macOS 10.15 (Catalina), tvOS 13, watchOS 6.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"type":"codeVoice","code":"Combine"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Core Haptics"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Create ML"},{"text":", and more.","type":"text"}]},"WWDC19-Icon.png":{"type":"image","identifier":"WWDC19-Icon.png","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC19-Icon.png"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-226-Data-Flow-Through-SwiftUI":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-226-Data-Flow-Through-SwiftUI","title":"Data Flow Through SwiftUI","type":"topic","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc19-226-data-flow-through-swiftui","abstract":[{"type":"text","text":"SwiftUI was built from the ground up to let you write beautiful and correct user interfaces free of inconsistencies. Learn how to connect your data as dependencies while keeping the UI fully predictable and error free. Familiarize yourself with SwiftUI’s powerful data flow tools and understand what the best tool is for each situation."}]},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"https://developer.apple.com/wwdc19/204":{"identifier":"https:\/\/developer.apple.com\/wwdc19\/204","url":"https:\/\/developer.apple.com\/wwdc19\/204","type":"download","checksum":null},"https://developer.apple.com/documentation/combine/observableobject/3362556-objectwillchange":{"titleInlineContent":[{"code":"objectWillChange","type":"codeVoice"}],"title":"objectWillChange","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/combine\/observableobject\/3362556-objectwillchange","url":"https:\/\/developer.apple.com\/documentation\/combine\/observableobject\/3362556-objectwillchange"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-231-Integrating-SwiftUI":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-231-Integrating-SwiftUI","role":"sampleCode","abstract":[{"type":"text","text":"SwiftUI is designed to integrate with your existing code base on any of Apple’s platforms. Learn how to adopt SwiftUI on any Apple platform by adding SwiftUI views into your app’s hierarchy, leveraging your existing data model and more."}],"kind":"article","title":"Integrating SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc19-231-integrating-swiftui","type":"topic"},"https://github.com/zntfdr":{"identifier":"https:\/\/github.com\/zntfdr","url":"https:\/\/github.com\/zntfdr","title":"GitHub","type":"link","titleInlineContent":[{"type":"text","text":"GitHub"}]},"WWDC19-204-memory":{"identifier":"WWDC19-204-memory","type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC19-204-memory.png"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-404-Getting-Started-with-Xcode":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc19-404-getting-started-with-xcode","abstract":[{"type":"text","text":"Xcode is the development environment for creating great apps for Apple platforms. Find out how to take advantage of Xcode features to go all the way from a new project to App Store distribution. Along the way, you’ll learn how to navigate the Xcode user interface, how to take advantage of the source editor and live user interface previews, how to incorporate community-developed Swift packages into your app, and how to refactor and test your code, all while developing a working SwiftUI app."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-404-Getting-Started-with-Xcode","role":"sampleCode","title":"Getting Started with Xcode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-401-Whats-New-in-Xcode-11":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc19-401-whats-new-in-xcode-11","title":"What’s New in Xcode 11","kind":"article","abstract":[{"type":"text","text":"Start the week with a tour of new features in Xcode 11, designed to help you get from idea to product faster than ever. Discover new ways to edit and organize your source code, new capabilities for designing and previewing user interfaces, and great improvements for debugging and testing. Get an overview for sessions covering developer tools this year."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-401-Whats-New-in-Xcode-11","type":"topic"},"https://zntfdr.dev":{"titleInlineContent":[{"text":"Blog","type":"text"}],"title":"Blog","type":"link","identifier":"https:\/\/zntfdr.dev","url":"https:\/\/zntfdr.dev"},"zntfdr":{"identifier":"zntfdr","alt":"Profile image of Federico Zanetello","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/zntfdr.jpeg"}],"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-103-Platforms-State-of-the-Union":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc19-103-platforms-state-of-the-union","title":"Platforms State of the Union","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-103-Platforms-State-of-the-Union","abstract":[{"text":"WWDC 2019 Platforms State of the Union","type":"text"}],"kind":"article","type":"topic"},"https://developer.apple.com/documentation/swiftui/view":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view","type":"link","titleInlineContent":[{"type":"codeVoice","code":"View"},{"text":" protocol","type":"text"}],"title":"View protocol","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view"}}}