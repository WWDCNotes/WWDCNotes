{"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10068-Whats-new-in-UIKit","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"WWDC Notes"}],"title":"What’s new in UIKit","roleHeading":"WWDC22","role":"sampleCode"},"sampleCodeDownload":{"action":{"overridingTitle":"Watch Video (24 min)","isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc22\/10068"},"kind":"sampleDownload"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/fbernutz.github.io\/images\/sketchnotes\/wwdc22-whats-new-in-uikit.jpg"}]},{"type":"heading","level":2,"anchor":"Written-By","text":"Written By"},{"type":"row","numberOfColumns":5,"columns":[{"content":[{"inlineContent":[{"identifier":"fbernutz","type":"image"}],"type":"paragraph"}],"size":1},{"content":[{"text":"Feli Bernutz","type":"heading","level":3,"anchor":"Feli-Bernutz"},{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/fbernutz","overridingTitle":"Contributed Notes","type":"reference","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}]},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/fbernutz","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/fbernutz.github.io","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/x.com\/felibe444","type":"reference"}]}],"size":4}]},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}]},{"type":"heading","level":2,"anchor":"Related-Sessions","text":"Related Sessions"},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10069-Meet-desktopclass-iPad","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10070-Build-a-desktopclass-iPad-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10071-Adopt-desktopclass-editing-interactions","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10072-Use-SwiftUI-with-UIKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10090-Whats-new-in-TextKit-and-text-views","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10157-Whats-new-in-SF-Symbols-4","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10158-Adopt-Variable-Color-in-SF-Symbols","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110350-Visualize-and-optimize-Swift-concurrency","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10063-Customize-and-resize-sheets-in-UIKit"],"style":"list"},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}]},{"type":"small","inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc22-10068-whats-new-in-uikit"]}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22"]]},"kind":"article","abstract":[{"type":"text","text":"Discover the latest updates and improvements to UIKit and learn how to build better iPadOS, iOS, and Mac Catalyst apps. We’ll take you through UI refinements, productivity updates, API enhancements, and more. We’ll also help you explore improvements to performance, security, and privacy."}],"references":{"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10158-Adopt-Variable-Color-in-SF-Symbols":{"title":"Adopt Variable Color in SF Symbols","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10158-Adopt-Variable-Color-in-SF-Symbols","url":"\/documentation\/wwdcnotes\/wwdc22-10158-adopt-variable-color-in-sf-symbols","type":"topic","kind":"article","role":"sampleCode","abstract":[{"type":"text","text":"Explore how you can use Variable Color to make SF Symbols even more expressive. We’ll show you how system-provided symbols use variable color and provide best practices and guidance for using it effectively. We’ll also help you learn how to incorporate variable color into custom symbols using the SF Symbols app and its annotation tools."}]},"fbernutz.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/fbernutz.jpeg"}],"type":"image","identifier":"fbernutz.jpeg","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10072-Use-SwiftUI-with-UIKit":{"url":"\/documentation\/wwdcnotes\/wwdc22-10072-use-swiftui-with-uikit","title":"Use SwiftUI with UIKit","kind":"article","abstract":[{"text":"Learn how to take advantage of the power of SwiftUI in your UIKit app. Build custom UICollectionView and UITableView cells seamlessly with SwiftUI using UIHostingConfiguration. We’ll also show you how to manage data flow between UIKit and SwiftUI components within your app.","type":"text"}],"role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10072-Use-SwiftUI-with-UIKit"},"https://fbernutz.github.io":{"title":"Blog","url":"https:\/\/fbernutz.github.io","titleInlineContent":[{"text":"Blog","type":"text"}],"type":"link","identifier":"https:\/\/fbernutz.github.io"},"https://developer.apple.com/wwdc22/10068":{"checksum":null,"url":"https:\/\/developer.apple.com\/wwdc22\/10068","type":"download","identifier":"https:\/\/developer.apple.com\/wwdc22\/10068"},"https://github.com/fbernutz":{"titleInlineContent":[{"text":"GitHub","type":"text"}],"url":"https:\/\/github.com\/fbernutz","title":"GitHub","type":"link","identifier":"https:\/\/github.com\/fbernutz"},"doc://WWDCNotes/documentation/WWDCNotes":{"url":"\/documentation\/wwdcnotes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"role":"collection","kind":"symbol","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"title":"WWDC Notes","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency":{"type":"topic","abstract":[{"text":"Join us as we explore one of the core concepts in Swift concurrency: isolation of tasks and actors. We’ll take you through Swift’s approach to eliminating data races and its effect on app architecture. We’ll also discuss the importance of atomicity in your code, share the nuances of Sendable checking to maintain isolation, and revisit assumptions about ordering work in a concurrent system.","type":"text"}],"kind":"article","title":"Eliminate data races using Swift Concurrency","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency","url":"\/documentation\/wwdcnotes\/wwdc22-110351-eliminate-data-races-using-swift-concurrency","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10071-Adopt-desktopclass-editing-interactions":{"title":"Adopt desktop-class editing interactions","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10071-Adopt-desktopclass-editing-interactions","url":"\/documentation\/wwdcnotes\/wwdc22-10071-adopt-desktopclass-editing-interactions","abstract":[{"text":"Discover advanced desktop-class editing features that can help people accelerate their productivity in your app. Learn how you can provide more interactions inline with your UI to help people quickly access editing features and make your iPadOS app feel right at home on macOS with Mac Catalyst. We’ll also explore the highly-customizable find interaction and learn how the system UI can help people consistently find content in your app.","type":"text"}],"type":"topic","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10063-Customize-and-resize-sheets-in-UIKit":{"title":"Customize and resize sheets in UIKit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10063-Customize-and-resize-sheets-in-UIKit","url":"\/documentation\/wwdcnotes\/wwdc21-10063-customize-and-resize-sheets-in-uikit","type":"topic","kind":"article","role":"sampleCode","abstract":[{"type":"text","text":"Discover how you can create a layered and customized sheet experience in UIKit. We’ll explore how you can build a non-modal experience in your app to allow interaction with content both in a sheet and behind the sheet at the same time. We’ll also take you through sheet size customization, revealing or hiding grabber controls, and adapting between popovers and customized sheets in your app."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10090-Whats-new-in-TextKit-and-text-views":{"abstract":[{"type":"text","text":"Discover the latest updates to TextKit and text views in UI frameworks. Explore layout refinements and API enhancements, learn how you can maintain compatibility across multiple OS versions, and find out how to modernize your app with TextKit 2."}],"title":"What’s new in TextKit and text views","role":"sampleCode","type":"topic","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22-10090-whats-new-in-textkit-and-text-views","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10090-Whats-new-in-TextKit-and-text-views"},"WWDCNotes.png":{"alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDCNotes.png"}],"identifier":"WWDCNotes.png"},"doc://WWDCNotes/documentation/WWDCNotes/fbernutz":{"url":"\/documentation\/wwdcnotes\/fbernutz","title":"Feli Bernutz (16 notes)","images":[{"type":"card","identifier":"fbernutz.jpeg"},{"type":"icon","identifier":"fbernutz.jpeg"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/fbernutz","abstract":[{"text":"You can learn anything, but you can’t learn everything","type":"text"}],"kind":"article","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10157-Whats-new-in-SF-Symbols-4":{"abstract":[{"text":"Explore the latest updates to SF Symbols, Apple’s extensive library of iconography designed to integrate seamlessly with San Francisco, the system font for all Apple platforms. Discover the latest additions to the SF Symbols library and new categories in the app. Learn about the new Automatic behavior, which chooses the rendering mode that best highlights what’s unique about the symbol’s characteristics. See how to use the new Variable Color feature to make a symbol more dynamic. We’ll also learn about a more efficient way of annotating symbols with the new unified approach.","type":"text"}],"title":"What’s new in SF Symbols 4","role":"sampleCode","type":"topic","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22-10157-whats-new-in-sf-symbols-4","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10157-Whats-new-in-SF-Symbols-4"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110350-Visualize-and-optimize-Swift-concurrency":{"title":"Visualize and optimize Swift concurrency","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22-110350-visualize-and-optimize-swift-concurrency","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110350-Visualize-and-optimize-Swift-concurrency","role":"sampleCode","abstract":[{"type":"text","text":"Learn how you can optimize your app with the Swift Concurrency template in Instruments. We’ll discuss common performance issues and show you how to use Instruments to find and resolve these problems. Learn how you can keep your UI responsive, maximize parallel performance, and analyze Swift concurrency activity within your app."}]},"fbernutz":{"variants":[{"url":"\/images\/WWDCNotes\/fbernutz.jpeg","traits":["1x","light"]}],"alt":"Profile image of Feli Bernutz","type":"image","identifier":"fbernutz"},"https://fbernutz.github.io/images/sketchnotes/wwdc22-whats-new-in-uikit.jpg":{"variants":[{"url":"https:\/\/fbernutz.github.io\/images\/sketchnotes\/wwdc22-whats-new-in-uikit.jpg","traits":["1x","light"]}],"type":"image","identifier":"https:\/\/fbernutz.github.io\/images\/sketchnotes\/wwdc22-whats-new-in-uikit.jpg","alt":"Sketchnote of what’s new in UIKit with productivity improvements, control enhancements, API refinements and news about UIKit and SwiftUI"},"WWDC22-Icon.png":{"alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC22-Icon.png"}],"identifier":"WWDC22-Icon.png"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22":{"abstract":[{"type":"text","text":"Xcode 14, Swift 5.7, iOS 16, macOS 13 (Ventura), tvOS 16, watchOS 9."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"WeatherKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"ScreenCaptureKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"Swift Regex"},{"type":"text","text":", and more."}],"type":"topic","images":[{"type":"icon","identifier":"WWDC22-Icon.png"},{"type":"card","identifier":"WWDC22.jpeg"}],"kind":"article","title":"WWDC22","url":"\/documentation\/wwdcnotes\/wwdc22","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22","role":"collectionGroup"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10069-Meet-desktopclass-iPad":{"title":"Meet desktop-class iPad","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10069-Meet-desktopclass-iPad","url":"\/documentation\/wwdcnotes\/wwdc22-10069-meet-desktopclass-ipad","abstract":[{"text":"Learn how you can bring desktop-class features to your iPad app. Explore updates to UINavigationBar that bring more discoverability and customizability to your app’s features. Find out how the latest updates to UIKit can help make it easier and faster for people to explore content in your app. Lastly, we’ll share a few updates on how it’s easier than ever to bring your iPad app to the desktop with Mac Catalyst.","type":"text"}],"type":"topic","kind":"article"},"WWDC22.jpeg":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC22.jpeg","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"WWDC22.jpeg"},"https://x.com/felibe444":{"titleInlineContent":[{"text":"X\/Twitter","type":"text"}],"url":"https:\/\/x.com\/felibe444","title":"X\/Twitter","type":"link","identifier":"https:\/\/x.com\/felibe444"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10070-Build-a-desktopclass-iPad-app":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10070-Build-a-desktopclass-iPad-app","url":"\/documentation\/wwdcnotes\/wwdc22-10070-build-a-desktopclass-ipad-app","title":"Build a desktop-class iPad app","abstract":[{"type":"text","text":"Discover how you can create iPad apps that take advantage of desktop class features. Join Mohammed from the UIKit team as we explore the latest navigation, collection view, menu, and editing APIs and learn best practices for building powerful iPad apps. Code along with this session in real time or download our sample app to use as a reference for updating your own code."}],"type":"topic","kind":"article","role":"sampleCode"}}}