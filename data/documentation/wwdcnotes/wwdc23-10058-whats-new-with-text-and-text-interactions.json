{"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc23-10058-whats-new-with-text-and-text-interactions"]}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23"]]},"primaryContentSections":[{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"text":"Text plays a crucial role in every application. It’s the primary way to consume information and communicate. Here are the tools to create a powerful text experience in your app:","type":"text"}],"type":"paragraph"},{"text":"Changes to System selection UI","level":2,"anchor":"Changes-to-System-selection-UI","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"a completely redesigned text cursor on all platforms.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"an inline, interactive switcher when changing input languages.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"more ergonomic selection handles when doing range selection.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"a completely new loupe to make it easier to place the cursor in large bodies of text.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"works with "},{"type":"codeVoice","code":"UITextViews"},{"type":"text","text":" or "},{"type":"codeVoice","code":"UITextFields"},{"type":"text","text":" automatically."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"clients of ","type":"text"},{"type":"codeVoice","code":"UITextInteraction"},{"text":" also gets the new selection UI.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"for a highly customized UI displaying text added "},{"type":"codeVoice","code":"UITextSelectionDisplayInteraction"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"UITextSelectionDisplayInteraction"},{"type":"text","text":" is a new type of "},{"type":"codeVoice","code":"UIInteraction"},{"type":"text","text":" that can be installed on any UIView."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"must adopt "},{"type":"codeVoice","code":"UITextInput"},{"type":"text","text":" protocol."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"provides the cursor view and cursor accessories and the range highlight and selection handles.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"All of these views are replaceable."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"syntax":"swift","code":[" \/\/ Add selection display interaction"," let selectionDisplayInteraction = UITextSelectionDisplayInteraction(textInput: document, delegate: self)"," view.addInteraction(selectionDisplayInteraction)",""," \/\/ call this whenever selection changes in your document"," selectionDisplayInteraction.setNeedsSelectionUpdate()"],"type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"added a new API for displaying a loupe namely Text loupe."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"new ","type":"text"},{"type":"codeVoice","code":"UITextLoupeSession"},{"text":" object for displaying loupe.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"can be used on any view."}]}]},{"content":[{"inlineContent":[{"code":"UITextSelectionDisplayInteraction","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"UITextInput","type":"codeVoice"},{"text":" isn’t required to use it.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"recommended to use a gesture recognizer, such as "},{"type":"codeVoice","code":"UIPanGestureRecognizer"},{"type":"text","text":" to drive the loupe’s updates."}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"text":"Text item actions and menus","level":2,"anchor":"Text-item-actions-and-menus","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"much more customizable using new APIs on ","type":"text"},{"code":"UITextViewDelegate","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"makes it possible to modify the primary action for text items."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"New methods on ","type":"text"},{"code":"UITextViewDelegate","type":"codeVoice"}]}]}],"type":"unorderedList"},{"syntax":"swift","code":["func textView(_ textView: UITextView, primaryActionFor textItem: UITextItem, defaultAction: UIAction) -> UIAction?","","func textView(_ textView: UITextView, menuConfigurationFor textItem: UITextItem, defaultMenu: UIMenu) -> UITextItem.MenuConfiguration?"],"type":"codeListing"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Text items represent the content that support item interactions."}]}]},{"content":[{"inlineContent":[{"text":"includes text attachments, represented by ","type":"text"},{"type":"codeVoice","code":"NSTextAttachment"},{"text":", and links, represented by ","type":"text"},{"type":"codeVoice","code":"NSLinkAttributeName"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"UITextItem"},{"type":"text","text":" now also supports tagging custom ranges of text for interaction."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"use the ","type":"text"},{"code":"UITextItemTagAttributeName","type":"codeVoice"},{"text":" on the attributed string representing the range of text you wish to make interactive.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"now possible to change the default tap or menu behavior when a text item is interacted with."}]}]},{"content":[{"inlineContent":[{"text":"redirect known links to existing views within the app or add custom menus to parts of the text.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Lists and bullets in TextKit 2","level":2,"anchor":"Lists-and-bullets-in-TextKit-2","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Supports several different kinds of bullets.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Automatic numbering of items.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Localized for every language.","type":"text"}]}]}],"type":"unorderedList"},{"syntax":"swift","code":["let textList = NSTextList(markerFormat: .circle, option: 0)","let mutableParagrapghStyle = NSMutableParagraphStyle()","mutableParagraphStyle.textLists = [textList]","","textStorage.addAttribute(.paragraphStyle, value: mutableParagraphStyle, range: NSRange(location: 0, textStorage.length))"],"type":"codeListing"},{"text":"Dictation on MacOS","level":2,"anchor":"Dictation-on-MacOS","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"while scrolling, the indicator next to the cursor will stick to the edge of the scroll view, and offer a button to return to the current position in the document.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If you’re using a standard text control in AppKit like NSTextView, you’ll get this behavior right out of the box.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"NSTextInsertionIndicator","type":"codeVoice"},{"text":" is a new API for macOS that also allows to remain consistent with the system’s selection UI","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"System-provided insertion point","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Customizable","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Follows current accent color"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Supports dictation effects","type":"text"}]}]}]}]}],"type":"unorderedList"},{"syntax":"swift","code":["\/\/code example to add NSTextInsertionIndicator","let insertIndicator = NSTextInsertionIndicator(frame: .zero)","documentView.addSubview(insertIndicator)","","\/\/Block to handle effect views added by system","insertionIndicator.effectsViewInserter = { view in","documentView.addSubview(view, positioned: .below, relativeTo: insertionIndicator)","}","","func didLoseFocus() {","\/\/ When resigning first responder, make sure to hide cursor.","insertionIndicator.display = .hidden","}"],"type":"codeListing"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"updates to the frame will automatically be animated with a glow effect."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"to disable the glow effect, remove the "},{"type":"codeVoice","code":"showEffectsView"},{"type":"text","text":" option from "},{"type":"codeVoice","code":"automaticModeOptions"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"after changing input modes, an effect view is displayed beneath the cursor in horizontal text to show the language selection UI.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"to override the placement of this UI, specify "},{"type":"codeVoice","code":"preferredTextAccessoryPlacement"},{"type":"text","text":" in your implementation of "},{"type":"codeVoice","code":"NSTextInputClient"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"adopt "},{"type":"codeVoice","code":"NSTextInputClient"},{"type":"text","text":" and implement the "},{"type":"codeVoice","code":"selectionRect"},{"type":"text","text":" and "},{"type":"codeVoice","code":"documentVisibleRect"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Notify the system about scrolling beginning and ending."}]}]}],"type":"unorderedList"},{"text":"Internationalization","level":2,"anchor":"Internationalization","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"Dynamic line-height adjustments","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"automatically adjust the line height in ","type":"text"},{"code":"UILabel","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"UITextField","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"depends on preferred languages in Language and region settings."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"independent of actual language of content.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"only affects text elements that use text styles.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"use ","type":"text"},{"code":"UIFont.preferredFont(forTextStyle:)","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"make sure "},{"code":"clipsToBounds = false","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Ascenders and descenders for languages like Thai and Hindi will often protrude beyond the line height bounds.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Respond to changes in vertical."}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Wrapping and hyphenation"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Improved line breaking for Chinese, German, Japanese, and Korean.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Optimized for text style and language.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Adopt text styles.","type":"text"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"text":"Written By","level":2,"anchor":"Written-By","type":"heading"},{"numberOfColumns":5,"columns":[{"content":[{"inlineContent":[{"identifier":"RamitSharma991","type":"image"}],"type":"paragraph"}],"size":1},{"content":[{"level":3,"text":"Ramit Sharma","type":"heading","anchor":"Ramit-Sharma"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/RamitSharma991","overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}]},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/RamitSharma991"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/x.com\/iosDev_ramit"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/"}],"type":"paragraph"}],"size":4}],"type":"row"},{"type":"thematicBreak"},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}],"type":"paragraph"},{"text":"Related Sessions","level":2,"anchor":"Related-Sessions","type":"heading"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10055-Whats-new-in-UIKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10281-Keep-up-with-the-keyboard"],"type":"links","style":"list"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}],"type":"small"},{"inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}],"type":"small"}],"kind":"content"}],"metadata":{"roleHeading":"WWDC23","role":"sampleCode","title":"What’s new with text and text interactions","modules":[{"name":"WWDC Notes"}]},"sampleCodeDownload":{"action":{"type":"reference","isActive":true,"overridingTitle":"Watch Video (15 min)","identifier":"https:\/\/developer.apple.com\/wwdc23\/10058"},"kind":"sampleDownload"},"abstract":[{"text":"Text is an absolutely critical component of every app. Discover the latest features and enhancements for creating rich text experiences on Apple platforms. We’ll show you how to take advantage of common text elements and create entirely custom interactions for your app. Learn about updates to dictation, text loupe, and text selection, and explore improvements to text clipping, line wrapping, and hyphenation.","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10058-Whats-new-with-text-and-text-interactions","interfaceLanguage":"swift"},"references":{"https://":{"url":"https:\/\/","titleInlineContent":[{"type":"text","text":"Blog"}],"type":"link","identifier":"https:\/\/","title":"Blog"},"RamitSharma991.jpeg":{"identifier":"RamitSharma991.jpeg","alt":null,"type":"image","variants":[{"url":"\/images\/WWDCNotes\/RamitSharma991.jpeg","traits":["1x","light"]}]},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23":{"url":"\/documentation\/wwdcnotes\/wwdc23","images":[{"identifier":"WWDC23-Icon.png","type":"icon"},{"identifier":"WWDC23.jpeg","type":"card"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23","title":"WWDC23","type":"topic","abstract":[{"text":"Xcode 15, Swift 5.9, iOS 17, macOS 14 (Sonoma), tvOS 17, visionOS 1, watchOS 10.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"type":"codeVoice","code":"SwiftData"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Observation"},{"text":", ","type":"text"},{"type":"codeVoice","code":"StoreKit"},{"text":" views, and more.","type":"text"}],"kind":"article","role":"collectionGroup"},"https://developer.apple.com/wwdc23/10058":{"checksum":null,"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc23\/10058","url":"https:\/\/developer.apple.com\/wwdc23\/10058"},"https://github.com/RamitSharma991":{"titleInlineContent":[{"text":"GitHub","type":"text"}],"identifier":"https:\/\/github.com\/RamitSharma991","title":"GitHub","type":"link","url":"https:\/\/github.com\/RamitSharma991"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10281-Keep-up-with-the-keyboard":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10281-Keep-up-with-the-keyboard","title":"Keep up with the keyboard","url":"\/documentation\/wwdcnotes\/wwdc23-10281-keep-up-with-the-keyboard","type":"topic","kind":"article","abstract":[{"text":"Each year, the keyboard evolves to support an increasing range of languages, sizes, and features. Discover how you can design your app to keep up with the keyboard, regardless of how it appears on a device. We’ll show you how to create frictionless text entry and share important architectural changes to help you understand how the keyboard works within the system.","type":"text"}],"role":"sampleCode"},"RamitSharma991":{"identifier":"RamitSharma991","alt":"Profile image of Ramit Sharma","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/RamitSharma991.jpeg"}]},"https://x.com/iosDev_ramit":{"url":"https:\/\/x.com\/iosDev_ramit","titleInlineContent":[{"text":"X\/Twitter","type":"text"}],"type":"link","identifier":"https:\/\/x.com\/iosDev_ramit","title":"X\/Twitter"},"doc://WWDCNotes/documentation/WWDCNotes":{"url":"\/documentation\/wwdcnotes","kind":"symbol","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"role":"collection","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"title":"WWDC Notes"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10055-Whats-new-in-UIKit":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-10055-whats-new-in-uikit","type":"topic","title":"What’s new in UIKit","abstract":[{"type":"text","text":"Explore enhancements and updates to UIKit and learn how to build better iOS, iPadOS, and Mac Catalyst apps. We’ll show you the latest features and improvements in UIKit and share API refinements, performance improvements, and much more."}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10055-Whats-new-in-UIKit"},"WWDC23-Icon.png":{"alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDC23-Icon.png","traits":["1x","light"]}],"type":"image","identifier":"WWDC23-Icon.png"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDCNotes.png"}]},"doc://WWDCNotes/documentation/WWDCNotes/RamitSharma991":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/RamitSharma991","title":"Ramit Sharma (15 notes)","type":"topic","url":"\/documentation\/wwdcnotes\/ramitsharma991","kind":"article","abstract":[{"text":"Indie iOS Dev. Swift, SwiftUI, Obj-C, UX and related.","type":"text"}],"role":"sampleCode","images":[{"identifier":"RamitSharma991.jpeg","type":"card"},{"identifier":"RamitSharma991.jpeg","type":"icon"}]},"WWDC23.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC23.jpeg"}],"alt":null,"type":"image","identifier":"WWDC23.jpeg"}}}