{"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-226-Data-Flow-Through-SwiftUI","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19"]]},"kind":"article","abstract":[{"type":"text","text":"SwiftUI was built from the ground up to let you write beautiful and correct user interfaces free of inconsistencies. Learn how to connect your data as dependencies while keeping the UI fully predictable and error free. Familiarize yourself with SwiftUI’s powerful data flow tools and understand what the best tool is for each situation."}],"metadata":{"role":"sampleCode","roleHeading":"WWDC19","modules":[{"name":"WWDC Notes"}],"title":"Data Flow Through SwiftUI"},"sampleCodeDownload":{"kind":"sampleDownload","action":{"overridingTitle":"Watch Video (37 min)","isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc19\/226","type":"reference"}},"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc19-226-data-flow-through-swiftui"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"content","content":[{"text":"Principles of Data Flow","level":2,"anchor":"Principles-of-Data-Flow","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"Every time we read a piece of data in our view, we’re creating a dependency for that view.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Every time the data changes, the view has to change (read: re-render) to reflect the new value."}]}]},{"content":[{"inlineContent":[{"text":"Every piece of data that we’re reading in the view hierarchy has a source of truth.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The source of truth can live in the view hierarchy (if view-related, like a ","type":"text"},{"code":"collapsed","type":"codeVoice"},{"text":" status), or externally (our models).","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"We should always have a single source of truth (no duplicate values)."}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"`@State`","level":2,"anchor":"State","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When a property has an associated property wrapper "},{"type":"codeVoice","code":"@State"},{"type":"text","text":", SwiftUI knows that it needs to persist the storage across multiple updates of the same view."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Mark ","type":"text"},{"code":"@State","type":"codeVoice"},{"text":" property as private, to really enforce the idea that state is ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"owned and managed"}]},{"text":" by that view specifically.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"@State"},{"type":"text","text":" properties are a special case of state variables, as SwiftUI knows when they change."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"And because SwiftUI knows that the "},{"type":"codeVoice","code":"@State"},{"type":"text","text":" variables change the view "},{"type":"codeVoice","code":"body"},{"type":"text","text":" look, SwiftUI knows that the view rendering depend on their state."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"When a ","type":"text"},{"code":"@State","type":"codeVoice"},{"text":" property changes, in the runtime SwiftUI will recompute the body of that view and all of its children.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All the changes always flow down through your view hierarchy."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"We’re able to do these re-rendering very efficiently because SwiftUI compares the views and renders again only what is changed.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Views are a function of state, not of a sequence of events","type":"text"}],"type":"strong"},{"text":".","type":"text"}]}]}],"type":"unorderedList"},{"text":"`@Binding`","level":2,"anchor":"Binding","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"By using the ","type":"text"},{"type":"codeVoice","code":"Binding"},{"text":" property wrapper, we define an explicit dependency to a source of truth without owning it.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"We don’t need to provide an initial value because the binding can be derived from a state.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Primitives views such as "},{"type":"codeVoice","code":"Toggle"},{"type":"text","text":", "},{"type":"codeVoice","code":"TextField"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Slider"},{"type":"text","text":" all expect a binding."},{"type":"text","text":" "},{"type":"text","text":"We can read and write a "},{"type":"codeVoice","code":"@binding"},{"type":"text","text":" property (without owning it!)"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Publishers (External changes)","level":2,"anchor":"Publishers-External-changes","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In case the event comes from an external source (a.k.a. not within the views), we use "},{"code":"Combine","type":"codeVoice"},{"text":"’s ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/combine\/publisher","isActive":true,"type":"reference"}]}]},{"content":[{"inlineContent":[{"text":"It’s very important for ","type":"text"},{"type":"codeVoice","code":"View"},{"text":"s to receive events on the main thread.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"`ObservableObject` (External Data)","level":2,"anchor":"ObservableObject-External-Data","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When the data is outside our View, swiftUI needs to know how to react on changes of that data"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By making our external data conform to "},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/combine\/observableobject"},{"type":"text","text":" protocol, we are required to have a publisher, accessible via the synthesized "},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/combine\/observableobject\/3362556-objectwillchange"},{"type":"text","text":" property, that fires every time the data is about to change."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All we need to do later is to associate an "},{"code":"@ObservedObject","type":"codeVoice"},{"type":"text","text":" property wrapper in the model and pass the "},{"code":"ObservedObject","type":"codeVoice"},{"type":"text","text":" to the view in its initialization."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"While SwiftUI "},{"code":"View","type":"codeVoice"},{"type":"text","text":"s are value types ("},{"code":"Struct","type":"codeVoice"},{"type":"text","text":"s), any time we’re using a reference type, we should be using the "},{"code":"@ObservedObject","type":"codeVoice"},{"type":"text","text":" property wrapper: this way SwiftUI will know when that data changes and can keep our view hierarchy up to date."}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Environment","level":2,"anchor":"Environment","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Thanks to the "},{"type":"codeVoice","code":".environment"},{"type":"text","text":" modifier, we can add our "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"s into the environment."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By using this "},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/environmentobject","isActive":true,"type":"reference"},{"type":"text","text":" property wrapper, we can create a dependency to these environment objects."}]}]}],"type":"unorderedList"},{"text":"Object Binding vs Environment","level":2,"anchor":"Object-Binding-vs-Environment","type":"heading"},{"items":[{"content":[{"inlineContent":[{"text":"We can build your whole app with ","type":"text"},{"type":"codeVoice","code":"@Binding"},{"text":", but it can get kind of cumbersome to pass around the model from view to view.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"EnvironmentObject"},{"type":"text","text":" is a convenience for passing data around your hierarchy indirectly (without the need to pass the object to each view first)."}]}]}],"type":"unorderedList"},{"text":"`@State` vs `@ObservedObject`","level":2,"anchor":"State-vs-ObservedObject","type":"heading"},{"items":[{"content":[{"inlineContent":[{"code":"@State","type":"codeVoice"},{"text":" is great for data that’s view ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"local"}]},{"text":", a value type, managed.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"@State","type":"codeVoice"},{"text":" is allocated, created and managed by SwiftUI","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"@State","type":"codeVoice"},{"type":"text","text":" is value type"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"@ObservedObject","type":"codeVoice"},{"text":" is for representing ","type":"text"},{"inlineContent":[{"text":"external data","type":"text"}],"type":"strong"},{"text":" to SwiftUI, such as a database.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"@ObservedObject"},{"text":" is storage that ","type":"text"},{"inlineContent":[{"text":"we","type":"text"}],"type":"strong"},{"text":" manage, which makes it great for the model that we already have.","type":"text"}]}]},{"content":[{"inlineContent":[{"code":"@ObservedObject","type":"codeVoice"},{"text":" is managed by us","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"@ObservedObject","type":"codeVoice"},{"type":"text","text":" is reference type"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Written By","level":2,"anchor":"Written-By","type":"heading"},{"numberOfColumns":5,"columns":[{"content":[{"inlineContent":[{"type":"image","identifier":"zntfdr"}],"type":"paragraph"}],"size":1},{"content":[{"level":3,"anchor":"Federico-Zanetello","type":"heading","text":"Federico Zanetello"},{"inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitle":"Contributed Notes","type":"reference","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}]},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/github.com\/zntfdr","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/zntfdr.dev","type":"reference","isActive":true}],"type":"paragraph"}],"size":4}],"type":"row"},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}],"type":"paragraph"},{"text":"Related Sessions","level":2,"anchor":"Related-Sessions","type":"heading"},{"style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-204-Introducing-SwiftUI-Building-Your-First-App","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-216-SwiftUI-Essentials","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-219-SwiftUI-on-watchOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-231-Integrating-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-233-Mastering-Xcode-Previews","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-237-Building-Custom-Views-with-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-240-SwiftUI-On-All-Devices","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-415-Modern-Swift-API-Design","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-721-Combine-in-Practice","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-722-Introducing-Combine"],"type":"links"},{"inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}],"type":"small"}]}],"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC19":{"abstract":[{"text":"Xcode 11, Swift 5.1, iOS 13, macOS 10.15 (Catalina), tvOS 13, watchOS 6.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"Combine","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Core Haptics","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Create ML","type":"codeVoice"},{"text":", and more.","type":"text"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19","role":"collectionGroup","kind":"article","images":[{"type":"icon","identifier":"WWDC19-Icon.png"},{"type":"card","identifier":"WWDC19.jpeg"}],"title":"WWDC19","url":"\/documentation\/wwdcnotes\/wwdc19"},"WWDC19.jpeg":{"identifier":"WWDC19.jpeg","alt":null,"type":"image","variants":[{"url":"\/images\/WWDC19.jpeg","traits":["1x","light"]}]},"WWDC19-Icon.png":{"identifier":"WWDC19-Icon.png","alt":null,"type":"image","variants":[{"url":"\/images\/WWDC19-Icon.png","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-415-Modern-Swift-API-Design":{"url":"\/documentation\/wwdcnotes\/wwdc19-415-modern-swift-api-design","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-415-Modern-Swift-API-Design","kind":"article","role":"sampleCode","type":"topic","title":"Modern Swift API Design","abstract":[{"text":"Every programming language has a set of conventions that people come to expect. Learn about the patterns that are common to Swift API design, with examples from new APIs like SwiftUI, Combine, and RealityKit. Whether you’re developing an app as part of a team, or you’re publishing a library for others to use, find out how to use new features of Swift to ensure clarity and correct use of your APIs.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-219-SwiftUI-on-watchOS":{"url":"\/documentation\/wwdcnotes\/wwdc19-219-swiftui-on-watchos","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-219-SwiftUI-on-watchOS","kind":"article","role":"sampleCode","type":"topic","title":"SwiftUI on watchOS","abstract":[{"type":"text","text":"SwiftUI allows a whole new world of possibilities when developing watchOS apps and notifications. From custom animations to providing an intuitive feel with Digital Crown haptics, SwiftUI helps you build exciting and immersive experiences for Apple Watch. See how easy it is to create custom elements with animations, embed gesture-driven animations within notifications, and learn about the enhanced debugging support to make watchOS app development faster than ever."}]},"doc://WWDCNotes/documentation/WWDCNotes":{"title":"WWDC Notes","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","url":"\/documentation\/wwdcnotes"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","alt":null,"type":"image","variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-721-Combine-in-Practice":{"url":"\/documentation\/wwdcnotes\/wwdc19-721-combine-in-practice","kind":"article","role":"sampleCode","abstract":[{"type":"text","text":"Expand your knowledge of Combine, Apple’s new unified, declarative framework for processing values over time. Learn about how to correctly handle errors, schedule work and integrate Combine into your app today."}],"title":"Combine in Practice","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-721-Combine-in-Practice","type":"topic"},"zntfdr":{"identifier":"zntfdr","alt":"Profile image of Federico Zanetello","type":"image","variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"url":"\/documentation\/wwdcnotes\/zntfdr","type":"topic","kind":"article","title":"Federico Zanetello (332 notes)","abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","images":[{"identifier":"zntfdr.jpeg","type":"card"},{"identifier":"zntfdr.jpeg","type":"icon"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-240-SwiftUI-On-All-Devices":{"url":"\/documentation\/wwdcnotes\/wwdc19-240-swiftui-on-all-devices","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-240-SwiftUI-On-All-Devices","kind":"article","role":"sampleCode","type":"topic","title":"SwiftUI On All Devices","abstract":[{"type":"text","text":"Once you’ve learned the basics of SwiftUI, you’ve learned what you need to know to use SwiftUI anywhere. You can use the same SwiftUI skills for making an iOS app as you would for making an app on watchOS, tvOS or macOS. We’ll cover the basics, and then dig into more detail about how  SwiftUI can help you make changes to your app on every Apple device. Hear about design principles for each platform and learn about how much code you can share across platforms. See how to incorporate device-specific features and how to make changes in SwiftUI by following along with a starter project, available for download."}]},"https://developer.apple.com/documentation/combine/observableobject":{"url":"https:\/\/developer.apple.com\/documentation\/combine\/observableobject","identifier":"https:\/\/developer.apple.com\/documentation\/combine\/observableobject","titleInlineContent":[{"type":"codeVoice","code":"ObservableObject"}],"type":"link","title":"ObservableObject"},"https://developer.apple.com/wwdc19/226":{"url":"https:\/\/developer.apple.com\/wwdc19\/226","identifier":"https:\/\/developer.apple.com\/wwdc19\/226","type":"download","checksum":null},"https://developer.apple.com/documentation/swiftui/environmentobject":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/environmentobject","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/environmentobject","titleInlineContent":[{"type":"codeVoice","code":"@EnvironemntObject"}],"type":"link","title":"@EnvironemntObject"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-237-Building-Custom-Views-with-SwiftUI":{"kind":"article","role":"sampleCode","title":"Building Custom Views with SwiftUI","abstract":[{"type":"text","text":"Learn how to build custom views and controls in SwiftUI with advanced composition, layout, graphics, and animation. See a demo of a high performance, animatable control and watch it made step by step in code. Gain a deeper understanding of the layout system of SwiftUI."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-237-Building-Custom-Views-with-SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc19-237-building-custom-views-with-swiftui"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"type":"link","title":"Contributions are welcome!"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-231-Integrating-SwiftUI":{"url":"\/documentation\/wwdcnotes\/wwdc19-231-integrating-swiftui","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-231-Integrating-SwiftUI","kind":"article","role":"sampleCode","type":"topic","title":"Integrating SwiftUI","abstract":[{"type":"text","text":"SwiftUI is designed to integrate with your existing code base on any of Apple’s platforms. Learn how to adopt SwiftUI on any Apple platform by adding SwiftUI views into your app’s hierarchy, leveraging your existing data model and more."}]},"zntfdr.jpeg":{"identifier":"zntfdr.jpeg","alt":null,"type":"image","variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}]},"https://developer.apple.com/documentation/combine/publisher":{"url":"https:\/\/developer.apple.com\/documentation\/combine\/publisher","identifier":"https:\/\/developer.apple.com\/documentation\/combine\/publisher","titleInlineContent":[{"type":"codeVoice","code":"Publisher"},{"type":"text","text":"s"}],"type":"link","title":"Publishers"},"https://developer.apple.com/documentation/combine/observableobject/3362556-objectwillchange":{"url":"https:\/\/developer.apple.com\/documentation\/combine\/observableobject\/3362556-objectwillchange","identifier":"https:\/\/developer.apple.com\/documentation\/combine\/observableobject\/3362556-objectwillchange","titleInlineContent":[{"type":"codeVoice","code":"objectWillChange"}],"type":"link","title":"objectWillChange"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-722-Introducing-Combine":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-722-Introducing-Combine","title":"Introducing Combine","url":"\/documentation\/wwdcnotes\/wwdc19-722-introducing-combine","role":"sampleCode","abstract":[{"type":"text","text":"Combine is a unified declarative framework for processing values over time. Learn how it can simplify asynchronous code like networking, key value observing, notifications and callbacks."}],"kind":"article"},"https://github.com/zntfdr":{"url":"https:\/\/github.com\/zntfdr","identifier":"https:\/\/github.com\/zntfdr","titleInlineContent":[{"type":"text","text":"GitHub"}],"type":"link","title":"GitHub"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-204-Introducing-SwiftUI-Building-Your-First-App":{"url":"\/documentation\/wwdcnotes\/wwdc19-204-introducing-swiftui-building-your-first-app","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-204-Introducing-SwiftUI-Building-Your-First-App","kind":"article","role":"sampleCode","type":"topic","title":"Introducing SwiftUI: Building Your First App","abstract":[{"text":"See SwiftUI in action! Watch as engineers from the SwiftUI team build a fully-functioning app from scratch. Understand the philosophy driving this new framework and learn about the benefits of declarative-style programming. Take a look under the hood to understand how SwiftUI operates and learn how SwiftUI and Xcode 11 work together to help you to build great apps, faster.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-233-Mastering-Xcode-Previews":{"url":"\/documentation\/wwdcnotes\/wwdc19-233-mastering-xcode-previews","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-233-Mastering-Xcode-Previews","kind":"article","role":"sampleCode","type":"topic","title":"Mastering Xcode Previews","abstract":[{"type":"text","text":"Xcode 11 displays previews of your user interface right in the editor, streamlining the edit-debug-run cycle into a seamless workflow. Learn how previews work, how to optimize the structure of your SwiftUI app for previews, and how to add preview support to your existing views and view controllers."}]},"https://zntfdr.dev":{"url":"https:\/\/zntfdr.dev","identifier":"https:\/\/zntfdr.dev","titleInlineContent":[{"type":"text","text":"Blog"}],"type":"link","title":"Blog"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-216-SwiftUI-Essentials":{"url":"\/documentation\/wwdcnotes\/wwdc19-216-swiftui-essentials","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-216-SwiftUI-Essentials","kind":"article","role":"sampleCode","type":"topic","title":"SwiftUI Essentials","abstract":[{"text":"Take your first deep-dive into building an app with SwiftUI. Learn about Views and how they work. From basic controls to sophisticated containers like lists and navigation stacks, SwiftUI enables the creation of great user interfaces, faster and more easily. See how basic controls like Button are both simple yet versatile. Discover how to compose these pieces into larger, full-featured user interfaces that facilitate building great apps with SwiftUI. Build your SwiftUI skills as you learn the essentials of Apple’s new declarative framework.","type":"text"}]}}}