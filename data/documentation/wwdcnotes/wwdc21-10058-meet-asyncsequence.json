{"kind":"article","schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"abstract":[{"type":"text","text":"Iterating over a sequence of values over time is now as easy as writing a “for” loop. Find out how the new AsyncSequence protocol enables a natural, simple syntax for iterating over anything from notifications to bytes being streamed from a server. We’ll also show you how to adapt existing code to provide asynchronous sequences of your own."}],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10058-Meet-AsyncSequence","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10257-Meet-ClassKit-for-filebased-apps","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10117-Meet-CloudKit-Console","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10166-Meet-DocC-documentation-in-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10183-Meet-Group-Activities","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10294-Meet-MusicKit-for-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10104-Meet-Safari-Web-Extensions-on-iOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10232-Meet-Shortcuts-for-macOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10114-Meet-StoreKit-2","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10170-Meet-TestFlight-on-Mac","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10061-Meet-TextKit-2","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10267-Meet-Xcode-Cloud","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10132-Meet-asyncawait-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10131-Meet-declarative-device-management","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10171-Meet-inapp-events-on-the-App-Store","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10033-Meet-privacypreserving-ad-attribution","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10102-Meet-the-Location-Button","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10123-Meet-the-Screen-Time-API","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10256-Meet-the-Swift-Algorithms-and-Collections-packages","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10064-Meet-the-UIKit-button-system"],"title":"New Tools & Frameworks","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc21-10058-meet-asyncsequence"]}],"sections":[],"sampleCodeDownload":{"kind":"sampleDownload","action":{"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc21\/10058","isActive":true,"overridingTitle":"Watch Video (14 min)"}},"metadata":{"modules":[{"name":"WWDC Notes"}],"role":"sampleCode","title":"Meet AsyncSequence","roleHeading":"WWDC21"},"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Map, filter, reduce, dropFirst all work in async sequences, for example:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/\/ This tool prints lines as we receive the `all_month.csv` file, ","\/\/\/ we don't need to wait for the complete file to download first.","@main","struct QuakesTool {","  static func main() async throws {","    let endpointURL = URL(string: \"https:\/\/earthquake.usgs.gov\/earthquakes\/feed\/v1.0\/summary\/all_month.csv\")!","","    \/\/ Skip the header line and iterate each one to extract the magnitude, time, latitude and longitude","    for try await event in endpointURL.lines.dropFirst() {","      let values = event.split(separator: \",\")","      let time = values[0]","      let latitude = values[1]","      let longitude = values[2]","      let magnitude = values[4]","      print(\"Magnitude \\(magnitude) on \\(time) at \\(latitude) \\(longitude)\")","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Async\/await key points:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Async functions let you write concurrent code without the need for callbacks, by using the "},{"code":"await","type":"codeVoice"},{"type":"text","text":" keyword"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"calling an async function will suspend the current flow, which is then resumed whenever a value or error is produced"}],"type":"paragraph"}]}]},{"type":"heading","text":"What is AsyncSequence","level":2,"anchor":"What-is-AsyncSequence"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"AsyncSequence will suspend on each element and resume when the underlying iterator produces a value or throws","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"just like other sequences, except async - each element is delivered asynchronously","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"may throw","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"AsyncSequences either completes with success or stops when an error is thrown - depending if failure is an option","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"An async iterator also consumes its underlying collection.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Generally speaking, asynchronous sequences are a description of how to produce values over time:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"an async sequence may be zero or more values and then signify completion with returning a nil from its iterator, just like sequences"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"When an error occurs, the async sequence is at a terminal state - after an error happens, they’ll return ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" for any subsequent calls to ","type":"text"},{"code":"next","type":"codeVoice"},{"text":" on their iterator","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Things like ","type":"text"},{"code":"break","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"continue","type":"codeVoice"},{"text":" work in async sequences too.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can cancel an iteration by holding on to its "},{"code":"Task.Handle","type":"codeVoice"},{"type":"text","text":" when you wrap it in "},{"code":"async","type":"codeVoice"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["let handle = async {","  for await thing in list {","    \/\/ ...","  }","}","","handle.cancel()"]},{"type":"heading","text":"Compiler transformation","level":2,"anchor":"Compiler-transformation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Take the following code:"}]},{"type":"codeListing","syntax":"swift","code":["for quake in quakes {","  if quake.magnitude > 3 {","    displaySignificantEarthquake(quake)","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The compiler will transform it into:"}]},{"code":["var iterator = quakes.makeIterator()","while let quake = iterator.next() {","  if quake.magnitude > 3 {","    displaySignificantEarthquake(quake)","  }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"if "},{"type":"codeVoice","code":"quakes"},{"type":"text","text":" was an asyncSequence, it’d turn into:"}]},{"code":["var iterator = quakes.makeAsyncIterator()","while let quake = await iterator.next() {","  if quake.magnitude > 3 {","    displaySignificantEarthquake(quake)","  }","}"],"type":"codeListing","syntax":"swift"},{"level":2,"type":"heading","anchor":"API-highlight","text":"API highlight"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Read bytes asynchronously from a "},{"type":"codeVoice","code":"FileHandle"},{"type":"text","text":":"}]},{"code":["\/\/ bytes: AsyncBytes","for try await line in FileHandle.standardInput.bytes.lines {","  ...","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Read lines asynchronously from a "},{"code":"URL","type":"codeVoice"},{"type":"text","text":":"}]},{"code":["\/\/ lines: AsyncLineSequence<AsyncBytes>","let url = URL(fileURLWithPath: \"\/tmp\/somefile.txt\")","for try await line in url.lines {","  ...","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Read bytes asynchronously from a ","type":"text"},{"type":"codeVoice","code":"URLSession"},{"text":":","type":"text"}]},{"code":["\/\/ you can use:","\/\/ func bytes(from: URL) async throws -> (AsyncBytes, URLResponse)","\/\/ func bytes(for: URLRequest) async throws -> (AsyncBytes, URLResponse)","","let (bytes, response) = try await URLSession.shared.bytes(from: url)","","guard let httpResponse = response as? HTTPURLResponse, httpResponse.statusCode == 200 \/* OK *\/","else { throw MyNetworkingError.invalidServerResponse }","","for try await byte in bytes {","  ...","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Await notifications asynchronously:","type":"text"}]},{"code":["let center = NotificationCenter.default","let notification = await center.notifications(named: .NSPersistentStoreRemoteChange).first {","  $0.userInfo[NSStoreUUIDKey] == storeUUID","}"],"type":"codeListing","syntax":"swift"},{"level":2,"type":"heading","anchor":"How-to-create-async-sequences","text":"How to create async sequences"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Pretty much anything that does not need a response back and is just informing of a new value that occurs can be a prime candidate for making an async sequence."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Definition:"}]},{"code":["public struct AsyncStream<Element>: AsyncSequence {","  public init(","    elementType: Element.Type = Element.self,","    maxBufferedElements limit: Int = .max,","    _ build: (Continuation) -> Void","  )","}","","\/\/ If we need to handle errors:","public struct AsynchrowingStream<Element>: AsyncSequence {","  public init(","    elementType: Element.Type = Element.self,","    maxBufferedElements limit: Int = .max,","    _ build: (Continuation) -> Void","  )","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"code":["class QuakeMonitor {","  var quakeHandler: (Quake) -> Void ","  func startMonitoring()","  func stopMonitoring()","}","","let quakes = AsyncStream(Quake.self) { continuation in","  let monitor = QuakeMonitor()","  monitor.quakeHandler = { quake in","    continuation.yield(quake)","  }","  continuation.onTermination = { @Sendable _ in","    monitor.stopMonitoring()","  }","  monitor.startMonitoring()","}","","let significantQuakes = quakes.filter { quake in","  quake.magnitude > 3","}","","for await quake in significantQuakes {","  ...","}"],"type":"codeListing","syntax":"swift"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"when constructing an async stream, an element type (","type":"text"},{"code":"Quake","type":"codeVoice"},{"text":") and construction closure is specified","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The closure has a ","type":"text"},{"code":"continuation","type":"codeVoice"},{"text":" that can yield values more than once, finish, or handle termination","type":"text"}]}]}],"type":"unorderedList"},{"level":2,"type":"heading","anchor":"Written-By","text":"Written By"},{"numberOfColumns":5,"type":"row","columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/1272208?v=4","type":"image"}]}]},{"size":4,"content":[{"type":"heading","level":3,"anchor":"Donny-Wals","text":"Donny Wals"},{"type":"paragraph","inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/donnywals","type":"reference","isActive":true,"overridingTitle":"Contributed Notes"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/github.com\/donnywals","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/www.donnywals.com","type":"reference","isActive":true}]}]}]},{"numberOfColumns":5,"type":"row","columns":[{"size":1,"content":[{"inlineContent":[{"type":"image","identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4"}],"type":"paragraph"}]},{"size":4,"content":[{"text":"Federico Zanetello","anchor":"Federico-Zanetello","type":"heading","level":3},{"inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","type":"reference","overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/zntfdr","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/zntfdr.dev","type":"reference","isActive":true}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}]},{"level":2,"type":"heading","anchor":"Related-Sessions","text":"Related Sessions"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10020-Compose-advanced-models-with-Create-ML-Components","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110355-Meet-Swift-Async-Algorithms","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110379-Create-a-more-responsive-media-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10095-Use-asyncawait-with-URLSession","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10109-Whats-new-in-Foundation","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10132-Meet-asyncawait-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10134-Explore-structured-concurrency-in-Swift"],"type":"links","style":"list"},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}],"kind":"content"}],"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110355-Meet-Swift-Async-Algorithms":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-110355-meet-swift-async-algorithms","abstract":[{"type":"text","text":"Discover the latest open source Swift package from Apple: Swift Async Algorithms. We’ll explore algorithms from this package that you can use with AsyncSequence, including zip, merge, and throttle. Follow along with us as we use these algorithms to build a great messaging app. We’ll also share best practices for combining multiple AsyncSequences and using the Swift Clock type to work with values over time."}],"role":"sampleCode","title":"Meet Swift Async Algorithms","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110355-Meet-Swift-Async-Algorithms","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10095-Use-asyncawait-with-URLSession":{"role":"sampleCode","type":"topic","title":"Use async\/await with URLSession","kind":"article","abstract":[{"text":"Discover how you can adopt Swift concurrency in URLSession using async\/await and AsyncSequence, and how you can apply Swift concurrency concepts to improve your networking code.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10095-use-asyncawait-with-urlsession","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10095-Use-asyncawait-with-URLSession"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10114-Meet-StoreKit-2":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10114-Meet-StoreKit-2","title":"Meet StoreKit 2","url":"\/documentation\/wwdcnotes\/wwdc21-10114-meet-storekit-2","kind":"article","type":"topic","abstract":[{"text":"StoreKit 2 delivers powerful, Swift-native APIs for in-app purchases and auto-renewable subscriptions. Learn how you can easily implement in-app purchases and subscriptions, and discover APIs for retrieving product information, handling transactions, determining product entitlements and customer status, as well as comprehensive testing support in Xcode.","type":"text"}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"role":"collectionGroup","type":"topic","title":"WWDC21","kind":"article","abstract":[{"text":"Xcode 13, Swift 5.5, iOS 15, macOS 12, tvOS 15, watchOS 8.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"type":"codeVoice","code":"MusicKit"},{"text":", ","type":"text"},{"type":"codeVoice","code":"DocC"},{"text":", ","type":"text"},{"type":"codeVoice","code":"StoreKit 2"},{"text":", and more.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","images":[{"type":"icon","identifier":"WWDCNotes.png"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10064-Meet-the-UIKit-button-system":{"title":"Meet the UIKit button system","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10064-meet-the-uikit-button-system","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10064-Meet-the-UIKit-button-system","kind":"article","abstract":[{"type":"text","text":"Every app uses Buttons. With iOS 15, you can adopt updated styles to create gorgeous buttons that fit effortlessly into your interface. We’ll explore features that make it easier to create different types of buttons, learn how to provide richer interactions, and discover how you can get great buttons when using Mac Catalyst."}],"type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10294-Meet-MusicKit-for-Swift":{"role":"sampleCode","type":"topic","title":"Meet MusicKit for Swift","url":"\/documentation\/wwdcnotes\/wwdc21-10294-meet-musickit-for-swift","abstract":[{"type":"text","text":"MusicKit makes it easy to integrate Apple Music into your app. Explore the Swift-based framework: We’ll take you through the basic process of using MusicKit — including how to find, request, and play content — and show you how you can incorporate music subscription workflows into your app if someone hasn’t yet signed up to Apple Music."}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10294-Meet-MusicKit-for-Swift"},"https://developer.apple.com/wwdc21/10058":{"type":"download","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc21\/10058","identifier":"https:\/\/developer.apple.com\/wwdc21\/10058"},"https://avatars.githubusercontent.com/u/1272208?v=4":{"type":"image","variants":[{"traits":["1x","light"],"url":"https:\/\/avatars.githubusercontent.com\/u\/1272208?v=4"}],"alt":"Profile image of Donny Wals","identifier":"https:\/\/avatars.githubusercontent.com\/u\/1272208?v=4"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10232-Meet-Shortcuts-for-macOS":{"abstract":[{"text":"Shortcuts is coming to macOS, and your apps are a key part of that process. Discover how you can elevate the capabilities of your app by exposing those features as Shortcuts actions. We’ll show you how to build actions for your macOS apps built with Catalyst or AppKit, deploy actions across platforms, publish and share shortcuts, and enable your app to run shortcuts from other apps. We’ll also take you through how Shortcuts fits in with existing Mac automation technologies like Automator and AppleScript.","type":"text"}],"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10232-Meet-Shortcuts-for-macOS","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10232-meet-shortcuts-for-macos","title":"Meet Shortcuts for macOS"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10033-Meet-privacypreserving-ad-attribution":{"abstract":[{"type":"text","text":"Discover how you can measure your ad campaigns in apps and on the web without compromising privacy. We’ll introduce you to Private Click Measurement and explore SKAdNetwork, which provides you with a more secure, private, and useful way to measure your app installs."}],"kind":"article","role":"sampleCode","title":"Meet privacy-preserving ad attribution","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10033-Meet-privacypreserving-ad-attribution","url":"\/documentation\/wwdcnotes\/wwdc21-10033-meet-privacypreserving-ad-attribution","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes":{"role":"collection","type":"topic","title":"WWDC Notes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","url":"\/documentation\/wwdcnotes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"kind":"symbol"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"type":"link","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10183-Meet-Group-Activities":{"title":"Meet Group Activities","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10183-meet-group-activities","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10183-Meet-Group-Activities","kind":"article","abstract":[{"type":"text","text":"Learn more about the framework powering SharePlay, and discover the different types of shared experiences you can implement for people who use your app. Explore a high-level overview of the framework’s architecture and concepts, including how Group Activities and AVFoundation work in tandem, and learn how to implement it into your app. This is a great starting point to know more about SharePlay and how to integrate Group Activities in your apps."}],"type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10131-Meet-declarative-device-management":{"abstract":[{"type":"text","text":"The future of device management is here: Learn how you can support mobile device management while allowing individual devices to be autonomous and proactive, bringing both increased performance and scalability. We’ll show you how you can incorporate this declarative model in your MDM solution."}],"kind":"article","role":"sampleCode","title":"Meet declarative device management","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10131-Meet-declarative-device-management","url":"\/documentation\/wwdcnotes\/wwdc21-10131-meet-declarative-device-management","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10170-Meet-TestFlight-on-Mac":{"title":"Meet TestFlight on Mac","abstract":[{"type":"text","text":"TestFlight has come to Mac. Learn how you can manage builds and testers, collect feedback, and deploy your macOS app. Discover enhancements for internal testing and new features that integrate with Xcode Cloud to make testing even easier on all platforms."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10170-Meet-TestFlight-on-Mac","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10170-meet-testflight-on-mac","type":"topic"},"https://github.com/zntfdr":{"type":"link","identifier":"https:\/\/github.com\/zntfdr","url":"https:\/\/github.com\/zntfdr","title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10267-Meet-Xcode-Cloud":{"abstract":[{"text":"Get to know Xcode Cloud, Apple’s continuous integration and continuous delivery (CI\/CD) service for building apps and frameworks for all Apple platforms. Find out how Xcode Cloud can improve both the productivity of your team and the quality of your products. We’ll show you how to start your first build, use a build report to fix issues, and collaborate with your team.","type":"text"}],"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10267-Meet-Xcode-Cloud","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10267-meet-xcode-cloud","title":"Meet Xcode Cloud"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110379-Create-a-more-responsive-media-app":{"url":"\/documentation\/wwdcnotes\/wwdc22-110379-create-a-more-responsive-media-app","type":"topic","kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110379-Create-a-more-responsive-media-app","abstract":[{"text":"Discover how you can use AVFoundation to keep people focused on your media app’s content — not your loading spinner. We’ll show you how to support a responsive and fluid interface in your app, all while you create rich audiovisual compositions, load audiovisual assets, and prepare media thumbnails. Find out how you can perform these tasks on your app’s main thread while I\/O processes in parallel, learn how to get top-notch playback performance when loading data from custom storage, and more.","type":"text"}],"title":"Create a more responsive media app"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10061-Meet-TextKit-2":{"abstract":[{"text":"Meet TextKit 2: Apple’s next-generation text engine, redesigned for improved correctness, safety, and performance. Discover how TextKit 2 can help you provide a better text experience for international audiences, create more diverse layouts by mixing text content with visual content, and ensure smooth scrolling performance. We’ll introduce the latest APIs, dive into some practical examples, and provide guidance for modernizing your apps.","type":"text"}],"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10061-Meet-TextKit-2","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10061-meet-textkit-2","title":"Meet TextKit 2"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10109-Whats-new-in-Foundation":{"type":"topic","abstract":[{"type":"text","text":"Discover how the latest updates to Foundation can help you improve your app’s localization and internationalization support. Find out about the new AttributedString, designed specifically for Swift, and learn how you can use Markdown to apply style to your localized strings. Explore the grammar agreement engine, which automatically fixes up localized strings so they match grammatical gender and pluralization. And we’ll take you through improvements to date and number formatting that simplify complex requirements while also improving performance."}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10109-Whats-new-in-Foundation","url":"\/documentation\/wwdcnotes\/wwdc21-10109-whats-new-in-foundation","role":"sampleCode","title":"What’s new in Foundation"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10123-Meet-the-Screen-Time-API":{"abstract":[{"text":"Explore the Screen Time API and learn how you can build apps that support customized parental controls — all while putting privacy first. Learn how you can use key features like core restrictions and device activity monitoring to create safe, secure experiences in your app while providing measurable control for parents and guardians.","type":"text"}],"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10123-Meet-the-Screen-Time-API","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10123-meet-the-screen-time-api","title":"Meet the Screen Time API"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10117-Meet-CloudKit-Console":{"title":"Meet CloudKit Console","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10117-meet-cloudkit-console","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10117-Meet-CloudKit-Console","kind":"article","abstract":[{"type":"text","text":"Discover how CloudKit Console can help you better interact with your containers. We’ll show you how to put the database app to work and define, modify, and deploy schema changes with confidence. You’ll learn how to craft queries in the query builder and filter your records with ease. And we’ll explore how to use telemetry and log data to gain new insights into your app behavior over time."}],"type":"topic"},"WWDCNotes.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}],"alt":null,"identifier":"WWDCNotes.png"},"https://github.com/donnywals":{"type":"link","identifier":"https:\/\/github.com\/donnywals","url":"https:\/\/github.com\/donnywals","title":"GitHub","titleInlineContent":[{"type":"text","text":"GitHub"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10104-Meet-Safari-Web-Extensions-on-iOS":{"abstract":[{"text":"Safari Web Extensions use HTML, CSS, and JavaScript to offer people powerful browser customizations — and you can now create them for every device that supports Safari. Learn how to build a Safari Web Extension that works for all devices, and discover how you can convert an existing extension to Safari through Xcode and the Safari Web Extension Converter.","type":"text"}],"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10104-Meet-Safari-Web-Extensions-on-iOS","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10104-meet-safari-web-extensions-on-ios","title":"Meet Safari Web Extensions on iOS"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10166-Meet-DocC-documentation-in-Xcode":{"abstract":[{"text":"Discover how you can use DocC to build and share documentation for Swift packages and frameworks. We’ll show you how to begin generating documentation from your own code — or from third-party code you depend upon — and write and format it using Markdown. And we’ll also take you through the export process, helping you generate DocC archives to share with the public.","type":"text"}],"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10166-Meet-DocC-documentation-in-Xcode","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10166-meet-docc-documentation-in-xcode","title":"Meet DocC documentation in Xcode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10256-Meet-the-Swift-Algorithms-and-Collections-packages":{"title":"Meet the Swift Algorithms and Collections packages","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10256-meet-the-swift-algorithms-and-collections-packages","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10256-Meet-the-Swift-Algorithms-and-Collections-packages","kind":"article","abstract":[{"type":"text","text":"Discover two of the latest additions to the list of open-source Swift packages from Apple: Swift Algorithms and Swift Collections. Not only can you use these packages immediately, they also incubate new algorithms and data structures for eventual inclusion in the Swift Standard Library. We’ll show you how you can integrate these packages into your projects and select the right algorithms and data structures to make your code clearer and faster."}],"type":"topic"},"https://avatars.githubusercontent.com/u/5277837?v=4":{"type":"image","variants":[{"traits":["1x","light"],"url":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4"}],"alt":"Profile image of Federico Zanetello","identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4"},"doc://WWDCNotes/documentation/WWDCNotes/donnywals":{"kind":"article","abstract":[{"text":"No Bio on GitHub","type":"text"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/donnywals","type":"topic","title":"Donny Wals (3 notes)","url":"\/documentation\/wwdcnotes\/donnywals"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10102-Meet-the-Location-Button":{"abstract":[{"type":"text","text":"Meet CLLocationButton: a secure interface element that provides an easy, low-friction way to grant your app location access only when and where it is needed. Learn how you can add CLLocationButton to new or existing code, how to customize it within interface legibility guidelines, how to recognize and address customization failures, and how it interacts with iOS’s traditional prompt-based Location Services authorization."}],"url":"\/documentation\/wwdcnotes\/wwdc21-10102-meet-the-location-button","title":"Meet the Location Button","role":"sampleCode","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10102-Meet-the-Location-Button"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10132-Meet-asyncawait-in-Swift":{"abstract":[{"text":"Swift now supports asynchronous functions — a pattern commonly known as async\/await. Discover how the new syntax can make your code easier to read and understand. Learn what happens when a function suspends, and find out how to adapt existing completion handlers to asynchronous functions.","type":"text"}],"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10132-Meet-asyncawait-in-Swift","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10132-meet-asyncawait-in-swift","title":"Meet async\/await in Swift"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10257-Meet-ClassKit-for-filebased-apps":{"title":"Meet ClassKit for file-based apps","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10257-meet-classkit-for-filebased-apps","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10257-Meet-ClassKit-for-filebased-apps","kind":"article","abstract":[{"type":"text","text":"The ClassKit framework can help surface educational activities within your app to teachers using the Schoolwork app. Discover how you can provide teachers with greater insights into student learning by adopting the latest file-based API to report student progress data within your app. We’ll also show you how to use ClassKit to report out different data types, and how to test your implementation in developer mode."}],"type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10171-Meet-inapp-events-on-the-App-Store":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10171-Meet-inapp-events-on-the-App-Store","kind":"article","title":"Meet in-app events on the App Store","url":"\/documentation\/wwdcnotes\/wwdc21-10171-meet-inapp-events-on-the-app-store","type":"topic","abstract":[{"type":"text","text":"Discover how you can promote timely events happening in your apps and games — like a game competition, a movie premiere, and more — directly on the App Store. We’ll show you how in-app events now appear on the App Store and how to create, schedule, and manage them in App Store Connect."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10020-Compose-advanced-models-with-Create-ML-Components":{"url":"\/documentation\/wwdcnotes\/wwdc22-10020-compose-advanced-models-with-create-ml-components","type":"topic","kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10020-Compose-advanced-models-with-Create-ML-Components","abstract":[{"text":"Take your custom machine learning models to the next level with Create ML Components. We’ll show you how to work with temporal data like video or audio and compose models that can count repetitive human actions or provide advanced sound classification. We’ll also share best practices on using incremental fitting to speed up model training with new data.","type":"text"}],"title":"Compose advanced models with Create ML Components"},"https://zntfdr.dev":{"type":"link","identifier":"https:\/\/zntfdr.dev","url":"https:\/\/zntfdr.dev","title":"Blog","titleInlineContent":[{"type":"text","text":"Blog"}]},"https://www.donnywals.com":{"type":"link","identifier":"https:\/\/www.donnywals.com","url":"https:\/\/www.donnywals.com","title":"Blog","titleInlineContent":[{"text":"Blog","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10134-Explore-structured-concurrency-in-Swift":{"role":"sampleCode","type":"topic","title":"Explore structured concurrency in Swift","kind":"article","abstract":[{"text":"When you have code that needs to run at the same time as other code, it’s important to choose the right tool for the job. We’ll take you through the different kinds of concurrent tasks you can create in Swift, show you how to create groups of tasks, and find out how to cancel tasks in progress. We’ll also provide guidance on when you may want to use unstructured tasks.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10134-explore-structured-concurrency-in-swift","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10134-Explore-structured-concurrency-in-Swift"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"title":"Federico Zanetello (214 notes)","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/zntfdr"}}}