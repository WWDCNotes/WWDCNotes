{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10160-Demystify-SwiftUI-performance"},"sampleCodeDownload":{"action":{"overridingTitle":"Watch Video (21 min)","identifier":"https:\/\/developer.apple.com\/wwdc23\/10160","type":"reference","isActive":true},"kind":"sampleDownload"},"abstract":[{"text":"Learn how you can build a mental model for performance in SwiftUI and write faster, more efficient code. We’ll share some of the common causes behind performance issues and help you triage hangs and hitches in SwiftUI to create more responsive views in your app.","type":"text"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23"]]},"metadata":{"title":"Demystify SwiftUI performance","modules":[{"name":"WWDC Notes"}],"role":"sampleCode","roleHeading":"WWDC23"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc23-10160-demystify-swiftui-performance"]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI makes it easy to build complex, powerful apps, offering a large set of features and complex controls like lists and tables."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"As the app’s complexity grows, performance becomes more important."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Small issues can get amplified, and code that works well for a prototype might not work as well in production."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Performance problems start with ","type":"text"},{"inlineContent":[{"type":"text","text":"Symptoms"}],"type":"strong"},{"text":" like:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"slow navigation pushs"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"broken animations"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"a spinning wait cursor on macOS","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Post identifying a performance problem, the first step towards addressing it is to "},{"inlineContent":[{"type":"text","text":"Measure"}],"type":"strong"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After measuring and verifing that the symptom exists, work on identifying its cause."}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Identification"}]},{"type":"text","text":" is tricky, requires intuition as bugs arise from incorrect assumption."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"After identifying the root cause, fix the issue through Optimization.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Re-measure and Re-verify any fix to prevent performance problems after optimization.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Post verification, if the problem is resolved, break the loop."}]}]}]},{"type":"heading","text":"Prerequisites","level":2,"anchor":"Prerequisites"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Identity (implicit and explicit)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"View lifetime and View Identity."}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc21\/10022"}],"type":"paragraph"}]}]},{"type":"heading","text":"Dependencies","level":1,"anchor":"Dependencies"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Views form a graph and SwiftUI looks at dependencies when evaluating code.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Each child view is dependent on the view value that gets produced by its ancestor but  there are other forms of dependencies too."}]}]},{"content":[{"inlineContent":[{"text":"Dynamic properties are a common source of dependencies.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Explore dependencies:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"type":"codeVoice","code":"Self._printChanges"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Used as the LLDB command "},{"code":"expression Self._printChanges","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"printChanges, is for debugging only, has a runtime impact","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"to check if a view might have extra dependencies","type":"text"}],"type":"paragraph"}]}]}]}]},{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"text":"Example code continuing from Demystify SwiftUI WWDC21 for scalable Dog image + printChanges","type":"text"}]}]},{"type":"codeListing","code":["struct ScalableDogImage: View {","  @State private var scaleToFill = false","  var dog: Dog","","  var body: some View {","","    \/\/ It is never guaranteed to always exist and may even be removed in a future release,","    \/\/ so never submit a call to this method to the app store.","    let _ = Self._printChanges()","","    dog.image","      .resizable()","      .aspectRatio(contentMode: scaleToFill ? .fill : .fit)","      .frame(maxHeight: scaleToFill ? 500 : nil)","      .padding(.vertical, 16)","      .onTapGesture {","        withAnimation { scaleToFill.toggle() }","      }","  }","}"],"syntax":"swift"},{"type":"heading","text":"View update tips","level":3,"anchor":"View-update-tips"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Eliminate unnecessary dependencies","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Extract views if needed"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Explore using Observable."}],"type":"paragraph"}]}]},{"type":"heading","text":"Faster view updates","level":1,"anchor":"Faster-view-updates"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Symptoms of slow SwiftUI updates: reduced responsiveness, such as hangs and hitches."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Hangs","type":"text"}]},{"text":":","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Delays in responding to interaction, like a view taking a long time to initially appear.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/wwdc23\/10248","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Hitches","type":"text"}],"type":"strong"},{"text":":","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"User-perceivable animation issue like a pause during scrolling or skipped frames of an animation.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The root causes of hangs and hitches, especially in SwiftUI, are often related.","type":"text"}]}]}]}]}]},{"type":"heading","text":"Common sources of slow updates","level":2,"anchor":"Common-sources-of-slow-updates"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Dynamic Property instantiation, such as allocating and initializing a state object or initializing state."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Expensive view body: a dynamic property could be computed from a view’s body, making the view expensive to evaluate.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Make sure to check for expensive string interpolation or operations like data filtering and other work inside of body.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Slow identification.","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["","\/\/ accessing model.dogs in the body lazily instantiates the object,","\/\/ which brings us to the initializer, which fetches the list of dogs.","\/\/ As the code comment says, this could take a long time. This is synchronous work.","struct DogRootView: View {","  @State private var model = FetchModel()","    ","  var body: some View {","      DogList(model.dogs)","  }","}","","@Observable class FetchModel {","  var dogs: [Dog]","    ","  init() {","      fetchDogs()","  }","}","    ","  func fetchDogs() {","    \/\/ Takes a long time","  }","}","","\/\/ Updated and fixed using task modifier, asynchronous fetch and awaiting.","struct DogRootView: View {","  @State private var model = FetchModel()","    ","  var body: some View {","    DogList(model.dogs)","      .task { await model.fetchDogs() }","  }","}","","@Observable class FetchModel {","  var dogs: [Dog]","    ","  init() {}","    ","  func fetchDogs() async {","    \/\/ Takes a long time","  }","}"],"syntax":"swift"},{"type":"heading","text":"Other hidden sources of work","level":2,"anchor":"Other-hidden-sources-of-work"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"String Interpolation: make sure to cache any strings you might need to frequently use.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Bundle lookup"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Heap allocation","type":"text"}]}]}]},{"type":"heading","text":"Identity in List and Table","level":1,"anchor":"Identity-in-List-and-Table"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"support rich features beyond a simple layout, adding selection, swipe actions, reordering support, and more."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"These are complex, advanced controls, and understanding identity is critical to ensuring they perform well in your app.","type":"text"}]}]}]},{"type":"heading","text":"Built in improvements","level":2,"anchor":"Built-in-improvements"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Faster filtering"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Reduced time to show large lists"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Smoother scrolling"}]}]}]},{"type":"heading","text":"Lists and Tables","level":2,"anchor":"Lists-and-Tables"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Construction affects performance."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"use identifiers to know what changes occurred to the data.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Gather IDs eagerly to ensure consistency."}]}]}]},{"type":"heading","text":"Why identity matters","level":2,"anchor":"Why-identity-matters"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Animations","type":"text"}],"type":"strong"},{"text":": incremental updates to the same view vs a new view","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Performance","type":"text"}],"type":"strong"},{"text":": identifiers are gathered often","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","text":"Row identity with Lists and Foreach","level":2,"anchor":"Row-identity-with-Lists-and-Foreach"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"public struct ForEach<Data, ID, Content>"},{"text":" is the signature for ForEach from SwiftUI.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"ForEach maps a collection of data onto a resulting sequence of views, producing explicit identity for each of its views."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lists, it needs to figure out how many rows to display and the identifier for that row."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"List, visits the data collection up front, determining each element’s ID."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The content closure is called to produce each view."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Rows are created on-demand.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"List uses a composite of the identity and the content to produce a list row.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"The rows created on-demand correlate to the visible region, plus some system-determined buffer for prefetching or accessibility.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"As the view is scrolled, more views become extant."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Avoid inline filtering.","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["","\/\/ Constant views per element - ✅","List {","  ForEach(dogs) { dog in","    DogCell(dog)","  }","}","","\/\/ Variable views per element - ⚠️","List {","  ForEach(dogs) { dog in","    if dog.fetchToy == .ball {","      DogCell(dog)","    }","  }","}","","\/\/ Unknown views per element - ⚠️","List {","  ForEach(dogs) { dog in","    AnyView(...)","  }","}","","\/\/ Avoid inline filtering - ⚠️","List {","  ForEach(dogs.filter(...)) { dog in","    DogCell(dog)","  }","}","","\/\/ Cached filter and constant views per element - ✅","List {","  ForEach(tennisBallDogs) { dog in","    DogCell(dog)","  }","}"],"syntax":"swift"},{"type":"heading","text":"Tips for ensuring constant counts","level":2,"anchor":"Tips-for-ensuring-constant-counts"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Avoid using ","type":"text"},{"code":"AnyView","type":"codeVoice"},{"text":" in ","type":"text"},{"code":"ForEach","type":"codeVoice"},{"text":" and lopsided conditions.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Use an explicit stack where appropriate","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Try to flatten nested ForEach constructions","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","text":"Table identification","level":2,"anchor":"Table-identification"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"TableRow always resolves to a single row."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Total row count is of "},{"type":"codeVoice","code":"TableRow"},{"type":"text","text":" instead of views."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"SwiftUI provides a streamlined initializer that allows us to write ","type":"text"},{"code":"ForEach","type":"codeVoice"},{"text":" in data collections and creates the table rows on our behalf.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"While this initializer is new, it back deploys to all previous operating system versions where Table is available."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"It’s a simpler construction that enforces a constant number of rows for the ForEach content, which helps with identification performance."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Explicit Identity in ForEach with Tables:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"each row gets identified by its value to improve performance."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"For back deployment, get the old behavior by either mapping over your collection or by explicitly specifying an ID key path.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"type":"heading","text":"Row counts","level":3,"anchor":"Row-counts"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Row count in Lists: "},{"code":"Row count = element count x views per element (ensure constant)","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Row count in Tables: "},{"code":"Row count = element count x TableRows per element (ensure constant)","type":"codeVoice"}],"type":"paragraph"}]}]},{"type":"heading","text":"Faster lists and tables","level":2,"anchor":"Faster-lists-and-tables"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Ensure identifiers are inexpensive"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Consider the number of rows in ForEach content","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","text":"Written By","level":2,"anchor":"Written-By"},{"type":"row","numberOfColumns":5,"columns":[{"size":1,"content":[{"inlineContent":[{"identifier":"RamitSharma991","type":"image"}],"type":"paragraph"}]},{"size":4,"content":[{"anchor":"Ramit-Sharma","type":"heading","level":3,"text":"Ramit Sharma"},{"type":"paragraph","inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/RamitSharma991","overridingTitle":"Contributed Notes","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/RamitSharma991","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/x.com\/iosDev_ramit","type":"reference"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}]},{"type":"heading","text":"Related Sessions","level":2,"anchor":"Related-Sessions"},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10149-Discover-Observation-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10156-Explore-SwiftUI-animation","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10248-Analyze-hangs-with-Instruments","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10022-Demystify-SwiftUI"]},{"type":"small","inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}],"kind":"content"}],"references":{"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"WWDC23.jpeg":{"alt":null,"identifier":"WWDC23.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23.jpeg"}],"type":"image"},"https://developer.apple.com/wwdc23/10160":{"identifier":"https:\/\/developer.apple.com\/wwdc23\/10160","type":"download","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc23\/10160"},"WWDCNotes.png":{"alt":null,"identifier":"WWDCNotes.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}],"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10022-Demystify-SwiftUI":{"kind":"article","type":"topic","role":"sampleCode","title":"Demystify SwiftUI","abstract":[{"text":"Peek behind the curtain into the core tenets of SwiftUI philosophy: Identity, Lifetime, and Dependencies. Find out about common patterns, learn the principles that drive the framework, and discover how you can use them to guarantee correctness and performance for your app.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10022-Demystify-SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc21-10022-demystify-swiftui"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10156-Explore-SwiftUI-animation":{"title":"Explore SwiftUI animation","type":"topic","role":"sampleCode","kind":"article","abstract":[{"type":"text","text":"Explore SwiftUI’s powerful animation capabilities and find out how these features work together to produce impressive visual effects. Learn how SwiftUI refreshes the rendering of a view, determines what to animate, interpolates values over time, and propagates context for the current transaction."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10156-Explore-SwiftUI-animation","url":"\/documentation\/wwdcnotes\/wwdc23-10156-explore-swiftui-animation"},"https://":{"titleInlineContent":[{"type":"text","text":"Blog"}],"identifier":"https:\/\/","type":"link","title":"Blog","url":"https:\/\/"},"https://developer.apple.com/wwdc21/10022":{"titleInlineContent":[{"type":"text","text":"Demystify SwiftUI WWDC21"}],"identifier":"https:\/\/developer.apple.com\/wwdc21\/10022","type":"link","title":"Demystify SwiftUI WWDC21","url":"https:\/\/developer.apple.com\/wwdc21\/10022"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10248-Analyze-hangs-with-Instruments":{"url":"\/documentation\/wwdcnotes\/wwdc23-10248-analyze-hangs-with-instruments","title":"Analyze hangs with Instruments","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10248-Analyze-hangs-with-Instruments","kind":"article","abstract":[{"text":"User interface elements often mimic real-world interactions, including real-time responses. Apps with a noticeable delay in user interaction — a hang — can break that illusion and create frustration. We’ll show you how to use Instruments to analyze, understand, and fix hangs in your apps on all Apple platforms. Discover how you can efficiently navigate an Instruments trace document, interpret trace data, and record additional profiling data to better understand your specific hang.","type":"text"}],"role":"sampleCode","type":"topic"},"https://x.com/iosDev_ramit":{"titleInlineContent":[{"type":"text","text":"X\/Twitter"}],"identifier":"https:\/\/x.com\/iosDev_ramit","type":"link","title":"X\/Twitter","url":"https:\/\/x.com\/iosDev_ramit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23":{"images":[{"identifier":"WWDC23-Icon.png","type":"icon"},{"identifier":"WWDC23.jpeg","type":"card"}],"title":"WWDC23","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23","abstract":[{"text":"Xcode 15, Swift 5.9, iOS 17, macOS 14 (Sonoma), tvOS 17, visionOS 1, watchOS 10.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"SwiftData","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Observation","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit","type":"codeVoice"},{"text":" views, and more.","type":"text"}],"role":"collectionGroup","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10149-Discover-Observation-in-SwiftUI":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10149-discover-observation-in-swiftui","type":"topic","abstract":[{"type":"text","text":"Simplify your SwiftUI data models with Observation. We’ll share how the Observable macro can help you simplify models and improve your app’s performance. Get to know Observation, learn the fundamentals of the macro, and find out how to migrate from ObservableObject to Observable."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10149-Discover-Observation-in-SwiftUI","title":"Discover Observation in SwiftUI","kind":"article"},"WWDC23-Icon.png":{"alt":null,"identifier":"WWDC23-Icon.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-Icon.png"}],"type":"image"},"RamitSharma991.jpeg":{"alt":null,"identifier":"RamitSharma991.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/RamitSharma991.jpeg"}],"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","role":"collection","title":"WWDC Notes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","url":"\/documentation\/wwdcnotes"},"https://developer.apple.com/wwdc23/10248":{"titleInlineContent":[{"type":"text","text":"Use Instruments to identify hangs"}],"identifier":"https:\/\/developer.apple.com\/wwdc23\/10248","type":"link","title":"Use Instruments to identify hangs","url":"https:\/\/developer.apple.com\/wwdc23\/10248"},"RamitSharma991":{"alt":"Profile image of Ramit Sharma","identifier":"RamitSharma991","variants":[{"traits":["1x","light"],"url":"\/images\/RamitSharma991.jpeg"}],"type":"image"},"https://github.com/RamitSharma991":{"titleInlineContent":[{"type":"text","text":"GitHub"}],"identifier":"https:\/\/github.com\/RamitSharma991","type":"link","title":"GitHub","url":"https:\/\/github.com\/RamitSharma991"},"doc://WWDCNotes/documentation/WWDCNotes/RamitSharma991":{"kind":"article","role":"sampleCode","title":"Ramit Sharma (15 notes)","images":[{"type":"card","identifier":"RamitSharma991.jpeg"},{"type":"icon","identifier":"RamitSharma991.jpeg"}],"abstract":[{"type":"text","text":"Indie iOS Dev. Swift, SwiftUI, Obj-C, UX and related."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/RamitSharma991","url":"\/documentation\/wwdcnotes\/ramitsharma991"}}}