{"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Enhance your iPad or iPhone app from a great app to one that feels at home on this new platform of Shared Space. Following are the key areas to focus."}]},{"text":"Interaction","type":"heading","level":1,"anchor":"Interaction"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Interaction on this platform is fun and feels familiar."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"One of the key components is the new natural input technique."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Tap allows people to look at a button, then tap their fingers together to interact."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"People can tap to toggle, tap, hold and swipe to interact with a slider, or tap a button."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Direct touch requires reaching out to the app and touching the button in the space with one finger."}]}]},{"content":[{"inlineContent":[{"text":"Regardless of interaction method, the button provides continuous visual feedback to help with interaction accuracy.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Hover effects exist on controls to inform where people are looking.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Controls that are inactive do not get hover effects.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you’re building custom controls, your hover effects may need some tuning."}]}]}]},{"text":"Tappable VStack with hover effect to the entire card available for interaction update and becomes tappable.","type":"heading","level":4,"anchor":"Tappable-VStack-with-hover-effect-to-the-entire-card-available-for-interaction-update-and-becomes-tappable"},{"syntax":"swift","type":"codeListing","code":["struct TappableCard: View {","   \/\/ Sample card","   var imageName = \"BearsInWater\"","   var headline = \"Bear Fishing\"","   var timeAgo = \"42 Minutes ago\"","   ","   var body: some View {","      VStack {","         VStack(alignment: .leading) {","            Image(imageName)","               .resizable()","               .clipped()","               .aspectRatio(contentMode: .fill)","               .frame(width: 300, height: 250, alignment: .center)","            Text(headline)","               .padding([.leading])","               .font(.title2)","               .foregroundColor(.black)","         }","         Divider()","         HStack {","            HStack {","               Text(timeAgo)","                  .frame(alignment: .leading)","                  .foregroundColor(.black)","            }","            .padding([.leading])","            Spacer()","            VStack(alignment: .trailing) {","               Button { print(\"Present menu options\") } label: {","                  Image(systemName: \"ellipsis\")","                     .foregroundColor(.black)","               }","            }","         }","         .padding(EdgeInsets(top: 5, leading: 5, bottom: 5, trailing: 5))","      }","      .frame(width: 300, height: 350, alignment: .top)","      .hoverEffect()","      .background(.white)","      .overlay(","         RoundedRectangle(cornerRadius: 10)","            .stroke(Color(.sRGB, red: 150\/255, green: 150\/255, blue: 150\/255, opacity: 0.1), lineWidth: 3.0)","      )","      .cornerRadius(10)","      .onTapGesture {","         print(\"Present card detail\")","      }","   }","}"]},{"text":"Custom player with the tap targets that are larger than hover effect bounds","type":"heading","level":4,"anchor":"Custom-player-with-the-tap-targets-that-are-larger-than-hover-effect-bounds"},{"syntax":"swift","type":"codeListing","code":["struct ContentView: View {","   var body: some View {","      VStack {","         \/\/ Video player","         HStack {","            Button { print(\"Going back 10 seconds\") } label: {","               Image(systemName: \"gobackward.10\")","                  .padding(.trailing)","                  .contentShape(.hoverEffect, CustomizedRectShape(customRect: CGRect(x: -75, y: -40, width: 100, height: 100)))","                  .foregroundStyle(.white)","                  .frame(width: 500, height: 834, alignment: .trailing)","            }","            Button { print(\"Play\") } label: {","               Image(systemName: \"play.fill\")","                  .font(.title)","                  .foregroundStyle(.white)","                  .frame(width: 100, height: 100, alignment: .center)","            }","            .padding()","            Button { print(\"Going into the future 10 seconds\") } label: {","               Image(systemName: \"goforward.10\")","                  .padding(.leading)","                  .contentShape(.hoverEffect, CustomizedRectShape(customRect: CGRect(x: 0, y: -40, width: 100, height: 100)))","                  .foregroundStyle(.white)","                  .frame(width: 500, height: 834, alignment: .leading)","            }","         }","         .frame(","              minWidth: 0,","              maxWidth: .infinity,","              minHeight: 0,","              maxHeight: .infinity,","              alignment: .center","         )","      }","      .frame(","           minWidth: 0,","           maxWidth: .infinity,","           minHeight: 0,","           maxHeight: .infinity,","           alignment: .topLeading","      )","      .background(.black)","   }","}","","struct CustomizedRectShape: Shape {","   var customRect: CGRect","   ","   func path(in rect: CGRect) -> Path {","      var path = Path()","      ","      path.move(to: CGPoint(x: customRect.minX, y: customRect.minY))","      path.addLine(to: CGPoint(x: customRect.maxX, y: customRect.minY))","      path.addLine(to: CGPoint(x: customRect.maxX, y: customRect.maxY))","      path.addLine(to: CGPoint(x: customRect.minX, y: customRect.maxY))","      path.addLine(to: CGPoint(x: customRect.minX, y: customRect.minY))","      ","      return path","   }","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Hover effects on system controls work great; however, the ability to customize hover effects is powerful.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"With the new hover effect API, apps can create hover effects for custom buttons, custom shapes, or even opt out of a control if necessary."}],"type":"paragraph"}]}]},{"text":"Button with custom buttonStyle, then adding a lower effect to the button.","type":"heading","level":4,"anchor":"Button-with-custom-buttonStyle-then-adding-a-lower-effect-to-the-button"},{"syntax":"swift","type":"codeListing","code":["struct ContentView: View {","    var body: some View {","        VStack {","         Button(\"Howdy y'all\") { print(\"🤠\") }","            .buttonStyle(SixColorButton())","        }","        .padding()","    }","}","","struct SixColorButton: ButtonStyle {","   func makeBody(configuration: Configuration) -> some View {","      configuration.label","         .padding()","         .font(.title)","         .foregroundStyle(.white)","         .bold()","         .background {","            \/\/ Background color bands","            ZStack {","               Color.black","               HStack(spacing: 0) {","                  \/\/ GREEN","                  Rectangle()","                     .foregroundStyle(Color(red: 125\/255, green: 186\/255, blue: 66\/255))","                     .frame(width: 16)","                  \/\/ YELLOW","                  Rectangle()","                     .foregroundStyle(Color(red: 240\/255, green: 187\/255, blue: 64\/255))","                     .frame(width: 16)","                  \/\/ ORANGE","                  Rectangle()","                     .foregroundStyle(Color(red: 225\/255, green: 137\/255, blue: 50\/255))","                     .frame(width: 16)","                  \/\/ RED","                  Rectangle()","                     .foregroundStyle(Color(red: 200\/255, green: 73\/255, blue: 65\/255))","                     .frame(width: 16)","                  \/\/ PURPLE","                  Rectangle()","                     .foregroundStyle(Color(red: 134\/255, green: 64\/255, blue: 151\/255))","                     .frame(width: 16)","                  \/\/ BLUE","                  Rectangle()","                     .foregroundStyle(Color(red: 75\/255, green: 154\/255, blue: 218\/255))","                     .frame(width: 16, height: 500)","               }","               .opacity(0.7)","               .rotationEffect(.degrees(35))","            }","         }","         .cornerRadius(10)","         .hoverEffect()","   }","}"]},{"text":"Honey comb app with custom shape buttons, then adding hover effects that clip to bounds of the honey comb shape.","type":"heading","level":4,"anchor":"Honey-comb-app-with-custom-shape-buttons-then-adding-hover-effects-that-clip-to-bounds-of-the-honey-comb-shape"},{"syntax":"swift","type":"codeListing","code":["struct ContentView: View {","    var body: some View {","      VStack {","         Button { print(\"🐝\") } label: {","            \/\/ Button label","            HoneyComb()","               .fill(.yellow)","               .frame(width: 300, height: 300)","               .contentShape(.hoverEffect, HoneyComb())","            }","         }","         .frame(width: 400, height: 400, alignment: .center)","         .background(.black)","         .padding()","      }","    }","}","","struct HoneyComb: Shape {","   func path(in rect: CGRect) -> Path {","      var path = Path()","      path.move(to: CGPoint(x: rect.minX + (rect.width * 0.25), y: rect.minY))","      path.addLine(to: CGPoint(x: rect.maxX - (rect.maxX * 0.25), y: rect.minY))","      path.addLine(to: CGPoint(x: rect.maxX, y: rect.midY))","      path.addLine(to: CGPoint(x: rect.maxX - (rect.maxX * 0.25), y: rect.maxY))","      path.addLine(to: CGPoint(x: rect.minX + (rect.width * 0.25), y: rect.maxY))","      path.addLine(to: CGPoint(x: rect.minX, y: rect.midY))","      path.addLine(to: CGPoint(x: rect.minX + (rect.width * 0.25), y: rect.minY))","      return path","   }","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"System controls that are disabled due to app state automatically do not get hover effects."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"If apps want to de-emphasize specific interface elements, they can opt out individual items, they can opt out individual items."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Overriding hover effect "},{"type":"codeVoice","code":".hoverEffectDisabled(Bool)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The system accepts a maximum of two simultaneous inputs since each hand is a distinct touch."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Custom gesture recognizers are also supported, but you may need to update them to run smoothly with the natural input expectations."}],"type":"paragraph"}]}]},{"text":"Game Controllers Support","type":"heading","level":2,"anchor":"Game-Controllers-Support"},{"text":"App Store indicator","type":"heading","level":3,"anchor":"App-Store-indicator"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"GCSupportControllerUserInteraction"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Game controller capability"}],"type":"paragraph"}]}]},{"text":"Visuals","type":"heading","level":1,"anchor":"Visuals"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"The system optimizes rendering, using dynamic content scaling so all images and text are always sharp at any angle, from any distance.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"To provide the best experience, use vector-based content."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Prompts do not present modally.","type":"text"}]}]}]},{"text":"Media","type":"heading","level":1,"anchor":"Media"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"To ensure apps have an excellent capture experience, use ","type":"text"},{"code":"AVCaptureDevice","type":"codeVoice"},{"text":" discovery session to confirm hardware availability.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Requesting permission before use is required.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Generalize your authorization prompt string to inform people of use, without mentioning specific hardware or software versions.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If no spatial persona is found on a device, then no camera frames will return to apps."}]},{"type":"heading","text":"Media Playback","level":2,"anchor":"Media-Playback"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"AVRoutePickerView","type":"codeVoice"},{"text":" and Picture in Picture are unavailable on this platform.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Apps that implement custom players need to check both availabilities before showing these controls.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Apps that utilize background audio will no longer get the background mode when the device is locked and will be fully suspended as this platform locks once removed."}]}]}]},{"type":"heading","text":"Alternative media sources","level":2,"anchor":"Alternative-media-sources"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Cloud-based media","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Picker (document, photo)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"VNDocumentCameraViewController"}],"type":"paragraph"}]}]}]}]},{"text":"Written By","type":"heading","level":2,"anchor":"Written-By"},{"type":"row","numberOfColumns":5,"columns":[{"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"RamitSharma991"}]}],"size":1},{"content":[{"type":"heading","text":"Ramit Sharma","level":3,"anchor":"Ramit-Sharma"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/RamitSharma991","type":"reference","isActive":true,"overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}]},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/RamitSharma991","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/x.com\/iosDev_ramit","type":"reference","isActive":true}]}],"size":4}]},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}]},{"text":"Related Sessions","type":"heading","level":2,"anchor":"Related-Sessions"},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10012-Explore-App-Store-Connect-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10090-Run-your-iPad-and-iPhone-apps-in-the-Shared-Space","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10096-Build-great-games-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10614-Advancements-in-Game-Controllers"]},{"type":"small","inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2025 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}]}],"kind":"article","abstract":[{"text":"Get ready to enhance your iPad and iPhone apps for the Shared Space! We’ll show you how to optimize your experience to make it feel great on visionOS and explore Designed for iPad app interaction, visual treatments, and media.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc23-10094-enhance-your-ipad-and-iphone-apps-for-the-shared-space"]}],"sections":[],"metadata":{"modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC23","role":"sampleCode","title":"Enhance your iPad and iPhone apps for the Shared Space"},"sampleCodeDownload":{"kind":"sampleDownload","action":{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc23\/10094","overridingTitle":"Watch Video (12 min)"}},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10094-Enhance-your-iPad-and-iPhone-apps-for-the-Shared-Space","interfaceLanguage":"swift"},"references":{"https://github.com/RamitSharma991":{"title":"GitHub","type":"link","identifier":"https:\/\/github.com\/RamitSharma991","titleInlineContent":[{"text":"GitHub","type":"text"}],"url":"https:\/\/github.com\/RamitSharma991"},"WWDC23.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC23.jpeg"}],"identifier":"WWDC23.jpeg","type":"image","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23":{"kind":"article","type":"topic","title":"WWDC23","abstract":[{"type":"text","text":"Xcode 15, Swift 5.9, iOS 17, macOS 14 (Sonoma), tvOS 17, visionOS 1, watchOS 10."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"SwiftData"},{"type":"text","text":", "},{"type":"codeVoice","code":"Observation"},{"text":", ","type":"text"},{"code":"StoreKit","type":"codeVoice"},{"text":" views, and more.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc23","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23","images":[{"identifier":"WWDC23-Icon.png","type":"icon"},{"identifier":"WWDC23.jpeg","type":"card"}],"role":"collectionGroup"},"RamitSharma991":{"type":"image","identifier":"RamitSharma991","variants":[{"url":"\/images\/WWDCNotes\/RamitSharma991.jpeg","traits":["1x","light"]}],"alt":"Profile image of Ramit Sharma"},"https://developer.apple.com/wwdc23/10094":{"checksum":null,"url":"https:\/\/developer.apple.com\/wwdc23\/10094","type":"download","identifier":"https:\/\/developer.apple.com\/wwdc23\/10094"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10614-Advancements-in-Game-Controllers":{"abstract":[{"text":"Let’s rumble! Discover how you can bring third-party game controllers and custom haptics into your games on iPhone, iPad, Mac, and Apple TV. We’ll show you how to add support for the latest controllers — including Xbox’s Elite Wireless Controller Series 2 and Adaptive Controller — and map your game’s controls accordingly. Learn how you can use the Game Controller framework in tandem with Core Haptics to enable rumble feedback. And find out how you can take your gaming experience to the next level with custom button mapping, nonstandard inputs, and control over specialty features like motion sensors, lights, and battery level.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc20-10614-advancements-in-game-controllers","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10614-Advancements-in-Game-Controllers","kind":"article","role":"sampleCode","title":"Advancements in Game Controllers","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10096-Build-great-games-for-spatial-computing":{"url":"\/documentation\/wwdcnotes\/wwdc23-10096-build-great-games-for-spatial-computing","abstract":[{"type":"text","text":"Find out how you can develop great gaming experiences for visionOS. We’ll share some of the key building blocks that help you create games for this platform, explore how your experiences can fluidly move between levels of immersion, and provide a roadmap for exploring ARKit, RealityKit, Reality Composer Pro, Unity, Metal, and Compositor."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10096-Build-great-games-for-spatial-computing","kind":"article","role":"sampleCode","type":"topic","title":"Build great games for spatial computing"},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"title":"WWDC Notes","role":"collection","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"url":"\/documentation\/wwdcnotes"},"doc://WWDCNotes/documentation/WWDCNotes/RamitSharma991":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/RamitSharma991","url":"\/documentation\/wwdcnotes\/ramitsharma991","type":"topic","title":"Ramit Sharma (15 notes)","images":[{"identifier":"RamitSharma991.jpeg","type":"card"},{"identifier":"RamitSharma991.jpeg","type":"icon"}],"role":"sampleCode","abstract":[{"text":"Indie iOS Dev. Swift, SwiftUI, Obj-C, UX and related.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10012-Explore-App-Store-Connect-for-spatial-computing":{"type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10012-Explore-App-Store-Connect-for-spatial-computing","abstract":[{"text":"App Store Connect provides the tools you need to test, submit, and manage your visionOS apps on the App Store. Explore basics and best practices for deploying your first spatial computing app, adding support for visionOS to an existing app, and managing compatibility. We’ll also show you how TestFlight for visionOS can help you test your apps and collect valuable feedback as you iterate.","type":"text"}],"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-10012-explore-app-store-connect-for-spatial-computing","title":"Explore App Store Connect for spatial computing"},"WWDCNotes.png":{"type":"image","identifier":"WWDCNotes.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDCNotes.png"}],"alt":null},"RamitSharma991.jpeg":{"type":"image","identifier":"RamitSharma991.jpeg","variants":[{"url":"\/images\/WWDCNotes\/RamitSharma991.jpeg","traits":["1x","light"]}],"alt":null},"https://":{"url":"https:\/\/","title":"Blog","identifier":"https:\/\/","type":"link","titleInlineContent":[{"type":"text","text":"Blog"}]},"https://x.com/iosDev_ramit":{"title":"X\/Twitter","type":"link","identifier":"https:\/\/x.com\/iosDev_ramit","titleInlineContent":[{"type":"text","text":"X\/Twitter"}],"url":"https:\/\/x.com\/iosDev_ramit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10090-Run-your-iPad-and-iPhone-apps-in-the-Shared-Space":{"url":"\/documentation\/wwdcnotes\/wwdc23-10090-run-your-ipad-and-iphone-apps-in-the-shared-space","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10090-Run-your-iPad-and-iPhone-apps-in-the-Shared-Space","abstract":[{"text":"Discover how you can run your existing iPad and iPhone apps on Vision Pro. Learn how iPadOS and iOS apps operate on this platform, find out about the Designed for iPad experience, and explore the paths available for enhancing your app experience on visionOS.","type":"text"}],"type":"topic","title":"Run your iPad and iPhone apps in the Shared Space","kind":"article"},"WWDC23-Icon.png":{"type":"image","identifier":"WWDC23-Icon.png","variants":[{"url":"\/images\/WWDCNotes\/WWDC23-Icon.png","traits":["1x","light"]}],"alt":null}}}