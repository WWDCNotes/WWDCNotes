{"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"üò± ‚ÄúNo Overview Available!‚Äù"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Be the hero to change that by watching the video and providing notes! It‚Äôs super easy:"},{"type":"text","text":" "},{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}],"type":"paragraph"},{"level":2,"anchor":"Related-Sessions","text":"Related Sessions","type":"heading"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10046-Improve-access-to-Photos-in-your-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10047-Whats-new-in-camera-capture","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10159-Explore-Core-Image-kernel-improvements","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10008-Optimize-the-Core-Image-pipeline-for-your-video-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10021-Build-Metalbased-Core-Image-kernels-with-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10089-Discover-Core-Image-debugging-techniques","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10641-Handle-the-Limited-Photos-Library-in-your-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10652-Meet-the-new-Photos-picker"],"style":"list","type":"links"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}]}],"sections":[],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10160-Capture-and-process-ProRAW-images","interfaceLanguage":"swift"},"sampleCodeDownload":{"kind":"sampleDownload","action":{"overridingTitle":"Watch Video (26 min)","identifier":"https:\/\/developer.apple.com\/wwdc21\/10160","type":"reference","isActive":true}},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc21-10160-capture-and-process-proraw-images"]}],"metadata":{"modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC21","role":"sampleCode","title":"Capture and process ProRAW images"},"abstract":[{"text":"When you support ProRAW in your app, you can help photographers easily capture and edit images by combining standard RAW information with Apple‚Äôs advanced computational photography techniques. We‚Äôll take you through an overview of the format, including the look and feel of ProRAW images, quality metrics, and compatibility with your app. From there, we‚Äôll explore how you can incorporate ProRAW into your app at every stage of the production pipeline, including capturing imagery with AVFoundation, storage using PhotoKit, and editing with Core Image.","type":"text"}],"kind":"article","references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10159-Explore-Core-Image-kernel-improvements":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10159-explore-core-image-kernel-improvements","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10159-Explore-Core-Image-kernel-improvements","kind":"article","abstract":[{"text":"Discover how you can add Core Image kernels written in the Metal Shading Language into your app. We‚Äôll explore how you can use Xcode rules and naming conventions for Core Image kernels written in the Metal Shading Language, and help you make sense of Metal‚Äôs Stitchable functions and dynamic library features to benefit Core Image kernels.","type":"text"}],"title":"Explore Core Image kernel improvements","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10089-Discover-Core-Image-debugging-techniques":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10089-discover-core-image-debugging-techniques","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10089-Discover-Core-Image-debugging-techniques","kind":"article","abstract":[{"text":"Find and fix rendering and optimization issues in your Core Image pipeline with Xcode environment variable. Discover how you can set the environment variable for visualizing your Core Image graphs. You‚Äôll learn how to generate Core Image graphs and how to interpret them to discover memory, color, and performance issues and better improve and optimize your Core Image pipeline.","type":"text"}],"title":"Discover Core Image debugging techniques","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10047-Whats-new-in-camera-capture":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10047-Whats-new-in-camera-capture","url":"\/documentation\/wwdcnotes\/wwdc21-10047-whats-new-in-camera-capture","role":"sampleCode","type":"topic","kind":"article","title":"What‚Äôs new in camera capture","abstract":[{"text":"Learn how you can interact with Video Effects in Control Center including Center Stage, Portrait mode, and Mic modes. We‚Äôll show you how to detect when these features have been enabled for your app and explore ways to adopt custom interfaces to make them controllable from within your app. Discover how to enable 10-bit HDR video capture and take advantage of minimum-focus-distance reporting for improved camera capture experiences. Explore support for IOSurface compression and delivering optimal performance in camera capture.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10652-Meet-the-new-Photos-picker":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10652-Meet-the-new-Photos-picker","type":"topic","role":"sampleCode","kind":"article","abstract":[{"type":"text","text":"Let people select photos and videos to use in your app without requiring full Photo Library access. Discover how the PHPicker API for iOS and Mac Catalyst ensures privacy while providing your app the features you need."}],"url":"\/documentation\/wwdcnotes\/wwdc20-10652-meet-the-new-photos-picker","title":"Meet the new Photos picker"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10046-Improve-access-to-Photos-in-your-app":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10046-Improve-access-to-Photos-in-your-app","type":"topic","role":"sampleCode","kind":"article","abstract":[{"type":"text","text":"PHPicker is the simplest and most secure way to integrate the Photos library into your app ‚Äî and it‚Äôs getting even better. Learn how to handle ordered selection of images in your app, as well as pre-selecting assets any time the picker is shown. And for apps that need to integrate more deeply with PhotoKit, discover how you can use PHCloudIdentifier to sync photo project content across devices, helping people easily transition their image work between iPhone, iPad, and Mac."}],"url":"\/documentation\/wwdcnotes\/wwdc21-10046-improve-access-to-photos-in-your-app","title":"Improve access to Photos in your app"},"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","title":"WWDC Notes","url":"\/documentation\/wwdcnotes","kind":"symbol","role":"collection","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"images":[{"identifier":"WWDCNotes.png","type":"icon"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"url":"\/documentation\/wwdcnotes\/wwdc21","kind":"article","role":"collectionGroup","type":"topic","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","title":"WWDC21","abstract":[{"text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"MusicKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DocC","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit 2","type":"codeVoice"},{"type":"text","text":", and more."}]},"https://developer.apple.com/wwdc21/10160":{"url":"https:\/\/developer.apple.com\/wwdc21\/10160","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc21\/10160","type":"download"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10641-Handle-the-Limited-Photos-Library-in-your-app":{"role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10641-handle-the-limited-photos-library-in-your-app","title":"Handle the Limited Photos Library in your app","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10641-Handle-the-Limited-Photos-Library-in-your-app","kind":"article","abstract":[{"text":"Access the photos and videos you need for your app while preserving privacy. With the new Limited Photos Library feature, people can directly control which photos and videos an app can access to protect their private content. We‚Äôll explore how this feature may affect your app, and take you through alternatives like PHPicker.","type":"text"}]},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"text":"Learn More‚Ä¶","type":"text"}],"title":"Learn More‚Ä¶","type":"link","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10021-Build-Metalbased-Core-Image-kernels-with-Xcode":{"abstract":[{"type":"text","text":"Learn how to integrate and load Core Image kernels written in the Metal Shading Language into your application, and discover how you can apply these image filters to create unique effects. Explore how to use Xcode rules and naming conventions for Core Image kernels written in Metal Shading Language. We‚Äôll explain how to best use Core Image APIs effectively and optimally with Metal and the Metal Shading Language."}],"role":"sampleCode","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc20-10021-build-metalbased-core-image-kernels-with-xcode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10021-Build-Metalbased-Core-Image-kernels-with-Xcode","title":"Build Metal-based Core Image kernels with Xcode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10008-Optimize-the-Core-Image-pipeline-for-your-video-app":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10008-optimize-the-core-image-pipeline-for-your-video-app","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10008-Optimize-the-Core-Image-pipeline-for-your-video-app","kind":"article","abstract":[{"text":"Explore how you can harness the processing power of Core Image and optimize video performance within your app. We‚Äôll show you how to build your Core Image pipeline for applying effects to your video in your apps: Discover how to reduce your app‚Äôs memory footprint when using CIContext, and learn best practices for using AVPlayView or MTKView view classes for video playback with Core Image filters. Additionally, find out why you should write your own custom kernels in the Metal Shading Language, and learn performance tips for optimal usage of Metal command queues in your Core Image pipeline.","type":"text"}],"title":"Optimize the Core Image pipeline for your video app","role":"sampleCode"},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"WWDCNotes.png"}}}