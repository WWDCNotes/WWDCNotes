{"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10137-Whats-new-in-SwiftData","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24"]]},"metadata":{"role":"sampleCode","title":"What‚Äôs new in SwiftData","modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC24"},"abstract":[{"text":"SwiftData makes it easy to add persistence to your app with its expressive, declarative API. Learn about refinements to SwiftData, including compound uniqueness constraints, faster queries with #Index, queries in Xcode previews, and rich predicate expressions. Join us to explore how you can use all of these features to express richer models and improve performance in your app.","type":"text"},{"text":" ","type":"text"},{"text":"To discover how to build a custom data store or use the history API in SwiftData, watch ‚ÄúCreate a custom data store with SwiftData‚Äù and ‚ÄúTrack model changes with SwiftData history‚Äù.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"sampleCodeDownload":{"action":{"identifier":"https:\/\/developer.apple.com\/wwdc24\/10137","isActive":true,"overridingTitle":"Watch Video (14 min)","type":"reference"},"kind":"sampleDownload"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Key-takeaways","text":"Key takeaways","type":"heading","level":2},{"inlineContent":[{"text":"üë• Avoid duplicate models with ","type":"text"},{"type":"codeVoice","code":"#Unique"},{"text":" ","type":"text"},{"text":"üöÄ Speed up queries with ","type":"text"},{"type":"codeVoice","code":"#Index"},{"text":" ","type":"text"},{"text":"üìñ Track model changes with history","type":"text"},{"text":" ","type":"text"},{"text":"ü§ì Create your custom data store to SwiftData","type":"text"}],"type":"paragraph"},{"anchor":"Presenters","text":"Presenters","type":"heading","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Rishi Verma, SwiftData Engineer"}]}]}],"type":"unorderedList"},{"anchor":"Adopt-SwiftData","text":"Adopt SwiftData","type":"heading","level":2},{"inlineContent":[{"text":"Adopting SwiftData for your models is as easy as decorating the models with the ","type":"text"},{"type":"codeVoice","code":"@Model"},{"text":" macro and the ","type":"text"},{"type":"codeVoice","code":".modelContainer"},{"text":" to the app:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import SwiftData","import SwiftData","","@main","struct TripsApp: App {","    var body: some Scene {","        WindowGroup {","            ContentView","        }","        .modelContainer(for: Trip.self)","    }","}","","@Model","class Trip {","    var name: String","    var destination: String","    var startDate: Date","    var endDate: Date","    ","    var bucketList: [BucketListItem] = [BucketListItem]()","    var livingAccommodation: LivingAccommodation?","}","","@Model","class BucketListItem {...}","","@Model","class LivingAccommodation {...}"]},{"anchor":"Customize-the-schema","text":"Customize the schema","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Macros for customizing the models:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"code":"@Attributes","type":"codeVoice"},{"text":" to set properties for a model property","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"type":"codeVoice","code":"@Relationships"},{"text":" for relations to other models","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"User "},{"type":"codeVoice","code":"@Transient"},{"type":"text","text":" to avoid persisting a property"}]}]}],"type":"unorderedList"},{"anchor":"Unique-macro","text":"Unique macro","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"Ensure data uniqueness by using the "},{"type":"codeVoice","code":"#Unique"},{"type":"text","text":" macro:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unique property "},{"type":"strong","inlineContent":[{"text":"combination","type":"text"}]},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Prevents duplicated entries.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Support of "},{"type":"strong","inlineContent":[{"type":"text","text":"upsert"}]},{"type":"text","text":" (update\/insert) operations."}],"type":"paragraph"}]}],"type":"unorderedList"},{"style":"note","content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Use the new "},{"code":"#Unique","type":"codeVoice"},{"type":"text","text":" macro to tell SwiftData which combinations of your model‚Äôs properties must always remain unique in the model data."}],"type":"emphasis"}],"type":"paragraph"},{"inlineContent":[{"type":"emphasis","inlineContent":[{"text":"When two model instances share the same unique values, SwiftData will perform an upsert on collision with an existing model.","type":"text"}]}],"type":"paragraph"}],"type":"aside","name":"Note"},{"syntax":"swift","type":"codeListing","code":["\/\/ Add unique constraints to avoid duplication","import SwiftData","","@Model ","class Trip {","    #Unique<Trip>([\\.name, \\.startDate, \\.endDate])","    ","    var name: String","    var destination: String","    var startDate: Date","    var endDate: Date","    ","    var bucketList: [BucketListItem] = [BucketListItem]()","    var livingAccommodation: LivingAccommodation?","}"]},{"inlineContent":[{"type":"text","text":"Add the "},{"type":"codeVoice","code":"@Attribute(.preserveValueOnDeletion)"},{"type":"text","text":" to the properties to ensure these identity values will be available when using the history API in SwiftData."}],"type":"paragraph"},{"anchor":"Reveal-history-with-SwiftData","text":"Reveal history with SwiftData","type":"heading","level":3},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Track inserted, updated, and deleted models","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Opt in to preserve values on deletion with the ","type":"text"},{"code":"#Preserve","type":"codeVoice"},{"text":" macro.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Tombstone values","type":"text"}]},{"text":" for deleted models.","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"text":"Works with custom data stores","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Useful for auditing and processing changes.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Learn more in the session: ‚ÄúTrack model changes with SwiftData history‚Äù"}],"type":"paragraph"},{"anchor":"Tailor-a-container","text":"Tailor a container","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"It is now possible to create custom data stores for SwiftData:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Using custom storage formats (JSON archival, cloud storage, etc.)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Integration with actual SwiftData API‚Ä¶"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"‚Ä¶ but with incremental adoption of SwiftData full feature set.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"You can also customize the Model Container:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In-memory vs on-disk storage options."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Manage data storage & retrieval from the Data Store."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Define custom storage URL for the Store.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Enable\/disable: auto-save, undo\/redo, etc."}]}]}],"type":"unorderedList"},{"syntax":"swift","type":"codeListing","code":["import SwiftUI","import SwiftData","","@main","struct TripsApp: App {","    var container: ModelContainer = {","        do {","            let configuration = JSONStoreConfiguration(schema: Schema([Trip.self]), url: jsonFileURL)","            return try ModelContainer(for: Trip.self, configurations: configuration)","        }","        catch { ... }","    }()","    ","   var body: some Scene {","        WindowGroup {","            ContentView()","        }","        .modelContainer(container)","   }","}"]},{"inlineContent":[{"text":"Learn more in the session: ‚ÄúCreate a custom data store with SwiftData‚Äù","type":"text"}],"type":"paragraph"},{"anchor":"Use-SwiftData-in-previews","text":"Use SwiftData in previews","type":"heading","level":3},{"inlineContent":[{"text":"The new ","type":"text"},{"code":"PreviewModifier","type":"codeVoice"},{"text":" in SwiftUI can be used to set up a container for previews:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["import SwiftUI","import SwiftData","","\/\/ Make preview data using traits","","struct SampleData: PreviewModifier {","    static func makeSharedContext() throws -> ModelContainer {","        let config = ModelConfiguration(isStoredInMemoryOnly: true)","        let container = try ModelContainer(for: Trip.self, configurations: config)","        Trip.makeSampleTrips(in: container)","        return container","    }","    ","    func body(content: Content, context: ModelContainer) -> some View {","        content.modelContainer(context)","    }","}","","extension PreviewTrait where T == Preview.ViewTraits {","    @MainActor static var sampleData: Self = .modifier(SampleData())","}","","\/\/ Use sample data in a preview","","struct ContentView: View {","    @Query","    var trips: [Trip]","","    var body: some View {","        ...","    }","}","","#Preview(traits: .sampleData) {","    ContentView()","}"]},{"inlineContent":[{"type":"text","text":"The "},{"code":"PreviewModifier","type":"codeVoice"},{"type":"text","text":" can also be used for previews of views taking a model as parameter:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Create a preview query using @Previewable","","import SwiftUI","import SwiftData","","#Preview(traits: .sampleData) {","    @Previewable @Query var trips: [Trip]","    BucketListItemView(trip: trips.first)","}"]},{"anchor":"Optimize-queries","text":"Optimize queries","type":"heading","level":2},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"code":"@Predicate","type":"codeVoice"},{"text":" macro to build ","type":"text"},{"inlineContent":[{"text":"custom queries","type":"text"}],"type":"strong"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Filter and sort data ","type":"text"},{"inlineContent":[{"text":"efficiently","type":"text"}],"type":"strong"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Build complex predicates with "},{"inlineContent":[{"type":"text","text":"multi-condition filtering"}],"type":"strong"},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Compound-predicates","text":"Compound predicates","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"In iOS 17.4 Compound predicates was added:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let predicate = #Predicate<Trip> {","    searchText.isEmpty ? true :","    $0.name.localizedStandardContains(searchText) ||","    $0.destination.localizedStandardContains(searchText)","}"]},{"anchor":"Using-the-new-Expression","text":"Using the new #Expression","type":"heading","level":3},{"inlineContent":[{"text":"The ","type":"text"},{"code":"#Expression","type":"codeVoice"},{"text":" macro helps you ","type":"text"},{"type":"strong","inlineContent":[{"text":"Perform Complex Evaluations","type":"text"}]},{"text":" in your Queries:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use it in building sophisticated query conditions."}]}]},{"content":[{"inlineContent":[{"text":"This macro supports arbitrary types.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Example: count specific items in an array for predicates."}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"New in iOS 18, we can use the new ","type":"text"},{"code":"#Expression","type":"codeVoice"},{"text":" from Foundation:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Build a predicate to find Trips with BucketListItems that are not in the plan","","let unplannedItemsExpression = #Expression<[BucketListItem], Int> { items in","    items.filter {","        !$0.isInPlan","    }.count","}","","let today = Date.now","let tripsWithUnplannedItems = #Predicate<Trip>{ trip","    \/\/ The current date falls within the trip","    (trip.startDate ..< trip.endDate).contains(today) &&","","    \/\/ The trip has at least one BucketListItem","    \/\/ where 'isInPlan' is false","    unplannedItemsExpression.evaluate(trip.bucketList) > 0","}"]},{"anchor":"Index-macro","text":"Index macro","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"#Index"},{"type":"text","text":" macro is used to "},{"type":"strong","inlineContent":[{"type":"text","text":"Enhance Query Performance"}]},{"type":"text","text":":"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Add metadata to the model, creating indexes on properties","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Provides faster and more efficient queries"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Speeds up searches and sorting on large datasets","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Specify properties used in queries for speed up common queries","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Use the new ","type":"text"},{"code":"#Index","type":"codeVoice"},{"text":" macro to mark properties as index to query models faster:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Add Index for commonly used KeyPaths or combination of KeyPaths","import SwiftData","","@Model ","class Trip {","    #Unique<Trip>([\\.name, \\.startDate, \\.endDate","    #Index<Trip>([\\.name], [\\.startDate], [\\.endDate], [\\.name, \\.startDate, \\.endDate])","","    var name: String","    var destination: String","    var startDate: Date","    var endDate: Date","    ","    var bucketList: [BucketListItem] = [BucketListItem","    var livingAccommodation: LivingAccommodation","}"]},{"anchor":"Written-By","text":"Written By","type":"heading","level":2},{"columns":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"MortenGregersen","type":"image"}]}],"size":1},{"content":[{"text":"Morten Bjerg Gregersen","anchor":"Morten-Bjerg-Gregersen","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/MortenGregersen","overridingTitle":"Contributed Notes","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/MortenGregersen","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/x.com\/mortengregersen","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"http:\/\/atterdagapps.com","isActive":true,"type":"reference"}]}],"size":4}],"type":"row","numberOfColumns":5},{"columns":[{"size":1,"content":[{"inlineContent":[{"identifier":"n3twr","type":"image"}],"type":"paragraph"}]},{"size":4,"content":[{"anchor":"Juan","type":"heading","level":3,"text":"Juan"},{"inlineContent":[{"isActive":true,"type":"reference","overridingTitle":"Contributed Notes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/n3twr","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}]},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/n3twr"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/"}],"type":"paragraph"}]}],"type":"row","numberOfColumns":5},{"type":"thematicBreak"},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}],"type":"paragraph"},{"anchor":"Related-Sessions","text":"Related Sessions","type":"heading","level":2},{"style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10187-Meet-SwiftData","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10138-Create-a-custom-data-store-with-SwiftData","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10075-Track-model-changes-with-SwiftData-history"],"type":"links"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}],"type":"small"},{"inlineContent":[{"text":"All content copyright ¬© 2012 ‚Äì 2025 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}],"type":"small"}]}],"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc24-10137-whats-new-in-swiftdata"]}],"references":{"MortenGregersen.jpeg":{"variants":[{"url":"\/images\/WWDCNotes\/MortenGregersen.jpeg","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"MortenGregersen.jpeg"},"https://x.com/mortengregersen":{"type":"link","identifier":"https:\/\/x.com\/mortengregersen","url":"https:\/\/x.com\/mortengregersen","title":"X\/Twitter","titleInlineContent":[{"text":"X\/Twitter","type":"text"}]},"n3twr":{"variants":[{"url":"\/images\/WWDCNotes\/n3twr.jpeg","traits":["1x","light"]}],"alt":"Profile image of Juan","identifier":"n3twr","type":"image"},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"WWDCNotes.png"},"http://atterdagapps.com":{"type":"link","identifier":"http:\/\/atterdagapps.com","url":"http:\/\/atterdagapps.com","title":"Blog","titleInlineContent":[{"text":"Blog","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/n3twr":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/n3twr","type":"topic","images":[{"type":"card","identifier":"n3twr.jpeg"},{"type":"icon","identifier":"n3twr.jpeg"}],"title":"Juan (3 notes)","kind":"article","role":"sampleCode","abstract":[{"text":"No Bio on GitHub","type":"text"}],"url":"\/documentation\/wwdcnotes\/n3twr"},"doc://WWDCNotes/documentation/WWDCNotes/MortenGregersen":{"title":"Morten Bjerg Gregersen (21 notes)","kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/MortenGregersen","url":"\/documentation\/wwdcnotes\/mortengregersen","abstract":[{"text":"Hi üëã I am Morten - I live in Denmark üá©üá∞","type":"text"}],"type":"topic","images":[{"identifier":"MortenGregersen.jpeg","type":"card"},{"identifier":"MortenGregersen.jpeg","type":"icon"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10075-Track-model-changes-with-SwiftData-history":{"abstract":[{"type":"text","text":"Reveal the history of your model‚Äôs changes with SwiftData! Use the history API to understand when data store changes occurred, and learn how to use this information to build features like remote server sync and out-of-process change handing in your app. We‚Äôll also cover how you can build support for the history API into a custom data store."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10075-Track-model-changes-with-SwiftData-history","kind":"article","type":"topic","title":"Track model changes with SwiftData history","url":"\/documentation\/wwdcnotes\/wwdc24-10075-track-model-changes-with-swiftdata-history","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24":{"abstract":[{"text":"Xcode 16, Swift 6, iOS 18, macOS 15 (Sequoia), tvOS 18, visionOS 2, watchOS 11.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: Swift Testing, ","type":"text"},{"code":"FinanceKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"TabletopKit","type":"codeVoice"},{"text":", and more.","type":"text"}],"title":"WWDC24","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24","role":"collectionGroup","images":[{"type":"icon","identifier":"WWDC24-Icon.png"},{"type":"card","identifier":"WWDC24.jpeg"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24","kind":"article"},"https://":{"type":"link","identifier":"https:\/\/","url":"https:\/\/","title":"Blog","titleInlineContent":[{"text":"Blog","type":"text"}]},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10187-Meet-SwiftData":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10187-Meet-SwiftData","url":"\/documentation\/wwdcnotes\/wwdc23-10187-meet-swiftdata","title":"Meet SwiftData","type":"topic","role":"sampleCode","abstract":[{"type":"text","text":"SwiftData is a powerful and expressive persistence framework built for Swift. We‚Äôll show you how you can model your data directly from Swift code, use SwiftData to work with your models, and integrate with SwiftUI."}],"kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","title":"WWDC Notes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"url":"\/documentation\/wwdcnotes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","role":"collection","images":[{"identifier":"WWDCNotes.png","type":"icon"}]},"n3twr.jpeg":{"variants":[{"url":"\/images\/WWDCNotes\/n3twr.jpeg","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"n3twr.jpeg"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10138-Create-a-custom-data-store-with-SwiftData":{"abstract":[{"text":"Combine the power of SwiftData‚Äôs expressive, declarative modeling API with your own persistence backend. Learn how to build a custom data store and explore how to progressively add persistence features in your app. To get the most out of this session, watch ‚ÄúMeet SwiftData‚Äù and ‚ÄúModel your schema with SwiftData‚Äù from WWDC23.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10138-Create-a-custom-data-store-with-SwiftData","type":"topic","kind":"article","title":"Create a custom data store with SwiftData","url":"\/documentation\/wwdcnotes\/wwdc24-10138-create-a-custom-data-store-with-swiftdata","role":"sampleCode"},"https://github.com/MortenGregersen":{"titleInlineContent":[{"type":"text","text":"GitHub"}],"title":"GitHub","url":"https:\/\/github.com\/MortenGregersen","type":"link","identifier":"https:\/\/github.com\/MortenGregersen"},"https://github.com/n3twr":{"type":"link","identifier":"https:\/\/github.com\/n3twr","url":"https:\/\/github.com\/n3twr","title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}]},"WWDC24-Icon.png":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC24-Icon.png","traits":["1x","light"]}],"alt":null,"identifier":"WWDC24-Icon.png","type":"image"},"https://developer.apple.com/wwdc24/10137":{"url":"https:\/\/developer.apple.com\/wwdc24\/10137","type":"download","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc24\/10137"},"MortenGregersen":{"type":"image","identifier":"MortenGregersen","alt":"Profile image of Morten Bjerg Gregersen","variants":[{"url":"\/images\/WWDCNotes\/MortenGregersen.jpeg","traits":["1x","light"]}]},"WWDC24.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC24.jpeg"}],"alt":null,"type":"image","identifier":"WWDC24.jpeg"}}}