{"abstract":[{"text":"Discover how you can perform actions on Swift packages and Xcode projects with Swift package plugins. We‚Äôll go over how these plugins work and explore how you can use them to generate source code and automate your development workflow.","type":"text"}],"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"What-is-a-package-plugin","text":"What is a package plugin?"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Swift script that can be run as part of your build"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A package could have plugins as extra, or be all about plugins","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Package plugins are available only within package"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"General plugins can be made available to the outside"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Lets you access development tools on your machine","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":3,"anchor":"Command-plugins","text":"Command plugins:"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"implement custom actions, such as formatters, linters, prepare distribution"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"can ask for permission to modify files in package"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"some might just read to report some data"}],"type":"paragraph"}]}]},{"type":"heading","level":3,"anchor":"Build-tool-plugins","text":"Build tool plugins:"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"extend the dependency graph"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"applied to each target that needs them","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Demo","type":"heading","text":"Demo","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"add plugin like any other package dependency in project, via the ","type":"text"},{"type":"codeVoice","code":"dependencies"},{"text":" in your package manifest file:","type":"text"}]}]}]},{"type":"codeListing","code":["let package = Package (","  name: \"CoreLib\",","  products: [","    .library(name:\"CoreLib\", targets: [\"CoreLib\"])","  ],","  dependencies: [","    \/\/ üëáüèª","    .package (url: \"git@example.com:DemoPackages\/SourceCodeUtilityPlugins.git\", branch: \"main\")","  ],","  targets: [","    .target (name: \"CoreLib\"),","    .testTarget(name: \"CoreLibTests\", dependencies: [\"CoreLib\"])","  ]",")"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"the plugin will be available once downloaded (no need to add it as a dependency on target or similar)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"When running plugins, you choose the target and can pass extra arguments","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Xcode asks permission for plugins that modify your files, has a "},{"type":"text","text":"show code"},{"type":"text","text":" button"}],"type":"paragraph"}]}]},{"anchor":"How-do-plugins-work","type":"heading","text":"How do plugins work?","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"plugins can create files, read dependencies"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"plugins run in a Sandbox"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"plugin can send results back to Xcode, such as warnings and errors"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"use "},{"code":"import PackagePlugin","type":"codeVoice"},{"type":"text","text":" to implement one"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["import PackagePlugin","","@main","struct MyPlugin: ... {","","    \/\/ Entry points specific to plugin capability. These entry points are invoked","    \/\/ when the plugin is applied to a package.","","}","","\/\/ üëáüèª use #if canImport for conditional support for Xcode projects","#if canImport(XcodeProjectPlugin)","import XcodeProjectPlugin","","extension MyPlugin: ... {","","  \/\/ Entry points specific to plugin capability. These entry points are invoked","  \/\/ when the plugin is applied to an Xcode project.","","}","#endif"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Two plugin types:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Command plugins","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Build tool plugins"}],"type":"paragraph"}]}]},{"anchor":"Command-plugins","type":"heading","text":"Command plugins","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"implement development-time actions"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Run interactively, not during a build (e.g., manually triggered by the developer)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Must ask for permission to modify package sources","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Might depend on other tools to do the actual work"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"dependencies on tools plugins can be both binaries or source code"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"run "},{"type":"codeVoice","code":"swift package plugin --list"},{"type":"text","text":" to see which plugins are available"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"run "},{"code":"swift package <plugin_name>","type":"codeVoice"},{"type":"text","text":" to run them in current directory"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"run with ","type":"text"},{"code":"swift package --allow-writing-to-package-directory <plugin_name>","type":"codeVoice"},{"text":" to give write access","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"append ","type":"text"},{"code":"--verbose","type":"codeVoice"},{"text":" to see more output from plugin","type":"text"}]}]}]},{"anchor":"Build-tool-plugins","type":"heading","text":"Build tool plugins","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"provide commands for the build system, triggered at build time (not manually)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"can invoke executable provided as binaries or built from source"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"supports build commands and prebuild commands","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"output files are stored with other build artifacts, not among your package source code","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"commands run in a sandbox to prevent changes in package","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Requires conforming to ","type":"text"},{"code":"BuildToolPlugin","type":"codeVoice"},{"text":" protocol, return type is ","type":"text"},{"code":"[Command]","type":"codeVoice"}]}]}]},{"type":"codeListing","code":["import PackagePlugin","","@main","struct MyPlugin: BuildToolPlugin {","","  \/\/\/ This entry point is called when operating on a Swift package.","  func createBuildCommands(context: PluginContext, target: Target) throws -> [Command]","    debugPrint(context)","    return []","  }","}","","\/\/ üëáüèª use #if canImport for conditional support for Xcode projects","#if canImport(XcodeProjectPlugin)","import XcodeProjectPlugin","","extension MyPlugin: XcodeBuildToolPlugin {","","  \/\/\/ This entry point is called when operating on an Xcode project.","  func createBuildCommands(context: XcodePluginContext, target: XcodeTarget) throws -> [Command]","    debugPrint(context)","    return []","  }","}","#endif"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Build commands run as part of the build"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You specify input and output paths"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"They run only when their output is missing, or when their inputs (e.g. files, assets) has changed (they‚Äôre skipped otherwise)","type":"text"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Prebuild commands run before the build starts"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add plugins to targets via "},{"code":"plugins","type":"codeVoice"},{"type":"text","text":" parameter"}]}]}]},{"type":"codeListing","code":["let package = Package (","  name: \"CoreLib\",","  products: [","    .library(name:\"CoreLib\", targets: [\"CoreLib\"])","  ],","  dependencies: [","    \/\/ üëáüèª","    .package (url: \"git@example.com:DemoPackages\/MySourceGenPlugin.git\", from: \"1.0.0\")","  ],","  targets: [","    .target (","      name: \"CoreLib\",","      plugins: [","        .plugin(name: \"MySourceGenBuildTool\", package: \"MySourceGenPlugin\") \/\/ üëàüèª required!","      ]","    ),","    .testTarget(name: \"CoreLibTests\", dependencies: [\"CoreLib\"])","  ]",")"],"syntax":"swift"},{"anchor":"Written-By","type":"heading","text":"Written By","level":2},{"type":"row","numberOfColumns":5,"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/6942160?v=4","type":"image"}]}]},{"size":4,"content":[{"anchor":"Cihat-G√ºnd√ºz","text":"Cihat G√ºnd√ºz","level":3,"type":"heading"},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Jeehut"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/Jeehut"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/fline.dev"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/x.com\/Jeehut"}]}]}]},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","isActive":true,"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing"}],"type":"paragraph"},{"anchor":"Related-Sessions","type":"heading","text":"Related Sessions","level":2},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10171-Meet-Swift-OpenAPI-Generator","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110354-Whats-new-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110401-Create-Swift-Package-plugins","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110427-Whats-new-in-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-408-Adopting-Swift-Packages-in-Xcode"],"style":"list"},{"inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}],"type":"small"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22"]]},"sampleCodeDownload":{"action":{"identifier":"https:\/\/developer.apple.com\/wwdc22\/110359","type":"reference","isActive":true,"overridingTitle":"Watch Video (15 min)"},"kind":"sampleDownload"},"sections":[],"kind":"article","metadata":{"modules":[{"name":"WWDC Notes"}],"title":"Meet Swift Package plugins","role":"sampleCode","roleHeading":"WWDC22"},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc22-110359-meet-swift-package-plugins"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110359-Meet-Swift-Package-plugins"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","title":"WWDC Notes","url":"\/documentation\/wwdcnotes","kind":"symbol","role":"collection","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"images":[{"identifier":"WWDCNotes.png","type":"icon"}]},"https://developer.apple.com/wwdc22/110359":{"type":"download","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc22\/110359","identifier":"https:\/\/developer.apple.com\/wwdc22\/110359"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10171-Meet-Swift-OpenAPI-Generator":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10171-Meet-Swift-OpenAPI-Generator","abstract":[{"type":"text","text":"Discover how Swift OpenAPI Generator can help you work with HTTP server APIs whether you‚Äôre extending an iOS app or writing a server in Swift. We‚Äôll show you how this package plugin can streamline your workflow and simplify your codebase by generating code from an OpenAPI document."}],"kind":"article","title":"Meet Swift OpenAPI Generator","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23-10171-meet-swift-openapi-generator"},"https://fline.dev":{"title":"Blog","titleInlineContent":[{"text":"Blog","type":"text"}],"identifier":"https:\/\/fline.dev","type":"link","url":"https:\/\/fline.dev"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110401-Create-Swift-Package-plugins":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110401-Create-Swift-Package-plugins","title":"Create Swift Package plugins","role":"sampleCode","abstract":[{"type":"text","text":"Tailor your development workflow and learn how to write your own package plugins in Swift. We‚Äôll show you how you can extend Xcode‚Äôs functionality by using the PackagePlugin API to generate source code or automate release tasks and share best practices for creating great plugins."}],"url":"\/documentation\/wwdcnotes\/wwdc22-110401-create-swift-package-plugins"},"https://x.com/Jeehut":{"title":"X\/Twitter","titleInlineContent":[{"text":"X\/Twitter","type":"text"}],"identifier":"https:\/\/x.com\/Jeehut","type":"link","url":"https:\/\/x.com\/Jeehut"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110354-Whats-new-in-Swift":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110354-Whats-new-in-Swift","title":"What‚Äôs new in Swift","role":"sampleCode","abstract":[{"type":"text","text":"Join us for an update on Swift. We‚Äôll take you through performance improvements, explore more secure and extensible Swift packages, and share advancements in Swift concurrency. We‚Äôll also introduce you to Swift Regex, better generics, and other tools built into the language to help you write more flexible & expressive code."}],"url":"\/documentation\/wwdcnotes\/wwdc22-110354-whats-new-in-swift"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","type":"link","url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-408-Adopting-Swift-Packages-in-Xcode":{"kind":"article","title":"Adopting Swift Packages in Xcode","url":"\/documentation\/wwdcnotes\/wwdc19-408-adopting-swift-packages-in-xcode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-408-Adopting-Swift-Packages-in-Xcode","role":"sampleCode","abstract":[{"type":"text","text":"Swift packages are a great way to organize and share code, and are now supported while building apps for all Apple platforms in Xcode 11. Find out how to use community-developed packages in your project, how Swift packages are structured, and how package versioning and dependencies work."}]},"https://github.com/Jeehut":{"title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}],"identifier":"https:\/\/github.com\/Jeehut","type":"link","url":"https:\/\/github.com\/Jeehut"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","alt":null,"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22":{"abstract":[{"text":"Xcode 14, Swift 5.7, iOS 16, macOS 13 (Ventura), tvOS 16, watchOS 9.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"WeatherKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"ScreenCaptureKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Swift Regex","type":"codeVoice"},{"text":", and more.","type":"text"}],"images":[{"type":"icon","identifier":"WWDCNotes.png"}],"type":"topic","kind":"article","role":"collectionGroup","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22","url":"\/documentation\/wwdcnotes\/wwdc22","title":"WWDC22"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110427-Whats-new-in-Xcode":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110427-Whats-new-in-Xcode","abstract":[{"text":"Discover the latest productivity and performance advancements in Xcode 14. We‚Äôll introduce you to the fully redesigned SwiftUI canvas experience, explore enhancements to code completion and navigation, and take you through performance improvements we‚Äôve made throughout the entire development process. We‚Äôll also show you how you can now read and respond to feedback on your TestFlight builds without ever leaving Xcode.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc22-110427-whats-new-in-xcode","kind":"article","type":"topic","title":"What‚Äôs new in Xcode"},"doc://WWDCNotes/documentation/WWDCNotes/Jeehut":{"url":"\/documentation\/wwdcnotes\/jeehut","kind":"article","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Jeehut","title":"Cihat G√ºnd√ºz (56 notes)","abstract":[{"text":"Spatial-first Indie Developer for Ô£ø Platforms. Actively contributing to Open Source since 2011!","type":"text"}]},"https://avatars.githubusercontent.com/u/6942160?v=4":{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/6942160?v=4","alt":"Profile image of Cihat G√ºnd√ºz","variants":[{"traits":["1x","light"],"url":"https:\/\/avatars.githubusercontent.com\/u\/6942160?v=4"}],"type":"image"}}}