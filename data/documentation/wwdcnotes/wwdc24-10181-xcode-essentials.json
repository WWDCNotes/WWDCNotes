{"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24"]]},"kind":"article","sections":[],"metadata":{"title":"Xcode essentials","modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC24","role":"sampleCode"},"abstract":[{"text":"Edit, debug, commit, repeat. Explore the suite of tools in Xcode that help you iterate quickly when developing apps. Discover tips and tricks to help optimize and boost your development workflow.","type":"text"}],"sampleCodeDownload":{"kind":"sampleDownload","action":{"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc24\/10181","isActive":true,"overridingTitle":"Watch Video"}},"seeAlsoSections":[{"title":"Deep Dives into Topics","identifiers":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10184-A-Swift-Tour-Explore-Swifts-features-and-design","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10218-Accelerate-machine-learning-with-Metal","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10140-Add-personality-to-your-app-through-UX-writing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10173-Analyze-heap-memory","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10172-Break-into-the-RealityKit-debugger","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10067-Bring-context-to-todays-weather","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10220-Bring-expression-to-your-app-with-Genmoji","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10068-Bring-your-Live-Activity-to-Apple-Watch","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10133-Bring-your-app-to-Siri","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10210-Bring-your-apps-core-features-to-users-with-App-Intents","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10093-Bring-your-iOS-or-iPadOS-game-to-visionOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10159-Bring-your-machine-learning-and-AI-models-to-Apple-silicon","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10069-Broadcast-updates-to-your-Live-Activities","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10204-Build-a-great-Lock-Screen-camera-capture-experience","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10104-Build-a-spatial-drawing-app-with-RealityKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10166-Build-compelling-spatial-photo-and-video-experiences","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10084-Build-custom-swimming-workouts-with-WorkoutKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10066-Build-immersive-web-experiences-with-WebXR","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10185-Build-multilingualready-apps","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10088-Capture-HDR-content-with-ScreenCaptureKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10073-Catch-up-on-accessibility-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10102-Compose-interactive-3D-content-in-Reality-Composer-Pro","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10170-Consume-noncopyable-types-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10138-Create-a-custom-data-store-with-SwiftData","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10087-Create-custom-environments-for-your-immersive-apps-in-visionOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10152-Create-custom-hover-effects-in-visionOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10151-Create-custom-visual-effects-with-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10100-Create-enhanced-spatial-computing-experiences-with-ARKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10070-Customize-feature-discovery-with-TipKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10201-Customize-spatial-Persona-templates-in-SharePlay","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10146-Demystify-SwiftUI-containers","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10171-Demystify-explicitly-built-modules","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10161-Deploy-machine-learning-and-AI-models-ondevice-with-Core-ML","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10176-Design-App-Intents-for-system-experiences","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10098-Design-Live-Activities-for-Apple-Watch","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10085-Design-advanced-games-for-Apple-platforms","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10086-Design-great-visionOS-apps","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10096-Design-interactive-experiences-for-visionOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10103-Discover-RealityKit-APIs-for-iOS-macOS-and-visionOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10163-Discover-Swift-enhancements-in-the-Vision-framework","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10107-Discover-area-mode-for-Object-Capture","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10113-Discover-media-performance-metrics-in-AVFoundation","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10153-Dive-deep-into-volumes-and-immersive-spaces","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10147-Elevate-your-tab-and-sidebar-experience-in-iPadOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10114-Enhance-ad-experiences-with-HLS-interstitials","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10115-Enhance-the-immersion-of-media-viewing-in-custom-environments","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10145-Enhance-your-UI-animations-and-transitions","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-111801-Enhance-your-spatial-computing-app-with-RealityKit-audio","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10209-Enhanced-suggestions-for-your-journaling-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10132-Evolve-your-document-launch-experience","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10062-Explore-App-Store-server-APIs-for-InApp-Purchase","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10217-Explore-Swift-performance","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10094-Explore-game-input-in-visionOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10223-Explore-machine-learning-on-Apple-platforms","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10116-Explore-multiview-video-playback-in-visionOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10101-Explore-object-tracking-for-visionOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10216-Explore-the-Swift-on-Server-ecosystem","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10109-Explore-wellbeing-APIs-in-HealthKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10200-Extend-your-Xcode-Cloud-workflows","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10157-Extend-your-apps-controls-across-the-system","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10074-Get-started-with-Dynamic-Type","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10083-Get-started-with-HealthKit-in-visionOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10168-Get-started-with-Writing-Tools","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10195-Go-further-with-Swift-Testing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10197-Go-small-with-Embedded-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10110-Implement-App-Store-Offers","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10162-Keep-colors-consistent-across-captures","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10207-Migrate-your-TVML-app-to-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10169-Migrate-your-app-to-Swift-6","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10065-Optimize-for-the-spatial-web","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10186-Optimize-your-3D-assets-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10089-Port-advanced-games-to-Apple-platforms","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10092-Render-Metal-with-passthrough-in-visionOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10198-Run-Break-Inspect-Explore-effective-debugging-in-LLDB","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10112-Say-hello-to-the-next-generation-of-CarPlay-design-system","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10214-Squeeze-the-most-out-of-Apple-Pencil","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10125-Streamline-signin-with-passkey-upgrades-and-credential-managers","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10211-Support-realtime-ML-inference-on-the-CPU","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10131-Support-semantic-search-with-Core-Spotlight","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10155-Swift-Charts-Vectorized-and-function-plots","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10150-SwiftUI-essentials","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10148-Tailor-macOS-windows-with-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10075-Track-model-changes-with-SwiftData-history","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10160-Train-your-machine-learning-and-AI-models-on-Apple-GPUs","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10097-Unlock-the-power-of-places-with-MapKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10122-Use-CloudKit-Console-to-monitor-and-optimize-database-activity","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10177-Use-HDR-for-dynamic-image-experiences-in-your-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10149-Work-with-windows-in-SwiftUI"],"generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10181-Xcode-essentials"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc24-10181-xcode-essentials"]}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Presenters","type":"heading","text":"Presenters","level":2},{"type":"paragraph","inlineContent":[{"text":"Cheech Minniear, Xcode Design Team","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Myke Savage, Engineering Project Manager","type":"text"}]},{"anchor":"Edit","type":"heading","text":"Edit","level":1},{"anchor":"Find-the-right-content","type":"heading","text":"Find the right content","level":2},{"anchor":"Filter-navigators","type":"heading","text":"Filter navigators","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The left-hand side of Xcode shows navigators. Each"},{"type":"text","text":" "},{"type":"text","text":"giving you a different perspective of your project. The project navigator, for example, shows the project’s file hierarchy."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Use the bottom bar","type":"text"}]},{"type":"text","text":" to filter files and folders. After your start typing, and the text matches one of these filters, you’ll see a menu pop-up above the input, offering additional functionality, like filtering by target name. The icons that appear at the right of the bottom bar also change based on the navigator."}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Clicking the icon on the far right of the bottom bar"}],"type":"strong"},{"text":", filters the files by git status making it easy to return to files in your upcoming commit, while showing them in the context of your whole project. Try using this filter to easily review changes before committing.","type":"text"}]},{"anchor":"The-Find-navigator","type":"heading","text":"The Find navigator","level":3},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Command-Shift-F (⌘⇧F)","type":"text"}]},{"type":"text","text":" opens Xcode’s Find navigator allowing you to search across your entire project. The bottom bar can be used in conjunction with the Find navigator to filter results."}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Holding Command (⌘)"}],"type":"strong"},{"text":" clicking on the disclosure arrow to the left of a file name, and collapse all of its siblings. This works on all outline views in Xcode.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Selected files inside the Find navigator can be removed from search results by pressing the Delete key while selected. Note this this only hides the files from the current query, it does not delete the files."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"strong","inlineContent":[{"text":"the menu beneath the search field","type":"text"}]},{"type":"text","text":" to focus the search. You can choose any of the groups containing the file you’re editing. Choose “Custom Scopes…” to pick a different group, or even multiple groups.  If you find you’re often using the same search scope, save it and it will show up in the initial menu in the navigator."}]},{"type":"paragraph","inlineContent":[{"text":"Selecting text and then pressing ","type":"text"},{"inlineContent":[{"type":"text","text":"Command-E (⌘E)"}],"type":"strong"},{"text":" will insert the text into the Find field without clearing your clipboard. This works in any maxOS app.","type":"text"}]},{"anchor":"Move-between-files","type":"heading","text":"Move between files","level":2},{"anchor":"The-tab-bar","type":"heading","text":"The tab bar","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"The tab bar, located towards the top of the source editor, underneath the toolbar. Use the tab bar to switch between documents. Two types of tabs are supported by Xcode, "},{"inlineContent":[{"text":"permanent tabs","type":"text"}],"type":"strong"},{"type":"text","text":" (for the documents you’ve shown explicit interest in) and "},{"inlineContent":[{"text":"implicit tabs","type":"text"}],"type":"strong"},{"type":"text","text":" (which Xcode creates for files you’ve only passed through). You can tell the implicit tab from the others because of its italicized title. Make an implicit tab a permanent tab by choosing “Keep Open” from the context menu, or by double clicking on the tab."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Close multiple tabs simultaneously","type":"text"}]},{"text":" by Option clicking the close button of one tab to close all other open tabs.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Back and Forward buttons are to the left of the tab bar. Click and hold one to see a full history.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"To the left of the Back button is the related filed menu. This menu contains recent files list as well as different types of symbolic relations will appear based on the text: like subclasses of the current class, or callers of the current function.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The three buttons to the right of the tab bar are for configuring the editor UI. The middle button controls the editor layout. You can add a SwiftUI Preview, the editor mini-map, and line accessories like blame or code coverage."}]},{"anchor":"The-jump-bar","type":"heading","text":"The jump bar","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Located just below the tab bar, the jump bar shows the path to the current file. Every step in this path is interactive. Click on an item to view neighboring files. Start typing, and a filter field will appear in the top of the menu. Many menus in Xcode have this functionality. To find an item from the jump bar in the project navigator, press "},{"type":"strong","inlineContent":[{"type":"text","text":"Command-Shift-J (⌘⇧J)"}]},{"type":"text","text":"."}]},{"anchor":"Tricks-for-creating-new-files","type":"heading","text":"Tricks for creating new files","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"To create a new file you can right click in the navigator and skip the template chooser. If you want to use the format of an existing file to create a new one use copy & paste or duplicate. Additionally you can "},{"type":"strong","inlineContent":[{"text":"hold option (⌥)","type":"text"}]},{"type":"text","text":" then click and drag an item to copy it."}]},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"inlineContent":[{"text":"Command-X (⌘X)","type":"text"}],"type":"strong"},{"text":" to cut the contents of one file to the clipboard. Then right click anywhere in the navigator. Hold option and some of the menu items will change. Choose “New file with contents of clipboard.” Additionally you can paste the content directly into the navigator and Xcode will create the new file for you.","type":"text"}]},{"anchor":"Warnings-and-error-annotations","type":"heading","text":"Warnings and error annotations","level":3},{"type":"paragraph","inlineContent":[{"text":"If you make a mistake in your code Xcode will add an interactive annotation the line with a warning or error. If the annotation contains more info than you’re able to see or if there is more than 1 issue on a line then you can click to show the rest of the information. If the compiler offers a fix-it for the annotation then you may click to apply the fix-it.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Issues will turn gray when you’ve changed the file since the issue last refreshed and will disappear when they are resolved.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can add your own warnings using the "},{"type":"codeVoice","code":"#warning"},{"type":"text","text":" mark along with a message."}]},{"anchor":"Using-bookmarks","type":"heading","text":"Using bookmarks","level":3},{"type":"paragraph","inlineContent":[{"text":"Right-click anywhere in the editor, to add a bookmark to a line. You may check them off in the bookmarks navigator.","type":"text"}]},{"anchor":"Using-Mark-comments","type":"heading","text":"Using Mark comments","level":3},{"type":"paragraph","inlineContent":[{"text":"Add Mark comments to your file using ","type":"text"},{"code":"\/\/ MARK:","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"\/\/MARK: -","type":"codeVoice"},{"text":". The latter will add a visual separator above the comment. Mark comments act as section titles, they appear in the mini-map, and the editor content jump bar segment.","type":"text"}]},{"anchor":"Leverage-shortcuts","type":"heading","text":"Leverage shortcuts","level":2},{"anchor":"Open-Quickly","type":"heading","text":"Open Quickly","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Press "},{"type":"strong","inlineContent":[{"text":"Command-Shift-O (⌘⇧O)","type":"text"}]},{"type":"text","text":" from anywhere, then type in some part of a file or symbol name, and open quickly will immediately give you a list of destinations. It uses code completion-like matching rules, so you can type any of the unique words in your destination name to get there immediately. If you include a slash in the query, you can match file paths instead of file names, and you can end a query with a colon, and the line number, to get to a specific line. Hold "},{"type":"strong","inlineContent":[{"type":"text","text":"Option (⌥)"}]},{"type":"text","text":" when pressing return to view the files in a split view."}]},{"anchor":"Useful-commands-and-shortcuts","type":"heading","text":"Useful commands and shortcuts","level":3},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"inlineContent":[{"type":"text","text":"Command-Shift-A (⌘⇧A)"}],"type":"strong"},{"text":" to open quick actions, where you can do a search of Xcode’s commands with natural language.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can explore and customize Xcode’s many unique commands by navigating to the Key Bindings tab in the Xcode’s Settings pane."}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Command-click"}],"type":"strong"},{"type":"text","text":" invokes  “Jump to Definition” and will take you to the definition of a function or type."}]},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"inlineContent":[{"type":"text","text":"Option-click"}],"type":"strong"},{"text":" to “Show quick help”, and see either the documentation for the clicked symbol, or for Swift variables, to see their inferred type.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Select some text and press ","type":"text"},{"inlineContent":[{"text":"Command-Control-E (⌘⌃E)","type":"text"}],"type":"strong"},{"text":" to “Edit All In Scope”. This will allow you to rename a symbol and all of its occurrences in the current file.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"You can see all of the callers for the current function by selecting “show callers” when you right click.","type":"text"}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Control-M (⌃M)","type":"text"}],"type":"strong"},{"text":" will reformat a function to reformat it to many lines.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Double of a click on one side of a paren, bracket or quote to jump to its matching counterpart.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use "},{"type":"strong","inlineContent":[{"text":"Option (⌥) and the arrow keys","type":"text"}]},{"type":"text","text":" to move by word. And also use "},{"type":"strong","inlineContent":[{"type":"text","text":"Control (⌃) with the arrow keys"}]},{"type":"text","text":" to move by subword."}]},{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Command-Left (⌘←)"}],"type":"strong"},{"text":" or ","type":"text"},{"inlineContent":[{"text":"Command-Right (⌘→)","type":"text"}],"type":"strong"},{"text":" ares helpful if you’re familiar with pressing Home and End to move to the beginning and end of the line.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Hold Control-Shift (⌃⇧), then click","type":"text"}]},{"type":"text","text":" where you’d like to insert multiple cursors to create multiple statements at once."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to put similar code into several places, you can create a template with the same placeholders you see in code completion by surrounding text with these characters: "},{"type":"codeVoice","code":"<#placeholder#>"},{"type":"text","text":"."}]},{"anchor":"Code-completion","type":"heading","text":"Code completion","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"In Xcode 16, predictive completions suggest whole statements and methods based on the surrounding code. These completions appear inline with your code. Pressing the the Tab key to accept what’s shown. Or hold Option to expand the entire prediction. Press Option-Tab to accept the whole thing."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can hold "},{"inlineContent":[{"text":"Option (⌥)","type":"text"}],"type":"strong"},{"type":"text","text":" when choosing the completion and press Enter to accept all of the arguments."}]},{"anchor":"VIM-mode","type":"heading","text":"VIM mode","level":3},{"type":"paragraph","inlineContent":[{"text":"Toggle in and out of vim mode in the Editor menu. Xcode 16 supports vim’s repeat command as another form of multi-cursor editing.","type":"text"}]},{"anchor":"Common-emacs-commands","type":"heading","text":"Common emacs commands","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Xcode also supports all of the native macOS text editing interactions, which includes support for many basic emacs commands like:"}]},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Control-A (⌃A)"}],"type":"strong"},{"text":" for ","type":"text"},{"inlineContent":[{"type":"text","text":"“Beginning of line”"}],"type":"emphasis"},{"text":",","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Control-E (⌃E)","type":"text"}],"type":"strong"},{"text":" for ","type":"text"},{"inlineContent":[{"type":"text","text":"“End of line”"}],"type":"emphasis"},{"text":",","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Control-P (⌃P)"}]},{"text":" for ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"“Previous line”"}]},{"text":",","type":"text"}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Control-N (⌃N)"}],"type":"strong"},{"text":" for ","type":"text"},{"inlineContent":[{"text":"“Next line”","type":"text"}],"type":"emphasis"},{"text":",","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"along with many others.","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Get-the-most-out-of-git","type":"heading","text":"Get the most out of git","level":2},{"anchor":"Show-the-last-change-for-a-line","type":"heading","text":"Show the last change for a line","level":3},{"type":"paragraph","inlineContent":[{"type":"text","text":"Right-click and try “show last change for line” to see an overview of the commit for that line. Similar to a focused version of blame."}]},{"anchor":"Changes-navigator","type":"heading","text":"Changes navigator","level":3},{"type":"paragraph","inlineContent":[{"text":"Preview an upcoming commit in the changes navigator.","type":"text"}]},{"anchor":"Debug","type":"heading","text":"Debug","level":1},{"anchor":"Setting-breakpoints","type":"heading","text":"Setting breakpoints","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When things are simple, just click on a line number to add a breakpoint and your program will stop when it gets to that line."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use two breakpoints in tandem if the breakpoint would be hit too frequently. Let’s say you have a busy function running constantly, that also runs just after you click a button in your app, and it’s only that one invocation that’s problematic. Add a breakpoint to your button handler, and add a second breakpoint to your busy function. Disable the breakpoint in the busy function by clicking it a second time. When you run your program, hit the breakpoint in your button handler, and re-enable the breakpoint in your busy function then continue. Now you’ll hit that second high traffic breakpoint in just the right state."}]},{"type":"paragraph","inlineContent":[{"text":"Drag breakpoints out to remove them.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can add a breakpoint to trigger immediately right where any error is thrown by adding a “Swift Error Breakpoint” in the breakpoints navigator"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Double click on a breakpoint to open the breakpoint editor. Here you can add specific conditions which trigger then breakpoint when evaluated to true. The breakpoint editor also lets you add debugger expressions to run when the breakpoint is reached."}]},{"type":"paragraph","inlineContent":[{"text":"For example add a print expression, and set the breakpoint to automatically continue. Now you can have temporary logs without rebuilding.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Retroactively pick the expression apart, evaluating parts of it in the debugger with commands like “p session” or even evaluate a conditional to find the cause of the unexpected return."}]},{"type":"paragraph","inlineContent":[{"text":"Drag the green program counter backwards to attempt to re-execute your previous expressions again. Side effects won’t be rewound, so your program may be in an odd state, but if your other choice is to click stop, and restart the debugging session, why not? This could save quite a bit of time.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Disable all of your breakpoints with the breakpoint button in the debug bar,","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"strong","inlineContent":[{"text":"Command-Control-R (⌘⌃R)","type":"text"}]},{"type":"text","text":" to “run without building,” skipping the whole build step and getting immediately back to debugging. You can also use this if you’ve started changing your app, but want to debug the old code one more time, and haven’t rebuilt since your last session."}]},{"type":"paragraph","inlineContent":[{"text":"In Xcode 16, you can see full backtraces in the editor, bringing together functions from all over your project into a single editor. This gives you a great overview of how you got to where you are. You can activate this viewing mode in the debug bar, next to the controls for the memory and view debuggers.","type":"text"}]},{"anchor":"Using-the-console","type":"heading","text":"Using the console","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Marcos (more in the documentation):"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"#fileID"},{"type":"text","text":" - A unique identifier for the source file in which the macro appears."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"#function"},{"type":"text","text":" - The name of the declaration in which it appears."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Consider switching from "},{"code":"print","type":"codeVoice"},{"type":"text","text":" to "},{"code":"os_log","type":"codeVoice"},{"type":"text","text":" which gives you a debug level for each message that you set. When you run, you can filter by searching for text or filter for just the messages from your library. You can enable metadata to show the type such as error, info, or debug, a timestamp, and the library."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You no longer need those macros in the log messages because you can just jump right to the line in your source where the log message is coming from by clicking the go-to arrow."}]},{"anchor":"Test","type":"heading","text":"Test","level":1},{"type":"paragraph","inlineContent":[{"text":"Run all of the tests in your project using ","type":"text"},{"inlineContent":[{"type":"text","text":"Command-U (⌘U)"}],"type":"strong"},{"text":". To run individual tests click on the diamond for that test function or anywhere up the hierarchy to do a collection of tests.","type":"text"}]},{"anchor":"Test-Navigator","type":"heading","text":"Test Navigator","level":2},{"type":"paragraph","inlineContent":[{"text":"Access the test navigator via ","type":"text"},{"inlineContent":[{"type":"text","text":"Command-6 (⌘6)"}],"type":"strong"},{"text":" to show all tests. Filter to show “only included tests.” to show only tests in a specific test plan. You may also filter textually for a specific test title or with Swift Testing, you can filter by tag.","type":"text"}]},{"anchor":"Running-tests","type":"heading","text":"Running tests","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"You select select a test and use the context menu to run the focused set. After running these tests, they’ll have a status. You may focus on specific statuses by filtering."}]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Command-Control-Option-G (⌘⌃⌥)","type":"text"}]},{"text":" will rerun the previous tests. Similarly use can use ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Command-Control-U (⌘⌃U)"}]},{"text":" to “test without building”.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC24-10181-xcode-essentials-test-statuses"}]},{"type":"paragraph","inlineContent":[{"text":"There are several test statues to be aware of including:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"A "},{"inlineContent":[{"text":"Green diamond with a white check mark","type":"text"}],"type":"strong"},{"type":"text","text":" meaning "},{"inlineContent":[{"type":"text","text":"“All test cases passed”"}],"type":"emphasis"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"A ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Red diamond with a white X"}]},{"text":" meaning ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"“At least one test method failed”","type":"text"}]}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"strong","inlineContent":[{"text":"Gray diamond with a white X","type":"text"}]},{"type":"text","text":" meaning "},{"type":"emphasis","inlineContent":[{"text":"“Some test methods failed with expected errors”","type":"text"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"inlineContent":[{"type":"text","text":"Gray diamond with a white arrow"}],"type":"strong"},{"text":" meaning ","type":"text"},{"inlineContent":[{"text":"“All tests were skipped”","type":"text"}],"type":"emphasis"}]}]},{"content":[{"inlineContent":[{"text":"A ","type":"text"},{"inlineContent":[{"type":"text","text":"Green diamond with a white minus sign"}],"type":"strong"},{"text":" meaning ","type":"text"},{"inlineContent":[{"text":"“Mixed outcome - some tests passed while others were expected failures or skips”","type":"text"}],"type":"emphasis"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"strong","inlineContent":[{"type":"text","text":"Red diamond with a white minus sign"}]},{"type":"text","text":" meaning "},{"type":"emphasis","inlineContent":[{"type":"text","text":"“Mixed outcome - some tests failed with expected failures or skips”"}]}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can “Run test Repeatedly” from a test’s context menu. You can run the test a fixed number of times, or repeatedly until failure."}]},{"type":"paragraph","inlineContent":[{"text":"Run tests from the command line with ","type":"text"},{"code":"xcodebuild test","type":"codeVoice"},{"text":". Be sure to specify a scheme, a test plan, or an individual test.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Your developer account comes with Xcode Cloud, bundled for free with 25 compute hours per month. Configure workflows to start testing in the cloud as soon as you push to a certain branch, view the results right inside Xcode, and even configure it to submit directly to TestFlight or App Store Connect when your tests pass."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Xcode Cloud is also secure and private, data is encrypted at rest and access is protected by two-factor authentication. Your source code is only used when building and the build environment is destroyed as soon as your build completes."}]},{"anchor":"Using-Test-plans","type":"heading","text":"Using Test plans","level":2},{"type":"paragraph","inlineContent":[{"text":"Create groupings of tests to run as desired with Test Plans. Each scheme can have multiple test plans and a test plan can span multiple schemes.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Edit a Test Plan from the "},{"code":"Product > Test Plan","type":"codeVoice"},{"type":"text","text":" menu. First, choose which targets to include, such as both our unit tests and UI tests. Then select which tests from those targets to include in this test plan."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can also add a test plan to multiple schemes by selecting the scheme and then clicking the plus button and “Add existing Test Plan…”. To run your test plan, select it from "},{"type":"codeVoice","code":"Product > Test Plan"},{"type":"text","text":" then choose "},{"type":"codeVoice","code":"Product > Test"},{"type":"text","text":" or use "},{"type":"strong","inlineContent":[{"type":"text","text":"Command-U (⌘U)"}]},{"type":"text","text":"."}]},{"anchor":"Code-coverage","type":"heading","text":"Code coverage","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Enable Code Coverage from the Editor menu and then run your tests. After tests have run you’ll see a number on the right side of the editor. This is the number of times that block of code was executed while testing, with 0 meaning that code was never executed."}]},{"type":"paragraph","inlineContent":[{"text":"You can also see an overview of all of your code coverage through the Report Navigator via ","type":"text"},{"inlineContent":[{"type":"text","text":"Command-9 (⌘9)"}],"type":"strong"},{"text":".","type":"text"}]},{"anchor":"Explore-the-Test-report","type":"heading","text":"Explore the Test report","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Click on a test run to see a summary of what was tested, or click the Tests item to see just a result of the tests. From either this view or the summary view, double-click on a failed test to see what happened. In the timeline at the bottom, you can see exactly when the failure occurred."}]},{"anchor":"Distribute","type":"heading","text":"Distribute","level":1},{"anchor":"TestFlight","type":"heading","text":"TestFlight","level":2},{"type":"paragraph","inlineContent":[{"text":"Your paid developer account includes TestFlight which allows you to distribute your app to up to 10,000 beta testers. You can either invite them by email or by publishing a link on social media. Beta testers get new versions of your app automatically on their device. TestFlight also works with all platforms.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you publish a new build, TestFlight includes release notes so that your testers know what to focus on. Testers can provide feedback and analytics to you, which is all built right into Xcode."}]},{"anchor":"Archiving","type":"heading","text":"Archiving","level":2},{"type":"paragraph","inlineContent":[{"text":"Publishing your app to either TestFlight or the App Store begins with an archive (a snapshot of your compiled app containing a release build).","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a release version which is optimized to save space so it no longer includes the debug information you would need to look into issues. The debug symbols are also included in an archive so if you save them, you can debug that version later."}]},{"type":"paragraph","inlineContent":[{"text":"This also allows you to distribute your app by repackaging the contents for whichever destination you choose.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Go to the Product menu and choose Archive to ship your build, results will be located in the Organizer."}]},{"type":"paragraph","inlineContent":[{"text":"Click the Distribute App button to distribute your app. You’ll be presented with several presets for distributing your app. The “App Store Connect” option uploads your app to either TestFlight or App Store Connect.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"“TestFlight Internal Only” skips App Review and includes protections so that you cannot accidentally submit it to the App Store. This can only be used for beta testers in your content provider\/organization and not external testers.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The “Release Testing,” “Enterprise,” and “Debugging” options all produce optimized builds to be installed by users with devices registered on your portal.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"You can setup a workflow using Xcode Cloud to submit directly to TestFlight when your build is successful and your tests pass. You can also configure scripts to automate your tester notes by pulling from your git commit messages.","type":"text"}]},{"anchor":"Explore-the-Organizer","type":"heading","text":"Explore the Organizer","level":2},{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Command-Option-Shift-O (⌘⇧⌥)","type":"text"}],"type":"strong"},{"text":" opens This Organizer. You may view analytics in a way that preserves the user’s privacy and is built right into Xcode. Only users who consent to sharing feedback and diagnostics with third party developers like you will be displayed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Feedback tab contains the feedback provided by your TestFlight beta testers. The launches organizer displays information about your app’s launch such as the amount of time it takes to launch. Remember that your user’s environment may be different than yours."}]},{"anchor":"Written-By","type":"heading","text":"Written By","level":2},{"type":"row","numberOfColumns":5,"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/5668274?v=4","type":"image"}]}]},{"size":4,"content":[{"type":"heading","anchor":"Dustyn-August","level":3,"text":"Dustyn August"},{"type":"paragraph","inlineContent":[{"overridingTitle":"Contributed Notes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/dustynaugust","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/dustynaugust","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/x.com\/dustynaugust","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/dustynaugust.com","isActive":true,"type":"reference"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}]},{"anchor":"Related-Sessions","type":"heading","text":"Related Sessions","level":2},{"style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10179-Meet-Swift-Testing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10224-Simplify-distribution-in-Xcode-and-Xcode-Cloud","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10198-Run-Break-Inspect-Explore-effective-debugging-in-LLDB","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10226-Debug-with-structured-logging","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110370-Debug-Swift-debugging-with-LLDB","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10278-Create-practical-workflows-in-Xcode-Cloud","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110374-Get-the-most-out-of-Xcode-Cloud","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110361-Author-fast-and-reliable-tests-for-Xcode-Cloud"],"type":"links"},{"type":"small","inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"https://dustynaugust.com":{"identifier":"https:\/\/dustynaugust.com","url":"https:\/\/dustynaugust.com","type":"link","titleInlineContent":[{"text":"Blog","type":"text"}],"title":"Blog"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110374-Get-the-most-out-of-Xcode-Cloud":{"title":"Get the most out of Xcode Cloud","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110374-Get-the-most-out-of-Xcode-Cloud","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-110374-get-the-most-out-of-xcode-cloud","kind":"article","abstract":[{"text":"Discover how you can get the most out of Xcode Cloud, Apple’s continuous integration and continuous delivery (CI\/CD) service. We’ll take you through an overview of Xcode Cloud and how it connects with Xcode and App Store Connect. We’ll also explore the Xcode Cloud Usage Dashboard in App Store Connect, and learn how you can use this tool to help optimize your build and release process across multiple team projects.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10161-Deploy-machine-learning-and-AI-models-ondevice-with-Core-ML":{"url":"\/documentation\/wwdcnotes\/wwdc24-10161-deploy-machine-learning-and-ai-models-ondevice-with-core-ml","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10161-Deploy-machine-learning-and-AI-models-ondevice-with-Core-ML","kind":"article","abstract":[{"text":"Learn new ways to optimize speed and memory performance when you convert and run machine learning and AI models through Core ML. We’ll cover new options for model representations, performance insights, execution, and model stitching which can be used together to create compelling and private on-device experiences.","type":"text"}],"type":"topic","title":"Deploy machine learning and AI models on-device with Core ML","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10214-Squeeze-the-most-out-of-Apple-Pencil":{"type":"topic","title":"Squeeze the most out of Apple Pencil","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10214-Squeeze-the-most-out-of-Apple-Pencil","url":"\/documentation\/wwdcnotes\/wwdc24-10214-squeeze-the-most-out-of-apple-pencil","abstract":[{"text":"New in iOS 18, iPadOS 18, and visionOS 2, the PencilKit tool picker gains the ability to have completely custom tools, with custom attributes. Learn how to express your custom drawing experience in the tool picker using the same great tool picking experience available across the system. Discover how to access the new features of the Apple Pencil Pro, including roll angle, the squeeze gesture, and haptic feedback.","type":"text"}],"role":"sampleCode","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10176-Design-App-Intents-for-system-experiences":{"role":"sampleCode","title":"Design App Intents for system experiences","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10176-Design-App-Intents-for-system-experiences","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10176-design-app-intents-for-system-experiences","abstract":[{"text":"App Intents power system experiences in controls, Spotlight, Siri, and more. Find out how to identify the functionality that’s best for App Intents, and how to use parameters to make these intents flexible. Learn how to use App Intents to allow people to take action outside your app, and see examples of when to navigate into your app to show contextual information.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10150-SwiftUI-essentials":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10150-SwiftUI-essentials","title":"SwiftUI essentials","kind":"article","type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc24-10150-swiftui-essentials","abstract":[{"type":"text","text":"Join us on a tour of SwiftUI, Apple’s declarative user interface framework. Learn essential concepts for building apps in SwiftUI, like views, state variables, and layout. Discover the breadth of APIs for building fully featured experiences and crafting unique custom components. Whether you’re brand new to SwiftUI or an experienced developer, you’ll learn how to take advantage of what SwiftUI has to offer when building great apps."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10073-Catch-up-on-accessibility-in-SwiftUI":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10073-Catch-up-on-accessibility-in-SwiftUI","role":"sampleCode","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10073-catch-up-on-accessibility-in-swiftui","abstract":[{"text":"SwiftUI makes it easy to build amazing experiences that are accessible to everyone. We’ll discover how assistive technologies understand and navigate your app through the rich accessibility elements provided by SwiftUI. We’ll also discuss how you can further customize these experiences by providing more information about your app’s content and interactions by using accessibility modifiers.","type":"text"}],"type":"topic","title":"Catch up on accessibility in SwiftUI"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10177-Use-HDR-for-dynamic-image-experiences-in-your-app":{"url":"\/documentation\/wwdcnotes\/wwdc24-10177-use-hdr-for-dynamic-image-experiences-in-your-app","kind":"article","abstract":[{"type":"text","text":"Discover how to read and write HDR images and process HDR content in your app. Explore the new supported HDR image formats and advanced methods for displaying HDR images. Find out how HDR content can coexist with your user interface — and what to watch out for when adding HDR image support to your app."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10177-Use-HDR-for-dynamic-image-experiences-in-your-app","role":"sampleCode","type":"topic","title":"Use HDR for dynamic image experiences in your app"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24":{"role":"collectionGroup","abstract":[{"type":"text","text":"Xcode 16, Swift 6, iOS 18, macOS 15, tvOS 18, visionOS 2, watchOS 11."},{"type":"text","text":" "},{"type":"text","text":"New APIs: Swift Testing, "},{"code":"FinanceKit","type":"codeVoice"},{"type":"text","text":", "},{"code":"TabletopKit","type":"codeVoice"},{"type":"text","text":", and more."}],"title":"WWDC24","kind":"article","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"url":"\/documentation\/wwdcnotes\/wwdc24","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10101-Explore-object-tracking-for-visionOS":{"abstract":[{"text":"Find out how you can use object tracking to turn real-world objects into virtual anchors in your visionOS app. Learn how you can build spatial experiences with object tracking from start to finish. Find out how to create a reference object using machine learning in Create ML and attach content relative to your target object in Reality Composer Pro, RealityKit or ARKit APIs.","type":"text"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10101-Explore-object-tracking-for-visionOS","title":"Explore object tracking for visionOS","type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc24-10101-explore-object-tracking-for-visionos"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10062-Explore-App-Store-server-APIs-for-InApp-Purchase":{"url":"\/documentation\/wwdcnotes\/wwdc24-10062-explore-app-store-server-apis-for-inapp-purchase","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10062-Explore-App-Store-server-APIs-for-InApp-Purchase","title":"Explore App Store server APIs for In-App Purchase","kind":"article","type":"topic","abstract":[{"type":"text","text":"Learn how to leverage your server to build great In-App Purchase experiences with the latest updates to the App Store Server API, App Store Server Notifications, and the open source App Store Server Library. After a recap of current APIs, we’ll introduce updated endpoint functionality, new transaction fields, and a new notification type. We’ll also discuss best practices for the purchase lifecycle, delivering content, and targeting offers, so you can become a server power user."}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10148-Tailor-macOS-windows-with-SwiftUI":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10148-Tailor-macOS-windows-with-SwiftUI","kind":"article","type":"topic","abstract":[{"text":"Make your windows feel tailor-made for macOS. Fine-tune your app’s windows for focused purposes, ease of use, and to express functionality. Use SwiftUI to style window toolbars and backgrounds. Arrange your windows with precision, and make smart decisions about restoration and minimization.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc24-10148-tailor-macos-windows-with-swiftui","title":"Tailor macOS windows with SwiftUI","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10107-Discover-area-mode-for-Object-Capture":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10107-Discover-area-mode-for-Object-Capture","url":"\/documentation\/wwdcnotes\/wwdc24-10107-discover-area-mode-for-object-capture","abstract":[{"type":"text","text":"Discover how area mode for Object Capture enables new 3D capture possibilities on iOS by extending the functionality of Object Capture to support capture and reconstruction of an area. Learn how to optimize the quality of iOS captures using the new macOS sample app for reconstruction, and find out how to view the final results with Quick Look on Apple Vision Pro, iPhone, iPad or Mac. Learn about improvements to 3D reconstruction, including a new API that allows you to create your own custom image processing pipelines."}],"kind":"article","title":"Discover area mode for Object Capture","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10201-Customize-spatial-Persona-templates-in-SharePlay":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10201-customize-spatial-persona-templates-in-shareplay","type":"topic","role":"sampleCode","abstract":[{"text":"Learn how to use custom spatial Persona templates in your visionOS SharePlay experience to fine-tune the placement of Personas relative to your app. We’ll show you how to adopt custom spatial Persona templates in a sample app with SharePlay, move participants between seats, and test your changes in Simulator. We’ll also share best practices for designing custom spatial templates that will make your experience shine.","type":"text"}],"title":"Customize spatial Persona templates in SharePlay","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10201-Customize-spatial-Persona-templates-in-SharePlay"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10160-Train-your-machine-learning-and-AI-models-on-Apple-GPUs":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Learn how to train your models on Apple Silicon with Metal for PyTorch, JAX and TensorFlow. Take advantage of new attention operations and quantization support for improved transformer model performance on your devices."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10160-Train-your-machine-learning-and-AI-models-on-Apple-GPUs","title":"Train your machine learning and AI models on Apple GPUs","url":"\/documentation\/wwdcnotes\/wwdc24-10160-train-your-machine-learning-and-ai-models-on-apple-gpus","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10211-Support-realtime-ML-inference-on-the-CPU":{"role":"sampleCode","title":"Support real-time ML inference on the CPU","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10211-Support-realtime-ML-inference-on-the-CPU","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10211-support-realtime-ml-inference-on-the-cpu","abstract":[{"text":"Discover how you can use BNNSGraph to accelerate the execution of your machine learning model on the CPU. We will show you how to use BNNSGraph to compile and execute a machine learning model on the CPU and share how it provides real-time guarantees such as no runtime memory allocation and single-threaded running for audio or signal processing models.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10210-Bring-your-apps-core-features-to-users-with-App-Intents":{"url":"\/documentation\/wwdcnotes\/wwdc24-10210-bring-your-apps-core-features-to-users-with-app-intents","kind":"article","abstract":[{"type":"text","text":"Learn the principles of the App Intents framework, like intents, entities, and queries, and how you can harness them to expose your app’s most important functionality right where people need it most. Find out how to build deep integration between your app and the many system features built on top of App Intents, including Siri, controls and widgets, Apple Pencil, Shortcuts, the Action button, and more. Get tips on how to build your App Intents integrations efficiently to create the best experiences in every surface while still sharing code and core functionality."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10210-Bring-your-apps-core-features-to-users-with-App-Intents","role":"sampleCode","type":"topic","title":"Bring your app’s core features to users with App Intents"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10089-Port-advanced-games-to-Apple-platforms":{"title":"Port advanced games to Apple platforms","abstract":[{"type":"text","text":"Discover how simple it can be to reach players on Apple platforms worldwide. We’ll show you how to evaluate your Windows executable on Apple silicon, start your game port with code samples, convert your shader code to Metal, and bring your game to Mac, iPhone, and iPad. Explore enhanced Metal tools that understand HLSL shaders to validate, debug, and profile your ported shaders on Metal."}],"role":"sampleCode","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10089-Port-advanced-games-to-Apple-platforms","url":"\/documentation\/wwdcnotes\/wwdc24-10089-port-advanced-games-to-apple-platforms"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10162-Keep-colors-consistent-across-captures":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10162-Keep-colors-consistent-across-captures","title":"Keep colors consistent across captures","kind":"article","type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc24-10162-keep-colors-consistent-across-captures","abstract":[{"type":"text","text":"Meet the Constant Color API and find out how it can help people use your app to determine precise colors. You’ll learn how to adopt the API, explore its scientific and marketing potential, and discover best practices for making the most of the technology."}]},"doc://WWDCNotes/documentation/WWDCNotes":{"images":[{"type":"icon","identifier":"WWDCNotes.png"}],"title":"WWDC Notes","url":"\/documentation\/wwdcnotes","kind":"symbol","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","role":"collection","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10065-Optimize-for-the-spatial-web":{"title":"Optimize for the spatial web","url":"\/documentation\/wwdcnotes\/wwdc24-10065-optimize-for-the-spatial-web","kind":"article","abstract":[{"text":"Discover how to make the most of visionOS capabilities on the web. Explore recent updates like improvements to selection highlighting, and the ability to present spatial photos and panorama images in fullscreen. Learn to take advantage of existing web standards for dictation and text-to-speech with WebSpeech, spatial soundscapes with WebAudio, and immersive experiences with WebXR.","type":"text"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10065-Optimize-for-the-spatial-web","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10113-Discover-media-performance-metrics-in-AVFoundation":{"type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10113-Discover-media-performance-metrics-in-AVFoundation","abstract":[{"text":"Discover how you can monitor, analyze, and improve user experience with the new media performance APIs. Explore how to monitor AVPlayer performance for HLS assets using different AVMetricEvents, and learn how to use these metrics to understand and triage player performance issues.","type":"text"}],"title":"Discover media performance metrics in AVFoundation","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10113-discover-media-performance-metrics-in-avfoundation"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10084-Build-custom-swimming-workouts-with-WorkoutKit":{"type":"topic","abstract":[{"text":"Check out the latest in creating, customizing, and scheduling workouts using WorkoutKit. Sprint through the latest in pace and power alerts and expanded support for distance goals. And keep the momentum going with the benefits of custom step names.","type":"text"}],"kind":"article","title":"Build custom swimming workouts with WorkoutKit","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc24-10084-build-custom-swimming-workouts-with-workoutkit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10084-Build-custom-swimming-workouts-with-WorkoutKit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-111801-Enhance-your-spatial-computing-app-with-RealityKit-audio":{"url":"\/documentation\/wwdcnotes\/wwdc24-111801-enhance-your-spatial-computing-app-with-realitykit-audio","kind":"article","abstract":[{"text":"Elevate your spatial computing experience using RealityKit audio. Discover how spatial audio can make your 3D immersive experiences come to life. From ambient audio, reverb, to real-time procedural audio that can add character to your 3D content, learn how RealityKit audio APIs can help make your app more engaging.","type":"text"}],"title":"Enhance your spatial computing app with RealityKit audio","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-111801-Enhance-your-spatial-computing-app-with-RealityKit-audio"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10067-Bring-context-to-todays-weather":{"title":"Bring context to today’s weather","abstract":[{"type":"text","text":"Harness the power of WeatherKit to get detailed weather forecast data such as precipitation amounts by type, cloud cover by altitude, or maximum wind speed. Find out how you can summarize weather by different parts of the day and highlight significant upcoming changes to temperature or precipitation. Understand how you can compare current weather to the past through our Historical Comparisons dataset and dive into historical weather statistics for any location in the world. We’ll also explore how you can do all of this faster with our Swift and REST APIs."}],"role":"sampleCode","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10067-Bring-context-to-todays-weather","url":"\/documentation\/wwdcnotes\/wwdc24-10067-bring-context-to-todays-weather"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10198-Run-Break-Inspect-Explore-effective-debugging-in-LLDB":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10198-Run-Break-Inspect-Explore-effective-debugging-in-LLDB","url":"\/documentation\/wwdcnotes\/wwdc24-10198-run-break-inspect-explore-effective-debugging-in-lldb","type":"topic","title":"Run, Break, Inspect: Explore effective debugging in LLDB","abstract":[{"type":"text","text":"Learn how to use LLDB to explore and debug codebases. We’ll show you how to make the most of crashlogs and backtraces, and how to supercharge breakpoints with actions and complex stop conditions. We’ll also explore how the “p” command and the latest features in Swift 6 can enhance your debugging experience."}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10110-Implement-App-Store-Offers":{"url":"\/documentation\/wwdcnotes\/wwdc24-10110-implement-app-store-offers","role":"sampleCode","kind":"article","title":"Implement App Store Offers","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10110-Implement-App-Store-Offers","abstract":[{"type":"text","text":"Learn how to engage customers with App Store Offers using App Store Connect, as well as the latest StoreKit features and APIs. Discover how you can set up win-back offers (a new way to re-engage previous subscribers) and generate offer codes for Mac apps. And find out how to test offers in sandbox and Xcode to make sure they work smoothly."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10278-Create-practical-workflows-in-Xcode-Cloud":{"type":"topic","title":"Create practical workflows in Xcode Cloud","abstract":[{"type":"text","text":"Learn how Xcode Cloud can help teams of all shapes and sizes in their development process. We’ll share different ways to configure actions to help you create simple yet powerful workflows, and show you how to extend Xcode Cloud when you integrate with additional tools."}],"url":"\/documentation\/wwdcnotes\/wwdc23-10278-create-practical-workflows-in-xcode-cloud","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10278-Create-practical-workflows-in-Xcode-Cloud","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10223-Explore-machine-learning-on-Apple-platforms":{"type":"topic","abstract":[{"text":"Get started with an overview of machine learning frameworks on Apple platforms. Whether you’re implementing your first ML model, or an ML expert, we’ll offer guidance to help you select the right framework for your app’s needs.","type":"text"}],"kind":"article","title":"Explore machine learning on Apple platforms","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc24-10223-explore-machine-learning-on-apple-platforms","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10223-Explore-machine-learning-on-Apple-platforms"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10170-Consume-noncopyable-types-in-Swift":{"type":"topic","title":"Consume noncopyable types in Swift","kind":"article","abstract":[{"type":"text","text":"Get started with noncopyable types in Swift. Discover what copying means in Swift, when you might want to use a noncopyable type, and how value ownership lets you state your intentions clearly."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10170-Consume-noncopyable-types-in-Swift","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc24-10170-consume-noncopyable-types-in-swift"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10168-Get-started-with-Writing-Tools":{"url":"\/documentation\/wwdcnotes\/wwdc24-10168-get-started-with-writing-tools","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10168-Get-started-with-Writing-Tools","kind":"article","abstract":[{"text":"Learn how Writing Tools help users proofread, rewrite, and transform text in your app. Get the details on how Writing Tools interact with your app so users can refine what they have written in any text view. Understand how text is retrieved and processed, and how to support Writing Tools in custom text views.","type":"text"}],"type":"topic","title":"Get started with Writing Tools","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10149-Work-with-windows-in-SwiftUI":{"role":"sampleCode","abstract":[{"type":"text","text":"Learn how to create great single and multi-window apps in visionOS, macOS, and iPadOS. Discover tools that let you programmatically open and close windows, adjust position and size, and even replace one window with another. We’ll also explore design principles for windows that help people use your app within their workflows."}],"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10149-work-with-windows-in-swiftui","type":"topic","title":"Work with windows in SwiftUI","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10149-Work-with-windows-in-SwiftUI"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10088-Capture-HDR-content-with-ScreenCaptureKit":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10088-Capture-HDR-content-with-ScreenCaptureKit","url":"\/documentation\/wwdcnotes\/wwdc24-10088-capture-hdr-content-with-screencapturekit","kind":"article","abstract":[{"text":"Learn how to capture high dynamic colors using ScreenCaptureKit, and explore new features like HDR support, microphone capture, and straight-to-file recording.","type":"text"}],"type":"topic","title":"Capture HDR content with ScreenCaptureKit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10147-Elevate-your-tab-and-sidebar-experience-in-iPadOS":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10147-Elevate-your-tab-and-sidebar-experience-in-iPadOS","url":"\/documentation\/wwdcnotes\/wwdc24-10147-elevate-your-tab-and-sidebar-experience-in-ipados","abstract":[{"type":"text","text":"iPadOS 18 introduces a new navigation system that gives people the flexibility to choose between using a tab bar or sidebar. The newly redesigned tab bar provides more space for content and other functionality. Learn how to use SwiftUI and UIKit to enable customization features – like adding, removing and reordering tabs – to enable a more personal touch in your app."}],"kind":"article","title":"Elevate your tab and sidebar experience in iPadOS","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10173-Analyze-heap-memory":{"type":"topic","title":"Analyze heap memory","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10173-Analyze-heap-memory","url":"\/documentation\/wwdcnotes\/wwdc24-10173-analyze-heap-memory","abstract":[{"text":"Dive into the basis for your app’s dynamic memory: the heap! Explore how to use Instruments and Xcode to measure, analyze, and fix common heap issues. We’ll also cover some techniques and best practices for diagnosing transient growth, persistent growth, and leaks in your app.","type":"text"}],"role":"sampleCode","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10096-Design-interactive-experiences-for-visionOS":{"url":"\/documentation\/wwdcnotes\/wwdc24-10096-design-interactive-experiences-for-visionos","kind":"article","abstract":[{"type":"text","text":"Learn how you can design a compelling interactive narrative experience for Apple Vision Pro from the designers of Encounter Dinosaurs. Discover how these types of experiences differ from existing apps, media, and games, and explore how to design narratives that bring audiences into new worlds. Find out how you can create stories that adapt to any space and size, provide multiple levels of interaction to make them accessible to all, and use animation, spatial audio, and custom gestures to further immerse people in your experience."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10096-Design-interactive-experiences-for-visionOS","role":"sampleCode","type":"topic","title":"Design interactive experiences for visionOS"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10102-Compose-interactive-3D-content-in-Reality-Composer-Pro":{"role":"sampleCode","title":"Compose interactive 3D content in Reality Composer Pro","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10102-Compose-interactive-3D-content-in-Reality-Composer-Pro","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10102-compose-interactive-3d-content-in-reality-composer-pro","abstract":[{"text":"Discover how the Timeline view in Reality Composer Pro can bring your 3D content to life. Learn how to create an animated story in which characters and objects interact with each other and the world around them using inverse kinematics, blend shapes, and skeletal poses. We’ll also show you how to use built-in and custom actions, sequence your actions, apply triggers, and implement natural movements.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10169-Migrate-your-app-to-Swift-6":{"role":"sampleCode","abstract":[{"type":"text","text":"Experience Swift 6 migration in action as we update an existing sample app. Learn how to migrate incrementally, module by module, and how the compiler helps you identify code that’s at risk of data races.  Discover different techniques for ensuring clear isolation boundaries and eliminating concurrent access to shared mutable state."}],"title":"Migrate your app to Swift 6","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10169-migrate-your-app-to-swift-6","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10169-Migrate-your-app-to-Swift-6","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10133-Bring-your-app-to-Siri":{"role":"sampleCode","title":"Bring your app to Siri","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10133-Bring-your-app-to-Siri","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10133-bring-your-app-to-siri","abstract":[{"text":"Learn how to use App Intents to expose your app’s functionality to Siri. Understand which intents are already available for your use, and how to create custom intents to integrate actions from your app into the system. We’ll also cover what metadata to provide, making your entities searchable via Spotlight, annotating onscreen references, and much more.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10086-Design-great-visionOS-apps":{"kind":"article","role":"sampleCode","type":"topic","title":"Design great visionOS apps","url":"\/documentation\/wwdcnotes\/wwdc24-10086-design-great-visionos-apps","abstract":[{"type":"text","text":"Find out how to create compelling spatial computing apps by embracing immersion, designing for eyes and hands, and taking advantage of depth, scale, and space. We’ll share several examples of great visionOS apps and explore how their designers approached creating new experiences for the platform."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10086-Design-great-visionOS-apps"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10224-Simplify-distribution-in-Xcode-and-Xcode-Cloud":{"title":"Simplify distribution in Xcode and Xcode Cloud","url":"\/documentation\/wwdcnotes\/wwdc23-10224-simplify-distribution-in-xcode-and-xcode-cloud","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10224-Simplify-distribution-in-Xcode-and-Xcode-Cloud","abstract":[{"text":"Discover how to share your app using Xcode’s streamlined distribution, which allows you to submit your app to TestFlight or the App Store with one click. We’ll also show you how to use Xcode Cloud to simplify your distribution process by automatically including notes for testers in TestFlight, and use post-action to automatically notarize your Mac apps.","type":"text"}],"role":"sampleCode","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10159-Bring-your-machine-learning-and-AI-models-to-Apple-silicon":{"url":"\/documentation\/wwdcnotes\/wwdc24-10159-bring-your-machine-learning-and-ai-models-to-apple-silicon","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10159-Bring-your-machine-learning-and-AI-models-to-Apple-silicon","kind":"article","abstract":[{"text":"Learn how to optimize your machine learning and AI models to leverage the power of Apple silicon. Review model conversion workflows to prepare your models for on-device deployment. Understand model compression techniques that are compatible with Apple silicon, and at what stages in your model deployment workflow you can apply them. We’ll also explore the tradeoffs between storage size, latency, power usage and accuracy.","type":"text"}],"type":"topic","title":"Bring your machine learning and AI models to Apple silicon","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10103-Discover-RealityKit-APIs-for-iOS-macOS-and-visionOS":{"role":"sampleCode","title":"Discover RealityKit APIs for iOS, macOS and visionOS","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10103-Discover-RealityKit-APIs-for-iOS-macOS-and-visionOS","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10103-discover-realitykit-apis-for-ios-macos-and-visionos","abstract":[{"text":"Learn how new cross-platform APIs in RealityKit can help you build immersive apps for iOS, macOS, and visionOS. Check out the new hover effects, lights and shadows, and portal crossing features, and view them in action through real examples.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10185-Build-multilingualready-apps":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10185-Build-multilingualready-apps","url":"\/documentation\/wwdcnotes\/wwdc24-10185-build-multilingualready-apps","abstract":[{"type":"text","text":"Ensure your app works properly and effectively for multilingual users. Learn best practices for text input, display, search, and formatting. Get details on typing in multiple languages without switching between keyboards. And find out how the latest advances in the String Catalog can make localization even easier."}],"kind":"article","title":"Build multilingual-ready apps","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10114-Enhance-ad-experiences-with-HLS-interstitials":{"url":"\/documentation\/wwdcnotes\/wwdc24-10114-enhance-ad-experiences-with-hls-interstitials","role":"sampleCode","kind":"article","title":"Enhance ad experiences with HLS interstitials","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10114-Enhance-ad-experiences-with-HLS-interstitials","abstract":[{"type":"text","text":"Explore how HLS Interstitials can help you seamlessly insert advertisements into your HLS content. We’ll also show you how to use integrated timeline to tune your UI experience and build SharePlay for interstitials."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10085-Design-advanced-games-for-Apple-platforms":{"url":"\/documentation\/wwdcnotes\/wwdc24-10085-design-advanced-games-for-apple-platforms","kind":"article","abstract":[{"text":"Learn how to adapt your high-end game so it feels at home on Mac, iPad, and iPhone. We’ll go over how to make your game look stunning on different displays, tailor your input and controls to be intuitive on each device, and take advantage of Apple technologies that deliver great player experiences.","type":"text"}],"title":"Design advanced games for Apple platforms","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10085-Design-advanced-games-for-Apple-platforms"},"https://developer.apple.com/wwdc24/10181":{"checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc24\/10181","url":"https:\/\/developer.apple.com\/wwdc24\/10181","type":"download"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10097-Unlock-the-power-of-places-with-MapKit":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10097-Unlock-the-power-of-places-with-MapKit","title":"Unlock the power of places with MapKit","kind":"article","type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc24-10097-unlock-the-power-of-places-with-mapkit","abstract":[{"type":"text","text":"Discover powerful new ways to integrate maps into your apps and websites with MapKit and MapKit JS.  Learn how to save and reference unique places using Place ID. Check out improvements to search that make it more efficient to find relevant places.  Get introduced to the new Place Card API that lets you display rich information about places so customers can explore destinations right in your app. And, we’ll show you quick ways to embed maps in your website with our simplified token provisioning and Web Embed API."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10145-Enhance-your-UI-animations-and-transitions":{"url":"\/documentation\/wwdcnotes\/wwdc24-10145-enhance-your-ui-animations-and-transitions","role":"sampleCode","kind":"article","title":"Enhance your UI animations and transitions","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10145-Enhance-your-UI-animations-and-transitions","abstract":[{"type":"text","text":"Explore how to adopt the zoom transition in navigation and presentations to increase the sense of continuity in your app, and learn how to animate UIKit views with SwiftUI animations to make it easier to build animations that feel continuous."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10197-Go-small-with-Embedded-Swift":{"role":"sampleCode","title":"Go small with Embedded Swift","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10197-Go-small-with-Embedded-Swift","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10197-go-small-with-embedded-swift","abstract":[{"text":"Embedded Swift brings the safety and expressivity of Swift to constrained environments. Explore how Embedded Swift runs on a variety of microcontrollers through a demonstration using an off-the-shelf Matter device. Learn how the Embedded Swift subset packs the benefits of Swift into a tiny footprint with no runtime, and discover plenty of resources to start your own Embedded Swift adventure.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10195-Go-further-with-Swift-Testing":{"role":"sampleCode","abstract":[{"type":"text","text":"Learn how to write a sweet set of (test) suites using Swift Testing’s baked-in features. Discover how to take the building blocks further and use them to help expand tests to cover more scenarios, organize your tests across different suites, and optimize your tests to run in parallel."}],"title":"Go further with Swift Testing","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10195-go-further-with-swift-testing","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10195-Go-further-with-Swift-Testing","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10070-Customize-feature-discovery-with-TipKit":{"url":"\/documentation\/wwdcnotes\/wwdc24-10070-customize-feature-discovery-with-tipkit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10070-Customize-feature-discovery-with-TipKit","kind":"article","abstract":[{"text":"Focused on feature discovery, the TipKit framework makes it easy to display tips in your app. Now you can group tips so features are discovered in the ideal order, make tips reusable with custom tip identifiers, match the look and feel to your app, and sync tips using CloudKit. Learn how you can use the latest advances in TipKit to help people discover everything your app has to offer.","type":"text"}],"type":"topic","title":"Customize feature discovery with TipKit","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10204-Build-a-great-Lock-Screen-camera-capture-experience":{"role":"sampleCode","title":"Build a great Lock Screen camera capture experience","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10204-Build-a-great-Lock-Screen-camera-capture-experience","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10204-build-a-great-lock-screen-camera-capture-experience","abstract":[{"text":"Find out how the LockedCameraCapture API can help you bring your capture application’s most useful information directly to the Lock Screen. Examine the API’s features and functionality, learn how to get started creating a capture extension, and find out how that extension behaves when the device is locked.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10220-Bring-expression-to-your-app-with-Genmoji":{"type":"topic","title":"Bring expression to your app with Genmoji","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10220-Bring-expression-to-your-app-with-Genmoji","url":"\/documentation\/wwdcnotes\/wwdc24-10220-bring-expression-to-your-app-with-genmoji","abstract":[{"text":"Discover how to bring Genmoji to life in your app. We’ll go over how to render, store, and communicate text that includes Genmoji. If your app features a custom text engine, we’ll also cover techniques for adding support for Genmoji.","type":"text"}],"role":"sampleCode","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10207-Migrate-your-TVML-app-to-SwiftUI":{"role":"sampleCode","title":"Migrate your TVML app to SwiftUI","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10207-Migrate-your-TVML-app-to-SwiftUI","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10207-migrate-your-tvml-app-to-swiftui","abstract":[{"text":"SwiftUI helps you build great apps on all Apple platforms and is the preferred toolkit for bringing your content into the living room with tvOS 18. Learn how to use SwiftUI to create familiar layouts and controls from TVMLKit, and get tips and best practices.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10153-Dive-deep-into-volumes-and-immersive-spaces":{"url":"\/documentation\/wwdcnotes\/wwdc24-10153-dive-deep-into-volumes-and-immersive-spaces","title":"Dive deep into volumes and immersive spaces","type":"topic","abstract":[{"text":"Discover powerful new ways to customize volumes and immersive spaces in visionOS. Learn to fine-tune how volumes resize and respond to people moving around them. Make volumes and immersive spaces interact through the power of coordinate conversions. Find out how to make your app react when people adjust immersion with the Digital Crown, and use a surrounding effect to dynamically customize the passthrough tint in your immersive space experience.","type":"text"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10153-Dive-deep-into-volumes-and-immersive-spaces","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10184-A-Swift-Tour-Explore-Swifts-features-and-design":{"url":"\/documentation\/wwdcnotes\/wwdc24-10184-a-swift-tour-explore-swifts-features-and-design","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10184-A-Swift-Tour-Explore-Swifts-features-and-design","kind":"article","abstract":[{"text":"Learn the essential features and design philosophy of the Swift programming language. We’ll explore how to model data, handle errors, use protocols, write concurrent code, and more while building up a Swift package that has a library, an HTTP server, and a command line client. Whether you’re just beginning your Swift journey or have been with us from the start, this talk will help you get the most out of the language.","type":"text"}],"type":"topic","title":"A Swift Tour: Explore Swift’s features and design","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10125-Streamline-signin-with-passkey-upgrades-and-credential-managers":{"url":"\/documentation\/wwdcnotes\/wwdc24-10125-streamline-signin-with-passkey-upgrades-and-credential-managers","kind":"article","abstract":[{"type":"text","text":"Learn how to automatically upgrade existing, password-based accounts to use passkeys. We’ll share why and how to improve account security and ease of sign-in, information about new features available for credential manager apps, and how to make your app information shine in the new Passwords app."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10125-Streamline-signin-with-passkey-upgrades-and-credential-managers","role":"sampleCode","type":"topic","title":"Streamline sign-in with passkey upgrades and credential managers"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10163-Discover-Swift-enhancements-in-the-Vision-framework":{"role":"sampleCode","abstract":[{"type":"text","text":"The Vision Framework API has been redesigned to leverage modern Swift features like concurrency, making it easier and faster to integrate a wide array of Vision algorithms into your app. We’ll tour the updated API and share sample code, along with best practices, to help you get the benefits of this framework with less coding effort. We’ll also demonstrate two new features: image aesthetics and holistic body pose."}],"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10163-discover-swift-enhancements-in-the-vision-framework","type":"topic","title":"Discover Swift enhancements in the Vision framework","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10163-Discover-Swift-enhancements-in-the-Vision-framework"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}],"alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10075-Track-model-changes-with-SwiftData-history":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10075-Track-model-changes-with-SwiftData-history","url":"\/documentation\/wwdcnotes\/wwdc24-10075-track-model-changes-with-swiftdata-history","kind":"article","abstract":[{"text":"Reveal the history of your model’s changes with SwiftData! Use the history API to understand when data store changes occurred, and learn how to use this information to build features like remote server sync and out-of-process change handing in your app. We’ll also cover how you can build support for the history API into a custom data store.","type":"text"}],"type":"topic","title":"Track model changes with SwiftData history"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10069-Broadcast-updates-to-your-Live-Activities":{"role":"sampleCode","title":"Broadcast updates to your Live Activities","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10069-Broadcast-updates-to-your-Live-Activities","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10069-broadcast-updates-to-your-live-activities","abstract":[{"text":"With broadcast push notifications, your app can send updates to thousands of Live Activities with a single request. We’ll discover how broadcast push notifications work between an app, a server, and the Apple Push Notification service, then we’ll walk through best practices for this capability and how to implement it.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10093-Bring-your-iOS-or-iPadOS-game-to-visionOS":{"abstract":[{"text":"Discover how to transform your iOS or iPadOS game into a uniquely visionOS experience. Increase the immersion (and fun factor!) with a 3D frame or an immersive background. And invite players further into your world by adding depth to the window with stereoscopy or head tracking.","type":"text"}],"title":"Bring your iOS or iPadOS game to visionOS","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10093-Bring-your-iOS-or-iPadOS-game-to-visionOS","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10093-bring-your-ios-or-ipados-game-to-visionos"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10066-Build-immersive-web-experiences-with-WebXR":{"abstract":[{"text":"Discover how WebXR empowers you to add fully immersive experiences to your website in visionOS. Find out how to build WebXR experiences that take full advantage of the input capabilities of visionOS, and learn how you can use Simulator to test WebXR experiences on macOS.","type":"text"}],"title":"Build immersive web experiences with WebXR","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10066-Build-immersive-web-experiences-with-WebXR","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10066-build-immersive-web-experiences-with-webxr"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10157-Extend-your-apps-controls-across-the-system":{"url":"\/documentation\/wwdcnotes\/wwdc24-10157-extend-your-apps-controls-across-the-system","kind":"article","abstract":[{"text":"Bring your app’s controls to Control Center, the Lock Screen, and beyond. Learn how you can use WidgetKit to extend your app’s controls to the system experience. We’ll cover how you can to build a control, tailor its appearance, and make it configurable.","type":"text"}],"title":"Extend your app’s controls across the system","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10157-Extend-your-apps-controls-across-the-system"},"https://github.com/dustynaugust":{"identifier":"https:\/\/github.com\/dustynaugust","url":"https:\/\/github.com\/dustynaugust","type":"link","titleInlineContent":[{"text":"GitHub","type":"text"}],"title":"GitHub"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10186-Optimize-your-3D-assets-for-spatial-computing":{"role":"sampleCode","abstract":[{"type":"text","text":"Dive into an end-to-end workflow for optimized 3D asset creation. Discover best practices for optimizing meshes, materials, and textures in your digital content creation tool. Learn how to harness shader graph, baking, and material instances to enhance your 3D scene while optimizing performance. Take advantage of native tools to work more effectively with your assets and improve your app’s performance."}],"title":"Optimize your 3D assets for spatial computing","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10186-optimize-your-3d-assets-for-spatial-computing","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10186-Optimize-your-3D-assets-for-spatial-computing","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10179-Meet-Swift-Testing":{"url":"\/documentation\/wwdcnotes\/wwdc24-10179-meet-swift-testing","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10179-Meet-Swift-Testing","kind":"article","role":"sampleCode","title":"Meet Swift Testing","type":"topic","abstract":[{"text":"Introducing Swift Testing: a new package for testing your code using Swift. Explore the building blocks of its powerful new API, discover how it can be applied in common testing workflows, and learn how it relates to XCTest and open source Swift.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10209-Enhanced-suggestions-for-your-journaling-app":{"title":"Enhanced suggestions for your journaling app","abstract":[{"text":"Find out how your journaling app can display journaling suggestions with richer content from the system. Explore new types of available content like state of mind data, reflection prompts, and support for third-party media content and motion-based activities.","type":"text"}],"role":"sampleCode","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10209-Enhanced-suggestions-for-your-journaling-app","url":"\/documentation\/wwdcnotes\/wwdc24-10209-enhanced-suggestions-for-your-journaling-app"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10068-Bring-your-Live-Activity-to-Apple-Watch":{"url":"\/documentation\/wwdcnotes\/wwdc24-10068-bring-your-live-activity-to-apple-watch","kind":"article","abstract":[{"text":"Bring Live Activities into the Smart Stack on Apple Watch with iOS 18 and watchOS 11. We’ll cover how Live Activities are presented on Apple Watch, as well as how you can enhance their presentation for the Smart Stack. We’ll also explore additional considerations to ensure Live Activities on Apple Watch always present up-to-date information.","type":"text"}],"title":"Bring your Live Activity to Apple Watch","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10068-Bring-your-Live-Activity-to-Apple-Watch"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10152-Create-custom-hover-effects-in-visionOS":{"title":"Create custom hover effects in visionOS","kind":"article","role":"sampleCode","abstract":[{"type":"text","text":"Learn how to develop custom hover effects that update views when people look at them. Find out how to build an expanding button effect that combines opacity, scale, and clip effects. Discover best practices for creating effects that are comfortable and respect people’s accessibility needs."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10152-Create-custom-hover-effects-in-visionOS","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10152-create-custom-hover-effects-in-visionos"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10217-Explore-Swift-performance":{"url":"\/documentation\/wwdcnotes\/wwdc24-10217-explore-swift-performance","title":"Explore Swift performance","type":"topic","abstract":[{"text":"Discover how Swift balances abstraction and performance. Learn what elements of performance to consider and how the Swift optimizer affects them. Explore the different features of Swift and how they’re implemented to further understand the tradeoffs available that can impact performance.","type":"text"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10217-Explore-Swift-performance","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10151-Create-custom-visual-effects-with-SwiftUI":{"abstract":[{"type":"text","text":"Discover how to create stunning visual effects in SwiftUI. Learn to build unique scroll effects, rich color treatments, and custom transitions. We’ll also explore advanced graphic effects using Metal shaders and custom text rendering."}],"kind":"article","type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10151-Create-custom-visual-effects-with-SwiftUI","title":"Create custom visual effects with SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc24-10151-create-custom-visual-effects-with-swiftui"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10138-Create-a-custom-data-store-with-SwiftData":{"title":"Create a custom data store with SwiftData","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10138-create-a-custom-data-store-with-swiftdata","abstract":[{"text":"Combine the power of SwiftData’s expressive, declarative modeling API with your own persistence backend. Learn how to build a custom data store and explore how to progressively add persistence features in your app. To get the most out of this session, watch “Meet SwiftData” and “Model your schema with SwiftData” from WWDC23.","type":"text"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10138-Create-a-custom-data-store-with-SwiftData","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10218-Accelerate-machine-learning-with-Metal":{"type":"topic","title":"Accelerate machine learning with Metal","kind":"article","abstract":[{"type":"text","text":"Learn how to accelerate your machine learning transformer models with new features in Metal Performance Shaders Graph. We’ll also cover how to improve your model’s compute bandwidth and quality, and visualize it in the all new MPSGraph viewer."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10218-Accelerate-machine-learning-with-Metal","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc24-10218-accelerate-machine-learning-with-metal"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10104-Build-a-spatial-drawing-app-with-RealityKit":{"role":"sampleCode","title":"Build a spatial drawing app with RealityKit","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10104-Build-a-spatial-drawing-app-with-RealityKit","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc24-10104-build-a-spatial-drawing-app-with-realitykit","abstract":[{"text":"Harness the power of RealityKit through the process of building a spatial drawing app. As you create an eye-catching spatial experience that integrates RealityKit with ARKit and SwiftUI, you’ll explore how resources work in RealityKit and how to use features like low-level mesh and texture APIs to achieve fast updates of the users’ brush strokes.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10131-Support-semantic-search-with-Core-Spotlight":{"type":"topic","title":"Support semantic search with Core Spotlight","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10131-Support-semantic-search-with-Core-Spotlight","url":"\/documentation\/wwdcnotes\/wwdc24-10131-support-semantic-search-with-core-spotlight","abstract":[{"text":"Learn how to provide semantic search results in your app using Core Spotlight. Understand how to make your app’s content available in the user’s private, on-device index so people can search for items using natural language. We’ll also share how to optimize your app’s performance by scheduling indexing activities.","type":"text"}],"role":"sampleCode","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10100-Create-enhanced-spatial-computing-experiences-with-ARKit":{"url":"\/documentation\/wwdcnotes\/wwdc24-10100-create-enhanced-spatial-computing-experiences-with-arkit","kind":"article","abstract":[{"text":"Learn how to create captivating immersive experiences with ARKit’s latest features. Explore ways to use room tracking and object tracking to further engage with your surroundings. We’ll also share how your app can react to changes in your environment’s lighting on this platform. Discover improvements in hand tracking and plane detection which can make your spatial experiences more intuitive.","type":"text"}],"title":"Create enhanced spatial computing experiences with ARKit","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10100-Create-enhanced-spatial-computing-experiences-with-ARKit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110370-Debug-Swift-debugging-with-LLDB":{"title":"Debug Swift debugging with LLDB","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110370-Debug-Swift-debugging-with-LLDB","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-110370-debug-swift-debugging-with-lldb","kind":"article","abstract":[{"text":"Learn how you can set up complex Swift projects for debugging. We’ll take you on a deep dive into the internals of LLDB and debug info. We’ll also share best practices for complex scenarios such as debugging code built on build servers or code from custom build systems.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10092-Render-Metal-with-passthrough-in-visionOS":{"role":"sampleCode","abstract":[{"type":"text","text":"Get ready to extend your Metal experiences for visionOS. Learn best practices for integrating your rendered content with people’s physical environments with passthrough. Find out how to position rendered content to match the physical world, reduce latency with trackable anchor prediction, and more."}],"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10092-render-metal-with-passthrough-in-visionos","type":"topic","title":"Render Metal with passthrough in visionOS","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10092-Render-Metal-with-passthrough-in-visionOS"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10216-Explore-the-Swift-on-Server-ecosystem":{"role":"sampleCode","abstract":[{"type":"text","text":"Swift is a great language for writing your server applications, and powers critical services across Apple’s cloud products. We’ll explore tooling, delve into the Swift server package ecosystem, and demonstrate how to interact with databases and add observability to applications."}],"title":"Explore the Swift on Server ecosystem","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10216-explore-the-swift-on-server-ecosystem","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10216-Explore-the-Swift-on-Server-ecosystem","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10200-Extend-your-Xcode-Cloud-workflows":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10200-Extend-your-Xcode-Cloud-workflows","kind":"article","type":"topic","abstract":[{"text":"Discover how Xcode Cloud can adapt to your development needs. We’ll show you how to streamline your workflows, automate testing and distribution with start conditions, custom aliases, custom scripts, webhooks, and the App Store Connect API.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc24-10200-extend-your-xcode-cloud-workflows","title":"Extend your Xcode Cloud workflows","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10116-Explore-multiview-video-playback-in-visionOS":{"url":"\/documentation\/wwdcnotes\/wwdc24-10116-explore-multiview-video-playback-in-visionos","title":"Explore multiview video playback in visionOS","type":"topic","abstract":[{"text":"Learn how AVExperienceController can enable playback of multiple videos on Apple Vision Pro. Review best practices for adoption and explore great use cases, like viewing a sports broadcast from different angles or watching multiple games simultaneously. And discover how to design a compelling and intuitive multiview experience in your app.","type":"text"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10116-Explore-multiview-video-playback-in-visionOS","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10109-Explore-wellbeing-APIs-in-HealthKit":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10109-Explore-wellbeing-APIs-in-HealthKit","url":"\/documentation\/wwdcnotes\/wwdc24-10109-explore-wellbeing-apis-in-healthkit","abstract":[{"type":"text","text":"Learn how to incorporate mental health and wellbeing into your app using HealthKit. There are new APIs for State of Mind, as well as for Depression Risk and Anxiety Risk. We’ll dive into principles of emotion science to cover how reflecting on feelings can be beneficial, and how State of Mind can be used to represent different types of mood and emotion."}],"kind":"article","title":"Explore wellbeing APIs in HealthKit","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10146-Demystify-SwiftUI-containers":{"type":"topic","abstract":[{"text":"Learn about the capabilities of SwiftUI container views and build a mental model for how subviews are managed by their containers. Leverage new APIs to build your own custom containers, create modifiers to customize container content, and give your containers that extra polish that helps your apps stand out.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc24-10146-demystify-swiftui-containers","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10146-Demystify-SwiftUI-containers","kind":"article","title":"Demystify SwiftUI containers"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10172-Break-into-the-RealityKit-debugger":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10172-Break-into-the-RealityKit-debugger","role":"sampleCode","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10172-break-into-the-realitykit-debugger","abstract":[{"text":"Meet the RealityKit debugger and discover how this new tool lets you inspect the entity hierarchy of spatial apps, debug rogue transformations, find missing entities, and detect which parts of your code are causing problems for your systems.","type":"text"}],"type":"topic","title":"Break into the RealityKit debugger"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10122-Use-CloudKit-Console-to-monitor-and-optimize-database-activity":{"kind":"article","role":"sampleCode","abstract":[{"text":"Discover the new observability features in CloudKit Console. Learn how to use Telemetry and Logging to troubleshoot and optimize your app. Find out how to set up alerts to monitor your application’s behavior and notifications to stay on top of the container events that are most important to you.","type":"text"}],"title":"Use CloudKit Console to monitor and optimize database activity","url":"\/documentation\/wwdcnotes\/wwdc24-10122-use-cloudkit-console-to-monitor-and-optimize-database-activity","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10122-Use-CloudKit-Console-to-monitor-and-optimize-database-activity"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10155-Swift-Charts-Vectorized-and-function-plots":{"abstract":[{"text":"The plot thickens! Learn how to render beautiful charts representing math functions and extensive datasets using function and vectorized plots in your app. Whether you’re looking to display functions common in aerodynamics, magnetism, and higher order field theory, or create large interactive heat maps, Swift Charts has you covered.","type":"text"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10155-Swift-Charts-Vectorized-and-function-plots","title":"Swift Charts: Vectorized and function plots","type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc24-10155-swift-charts-vectorized-and-function-plots"},"doc://WWDCNotes/documentation/WWDCNotes/dustynaugust":{"type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/dustynaugust","abstract":[{"text":"No Bio on GitHub","type":"text"}],"kind":"article","title":"Dustyn August (2 notes)","url":"\/documentation\/wwdcnotes\/dustynaugust"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10098-Design-Live-Activities-for-Apple-Watch":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10098-design-live-activities-for-apple-watch","type":"topic","role":"sampleCode","abstract":[{"text":"Starting in watchOS 11, Live Activities from your iOS app will automatically appear in the Smart Stack on a connected Apple Watch. Learn how to optimize the layout of your Live Activity for the wrist, and provide the right level of information and interactivity at the right time.","type":"text"}],"title":"Design Live Activities for Apple Watch","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10098-Design-Live-Activities-for-Apple-Watch"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10132-Evolve-your-document-launch-experience":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10132-Evolve-your-document-launch-experience","url":"\/documentation\/wwdcnotes\/wwdc24-10132-evolve-your-document-launch-experience","title":"Evolve your document launch experience","type":"topic","abstract":[{"text":"Make your document-based app stand out, and bring its unique identity into focus with the new document launch experience. Learn how to leverage the new API to customize the first screen people see when they launch your app. Utilize the new system-provided design, and amend it with custom actions, delightful decorative views, and impressive animations.","type":"text"}],"role":"sampleCode","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10074-Get-started-with-Dynamic-Type":{"abstract":[{"type":"text","text":"Dynamic Type lets people choose their preferred text size across the system and all of their apps. To help you get started supporting Dynamic Type, we’ll cover the fundamentals: How it works, how to find issues with scaling text in your app, and how to take practical steps using SwiftUI and UIKit to create a great Dynamic Type experience. We’ll also show how you can best use the Large Content Viewer to make navigation controls accessible to everyone."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10074-Get-started-with-Dynamic-Type","title":"Get started with Dynamic Type","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10074-get-started-with-dynamic-type","type":"topic","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10115-Enhance-the-immersion-of-media-viewing-in-custom-environments":{"url":"\/documentation\/wwdcnotes\/wwdc24-10115-enhance-the-immersion-of-media-viewing-in-custom-environments","kind":"article","abstract":[{"type":"text","text":"Extend your media viewing experience using Reality Composer Pro components like Docking Region, Reverb, and Virtual Environment Probe. Find out how to further enhance immersion using Reflections, Tint Surroundings Effect, SharePlay, and the Immersive Environment Picker."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10115-Enhance-the-immersion-of-media-viewing-in-custom-environments","role":"sampleCode","type":"topic","title":"Enhance the immersion of media viewing in custom environments"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10166-Build-compelling-spatial-photo-and-video-experiences":{"type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10166-Build-compelling-spatial-photo-and-video-experiences","abstract":[{"text":"Learn how to adopt spatial photos and videos in your apps. Explore the different types of stereoscopic media and find out how to capture spatial videos in your iOS app on iPhone 15 Pro. Discover the various ways to detect and present spatial media, including the new QuickLook Preview Application API in visionOS. And take a deep dive into the metadata and stereo concepts that make a photo or video spatial.","type":"text"}],"title":"Build compelling spatial photo and video experiences","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10166-build-compelling-spatial-photo-and-video-experiences"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10083-Get-started-with-HealthKit-in-visionOS":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10083-Get-started-with-HealthKit-in-visionOS","abstract":[{"text":"Discover how to use HealthKit to create experiences that take full advantage of the spatial canvas. Learn the capabilities of HealthKit on the platform, find out how to bring an existing iPadOS app to visionOS, and explore the special considerations governing HealthKit during a Guest User session. You’ll also learn ways to use SwiftUI, Swift Charts, and Swift concurrency to craft innovative experiences with HealthKit.","type":"text"}],"title":"Get started with HealthKit in visionOS","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc24-10083-get-started-with-healthkit-in-visionos"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10171-Demystify-explicitly-built-modules":{"abstract":[{"type":"text","text":"Explore how builds are changing in Xcode 16 with explicitly built modules. Discover how modules are used to build your code, how explicitly built modules improve transparency in compilation tasks, and how you can optimize your build by sharing modules across targets."}],"type":"topic","kind":"article","role":"sampleCode","title":"Demystify explicitly built modules","url":"\/documentation\/wwdcnotes\/wwdc24-10171-demystify-explicitly-built-modules","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10171-Demystify-explicitly-built-modules"},"https://avatars.githubusercontent.com/u/5668274?v=4":{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/5668274?v=4","type":"image","variants":[{"traits":["1x","light"],"url":"https:\/\/avatars.githubusercontent.com\/u\/5668274?v=4"}],"alt":"Profile image of Dustyn August"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110361-Author-fast-and-reliable-tests-for-Xcode-Cloud":{"title":"Author fast and reliable tests for Xcode Cloud","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110361-Author-fast-and-reliable-tests-for-Xcode-Cloud","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-110361-author-fast-and-reliable-tests-for-xcode-cloud","kind":"article","abstract":[{"text":"Discover how you can create effective testing plans for Xcode Cloud, Apple’s continuous integration and continuous delivery service. We’ll show you how testing can be an essential tool to consistently verify your code works correctly. Learn how you can author fast, reliable, and efficient tests for Xcode Cloud, avoid irrelevant failures, and verify your code changes quickly.","type":"text"}]},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","type":"link","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"title":"Contributions are welcome!"},"https://x.com/dustynaugust":{"identifier":"https:\/\/x.com\/dustynaugust","url":"https:\/\/x.com\/dustynaugust","type":"link","titleInlineContent":[{"text":"X\/Twitter","type":"text"}],"title":"X\/Twitter"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10226-Debug-with-structured-logging":{"type":"topic","kind":"article","abstract":[{"type":"text","text":"Discover the debug console in Xcode 15 and learn how you can improve your diagnostic experience through logging. Explore how you can navigate your logs easily and efficiently using advanced filtering and improved visualization. We’ll also show you how to use the dwim-print command to evaluate expressions in your code while debugging."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10226-Debug-with-structured-logging","role":"sampleCode","title":"Debug with structured logging","url":"\/documentation\/wwdcnotes\/wwdc23-10226-debug-with-structured-logging"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10140-Add-personality-to-your-app-through-UX-writing":{"role":"sampleCode","abstract":[{"type":"text","text":"Every app has a personality that comes across in what you say — and how you say it. Learn how to define your app’s voice and modulate your tone for every situation, from celebratory notifications to error messages. We’ll help you get specific about your app’s purpose and audience and practice writing in different tones."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10140-Add-personality-to-your-app-through-UX-writing","url":"\/documentation\/wwdcnotes\/wwdc24-10140-add-personality-to-your-app-through-ux-writing","kind":"article","title":"Add personality to your app through UX writing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10094-Explore-game-input-in-visionOS":{"type":"topic","title":"Explore game input in visionOS","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10094-Explore-game-input-in-visionOS","url":"\/documentation\/wwdcnotes\/wwdc24-10094-explore-game-input-in-visionos","abstract":[{"text":"Discover how to design and implement great input for your game in visionOS. Learn how system gestures let you provide frictionless ways for players to interact with your games. And explore best practices for supporting custom gestures and game controllers.","type":"text"}],"role":"sampleCode","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10112-Say-hello-to-the-next-generation-of-CarPlay-design-system":{"type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10112-Say-hello-to-the-next-generation-of-CarPlay-design-system","abstract":[{"text":"Explore the design system at the heart of the next generation of CarPlay that allows each automaker to express your vehicle’s character and brand. Learn how gauges, layouts, dynamic content, and more are deeply customizable and adaptable, allowing you to express your own design philosophy and create an iconic, tailored look. This session is intended for automakers, system developers, and anyone designing a system that supports the next generation of CarPlay.","type":"text"}],"title":"Say hello to the next generation of CarPlay design system","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc24-10112-say-hello-to-the-next-generation-of-carplay-design-system"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10087-Create-custom-environments-for-your-immersive-apps-in-visionOS":{"url":"\/documentation\/wwdcnotes\/wwdc24-10087-create-custom-environments-for-your-immersive-apps-in-visionos","title":"Create custom environments for your immersive apps in visionOS","type":"topic","abstract":[{"text":"Discover how to create visually rich and performant customized app environments for Apple Vision Pro. Learn design guidelines, get expert recommendations, and explore techniques you can use in any digital content creation tool to begin building your immersive environment.","type":"text"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10087-Create-custom-environments-for-your-immersive-apps-in-visionOS","kind":"article"},"WWDC24-10181-xcode-essentials-test-statuses":{"identifier":"WWDC24-10181-xcode-essentials-test-statuses","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC24-10181-xcode-essentials-test-statuses.jpeg"}],"alt":"Xcode test statuses showing the following: A Green diamond with a white check mark meaning \\\"All test cases passed\\\", a Red diamond with a white X  meaning \\\"At least one test method failed\\\", a Gray diamond with a white X  meaning \\\"Some test methods failed with expected errors\\\", a Gray diamond with a white arrow  meaning \\\"All tests were skipped\\\", a Green diamond with a white minus sign meaning \\\"Mixed outcome - some tests passed while others were expected failures or skips\\\", and a Red diamond with a white minus sign meaning \\\"Mixed outcome - some tests failed with expected failures or skips\\\"."}}}