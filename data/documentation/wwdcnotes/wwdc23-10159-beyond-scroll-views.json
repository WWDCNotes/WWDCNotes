{"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10159-Beyond-scroll-views","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Find out how you can take your scroll views to the next level with the latest APIs in SwiftUI. We’ll show you how to customize scroll views like never before. Explore the relationship between safe areas and a scroll view’s margins, learn how to interact with the content offset of a scroll view, and discover how you can add a bit of flair to your content with scroll transitions."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23"]]},"sampleCodeDownload":{"action":{"isActive":true,"type":"reference","overridingTitle":"Watch Video (14 min)","identifier":"https:\/\/developer.apple.com\/wwdc23\/10159"},"kind":"sampleDownload"},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc23-10159-beyond-scroll-views"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"WWDC23","modules":[{"name":"WWDC Notes"}],"role":"sampleCode","title":"Beyond scroll views"},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"About-ScrollView","level":2,"text":"About ScrollView"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/scrollview"},{"type":"text","text":" is an important block that lets you show everything that won’t fit on screen. Scroll views have axes that define the directions in which they’re scrollable. Scroll views have content, when it exceeds the size of the ScrollView, some of that content will be clipped. Scroll views ensure that the content is placed within the safe area by resolving the safe area into margins outsetting its content. A ScrollView evaluates its content either eagerly or lazily by using a lazy stack."}]},{"type":"heading","anchor":"Margins-and-safe-area","level":2,"text":"Margins and safe area"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Content is clipped when scrolling if you add padding to the ScrollView"}]},{"type":"codeListing","syntax":"swift","code":["ScrollView(.horizontal) {","  LazyHStack(spacing: Spacing) {","    ForEach(palettes) { palette in","      HeroView(palette: palette)","    }","  }","}",".padding(.horizontal, hMargin)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"New "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/safeareapadding(_:)-5lh9p"},{"type":"text","text":" adds padding to the safe area"}]},{"code":["ScrollView(.horizontal) {","  LazyHStack(spacing: Spacing) {","    ForEach(palettes) { palette in","      HeroView(palette: palette)","    }","  }","}",".safeAreaPadding(.horizontal, hMargin)"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"identifier":"WWDC23-10159-margins","type":"image"}]},{"text":"Different insets for different kinds of content","level":4,"anchor":"Different-insets-for-different-kinds-of-content","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inset the content of the ScrollView separately from the scroll indicators with "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/contentmargins(_:_:for:)-1lt8b","isActive":true}]},{"code":["ScrollView {","  \/\/ content","｝",".contentMargins(","  .vertical, 50.0,","  for: .scrollContent",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Inset the indicators separately from the content"}]},{"code":["ScrollView {","  \/\/ content","｝",".contentMargins(","  .vertical, 50.0,","  for: .scrollIndicators",")"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"So, for the previous example, it is better to use the ","type":"text"},{"overridingTitle":"contentMargins","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/contentmargins(_:_:for:)-1lt8b","overridingTitleInlineContent":[{"code":"contentMargins","type":"codeVoice"}],"type":"reference","isActive":true},{"text":" API","type":"text"}]},{"code":["ScrollView(.horizontal) {","  LazyHStack(spacing: Spacing) {","    ForEach(palettes) { palette in","      HeroView(palette: palette)","    }","  }","}",".contentMargins(","  .horizontal, hMargin,","  for: .scrollContent",")"],"type":"codeListing","syntax":"swift"},{"text":"Target content offset","level":2,"anchor":"Target-content-offset","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Control what content offset the ScrollView will scroll to once someone lifts their finger with the new "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrolltargetbehavior(_:)"},{"type":"text","text":" modifier."}]},{"text":"Paging","level":4,"anchor":"Paging","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Swipes one page at a time"}]},{"code":["ScrollView(.horizontal) {","  LazyHStack(spacing: Spacing) {","    ForEach(palettes) { palette in","      HeroView(palette: palette)","    }","  }","}",".contentMargins(.horizontal, hMargin)",".scrollTargetBehavior(.paging)"],"type":"codeListing","syntax":"swift"},{"text":"View aligned","level":4,"anchor":"View-aligned","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When aligned to individual views, ScrollView needs to know which views it should consider for alignment. Use the "},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrolltargetlayout(isenabled:)","type":"reference","isActive":true},{"type":"text","text":" modifier to have each view in the stack be considered a scroll target."}]},{"type":"codeListing","code":["ScrollView(.horizontal) {","  LazyHStack(spacing: Spacing) {","    ForEach(palettes) { palette in","      HeroView(palette: palette)","    }","  }","  .scrollTargetLayout()","}",".contentMargins(.horizontal, hMargin)",".scrollTargetBehavior(.viewAligned)"],"syntax":"swift"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"One more API to mark individual views as targets with "},{"type":"codeVoice","code":"scrollTarget"},{"type":"text","text":" modifier was mentioned during the session, but in fact it wasn’t released."}]}],"name":"⚠️ Note","type":"aside","style":"note"},{"anchor":"Custom-alignment","type":"heading","level":4,"text":"Custom alignment"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Conform to the "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/scrolltargetbehavior"},{"type":"text","text":" protocol"}]},{"type":"codeListing","code":["struct GalleryScrollTargetBehavior: ScrollTargetBehavior {","  func updateTarget(_ target: inout ScrollTarget, context: TargetContext) {","    if target.rect.minY < (context.containerSize.height \/ 3.0),","      context.velocity.dy < 0.0 ","    {","      target.rect.origin.y = 0.0","    }","  }","}"],"syntax":"swift"},{"anchor":"View-size-based-on-container-size","type":"heading","level":2,"text":"View size based on container size"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use new "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/containerrelativeframe(_:count:span:spacing:alignment:)"},{"type":"text","text":" modifier to set view size based on it’s container size."}]},{"anchor":"Witdh-of-a-container","type":"heading","level":4,"text":"Witdh of a container"},{"type":"codeListing","code":["HeroColorStack(palette: palette)","  .frame(height: 250.0)","  .containerRelativeFrame(.horizontal)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC23-10159-container_1"}]},{"anchor":"Grid-like-layout","type":"heading","level":4,"text":"Grid like layout"},{"type":"codeListing","code":["HeroColorStack(palette: palette)","  .frame(height: 250.0)","  .containerRelativeFrame(","    .horizontal,","    count: 2,","    spacing: 10.0","  )"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC23-10159-container_2"}]},{"type":"paragraph","inlineContent":[{"text":"Conditionalize the count based on the ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/environmentvalues\/horizontalsizeclass","isActive":true,"type":"reference"},{"text":" - two columns on ipad and one column on iphone","type":"text"}]},{"type":"codeListing","code":["@Environment(\\.horizontalSizeClass) private var sizeClass","","HeroColorStack(palette: palette)","  .frame(height: 250.0)","  .containerRelativeFrame(","    .horizontal,","    count: sizeClass == .regular ? 2 : 1,","    spacing: 10.0","  )"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/aspectratio(_:contentmode:)-771ow","type":"reference","isActive":true},{"text":" to have a height relative to the width, instead of hardcoding a fixed height","type":"text"}]},{"type":"codeListing","code":["@Environment(\\.horizontalSizeClass) private var sizeClass","","HeroColorStack(palette: palette)","  .aspectRatio(16.0\/9.0, contentMode: .fit)","  .containerRelativeFrame(","    .horizontal,","    count: sizeClass == .regular ? 2 : 1,","    spacing: 10.0","  )"],"syntax":"swift"},{"anchor":"Scroll-indicators","type":"heading","level":2,"text":"Scroll indicators"},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrollindicators(_:axes:)"},{"type":"text","text":" hides the indicators on touch devices or when using more flexible input devices, like trackpads on Mac, but to allow the indicators to show when a mouse is connected."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrollindicators(_:axes:)","type":"reference","overridingTitle":"scrollIndicators(.never)","overridingTitleInlineContent":[{"code":"scrollIndicators(.never)","type":"codeVoice"}]},{"type":"text","text":" to always hide the indicators regardless of input device."}]},{"anchor":"Change-position","type":"heading","level":4,"text":"Change position"},{"type":"paragraph","inlineContent":[{"text":"Change scroll position programmatically wth ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrollposition(id:anchor:)"},{"text":" modifier","type":"text"}]},{"type":"codeListing","code":["@State private var mainID: Palette.ID? = nil","","VStack {","  GallerySectionHeader(mainID: $mainID)","  ScrollView(.horizontal) { ... }","    .scrollPosition(id: $mainID)","}","","\/\/ in GallerySectionHeader","VStack {","  GalleryHeaderText()","  .overlay {","    GalleryPaddle(edge: .leading) {","      \/\/ When the binding is written to, the ScrollView will scroll to the view with that ID","      mainID = previousID()","    }","    \/\/ ...","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Scroll position modifier also uses the "},{"overridingTitleInlineContent":[{"type":"codeVoice","code":"scrollTargetLayout"}],"type":"reference","overridingTitle":"scrollTargetLayout","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrolltargetlayout(isenabled:)","isActive":true},{"type":"text","text":" modifier to know which views to consider for querying their identity values"}]},{"anchor":"Read-position","type":"heading","level":4,"text":"Read position"},{"type":"paragraph","inlineContent":[{"type":"reference","overridingTitle":"scrollPosition","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrollposition(id:anchor:)","overridingTitleInlineContent":[{"type":"codeVoice","code":"scrollPosition"}]},{"type":"text","text":" also allows to know the identity of the view currently scrolled"}]},{"type":"codeListing","code":["\/\/ in GallerySectionHeader","@Binding var mainID: Palette.ID?","","VStack {","  GalleryHeaderText()","  \/\/ Header view has text that shows the value of the hero image currently scrolled","  \/\/ When the most leading view changes, the binding automatically updates","  GallerySubheaderText(id: mainID)","}"],"syntax":"swift"},{"anchor":"Scroll-transitions","type":"heading","level":2,"text":"Scroll transitions"},{"type":"paragraph","inlineContent":[{"text":"Scale view down in size when it gets near the edges of the ScrollView wirh ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrolltransition(_:axis:transition:)","type":"reference","isActive":true}]},{"type":"codeListing","code":["HeroView(palette: palette)","  .scrollTransition(axis: .horizontal) { content, phase in","    content","      .scaleEffect(","        x: phase.isIdentity ? 1.0 : 0.80,","        y: phase.isIdentity ? 1.0 : 0.80","      )","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Rotation or offset can be custimized as well. But not all view modifiers can be used inside of a "},{"overridingTitle":"scrollTransition","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrolltransition(_:axis:transition:)","type":"reference","overridingTitleInlineContent":[{"type":"codeVoice","code":"scrollTransition"}],"isActive":true},{"type":"text","text":". For example, customizing the font is not supported. Anything that will change the overall content size of the ScrollView cannot be used within a "},{"overridingTitle":"scrollTransition","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrolltransition(_:axis:transition:)","type":"reference","overridingTitleInlineContent":[{"code":"scrollTransition","type":"codeVoice"}],"isActive":true},{"type":"text","text":" modifier."}]},{"type":"codeListing","code":["HeroView(palette: palette)","  .scrollTransition(axis: .horizontal) {","    content, phase in","    content","      .scaleEffect(","        x: phase.isIdentity ? 1.0 : 0.80,","        y: phase.isIdentity ? 1.0 : 0.80","      )","      .rotationEffect(","        .degrees(phase.isIdentity ? 0.0 : 90.0)","      )","      .offset(","        x: phase.isIdentity ? 0.0 : 20.0,","        y: phase.isIdentity ? 0.0 : 20.0","      )","  }"],"syntax":"swift"},{"anchor":"Written-By","type":"heading","level":2,"text":"Written By"},{"numberOfColumns":5,"type":"row","columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"rusik"}]}]},{"size":4,"content":[{"level":3,"text":"Ruslan Kavetsky","anchor":"Ruslan-Kavetsky","type":"heading"},{"inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"overridingTitle":"Contributed Notes","isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/rusik","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/rusik","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/","type":"reference"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference"}]},{"anchor":"Related-Sessions","type":"heading","level":2,"text":"Related Sessions"},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10037-Explore-pie-charts-and-interactivity-in-Swift-Charts","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10148-Whats-new-in-SwiftUI"]},{"type":"small","inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}]}],"kind":"article","references":{"https://developer.apple.com/documentation/swiftui/view/scrolltargetlayout(isenabled:)":{"titleInlineContent":[{"code":"scrollTargetLayout","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrolltargetlayout(isenabled:)","title":"scrollTargetLayout","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrolltargetlayout(isenabled:)"},"https://developer.apple.com/wwdc23/10159":{"url":"https:\/\/developer.apple.com\/wwdc23\/10159","type":"download","identifier":"https:\/\/developer.apple.com\/wwdc23\/10159","checksum":null},"https://developer.apple.com/documentation/swiftui/view/scrollindicators(_:axes:)":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrollindicators(_:axes:)","type":"link","title":"scrollIndicators(.hidden)","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrollindicators(_:axes:)","titleInlineContent":[{"code":"scrollIndicators(.hidden)","type":"codeVoice"}]},"https://developer.apple.com/documentation/swiftui/view/aspectratio(_:contentmode:)-771ow":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/aspectratio(_:contentmode:)-771ow","titleInlineContent":[{"type":"codeVoice","code":"aspectRatio"}],"type":"link","title":"aspectRatio","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/aspectratio(_:contentmode:)-771ow"},"WWDC23-Icon.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/WWDC23-Icon.png","traits":["1x","light"]}],"identifier":"WWDC23-Icon.png"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"type":"link","title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"https://developer.apple.com/documentation/swiftui/view/safeareapadding(_:)-5lh9p":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/safeareapadding(_:)-5lh9p","type":"link","title":"safeAreaPadding","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/safeareapadding(_:)-5lh9p","titleInlineContent":[{"type":"codeVoice","code":"safeAreaPadding"}]},"https://":{"identifier":"https:\/\/","titleInlineContent":[{"text":"Blog","type":"text"}],"type":"link","title":"Blog","url":"https:\/\/"},"rusik.jpeg":{"type":"image","alt":null,"variants":[{"url":"\/images\/rusik.jpeg","traits":["1x","light"]}],"identifier":"rusik.jpeg"},"https://developer.apple.com/documentation/swiftui/view/scrolltransition(_:axis:transition:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrolltransition(_:axis:transition:)","titleInlineContent":[{"type":"codeVoice","code":"scrollTransition"}],"type":"link","title":"scrollTransition","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrolltransition(_:axis:transition:)"},"doc://WWDCNotes/documentation/WWDCNotes/rusik":{"abstract":[{"text":"Make mobile apps with ❤️","type":"text"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/rusik","kind":"article","role":"sampleCode","title":"Ruslan Kavetsky (3 notes)","url":"\/documentation\/wwdcnotes\/rusik","images":[{"identifier":"rusik.jpeg","type":"card"},{"type":"icon","identifier":"rusik.jpeg"}]},"https://developer.apple.com/documentation/swiftui/scrolltargetbehavior":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/scrolltargetbehavior","type":"link","title":"ScrollTargetBehavior","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/scrolltargetbehavior","titleInlineContent":[{"type":"codeVoice","code":"ScrollTargetBehavior"}]},"WWDC23.jpeg":{"identifier":"WWDC23.jpeg","variants":[{"url":"\/images\/WWDC23.jpeg","traits":["1x","light"]}],"type":"image","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10037-Explore-pie-charts-and-interactivity-in-Swift-Charts":{"abstract":[{"text":"Swift Charts has come full circle: Get ready to bake up pie and donut charts in your app with the latest improvements to the framework. Learn how to make your charts scrollable, explore the chart selection API for revealing additional details in your data, and find out how enabling additional interactivity can make your charts even more delightful.","type":"text"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10037-Explore-pie-charts-and-interactivity-in-Swift-Charts","title":"Explore pie charts and interactivity in Swift Charts","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10037-explore-pie-charts-and-interactivity-in-swift-charts"},"https://developer.apple.com/documentation/swiftui/view/contentmargins(_:_:for:)-1lt8b":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/contentmargins(_:_:for:)-1lt8b","type":"link","title":"contentMargins","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/contentmargins(_:_:for:)-1lt8b","titleInlineContent":[{"code":"contentMargins","type":"codeVoice"}]},"https://github.com/rusik":{"identifier":"https:\/\/github.com\/rusik","titleInlineContent":[{"type":"text","text":"GitHub"}],"type":"link","title":"GitHub","url":"https:\/\/github.com\/rusik"},"WWDC23-10159-margins":{"type":"image","alt":"Example of screen with scroll view with safe area padding","variants":[{"url":"\/images\/WWDC23-10159-margins.jpg","traits":["1x","light"]}],"identifier":"WWDC23-10159-margins"},"doc://WWDCNotes/documentation/WWDCNotes":{"role":"collection","type":"topic","url":"\/documentation\/wwdcnotes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"images":[{"identifier":"WWDCNotes.png","type":"icon"}],"kind":"symbol","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","title":"WWDC Notes"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23","images":[{"identifier":"WWDC23-Icon.png","type":"icon"},{"identifier":"WWDC23.jpeg","type":"card"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23","abstract":[{"text":"Xcode 15, Swift 5.9, iOS 17, macOS 14 (Sonoma), tvOS 17, visionOS 1, watchOS 10.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"SwiftData","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Observation","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit","type":"codeVoice"},{"text":" views, and more.","type":"text"}],"title":"WWDC23","kind":"article","role":"collectionGroup"},"WWDC23-10159-container_2":{"identifier":"WWDC23-10159-container_2","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-10159-container_2.jpg"}],"type":"image","alt":"containerRelativeFrame two columns example"},"https://developer.apple.com/documentation/swiftui/view/scrolltargetbehavior(_:)":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrolltargetbehavior(_:)","type":"link","title":"scrollTargetBehavior","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrolltargetbehavior(_:)","titleInlineContent":[{"type":"codeVoice","code":"scrollTargetBehavior"}]},"WWDC23-10159-container_1":{"identifier":"WWDC23-10159-container_1","variants":[{"url":"\/images\/WWDC23-10159-container_1.jpg","traits":["1x","light"]}],"type":"image","alt":"containerRelativeFrame full width example"},"rusik":{"type":"image","alt":"Profile image of Ruslan Kavetsky","variants":[{"url":"\/images\/rusik.jpeg","traits":["1x","light"]}],"identifier":"rusik"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10148-Whats-new-in-SwiftUI":{"url":"\/documentation\/wwdcnotes\/wwdc23-10148-whats-new-in-swiftui","role":"sampleCode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10148-Whats-new-in-SwiftUI","type":"topic","abstract":[{"type":"text","text":"Learn how you can use SwiftUI to build great apps for all Apple platforms. Explore the latest updates to SwiftUI and discover new scene types for visionOS. Simplify your data models with the latest data flow options and learn about the Inspector view. We’ll also take you through enhanced animation APIs, powerful ScrollView improvements, and a host of refinements to help you make tidier tables, improve focus and keyboard input, and so much more."}],"title":"What’s new in SwiftUI"},"https://developer.apple.com/documentation/swiftui/view/scrollposition(id:anchor:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrollposition(id:anchor:)","titleInlineContent":[{"type":"codeVoice","code":"scrollPosition"}],"type":"link","title":"scrollPosition","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/scrollposition(id:anchor:)"},"WWDCNotes.png":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}],"identifier":"WWDCNotes.png"},"https://developer.apple.com/documentation/swiftui/view/containerrelativeframe(_:count:span:spacing:alignment:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/containerrelativeframe(_:count:span:spacing:alignment:)","titleInlineContent":[{"type":"codeVoice","code":"containerRelativeFrame"}],"type":"link","title":"containerRelativeFrame","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/containerrelativeframe(_:count:span:spacing:alignment:)"},"https://developer.apple.com/documentation/swiftui/environmentvalues/horizontalsizeclass":{"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/environmentvalues\/horizontalsizeclass","type":"link","title":"horizontalSizeClass","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/environmentvalues\/horizontalsizeclass","titleInlineContent":[{"code":"horizontalSizeClass","type":"codeVoice"}]},"https://developer.apple.com/documentation/swiftui/scrollview":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/scrollview","titleInlineContent":[{"type":"text","text":"ScrollView"}],"type":"link","title":"ScrollView","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/scrollview"}}}