{"sampleCodeDownload":{"kind":"sampleDownload","action":{"type":"reference","overridingTitle":"Watch Video (13 min)","identifier":"https:\/\/developer.apple.com\/wwdc22\/110355","isActive":true}},"seeAlsoSections":[{"title":"New Tools & Frameworks","generated":true,"identifiers":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10006-Meet-Apple-Maps-Server-APIs","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10148-Meet-Apple-Music-API-and-MusicKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110403-Meet-Background-Assets","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10116-Meet-CKTool-JS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10121-Meet-Focus-filters","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10156-Meet-ScreenCaptureKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110359-Meet-Swift-Package-plugins","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110357-Meet-Swift-Regex","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10062-Meet-Transferable","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10003-Meet-WeatherKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10098-Meet-Web-Push-for-Safari","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10069-Meet-desktopclass-iPad","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110356-Meet-distributed-actors-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10092-Meet-passkeys","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110381-Meet-the-expanded-San-Francisco-font-family"]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc22-110355-meet-swift-async-algorithms"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22"]]},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110355-Meet-Swift-Async-Algorithms"},"metadata":{"modules":[{"name":"WWDC Notes"}],"title":"Meet Swift Async Algorithms","roleHeading":"WWDC22","role":"sampleCode"},"abstract":[{"type":"text","text":"Discover the latest open source Swift package from Apple: Swift Async Algorithms. We’ll explore algorithms from this package that you can use with AsyncSequence, including zip, merge, and throttle. Follow along with us as we use these algorithms to build a great messaging app. We’ll also share best practices for combining multiple AsyncSequences and using the Swift Clock type to work with values over time."}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Swift Async Algorithms open-source package","type":"heading","anchor":"Swift-Async-Algorithms-open-source-package"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"set of algorithms specifically focused on processing values over time using ","type":"text"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncsequence","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"incorporates more advanced algorithms, as well as interoperating with clocks","type":"text"}],"type":"paragraph"}]}]},{"level":2,"text":"`AsyncSequence`","type":"heading","anchor":"AsyncSequence"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"protocol that lets you describe values produced asynchronously","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"just like ","type":"text"},{"type":"codeVoice","code":"Sequence"},{"text":" but uses Swift concurrency (","type":"text"},{"type":"codeVoice","code":"next()"},{"text":" function from its iterator, ","type":"text"},{"type":"codeVoice","code":"AsyncIterator"},{"text":", is ","type":"text"},{"type":"codeVoice","code":"async"},{"text":")","type":"text"}],"type":"paragraph"}]}]},{"level":3,"text":"Multi-input algorithms","type":"heading","anchor":"Multi-input-algorithms"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"algorithms that take multiple input "},{"type":"codeVoice","code":"AsyncSequences"},{"type":"text","text":" and produce one output "},{"type":"codeVoice","code":"AsyncSequence"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"focused on combining "},{"code":"AsyncSequences","type":"codeVoice"},{"type":"text","text":" together in different ways"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Examples:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncAlgorithms.docc\/Guides\/Zip.md","isActive":true},{"type":"text","text":" - creates an asynchronous sequence of pairs built out of underlying asynchronous sequences"}],"type":"paragraph"}]}]},{"syntax":"swift","type":"codeListing","code":["for try await (vid, preview) in zip(videos, previews) {","  try await upload(vid, preview)","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncAlgorithms.docc\/Guides\/Merge.md","type":"reference"},{"text":" - merges two or more asynchronous sequence into a single asynchronous sequence producing the elements of all of the underlying asynchronous sequences (elements types must be the same)","type":"text"}],"type":"paragraph"}]}]},{"syntax":"swift","type":"codeListing","code":["for try await message in merge(primaryAccount.messages, secondaryAccount.messages) {","  displayPreview(message)","}"]},{"level":2,"text":"Clock, Instant, and Duration","type":"heading","anchor":"Clock-Instant-and-Duration"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"new API in Swift 5.7","type":"text"}],"type":"paragraph"}]}]},{"level":3,"text":"`Clock`","type":"heading","anchor":"Clock"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Swift protocol, defines:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"a way to wake up after a given instant","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"a way to produce a concept of “now”","type":"text"}]}]}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Two built-in "},{"type":"codeVoice","code":"Clock"},{"type":"text","text":"s definitions are "},{"type":"codeVoice","code":"ContinuousClock"},{"type":"text","text":" and the "},{"type":"codeVoice","code":"SuspendingClock"},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"use ","type":"text"},{"code":"ContinuousClock","type":"codeVoice"},{"text":" to measure time just like a stopwatch, where time progresses no matter the state of the thing being measured","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"SuspendingClock"},{"type":"text","text":", on the other hand, suspends when the machine is put to sleep"}]}]}]},{"syntax":"swift","type":"codeListing","code":["\/\/ Sleep until a given deadline","","let clock = SuspendingClock() ","var deadline = clock.now + .seconds(3)","try await clock.sleep(until: deadline) "]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The key difference between these two clocks is that the "},{"type":"codeVoice","code":"ContinuousClock"},{"type":"text","text":" progresses while\/when\/if the machine is asleep."}]},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"type":"codeVoice","code":"SuspendingClock"},{"text":" for:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Measuring device time"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Delays for animation","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"ContinuousClock"},{"type":"text","text":" for:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Measuring human time"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Delays by an absolute duration","type":"text"}]}]}]},{"level":3,"text":"Swift Async Algorithms","type":"heading","anchor":"Swift-Async-Algorithms"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"the package brings in a family of algorithms to work with time by leveraging these new Swift APIs","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Examples:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncAlgorithms.docc\/Guides\/Debounce.md","type":"reference"}]}]}]},{"syntax":"swift","type":"codeListing","code":["let queries = searchValues.debounce(for: .milliseconds(300))","","for await query in queries {","  let results = try await performSearch(query)","  await channel.send(results)","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncAlgorithms.docc\/Guides\/Chunked.md","type":"reference"},{"type":"text","text":" - groups elements into collections by count\/time\/content"}]}]}]},{"syntax":"swift","type":"codeListing","code":["let batches = outboundMessages.chunked(","  by: .repeating(every: .milliseconds(500))",")","","let encoder = JSONEncoder() ","for await batch in batches {","  let data = try encoder.encode(batch)","  try await postToServer(data) ","}"]},{"level":2,"text":"Collections","type":"heading","anchor":"Collections"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"the package offers a set of initializers for constructing collections using "},{"code":"AsyncSequence","type":"codeVoice"},{"type":"text","text":" (array, set, dictionary)"}],"type":"paragraph"}]}]},{"level":2,"text":"Written By","type":"heading","anchor":"Written-By"},{"type":"row","columns":[{"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4"}]}],"size":1},{"content":[{"level":3,"text":"Federico Zanetello","anchor":"Federico-Zanetello","type":"heading"},{"type":"paragraph","inlineContent":[{"overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/zntfdr","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/zntfdr.dev","type":"reference","isActive":true}]}],"size":4}],"numberOfColumns":5},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","isActive":true}]},{"level":2,"text":"Related Sessions","type":"heading","anchor":"Related-Sessions"},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110354-Whats-new-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10058-Meet-AsyncSequence","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10256-Meet-the-Swift-Algorithms-and-Collections-packages"]},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}]},{"type":"small","inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}]}],"references":{"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","type":"link","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}]},"https://developer.apple.com/wwdc22/110355":{"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc22\/110355","url":"https:\/\/developer.apple.com\/wwdc22\/110355","checksum":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10058-Meet-AsyncSequence":{"title":"Meet AsyncSequence","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10058-Meet-AsyncSequence","abstract":[{"type":"text","text":"Iterating over a sequence of values over time is now as easy as writing a “for” loop. Find out how the new AsyncSequence protocol enables a natural, simple syntax for iterating over anything from notifications to bytes being streamed from a server. We’ll also show you how to adapt existing code to provide asynchronous sequences of your own."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10058-meet-asyncsequence"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","kind":"article","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/zntfdr","title":"Federico Zanetello (214 notes)"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides/Chunked.md":{"type":"link","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncAlgorithms.docc\/Guides\/Chunked.md","title":"chunks(...) and chunked(...)","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncAlgorithms.docc\/Guides\/Chunked.md","titleInlineContent":[{"type":"codeVoice","code":"chunks(...)"},{"type":"text","text":" and "},{"type":"codeVoice","code":"chunked(...)"}]},"doc://WWDCNotes/documentation/WWDCNotes":{"images":[{"type":"icon","identifier":"WWDCNotes.png"}],"abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"url":"\/documentation\/wwdcnotes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","kind":"symbol","title":"WWDC Notes","role":"collection"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110381-Meet-the-expanded-San-Francisco-font-family":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22-110381-meet-the-expanded-san-francisco-font-family","title":"Meet the expanded San Francisco font family","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110381-Meet-the-expanded-San-Francisco-font-family","type":"topic","role":"sampleCode","abstract":[{"type":"text","text":"Discover the latest additions to San Francisco – the system font for Apple platforms – and find out how they can provide more control and versatility when designing interfaces. In addition to weights and optical sizes, San Francisco now supports three new width styles: Condensed, Compressed, and Expanded. We’ll also take you through the linguistic expansion of San Francisco and learn more about the feature-rich Arabic system font families: SF Arabic and SF Arabic Rounded."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10069-Meet-desktopclass-iPad":{"title":"Meet desktop-class iPad","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10069-Meet-desktopclass-iPad","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22-10069-meet-desktopclass-ipad","abstract":[{"type":"text","text":"Learn how you can bring desktop-class features to your iPad app. Explore updates to UINavigationBar that bring more discoverability and customizability to your app’s features. Find out how the latest updates to UIKit can help make it easier and faster for people to explore content in your app. Lastly, we’ll share a few updates on how it’s easier than ever to bring your iPad app to the desktop with Mac Catalyst."}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10121-Meet-Focus-filters":{"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10121-meet-focus-filters","title":"Meet Focus filters","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10121-Meet-Focus-filters","abstract":[{"type":"text","text":"Discover how you can customize app behaviors based on someone’s currently enabled Focus. We’ll show you how to use App Intents to define your app’s Focus filters, act on changes from the system, and present your app’s views in different ways. We’ll also explore how you can filter notifications and update badge counts."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10006-Meet-Apple-Maps-Server-APIs":{"title":"Meet Apple Maps Server APIs","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10006-Meet-Apple-Maps-Server-APIs","abstract":[{"type":"text","text":"Simplify your app’s mapping architecture by implementing the Apple Maps stack across MapKit, MapKit JS, and Apple Maps Server APIs. Learn how these APIs can reduce network calls and increase power efficiency, which can help improve the overall performance of your app. We’ll show you how to use geocoding and estimated time of arrival APIs to build functionality for a simple store locator, and explore the API authentication flow."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10006-meet-apple-maps-server-apis"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22":{"url":"\/documentation\/wwdcnotes\/wwdc22","kind":"article","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"abstract":[{"type":"text","text":"Xcode 14, Swift 5.7, iOS 16, macOS 13, tvOS 16, watchOS 9."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"WeatherKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"ScreenCaptureKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"Swift Regex"},{"type":"text","text":", and more."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22","title":"WWDC22","role":"collectionGroup"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110403-Meet-Background-Assets":{"title":"Meet Background Assets","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110403-Meet-Background-Assets","abstract":[{"type":"text","text":"Discover how you can use the Background Assets framework to download large files directly from your CDN and improve the initial launch experience of your apps and games. We’ll show you how to schedule background downloads during initial app install, app updates, and periodically as someone uses the app. We’ll also explore how you can manage scheduled downloads to make sure people have the content they want, when they want it."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110403-meet-background-assets"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10003-Meet-WeatherKit":{"title":"Meet WeatherKit","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10003-Meet-WeatherKit","abstract":[{"type":"text","text":"WeatherKit offers valuable weather data for your apps and services to help people stay up to date on the latest conditions."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10003-meet-weatherkit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10148-Meet-Apple-Music-API-and-MusicKit":{"title":"Meet Apple Music API and MusicKit","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10148-Meet-Apple-Music-API-and-MusicKit","abstract":[{"type":"text","text":"Explore the Apple Music API and MusicKit client frameworks. Learn how you can integrate Apple Music features into your web service or Android app, make requests to the Apple Music API to discover and fetch content, and personalize the experience for subscribers."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10148-meet-apple-music-api-and-musickit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10256-Meet-the-Swift-Algorithms-and-Collections-packages":{"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10256-meet-the-swift-algorithms-and-collections-packages","title":"Meet the Swift Algorithms and Collections packages","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10256-Meet-the-Swift-Algorithms-and-Collections-packages","abstract":[{"type":"text","text":"Discover two of the latest additions to the list of open-source Swift packages from Apple: Swift Algorithms and Swift Collections. Not only can you use these packages immediately, they also incubate new algorithms and data structures for eventual inclusion in the Swift Standard Library. We’ll show you how you can integrate these packages into your projects and select the right algorithms and data structures to make your code clearer and faster."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110354-Whats-new-in-Swift":{"url":"\/documentation\/wwdcnotes\/wwdc22-110354-whats-new-in-swift","title":"What’s new in Swift","abstract":[{"text":"Join us for an update on Swift. We’ll take you through performance improvements, explore more secure and extensible Swift packages, and share advancements in Swift concurrency. We’ll also introduce you to Swift Regex, better generics, and other tools built into the language to help you write more flexible & expressive code.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110354-Whats-new-in-Swift","type":"topic","kind":"article","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10156-Meet-ScreenCaptureKit":{"title":"Meet ScreenCaptureKit","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10156-Meet-ScreenCaptureKit","abstract":[{"type":"text","text":"Learn how ScreenCaptureKit can deliver high-performance screen capture for your macOS screen sharing applications, video conferencing apps, game streaming services, and more. We’ll explore the building blocks of this API, learn how to configure streams to capture on-screen video and audio content, and share tips for integrating it into your existing apps."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10156-meet-screencapturekit"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides/Merge.md":{"title":"merge(_:...)","type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncAlgorithms.docc\/Guides\/Merge.md","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncAlgorithms.docc\/Guides\/Merge.md","titleInlineContent":[{"type":"codeVoice","code":"merge(_:...)"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10062-Meet-Transferable":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10062-Meet-Transferable","title":"Meet Transferable","url":"\/documentation\/wwdcnotes\/wwdc22-10062-meet-transferable","role":"sampleCode","abstract":[{"type":"text","text":"Meet Transferable: a model-layer protocol that allows for effortless support for sharing, drag and drop, copy\/paste, and other features in your app."}],"kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110359-Meet-Swift-Package-plugins":{"title":"Meet Swift Package plugins","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110359-Meet-Swift-Package-plugins","abstract":[{"type":"text","text":"Discover how you can perform actions on Swift packages and Xcode projects with Swift package plugins. We’ll go over how these plugins work and explore how you can use them to generate source code and automate your development workflow."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110359-meet-swift-package-plugins"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110357-Meet-Swift-Regex":{"title":"Meet Swift Regex","kind":"article","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110357-Meet-Swift-Regex","abstract":[{"type":"text","text":"Learn how you can process strings more effectively when you take advantage of Swift Regex. Come for concise literals but stay for Regex builders — a new, declarative approach to string processing. We’ll also explore the Unicode models in String and share how Swift Regex can make Unicode-correct processing easy."}],"url":"\/documentation\/wwdcnotes\/wwdc22-110357-meet-swift-regex"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides/Zip.md":{"title":"zip(_:...)","type":"link","identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncAlgorithms.docc\/Guides\/Zip.md","url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncAlgorithms.docc\/Guides\/Zip.md","titleInlineContent":[{"type":"codeVoice","code":"zip(_:...)"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10116-Meet-CKTool-JS":{"title":"Meet CKTool JS","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10116-Meet-CKTool-JS","abstract":[{"type":"text","text":"Discover how you can manage and automate your iCloud containers using CKTool JS. We’ll show you how to configure CKTool JS to manage your containers’ schemas, modify records with ease, and manipulate data on the fly. We’ll also explore how you can integrate CKTool JS into your automation and tooling workflows."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10116-meet-cktool-js"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110356-Meet-distributed-actors-in-Swift":{"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110356-meet-distributed-actors-in-swift","title":"Meet distributed actors in Swift","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110356-Meet-distributed-actors-in-Swift","abstract":[{"type":"text","text":"Discover distributed actors — an extension of Swift’s actor model that simplifies development of distributed systems. We’ll explore how distributed actor isolation and location transparency can help you avoid the accidental complexity of networking, serialization, and other transport concerns when working with distributed apps and systems."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10092-Meet-passkeys":{"title":"Meet passkeys","kind":"article","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10092-Meet-passkeys","abstract":[{"type":"text","text":"It’s time for a security upgrade: Learn how to add support for passkeys to create a quick and easy sign in experience for people, all while offering a radical increase to account security. Passkeys are simple and strong credentials built to eliminate phishing attacks. We’ll share how passkeys are designed with security in mind, show you how people will use them, go over how to integrate passkeys in your log in flow, and explore the platform and web APIs you need to adopt this feature."}],"url":"\/documentation\/wwdcnotes\/wwdc22-10092-meet-passkeys"},"https://zntfdr.dev":{"url":"https:\/\/zntfdr.dev","titleInlineContent":[{"type":"text","text":"Blog"}],"identifier":"https:\/\/zntfdr.dev","title":"Blog","type":"link"},"https://github.com/zntfdr":{"url":"https:\/\/github.com\/zntfdr","titleInlineContent":[{"type":"text","text":"GitHub"}],"identifier":"https:\/\/github.com\/zntfdr","title":"GitHub","type":"link"},"https://developer.apple.com/documentation/swift/asyncsequence":{"url":"https:\/\/developer.apple.com\/documentation\/swift\/asyncsequence","titleInlineContent":[{"type":"codeVoice","code":"AsyncSequence"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/asyncsequence","title":"AsyncSequence","type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10098-Meet-Web-Push-for-Safari":{"role":"sampleCode","abstract":[{"type":"text","text":"Bring better notifications to your websites and web apps in Safari on macOS with Web Push. We’ll show you how you can remotely send notifications to people through the web standards-based combination of Push API, Notifications API, and Service Workers."}],"url":"\/documentation\/wwdcnotes\/wwdc22-10098-meet-web-push-for-safari","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10098-Meet-Web-Push-for-Safari","kind":"article","title":"Meet Web Push for Safari","type":"topic"},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"alt":null,"identifier":"WWDCNotes.png","type":"image"},"https://github.com/apple/swift-async-algorithms/blob/main/Sources/AsyncAlgorithms/AsyncAlgorithms.docc/Guides/Debounce.md":{"url":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncAlgorithms.docc\/Guides\/Debounce.md","titleInlineContent":[{"type":"codeVoice","code":"debounce(for:tolerance:clock:)"}],"identifier":"https:\/\/github.com\/apple\/swift-async-algorithms\/blob\/main\/Sources\/AsyncAlgorithms\/AsyncAlgorithms.docc\/Guides\/Debounce.md","title":"debounce(for:tolerance:clock:)","type":"link"},"https://avatars.githubusercontent.com/u/5277837?v=4":{"variants":[{"url":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4","traits":["1x","light"]}],"alt":"Profile image of Federico Zanetello","identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4","type":"image"}}}