{"metadata":{"roleHeading":"WWDC18","modules":[{"name":"WWDC Notes"}],"title":"Advanced Debugging with Xcode and LLDB","role":"sampleCode"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"name":"Note","content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/sample-code\/wwdc\/2018\/UseScriptsToAddCustomCommandsToLLDB.zip"}]}],"type":"aside","style":"note"},{"anchor":"Advanced-Debugging-Tips-and-Tricks","type":"heading","level":2,"text":"Advanced Debugging Tips and Tricks"},{"items":[{"content":[{"inlineContent":[{"text":"Configure behaviors to dedicate a tab for debugging","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use auto-continuing breakpoints with debugger commands to inject code live"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This help us debug changes without the need to edit your code and build and run our app over and over"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Create dependent breakpoints using "},{"code":"breakpoint set --one-shot true","type":"codeVoice"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"this creates a breakpoint that is automatically deleted after it’s hit once","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Skip lines of code by:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"dragging the Instruction Pointer","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"send the command ","type":"text"},{"code":"thread jump --by 1","type":"codeVoice"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"this tells the debugger to jump over one line of code for the current thread"}],"type":"paragraph"}]}]}]}]}]},{"content":[{"inlineContent":[{"text":"object descriptions:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"you can define your own objects descriptions by conforming to "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/customdebugstringconvertible","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"text","text":"this "},{"type":"codeVoice","code":"debugDescription"},{"type":"text","text":" will be returned in the debugger when writing "},{"type":"codeVoice","code":"po ..."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"alternatively, you can use the debugger command "},{"code":"p ..","type":"codeVoice"},{"type":"text","text":", which uses LLDB’s built-in formatters to represent the object"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Pause when variables are modified by using watchpoints"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"a watchpoint is like a breakpoint, but it pauses the debugger the next time the value of that variable is changed"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Evaluate Obj-C code in Swift frames with"},{"code":"expression -l objc -O -- <expr>","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Explore the view hierarchy of a view in the debugger via the private method "},{"type":"codeVoice","code":"recursiveDescription"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":"expression -l objc -O -- [`self.view` recursiveDescription]","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The back ticks is like a step that says “first, evaluate the contents of this in the current frame and insert the result, and then we can evaluate the rest”"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"create debugger command aliases for shortcuts via "},{"code":"command alias","type":"codeVoice"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"for example: "},{"type":"codeVoice","code":"command alias poc \"expression -l objc -O --\""},{"type":"text","text":" - we can now use "},{"type":"codeVoice","code":"poc <expr>"},{"type":"text","text":" to run our command in an Objective-C context"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"when changing UI\/layout on the debugger, we don’t see changes right away on the simulator because we’re paused in the debugger. This is because Core Animation isn’t currently applying any view module changes to the screen’s frame buffer. To force these change to appear, we can use ","type":"text"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/quartzcore\/catransaction\/1448270-flush","isActive":true},{"text":" to tell Core Animation to update the screen’s frame buffer.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"save your custom aliases into ","type":"text"},{"code":"~\/.lldbinit","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"LLDB Print Commands","type":"text"}],"type":"paragraph"},{"rows":[[[{"inlineContent":[{"type":"text","text":"Command"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Alias For","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"Does","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"po <expression>","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"code":"expression --object-description -- <expression>","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"evaluate "},{"type":"codeVoice","code":"<expression>"},{"type":"text","text":" and print its debug description"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"p <expression>","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"expression -- <expression>"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"evaluate "},{"code":"<expression>","type":"codeVoice"},{"type":"text","text":" and outputs its LLDB-formatted description"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"frame variable <name>"}],"type":"paragraph"}],[{"inlineContent":[],"type":"paragraph"}],[{"inlineContent":[{"text":"read ","type":"text"},{"code":"<name>","type":"codeVoice"},{"text":" value from memory and outputs its LLDB-formatted description","type":"text"}],"type":"paragraph"}]]],"header":"row","type":"table"},{"anchor":"Written-By","type":"heading","level":2,"text":"Written By"},{"type":"row","numberOfColumns":5,"columns":[{"size":1,"content":[{"inlineContent":[{"type":"image","identifier":"zntfdr"}],"type":"paragraph"}]},{"size":4,"content":[{"level":3,"text":"Federico Zanetello","anchor":"Federico-Zanetello","type":"heading"},{"inlineContent":[{"isActive":true,"overridingTitle":"Contributed Notes","type":"reference","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}]},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/zntfdr"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/zntfdr.dev"}],"type":"paragraph"}]}]},{"type":"thematicBreak"},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true}],"type":"paragraph"},{"anchor":"Related-Sessions","type":"heading","level":2,"text":"Related Sessions"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110370-Debug-Swift-debugging-with-LLDB","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10209-Discover-breakpoint-improvements","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-404-Getting-Started-with-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-412-Debugging-in-Xcode-11","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-429-LLDB-Beyond-po"],"type":"links","style":"list"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2025 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}]}],"sections":[],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-412-Advanced-Debugging-with-Xcode-and-LLDB"},"abstract":[{"type":"text","text":"Discover advanced techniques, and tips and tricks for enhancing your Xcode debugging workflows. Learn how to take advantage of LLDB and custom breakpoints for more powerful debugging. Get the most out of Xcode’s view debugging tools to solve UI issues in your app more efficiently."}],"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc18-412-advanced-debugging-with-xcode-and-lldb"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18"]]},"sampleCodeDownload":{"kind":"sampleDownload","action":{"overridingTitle":"Watch Video (53 min)","isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc18\/412"}},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110370-Debug-Swift-debugging-with-LLDB":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110370-Debug-Swift-debugging-with-LLDB","url":"\/documentation\/wwdcnotes\/wwdc22-110370-debug-swift-debugging-with-lldb","title":"Debug Swift debugging with LLDB","abstract":[{"type":"text","text":"Learn how you can set up complex Swift projects for debugging. We’ll take you on a deep dive into the internals of LLDB and debug info. We’ll also share best practices for complex scenarios such as debugging code built on build servers or code from custom build systems."}],"type":"topic","role":"sampleCode","kind":"article"},"https://developer.apple.com/documentation/quartzcore/catransaction/1448270-flush":{"identifier":"https:\/\/developer.apple.com\/documentation\/quartzcore\/catransaction\/1448270-flush","type":"link","titleInlineContent":[{"code":"CATransaction.flush()","type":"codeVoice"}],"title":"CATransaction.flush()","url":"https:\/\/developer.apple.com\/documentation\/quartzcore\/catransaction\/1448270-flush"},"WWDC18.jpeg":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC18.jpeg","traits":["1x","light"]}],"type":"image","identifier":"WWDC18.jpeg","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC18":{"kind":"article","role":"collectionGroup","images":[{"type":"icon","identifier":"WWDC18-Icon.png"},{"type":"card","identifier":"WWDC18.jpeg"}],"abstract":[{"type":"text","text":"Xcode 10, Swift 4.2, iOS 12, macOS 10.14 (Mojave), tvOS 12, watchOS 5."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18","url":"\/documentation\/wwdcnotes\/wwdc18","title":"WWDC18"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-412-Debugging-in-Xcode-11":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-412-Debugging-in-Xcode-11","role":"sampleCode","title":"Debugging in Xcode 11","url":"\/documentation\/wwdcnotes\/wwdc19-412-debugging-in-xcode-11","type":"topic","kind":"article","abstract":[{"text":"Xcode 11 introduces new features for finding and fixing bugs fast. Discover how to simulate network conditions and thermal states, and how to override your app’s runtime environment while debugging. See how the debugging features work with Xcode previews to identify issues before Build & Run. Learn how to work with the View Debugger to troubleshoot your SwiftUI views.","type":"text"}]},"WWDC18-Icon.png":{"type":"image","identifier":"WWDC18-Icon.png","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDC18-Icon.png","traits":["1x","light"]}]},"https://developer.apple.com/documentation/swift/customdebugstringconvertible":{"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/customdebugstringconvertible","type":"link","titleInlineContent":[{"code":"CustomDebugStringConvertible","type":"codeVoice"}],"title":"CustomDebugStringConvertible","url":"https:\/\/developer.apple.com\/documentation\/swift\/customdebugstringconvertible"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-404-Getting-Started-with-Xcode":{"title":"Getting Started with Xcode","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-404-Getting-Started-with-Xcode","url":"\/documentation\/wwdcnotes\/wwdc19-404-getting-started-with-xcode","abstract":[{"text":"Xcode is the development environment for creating great apps for Apple platforms. Find out how to take advantage of Xcode features to go all the way from a new project to App Store distribution. Along the way, you’ll learn how to navigate the Xcode user interface, how to take advantage of the source editor and live user interface previews, how to incorporate community-developed Swift packages into your app, and how to refactor and test your code, all while developing a working SwiftUI app.","type":"text"}],"role":"sampleCode"},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"type":"image","identifier":"WWDCNotes.png","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10209-Discover-breakpoint-improvements":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10209-Discover-breakpoint-improvements","abstract":[{"type":"text","text":"Breakpoints can help you debug issues by allowing you to pause and inspect problems in the middle of a process. Discover the latest improvements to breakpoints in Xcode including column and unresolved breakpoints. We’ll also go over best practices for general breakpoints and LLDB tips and tricks."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10209-discover-breakpoint-improvements","kind":"article","title":"Discover breakpoint improvements"},"https://developer.apple.com/sample-code/wwdc/2018/UseScriptsToAddCustomCommandsToLLDB.zip":{"type":"link","titleInlineContent":[{"type":"text","text":"Sample code"}],"identifier":"https:\/\/developer.apple.com\/sample-code\/wwdc\/2018\/UseScriptsToAddCustomCommandsToLLDB.zip","url":"https:\/\/developer.apple.com\/sample-code\/wwdc\/2018\/UseScriptsToAddCustomCommandsToLLDB.zip","title":"Sample code"},"https://github.com/zntfdr":{"identifier":"https:\/\/github.com\/zntfdr","type":"link","titleInlineContent":[{"text":"GitHub","type":"text"}],"title":"GitHub","url":"https:\/\/github.com\/zntfdr"},"https://developer.apple.com/wwdc18/412":{"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc18\/412","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc18\/412"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"type":"link","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-429-LLDB-Beyond-po":{"url":"\/documentation\/wwdcnotes\/wwdc19-429-lldb-beyond-po","kind":"article","abstract":[{"type":"text","text":"LLDB is a powerful tool for exploring and debugging your app at runtime. Discover the various ways to display values in your app, how to format custom data types, and how to extend LLDB using your own Python 3 scripts."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-429-LLDB-Beyond-po","role":"sampleCode","type":"topic","title":"LLDB: Beyond “po”"},"zntfdr.jpeg":{"variants":[{"url":"\/images\/WWDCNotes\/zntfdr.jpeg","traits":["1x","light"]}],"type":"image","identifier":"zntfdr.jpeg","alt":null},"doc://WWDCNotes/documentation/WWDCNotes":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","url":"\/documentation\/wwdcnotes","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"title":"WWDC Notes","images":[{"type":"icon","identifier":"WWDCNotes.png"}]},"zntfdr":{"identifier":"zntfdr","variants":[{"url":"\/images\/WWDCNotes\/zntfdr.jpeg","traits":["1x","light"]}],"type":"image","alt":"Profile image of Federico Zanetello"},"https://zntfdr.dev":{"type":"link","titleInlineContent":[{"text":"Blog","type":"text"}],"identifier":"https:\/\/zntfdr.dev","url":"https:\/\/zntfdr.dev","title":"Blog"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"images":[{"identifier":"zntfdr.jpeg","type":"card"},{"identifier":"zntfdr.jpeg","type":"icon"}],"url":"\/documentation\/wwdcnotes\/zntfdr","type":"topic","title":"Federico Zanetello (332 notes)"}}}