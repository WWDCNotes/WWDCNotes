{"kind":"article","metadata":{"role":"sampleCode","title":"Build an app with SwiftData","roleHeading":"WWDC23","modules":[{"name":"WWDC Notes"}]},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23"]]},"sampleCodeDownload":{"kind":"sampleDownload","action":{"identifier":"https:\/\/developer.apple.com\/wwdc23\/10154","type":"reference","overridingTitle":"Watch Video (18 min)","isActive":true}},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"text":"Chapters","type":"heading","level":2,"anchor":"Chapters"},{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc23\/10154","type":"reference"},{"text":"","type":"text"},{"text":"\n","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc23\/10154?time=189","type":"reference"},{"text":"","type":"text"},{"text":"\n","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc23\/10154?time=330","type":"reference"},{"text":"","type":"text"},{"text":"\n","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc23\/10154?time=583","type":"reference"},{"text":"","type":"text"},{"text":"\n","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc23\/10154?time=750","type":"reference"}]},{"text":"Intro","type":"heading","level":1,"anchor":"Intro"},{"type":"paragraph","inlineContent":[{"identifier":"WWDC23-10154-SwiftData","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To cover your basics, watch the “Meet SwiftData” session first if you haven’t already."}]},{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc23\/10187"}]},{"type":"paragraph","inlineContent":[{"text":"This is a code-along. The sample project includes both the starting point and how the project should look after the session.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC23-10154-codeAlong"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Download the sample project here: "},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/SwiftUI\/Building-a-document-based-app-using-SwiftData"}]},{"text":"Meet the app","type":"heading","level":1,"anchor":"Meet-the-app"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s build a flashcards app. This app should work everywhere: on Mac, iPhone, Watch, and TV."}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC23-10154-codeAlong2","type":"image"}]},{"type":"paragraph","inlineContent":[{"text":"There is a new Xcode feature, embedded interactive live Previews for Mac.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the Previews section, there’s a grid with some flash cards. The app is populated with sample cards stored in memory, and if we run the app and add new ones, they will disappear when we close the app."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is where SwiftData comes in."}]},{"text":"SwiftData models","type":"heading","level":2,"anchor":"SwiftData-models"},{"type":"paragraph","inlineContent":[{"text":"In the starter project, there is a Card model that represents a single flash card, some views, and supporting files. Every card stores the text for the front and back sides and the creation date.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC23-10154-codeAlong3"}]},{"type":"paragraph","inlineContent":[{"text":"It is a pretty typical model.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"First, import SwiftData into this file. Adding the @Model macro to the definition.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"With @Model, the Card gets conformance to the Observable protocol, and we will use it instead of ObservableObject. Remove the conformance to the Observable object as well as @Published property wrappers."}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC23-10154-codeAlong4","type":"image"}]},{"type":"paragraph","inlineContent":[{"text":"To adopt Observable in the CardEditorView file, replace the “ObservedObject” property wrapper with “Bindable.” It allows the text fields to bind directly to the card’s front… and back text.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC23-10154-codeAlong5"}]},{"text":"@Observable","type":"heading","level":2,"anchor":"Observable"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Set up data flow with less code"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatic dependencies"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Seamlessly bind models’ mutable state to UI","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When a View uses a property of an Observable type in its body, it will be updated automatically when the given property changes."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See more in the session:"},{"type":"text","text":" "},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10149","isActive":true,"type":"reference"}]},{"text":"Querying models to display in UI","type":"heading","level":2,"anchor":"Querying-models-to-display-in-UI"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s switch to ContentView and display the cards stored till now."},{"type":"text","text":"\n"},{"type":"text","text":"And replace @State property wrapper with @Query.  Use @Query whenever you want to display models, managed by SwiftData, in the UI."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC23-10154-codeAlong6"}]},{"text":"@Query (Property wrapper)","type":"heading","level":2,"anchor":"Query-Property-wrapper"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Provides the view with data","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Triggers view update on every change of the models","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A view can have multiple "},{"code":"@Query","type":"codeVoice"},{"type":"text","text":" properties"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Uses "},{"code":"ModelContext","type":"codeVoice"},{"type":"text","text":" as the source of data"}],"type":"paragraph"}]}]},{"code":["@Query(sort: \\.created) private var cards: [Card]"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Every view can have many queried properties. Query offers lightweight syntax to configure sorting, ordering, filtering, and even animating changes.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"@Query"},{"type":"text","text":" needs a model context for it to work. We get the model context from the model container."}]},{"text":"modelContainer (View modifier)","type":"heading","level":2,"anchor":"modelContainer-View-modifier"},{"code":[".modelContainer(for: Card.self)"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Set up the model container"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Create the storage stack","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Each view has a single model container"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"An app needs to set up at least one model container. Model containers are inherited in by the views (like ","type":"text"},{"type":"codeVoice","code":".environment()"},{"text":"). It creates the whole storage stack, including the context that @Query will use.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"A View has a single model container, but an application can create and use as many containers as it needs for different view hierarchies.","type":"text"}]},{"code":["@main","struct FlashCardApp: App {","    var body: some Scene {","        WindowGroup {","            ContentView()","        }","        .modelContainer (for: Card.self)","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"identifier":"WWDC23-10154-codeAlong7","type":"image"}]},{"type":"paragraph","inlineContent":[{"text":"In this case, we can set it up for the whole window group scene. The window and its views will inherit the container, as well as any other windows created from the same group. All of these views will write and read from a single container.","type":"text"},{"text":" ","type":"text"},{"text":"Some apps need a few storage stacks, and they can set up several model containers for different windows.","type":"text"}]},{"code":["@main","struct FlashCardApp: App {","    var body: some Scene {","        WindowGroup {","            ContentView()","        }","        .modelContainer(for: Card.self)","        ","        Window(\"Card Designer\") {","            CardDesignerView()","        }","        .modelContainer(for: Design.self)","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"identifier":"WWDC23-10154-codeAlong8","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Different views in the same window can have separate containers, and saving in one container won’t affect another."}]},{"code":["struct CardDesignInspector: View {","    var body: some View {","        VSplitView {","            Form { ... }","            ObjectLibrary()","                .modelContainer(for: Template.self)","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"identifier":"WWDC23-10154-codeAlong9","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, let’s set up the modelContainer to provide the Query with a source of data. I open the app definition…  And set a model container for app’s windows. Note that the subviews can create, read, update, and delete only the model types listed in the view modifier."}]},{"type":"paragraph","inlineContent":[{"text":"And let’s provide the previews with sample data.","type":"text"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC23-10154-codeAlong10","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the app, we have defined an in-memory container with sample cards. Open the “PreviewSampleData” file and include it in the target. This file contains the definition of a container with the sample data."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC23-10154-codeAlong11"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now that @Query has a source of data, the preview displays the cards!"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC23-10154-codeAlong12","type":"image"}]},{"text":"Creating and updating","type":"heading","level":1,"anchor":"Creating-and-updating"},{"text":"modelContext (Environment variable)","type":"heading","level":2,"anchor":"modelContext-Environment-variable"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides access to the model context"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"A view has a single model context"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, to make sure that SwiftData tracks and saves the new cards, as well as the changes made to the existing ones, we need the model context of the view."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To access the model context, SwiftUI offers a new environment variable."}]},{"code":["@Environment(\\.modelContext) private var modelContext"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"This environment variable was populated automatically when the model container was set earlier.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We will need to access the modelContext to save and update the cards."}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC23-10154-codeAlong13","type":"image"}]},{"type":"paragraph","inlineContent":[{"text":"SwiftData autosaves the model context. The autosaves are triggered by UI-related events and user input. Call “save()” explicitly, when we want to make sure that all the changes are persisted immediately, but this only in some special cases.","type":"text"}]},{"text":"Document-based apps","type":"heading","level":1,"anchor":"Document-based-apps"},{"text":"DocumentGroup","type":"heading","level":2,"anchor":"DocumentGroup"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Document-based apps is a concept used on macOS, iOS, and iPadOS. It describes the certain types of applications that allow users to create, open, view, or edit different types of documents. Every document is a file, and users can store, copy, and share them."}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC23-10154-codeAlong14","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Document-based apps exist on iOS and macOS, and on these platforms, we’ll switch to using the DocumentGroup initializer. We will be passing in the model type Card.self, content type, and a view builder."}]},{"type":"paragraph","inlineContent":[{"text":"About the content type:","type":"text"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC23-10154-codeAlong15","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftData Document-based apps need to declare custom content types. Each SwiftData document is built from a unique set of models and so has a unique representation on disk. In the context of documents, a content type is like a binary file format, ex JPEG. Another type of documents, a package, is a directory with a fixed structure on disk, like an Xcode project. For example, all the JPEG images have the same binary structure. Otherwise, photo editors wouldn’t know how to read them. Similarly, all the Xcode projects contain certain directories and files."}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC23-10154-codeAlong16","type":"image"}]},{"type":"paragraph","inlineContent":[{"text":"When the user opens the deck, we need the operating system to associate the deck format and file extension with our app. That’s why we need to declare the content type. SwiftData documents are packages: if you mark some properties of a SwiftData model with the “externalStorage” attribute, all the externally stored items will be a part of the document package.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the UTType+FlashCards file, I have a definition of the new content type, so we can conveniently use it in code. We’ll put the same definition in the Info.plist."},{"type":"text","text":"\n"},{"type":"text","text":"We are about to declare a new content type in the operating system. We need to specify the file extension to help to distinguish the card decks created by our app from any other documents. For this sample app, we’ll use “sampledeck” as an extension."},{"type":"text","text":"\n"},{"type":"text","text":"And add a short description, like Flash Cards Deck."},{"type":"text","text":"\n"},{"type":"text","text":"The identifier should be exactly the same as the one in the code."},{"type":"text","text":"\n"},{"type":"text","text":"Because SwiftData documents are packages, we have to make sure our type conforms to com.apple.package."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC23-10154-codeAlong17"}]},{"type":"paragraph","inlineContent":[{"text":"And now, returning to the app definition and passing the content type to the DocumentGroup. The view builder looks identical.","type":"text"},{"text":"\n","type":"text"},{"text":"We don’t set up the model container. The document infrastructure will set up one for each document.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC23-10154-codeAlong18"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A workflow:"},{"type":"text","text":" "},{"type":"text","text":"The app launches with the open panel, which is standard behavior for Document-based applications. We’ll create a new document and add a card there. The document now has a toolbar subtitle indicating that it has unsaved changes. We press Command+S, and the save dialog appears. The deck will be saved with the same file extension that we put in the Info.plist. Can also press Command+N to create a new deck, or Command+O to open one. These shortcuts, as well as many other features, Document-based applications get automatically."}]},{"type":"paragraph","inlineContent":[{"text":"Recap:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You have to set up a custom "},{"code":"contentType","type":"codeVoice"},{"type":"text","text":"\/file format for your documents."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The content type has to be set up in Info.plist with the same identifier as you use in code."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The content type set up in Info.plist needs to conform to ","type":"text"},{"type":"codeVoice","code":"com.apple.package"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"We should NOT set up an ","type":"text"},{"type":"codeVoice","code":".modelContainer"},{"text":" for the ","type":"text"},{"type":"codeVoice","code":"DocumentGroup"},{"text":", as it does it automatically.","type":"text"}]}]}]},{"text":"Resources","type":"heading","level":1,"anchor":"Resources"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/forums\/tags\/wwdc2023-10154","isActive":true},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/forums\/create\/question?&tag1=719030&tag2=677030","isActive":true},{"type":"text","text":""},{"type":"text","text":"\n"},{"overridingTitleInlineContent":[{"text":"<\/> Building a document-based app using SwiftData","type":"text"}],"type":"reference","overridingTitle":"<\/> Building a document-based app using SwiftData","identifier":"https:\/\/developer.apple.com\/documentation\/SwiftUI\/Building-a-document-based-app-using-SwiftData","isActive":true}]},{"text":"Related Videos","type":"heading","level":1,"anchor":"Related-Videos"},{"type":"paragraph","inlineContent":[{"overridingTitle":"Meet SwiftData - WWDC23","type":"reference","overridingTitleInlineContent":[{"text":"Meet SwiftData - WWDC23","type":"text"}],"isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc23\/10187"},{"type":"text","text":""},{"type":"text","text":"\n"},{"overridingTitle":"Discover Observation in SwiftUI - WWDC23","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Discover Observation in SwiftUI - WWDC23"}],"isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10149"},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10196"},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10189"},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10195"},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10164"},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148"}]},{"text":"Written By","type":"heading","level":2,"anchor":"Written-By"},{"type":"row","numberOfColumns":5,"columns":[{"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"MortenGregersen"}]}],"size":1},{"content":[{"type":"heading","text":"Morten Bjerg Gregersen","anchor":"Morten-Bjerg-Gregersen","level":3},{"inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"type":"reference","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/MortenGregersen","isActive":true,"overridingTitle":"Contributed Notes"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/MortenGregersen","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"http:\/\/atterdagapps.com","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/x.com\/mortengregersen","isActive":true}],"type":"paragraph"}],"size":4}]},{"type":"row","numberOfColumns":5,"columns":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"multitudes","type":"image"}]}],"size":1},{"content":[{"type":"heading","level":3,"text":"laurent b","anchor":"laurent-b"},{"type":"paragraph","inlineContent":[{"overridingTitle":"Contributed Notes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/multitudes","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/multitudes","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/laurentbrusa.hashnode.dev\/","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/x.com\/wrmultitudes","type":"reference","isActive":true}]}],"size":4}]},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"isActive":true,"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}]},{"text":"Related Sessions","type":"heading","level":2,"anchor":"Related-Sessions"},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10148-Whats-new-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10149-Discover-Observation-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10187-Meet-SwiftData","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10189-Migrate-to-SwiftData","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10195-Model-your-schema-with-SwiftData","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10196-Dive-deeper-into-SwiftData"]},{"type":"small","inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}]},{"type":"small","inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}]}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc23-10154-build-an-app-with-swiftdata"]}],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10154-Build-an-app-with-SwiftData","interfaceLanguage":"swift"},"abstract":[{"text":"Discover how SwiftData can help you persist data in your app. Code along with us as we bring SwiftData to a multi-platform SwiftUI app. Learn how to convert existing model classes into SwiftData models, set up the environment, reflect model layer changes in UI, and build document-based applications backed by SwiftData storage.","type":"text"}],"references":{"doc://WWDCNotes/documentation/WWDCNotes/multitudes":{"images":[{"identifier":"multitudes.jpeg","type":"card"},{"identifier":"multitudes.jpeg","type":"icon"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/multitudes","abstract":[{"type":"text","text":"student at 42Berlin 🐬 | C & C++ | 🍎 Swift(UI) app dev  | speciality coffee ☕️ & cycling 🚴🏻‍♂️"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/multitudes","type":"topic","title":"laurent b (33 notes)","kind":"article"},"WWDC23-10154-codeAlong7":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong7.jpg","traits":["1x","light"]}],"type":"image","alt":"Code Along","identifier":"WWDC23-10154-codeAlong7"},"https://developer.apple.com/wwdc23/10154?time=750":{"identifier":"https:\/\/developer.apple.com\/wwdc23\/10154?time=750","type":"link","url":"https:\/\/developer.apple.com\/wwdc23\/10154?time=750","title":"12:30 - Documents based apps","titleInlineContent":[{"text":"12:30 - Documents based apps","type":"text"}]},"multitudes.jpeg":{"alt":null,"type":"image","identifier":"multitudes.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/multitudes.jpeg"}]},"WWDC23-10154-codeAlong12":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong12.jpg","traits":["1x","light"]}],"type":"image","alt":"Code Along","identifier":"WWDC23-10154-codeAlong12"},"https://developer.apple.com/wwdc23/10154":{"identifier":"https:\/\/developer.apple.com\/wwdc23\/10154","type":"download","url":"https:\/\/developer.apple.com\/wwdc23\/10154","checksum":null},"WWDC23-10154-codeAlong18":{"alt":"Code Along","type":"image","identifier":"WWDC23-10154-codeAlong18","variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong18.jpg","traits":["1x","light"]}]},"https://developer.apple.com/forums/tags/wwdc2023-10154":{"identifier":"https:\/\/developer.apple.com\/forums\/tags\/wwdc2023-10154","type":"link","url":"https:\/\/developer.apple.com\/forums\/tags\/wwdc2023-10154","title":"Search the forums for tag wwdc2023-10154","titleInlineContent":[{"type":"text","text":"Search the forums for tag wwdc2023-10154"}]},"WWDC23-10154-codeAlong15":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong15.jpg","traits":["1x","light"]}],"type":"image","alt":"Code Along","identifier":"WWDC23-10154-codeAlong15"},"https://developer.apple.com/videos/play/wwdc2023/10196":{"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10196","title":"Dive deeper into SwiftData - WWDC23","type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10196","titleInlineContent":[{"type":"text","text":"Dive deeper into SwiftData - WWDC23"}]},"https://github.com/multitudes":{"identifier":"https:\/\/github.com\/multitudes","type":"link","url":"https:\/\/github.com\/multitudes","title":"GitHub","titleInlineContent":[{"type":"text","text":"GitHub"}]},"WWDC23-10154-codeAlong8":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong8.jpg","traits":["1x","light"]}],"type":"image","alt":"Code Along","identifier":"WWDC23-10154-codeAlong8"},"https://developer.apple.com/videos/play/wwdc2023/10149":{"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10149","title":"Discover Observation in SwiftUI - WWDC23","type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10149","titleInlineContent":[{"type":"text","text":"Discover Observation in SwiftUI - WWDC23"}]},"WWDC23-10154-codeAlong3":{"identifier":"WWDC23-10154-codeAlong3","type":"image","alt":"Code Along","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong3.jpg"}]},"https://github.com/MortenGregersen":{"title":"GitHub","type":"link","url":"https:\/\/github.com\/MortenGregersen","titleInlineContent":[{"text":"GitHub","type":"text"}],"identifier":"https:\/\/github.com\/MortenGregersen"},"https://developer.apple.com/videos/play/wwdc2023/10164":{"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10164","title":"What’s new in Swift - WWDC23","type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10164","titleInlineContent":[{"type":"text","text":"What’s new in Swift - WWDC23"}]},"https://x.com/wrmultitudes":{"identifier":"https:\/\/x.com\/wrmultitudes","type":"link","url":"https:\/\/x.com\/wrmultitudes","title":"X\/Twitter","titleInlineContent":[{"type":"text","text":"X\/Twitter"}]},"WWDC23-10154-SwiftData":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-SwiftData.jpg","traits":["1x","light"]}],"type":"image","alt":"SwiftData Logo","identifier":"WWDC23-10154-SwiftData"},"doc://WWDCNotes/documentation/WWDCNotes":{"url":"\/documentation\/wwdcnotes","kind":"symbol","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"type":"topic","role":"collection","title":"WWDC Notes"},"WWDC23-Icon.png":{"alt":null,"type":"image","identifier":"WWDC23-Icon.png","variants":[{"url":"\/images\/WWDCNotes\/WWDC23-Icon.png","traits":["1x","light"]}]},"WWDC23-10154-codeAlong14":{"identifier":"WWDC23-10154-codeAlong14","type":"image","alt":"Code Along","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong14.jpg"}]},"WWDC23-10154-codeAlong6":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong6.jpg","traits":["1x","light"]}],"type":"image","alt":"Code Along","identifier":"WWDC23-10154-codeAlong6"},"http://atterdagapps.com":{"url":"http:\/\/atterdagapps.com","title":"Blog","type":"link","identifier":"http:\/\/atterdagapps.com","titleInlineContent":[{"type":"text","text":"Blog"}]},"https://developer.apple.com/forums/create/question?&tag1=719030&tag2=677030":{"identifier":"https:\/\/developer.apple.com\/forums\/create\/question?&tag1=719030&tag2=677030","type":"link","url":"https:\/\/developer.apple.com\/forums\/create\/question?&tag1=719030&tag2=677030","title":"Have a question? Ask with tag wwdc2023-10154","titleInlineContent":[{"type":"text","text":"Have a question? Ask with tag wwdc2023-10154"}]},"MortenGregersen.jpeg":{"variants":[{"url":"\/images\/WWDCNotes\/MortenGregersen.jpeg","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"MortenGregersen.jpeg"},"WWDC23-10154-codeAlong4":{"alt":"Code Along","type":"image","identifier":"WWDC23-10154-codeAlong4","variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong4.jpg","traits":["1x","light"]}]},"https://developer.apple.com/wwdc23/10154?time=583":{"identifier":"https:\/\/developer.apple.com\/wwdc23\/10154?time=583","type":"link","url":"https:\/\/developer.apple.com\/wwdc23\/10154?time=583","title":"9:43 - Creating and updating","titleInlineContent":[{"type":"text","text":"9:43 - Creating and updating"}]},"WWDC23-10154-codeAlong13":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong13.jpg","traits":["1x","light"]}],"type":"image","alt":"Code Along","identifier":"WWDC23-10154-codeAlong13"},"WWDC23-10154-codeAlong16":{"alt":"Code Along","type":"image","identifier":"WWDC23-10154-codeAlong16","variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong16.jpg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10187-Meet-SwiftData":{"kind":"article","abstract":[{"text":"SwiftData is a powerful and expressive persistence framework built for Swift. We’ll show you how you can model your data directly from Swift code, use SwiftData to work with your models, and integrate with SwiftUI.","type":"text"}],"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23-10187-meet-swiftdata","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10187-Meet-SwiftData","role":"sampleCode","title":"Meet SwiftData"},"https://x.com/mortengregersen":{"identifier":"https:\/\/x.com\/mortengregersen","type":"link","url":"https:\/\/x.com\/mortengregersen","title":"X\/Twitter","titleInlineContent":[{"type":"text","text":"X\/Twitter"}]},"https://developer.apple.com/wwdc23/10154?time=330":{"title":"5:30 - Querying models to display in UI","type":"link","url":"https:\/\/developer.apple.com\/wwdc23\/10154?time=330","titleInlineContent":[{"text":"5:30 - Querying models to display in UI","type":"text"}],"identifier":"https:\/\/developer.apple.com\/wwdc23\/10154?time=330"},"https://developer.apple.com/wwdc23/10154?time=189":{"url":"https:\/\/developer.apple.com\/wwdc23\/10154?time=189","title":"3:09 - SwiftData models","type":"link","identifier":"https:\/\/developer.apple.com\/wwdc23\/10154?time=189","titleInlineContent":[{"type":"text","text":"3:09 - SwiftData models"}]},"WWDC23-10154-codeAlong11":{"identifier":"WWDC23-10154-codeAlong11","type":"image","alt":"Code Along","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong11.jpg"}]},"WWDC23-10154-codeAlong":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong.jpg","traits":["1x","light"]}],"type":"image","alt":"Code Along","identifier":"WWDC23-10154-codeAlong"},"https://laurentbrusa.hashnode.dev/":{"url":"https:\/\/laurentbrusa.hashnode.dev\/","title":"Blog","type":"link","identifier":"https:\/\/laurentbrusa.hashnode.dev\/","titleInlineContent":[{"type":"text","text":"Blog"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10196-Dive-deeper-into-SwiftData":{"title":"Dive deeper into SwiftData","kind":"article","type":"topic","role":"sampleCode","abstract":[{"text":"Learn how you can harness the power of SwiftData in your app. Find out how ModelContext and ModelContainer work together to persist your app’s data. We’ll show you how to track and make your changes manually and use SwiftData at scale with FetchDescriptor, SortDescriptor, and enumerate.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc23-10196-dive-deeper-into-swiftdata","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10196-Dive-deeper-into-SwiftData"},"WWDC23-10154-codeAlong10":{"identifier":"WWDC23-10154-codeAlong10","type":"image","alt":"Code Along","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong10.jpg"}]},"multitudes":{"variants":[{"url":"\/images\/WWDCNotes\/multitudes.jpeg","traits":["1x","light"]}],"type":"image","alt":"Profile image of laurent b","identifier":"multitudes"},"WWDC23-10154-codeAlong17":{"alt":"Code Along","type":"image","identifier":"WWDC23-10154-codeAlong17","variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong17.jpg","traits":["1x","light"]}]},"WWDC23-10154-codeAlong5":{"identifier":"WWDC23-10154-codeAlong5","type":"image","alt":"Code Along","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong5.jpg"}]},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"WWDCNotes.png"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10149-Discover-Observation-in-SwiftUI":{"abstract":[{"type":"text","text":"Simplify your SwiftUI data models with Observation. We’ll share how the Observable macro can help you simplify models and improve your app’s performance. Get to know Observation, learn the fundamentals of the macro, and find out how to migrate from ObservableObject to Observable."}],"type":"topic","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10149-discover-observation-in-swiftui","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10149-Discover-Observation-in-SwiftUI","title":"Discover Observation in SwiftUI"},"WWDC23-10154-codeAlong9":{"alt":"Code Along","type":"image","identifier":"WWDC23-10154-codeAlong9","variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong9.jpg","traits":["1x","light"]}]},"https://developer.apple.com/wwdc23/10187":{"identifier":"https:\/\/developer.apple.com\/wwdc23\/10187","type":"link","url":"https:\/\/developer.apple.com\/wwdc23\/10187","title":"Meet SwiftData - WWDC23","titleInlineContent":[{"type":"text","text":"Meet SwiftData - WWDC23"}]},"doc://WWDCNotes/documentation/WWDCNotes/MortenGregersen":{"url":"\/documentation\/wwdcnotes\/mortengregersen","type":"topic","abstract":[{"type":"text","text":"Hi 👋 I am Morten - I live in Denmark 🇩🇰"}],"kind":"article","images":[{"type":"card","identifier":"MortenGregersen.jpeg"},{"type":"icon","identifier":"MortenGregersen.jpeg"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/MortenGregersen","title":"Morten Bjerg Gregersen (21 notes)","role":"sampleCode"},"https://developer.apple.com/documentation/SwiftUI/Building-a-document-based-app-using-SwiftData":{"title":"Code Along - Building a document based app using SwiftData","type":"link","url":"https:\/\/developer.apple.com\/documentation\/SwiftUI\/Building-a-document-based-app-using-SwiftData","titleInlineContent":[{"text":"Code Along - Building a document based app using SwiftData","type":"text"}],"identifier":"https:\/\/developer.apple.com\/documentation\/SwiftUI\/Building-a-document-based-app-using-SwiftData"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10195-Model-your-schema-with-SwiftData":{"role":"sampleCode","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-10195-model-your-schema-with-swiftdata","abstract":[{"text":"Learn how to use schema macros and migration plans with SwiftData to build more complex features for your app. We’ll show you how to fine-tune your persistence with @Attribute and @Relationship options. Learn how to exclude properties from your data model with @Transient and migrate from one version of your schema to the next with ease.","type":"text"}],"type":"topic","title":"Model your schema with SwiftData","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10195-Model-your-schema-with-SwiftData"},"WWDC23-10154-codeAlong2":{"alt":"Code Along","type":"image","identifier":"WWDC23-10154-codeAlong2","variants":[{"url":"\/images\/WWDCNotes\/WWDC23-10154-codeAlong2.jpg","traits":["1x","light"]}]},"WWDC23.jpeg":{"identifier":"WWDC23.jpeg","type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC23.jpeg"}]},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","type":"link","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23":{"abstract":[{"text":"Xcode 15, Swift 5.9, iOS 17, macOS 14 (Sonoma), tvOS 17, visionOS 1, watchOS 10.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"type":"codeVoice","code":"SwiftData"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Observation"},{"text":", ","type":"text"},{"type":"codeVoice","code":"StoreKit"},{"text":" views, and more.","type":"text"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23","role":"collectionGroup","title":"WWDC23","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23","images":[{"identifier":"WWDC23-Icon.png","type":"icon"},{"identifier":"WWDC23.jpeg","type":"card"}]},"https://developer.apple.com/videos/play/wwdc2023/10195":{"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10195","title":"Model your schema with SwiftData -                WWDC23","type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10195","titleInlineContent":[{"type":"text","text":"Model your schema with SwiftData -                WWDC23"}]},"MortenGregersen":{"identifier":"MortenGregersen","type":"image","alt":"Profile image of Morten Bjerg Gregersen","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/MortenGregersen.jpeg"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10189-Migrate-to-SwiftData":{"role":"sampleCode","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-10189-migrate-to-swiftdata","abstract":[{"text":"Discover how you can start using SwiftData in your apps. We’ll show you how to use Xcode to generate model classes from your existing Core Data object models, use SwiftData alongside your previous implementation, or even completely replace your existing solution.","type":"text"}],"type":"topic","title":"Migrate to SwiftData","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10189-Migrate-to-SwiftData"},"https://developer.apple.com/videos/play/wwdc2023/10148":{"title":"What’s new in SwiftUI - WWDC23","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148","titleInlineContent":[{"text":"What’s new in SwiftUI - WWDC23","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10148"},"https://developer.apple.com/videos/play/wwdc2023/10189":{"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10189","title":"Migrate to SwiftData - WWDC23","type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10189","titleInlineContent":[{"type":"text","text":"Migrate to SwiftData - WWDC23"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10148-Whats-new-in-SwiftUI":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10148-Whats-new-in-SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc23-10148-whats-new-in-swiftui","role":"sampleCode","abstract":[{"type":"text","text":"Learn how you can use SwiftUI to build great apps for all Apple platforms. Explore the latest updates to SwiftUI and discover new scene types for visionOS. Simplify your data models with the latest data flow options and learn about the Inspector view. We’ll also take you through enhanced animation APIs, powerful ScrollView improvements, and a host of refinements to help you make tidier tables, improve focus and keyboard input, and so much more."}],"type":"topic","kind":"article","title":"What’s new in SwiftUI"}}}