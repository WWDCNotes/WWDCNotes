{"sections":[],"metadata":{"roleHeading":"WWDC21","title":"Improve access to Photos in your app","role":"sampleCode","modules":[{"name":"WWDC Notes"}]},"kind":"article","hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"sampleCodeDownload":{"action":{"overridingTitle":"Watch Video (17 min)","identifier":"https:\/\/developer.apple.com\/wwdc21\/10046","isActive":true,"type":"reference"},"kind":"sampleDownload"},"abstract":[{"type":"text","text":"PHPicker is the simplest and most secure way to integrate the Photos library into your app — and it’s getting even better. Learn how to handle ordered selection of images in your app, as well as pre-selecting assets any time the picker is shown. And for apps that need to integrate more deeply with PhotoKit, discover how you can use PHCloudIdentifier to sync photo project content across devices, helping people easily transition their image work between iPhone, iPad, and Mac."}],"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc21-10046-improve-access-to-photos-in-your-app"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10046-Improve-access-to-Photos-in-your-app","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"text":"Improvements to the Photo Picker","type":"heading","anchor":"Improvements-to-the-Photo-Picker","level":2},{"text":"Privacy","type":"heading","anchor":"Privacy","level":3},{"inlineContent":[{"text":"When an app doesn’t ask for a Photo Library access and only presents the Photo Picker - which runs out of process and automatically has access to the whole library, from which the user can pick some photos for the app - it was possible for people to misinterpret this workflow and assume that the app itself had a full access to the whole photo library, even if it didn’t.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"So now, in the Settings app, on the Photos Privacy screen, there is a new section for apps that only use the Photos Picker, titled “Apps with one-time photo selection”.","type":"text"}],"type":"paragraph"},{"text":"Ordered selection","type":"heading","anchor":"Ordered-selection","level":3},{"inlineContent":[{"text":"In some apps, users may need to be able to select a few photos in a specific order (e.g. when adding them to a social media post). In iOS 15, your app can configure the picker to show selection order as badges ① ② ③ etc.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"To do that, set the "},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/photokit\/phpickerconfiguration\/3752714-selection","type":"reference"},{"type":"text","text":" property in the picker configuration to "},{"type":"codeVoice","code":".ordered"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["var configuration = PHPickerConfiguration()","configuration.selectionLimit = 0","configuration.selection = .ordered"]},{"text":"Selection adjustment","type":"heading","anchor":"Selection-adjustment","level":3},{"inlineContent":[{"type":"text","text":"You can now preselect some photos in the picker to display user’s previous selection that they can edit, adding additional photos or removing some previously selected ones."}],"type":"paragraph"},{"inlineContent":[{"text":"To preselect photos, pass an array of asset identifiers to the picker configuration:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let assetIdentifiers: [String] = previousSelection","","var configuration = PHPickerConfiguration(photoLibrary: .shared)","configuration.selectionLimit = 0","configuration.preselectedAssetIdentifiers = assetIdentifiers"]},{"inlineContent":[{"text":"⚠️ One caveat: when the picker returns updated results, all photos that have been previously selected (and included in the preselection config you provide) will not include the item providers - so you need to keep the original list of photos with their data until after the updated picker results are returned. If the preselected picker dialog is cancelled, it will return the preselected assets you’ve provided with all item providers empty.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In the delegate callback, you need to merge together the old results with the new results, taking the value from the old results for any photo that was selected previously (since there won’t be an item provider in the new one):"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["func picker(_ picker: PHPickerViewController, didFinishPicking newResults: [PHPickerResult]) {","    dismiss(animated: true)","","    let existingSelection: [String: PHPickerResult] = self.lastSelection","    var newSelection = [String: PHPickerResult]()","","    for result in results {","        let identifier = result.assetIdentifier!","        newSelection[identifier] = existingSelection[identifier] ?? result","    }","","    self.lastSelection = newSelection","","    \/\/ do something with selected assets","}"]},{"text":"Reporting progress","type":"heading","anchor":"Reporting-progress","level":3},{"inlineContent":[{"type":"text","text":"Some assets that the user selects in the picker may not be immediately available and need to be downloaded from the cloud first, which may take a moment (especially for videos) - this can happen if they’re selecting something from their iCloud Photos and the “Optimize Storage” option is turned on. In that case, previously your app could only show a spinner indicator, since it didn’t have access to information about the download progress."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Now, the asset’s item provider can give you a "},{"type":"codeVoice","code":"Progress"},{"type":"text","text":" object that you can use to track download progress and show a more appropriate loading UI:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let result: PHPickerResult = ...","let provider: NSItemProvider = result.itemProvider","let identifier: String = UTType.movie.identifier","","if provider.hasItemConformingToTypeIdentifier(identifier) {","    let progress: Progress = provider.loadFileRepresentation(forTypeIdentifier: identifier) { url, error in","        \/\/ Do something with the video, or handle the error","    }","","    \/\/ Show progress in the meantime","}"]},{"text":"New cloud identifier APIs","type":"heading","anchor":"New-cloud-identifier-APIs","level":2},{"inlineContent":[{"text":"There are some categories of apps that require full or partial direct access to the user’s photo library, e.g. photo editing apps, camera apps or apps whose purpose is to display the photo library in some specific way. Those apps use the PhotoKit APIs to access and modify the photo library.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"When using those APIs, assets are returned with unique identifiers that your app can save for later and then use again to retrieve the same assets on the next launch. These identifiers are specific to each device, even if some of the assets are synced between devices using iCloud Photos.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If your app syncs some user-generated data that references user’s photos between devices and you want to access the same photos on multiple devices, you can use the new cloud identifiers that identify the same photo globally. There is a mapping between local identifiers and cloud identifiers and you can use a cloud identifier to look up a local copy of the photo. Cloud identifiers work even if the device is not signed into iCloud Photos (or even never was). The new identifiers are represented by "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/photokit\/phcloudidentifier"},{"type":"text","text":" objects."}],"type":"paragraph"},{"text":"How to use cloud identifiers","type":"heading","anchor":"How-to-use-cloud-identifiers","level":3},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Get some local photos from a device’s library using CloudKit","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Map local identifiers to cloud identifiers:","type":"text"}]}]}],"type":"orderedList"},{"type":"codeListing","syntax":"swift","code":["let cloudMappings = PHPhotoLibrary.shared()","        .cloudIdentifierMappings(forLocalIdentifiers: localIdentifiers)","","for (localIdentifier, cloudMapping) in cloudMappings {","    if let cloudIdentifier = cloudMapping.cloudIdentifier {","        \/\/ save the cloudIdentifier for later","        resolved[localIdentifier] = cloudIdentifier","    } else {","        \/\/ handle the cloudMapping error","    }","}"]},{"start":3,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Transfer the cloud identifiers to other devices using whatever communication method you want to use (iCloud \/ CloudKit etc.)"}]}]}],"type":"orderedList"},{"items":[{"content":[{"inlineContent":[{"text":"use ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/photokit\/phcloudidentifier\/2909174-stringvalue","type":"reference"},{"text":" to encode the identifier to a string","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"start":4,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Look up local identifiers on each device based on the cloud identifiers in the same way"}]}]}],"type":"orderedList"},{"type":"codeListing","syntax":"swift","code":["let localMappings = PHPhotoLibrary.shared()","        .localIdentifierMappings(for: cloudIdentifiers)","","for (cloudIdentifier, localMapping) in localMappings {","    if let localIdentifier = localMapping.localIdentifier {","        \/\/ add the localIdentifier to our resolved assets","        resolved[cloudIdentifier] = localIdentifier","    } else {","        \/\/ handle the localMapping error","    }","}"]},{"start":5,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Use the local identifiers to fetch the assets and display them","type":"text"}]}]}],"type":"orderedList"},{"text":"Error handling","type":"heading","anchor":"Error-handling","level":3},{"inlineContent":[{"text":"The mapping in both directions may return an error instead of the identifier, so you need to be able to handle that case. There are two possible kinds of errors to take into account:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Identifier Not Found - if the app isn’t able to find or access the relevant record:","type":"text"}]}]}],"type":"orderedList"},{"type":"codeListing","syntax":"swift","code":["let error = localMapping.error! as NSError","","if error.code == PHPhotosError.identifierNotFound.rawValue {","    \/\/ couldn't find this photo, add it to the missing photos list","    missingPhotos.append(cloudIdentifier)","}"]},{"start":2,"items":[{"content":[{"inlineContent":[{"type":"text","text":"Multiple Identifiers Found - this can happen if the cloud state isn’t completely in sync and the app tries to find the image using content match and finds multiple copies; in this case, the error info will contain the list of matching identifiers under "},{"identifier":"https:\/\/developer.apple.com\/documentation\/photokit\/phlocalidentifierserrorkey","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"codeListing","syntax":"swift","code":["let error = localMapping.error! as NSError","","if error.code == PHPhotosError.multipleIdentifiersFound.rawValue {","    \/\/ found multiple matches, prompt the user to pick one","    let matches = error.userInfo[PHLocalIdentifiersErrorKey] as! [String]","    multipleMatches[cloudIdentifier] = matches","}"]},{"inlineContent":[{"type":"text","text":"Note: looking up cloud identifiers takes some work, so use local identifiers for normal app interactions and map them to cloud identifiers only for syncing with other devices."}],"type":"paragraph"},{"text":"Updates to the limited library","type":"heading","anchor":"Updates-to-the-limited-library","level":2},{"inlineContent":[{"text":"The limited library is when you access the user’s photo library using PhotoKit after the user has requested to only share selected photos with your app. This is designed to work transparently for your app - all PhotoKit APIs work fine, but they work as if the photo library only contained those selected photos and nothing else. (See last year’s talk ","type":"text"},{"isActive":true,"type":"reference","identifier":"\/notes\/wwdc20\/10641\/"},{"text":" for more info.)","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In iOS 15, apps can now create, fetch and update their own photo albums within the user’s photo library when running in the limited library mode."}],"type":"paragraph"},{"inlineContent":[{"text":"Also, when you call ","type":"text"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/photokit\/phphotolibrary\/3616113-presentlimitedlibrarypicker","isActive":true},{"text":" to let the user adjust a previous selection of photos shared with your app, you can now provide a callback which will be given a list of photos that have just been added to the selection:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let library = PHPhotoLibrary.shared()","library.presentLimitedLibraryPicker(from: controller) { addedIdentifiers in","   \/\/ fetch the newly added photos and use them in your app ","}"]},{"inlineContent":[{"type":"text","text":"If your app still uses the old "},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/assetslibrary"},{"type":"text","text":" that was deprecated in iOS 9 ("},{"code":"ALAssets*","type":"codeVoice"},{"type":"text","text":") - please switch to PhotoKit and the Photos Picker, the old API will be removed in a future SDK."}],"type":"paragraph"},{"text":"Written By","type":"heading","anchor":"Written-By","level":2},{"numberOfColumns":5,"columns":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"mackuba","type":"image"}]}],"size":1},{"content":[{"anchor":"Kuba-Suder","level":3,"text":"Kuba Suder","type":"heading"},{"inlineContent":[{"overridingTitle":"Contributed Notes","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/mackuba"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/mackuba"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/mackuba.eu"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/x.com\/kuba_suder"}],"type":"paragraph"}],"size":4}],"type":"row"},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true}],"type":"paragraph"},{"text":"Related Sessions","type":"heading","anchor":"Related-Sessions","level":2},{"style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10023-Whats-new-in-the-Photos-picker","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10132-Discover-PhotoKit-change-history","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10063-Customize-and-resize-sheets-in-UIKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10160-Capture-and-process-ProRAW-images","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10641-Handle-the-Limited-Photos-Library-in-your-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10652-Meet-the-new-Photos-picker"],"type":"links"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10063-Customize-and-resize-sheets-in-UIKit":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10063-customize-and-resize-sheets-in-uikit","kind":"article","abstract":[{"type":"text","text":"Discover how you can create a layered and customized sheet experience in UIKit. We’ll explore how you can build a non-modal experience in your app to allow interaction with content both in a sheet and behind the sheet at the same time. We’ll also take you through sheet size customization, revealing or hiding grabber controls, and adapting between popovers and customized sheets in your app."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10063-Customize-and-resize-sheets-in-UIKit","type":"topic","title":"Customize and resize sheets in UIKit"},"https://developer.apple.com/documentation/assetslibrary":{"url":"https:\/\/developer.apple.com\/documentation\/assetslibrary","identifier":"https:\/\/developer.apple.com\/documentation\/assetslibrary","type":"link","title":"Assets Library framework","titleInlineContent":[{"type":"text","text":"Assets Library framework"}]},"WWDC21-Icon.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDC21-Icon.png"}],"identifier":"WWDC21-Icon.png","type":"image","alt":null},"https://github.com/mackuba":{"url":"https:\/\/github.com\/mackuba","identifier":"https:\/\/github.com\/mackuba","type":"link","title":"GitHub","titleInlineContent":[{"type":"text","text":"GitHub"}]},"https://mackuba.eu":{"url":"https:\/\/mackuba.eu","identifier":"https:\/\/mackuba.eu","type":"link","title":"Blog","titleInlineContent":[{"type":"text","text":"Blog"}]},"https://developer.apple.com/documentation/photokit/phpickerconfiguration/3752714-selection":{"url":"https:\/\/developer.apple.com\/documentation\/photokit\/phpickerconfiguration\/3752714-selection","identifier":"https:\/\/developer.apple.com\/documentation\/photokit\/phpickerconfiguration\/3752714-selection","type":"link","title":"selection","titleInlineContent":[{"type":"codeVoice","code":"selection"}]},"mackuba.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/mackuba.jpeg"}],"identifier":"mackuba.jpeg","type":"image","alt":null},"https://x.com/kuba_suder":{"url":"https:\/\/x.com\/kuba_suder","identifier":"https:\/\/x.com\/kuba_suder","type":"link","title":"X\/Twitter","titleInlineContent":[{"type":"text","text":"X\/Twitter"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10641-Handle-the-Limited-Photos-Library-in-your-app":{"title":"Handle the Limited Photos Library in your app","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10641-Handle-the-Limited-Photos-Library-in-your-app","url":"\/documentation\/wwdcnotes\/wwdc20-10641-handle-the-limited-photos-library-in-your-app","role":"sampleCode","abstract":[{"type":"text","text":"Access the photos and videos you need for your app while preserving privacy. With the new Limited Photos Library feature, people can directly control which photos and videos an app can access to protect their private content. We’ll explore how this feature may affect your app, and take you through alternatives like PHPicker."}],"type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/mackuba":{"images":[{"identifier":"mackuba.jpeg","type":"card"},{"identifier":"mackuba.jpeg","type":"icon"}],"title":"Kuba Suder (16 notes)","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/mackuba","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/mackuba","abstract":[{"type":"text","text":"Independent Mac & iOS developer. Sometimes freelancing, mostly working on my own stuff these days."}],"kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10132-Discover-PhotoKit-change-history":{"type":"topic","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10132-discover-photokit-change-history","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10132-Discover-PhotoKit-change-history","abstract":[{"text":"PhotoKit can help you build rich, photo-centric features. Learn how you can easily track changes to image assets with the latest APIs in PhotoKit. We’ll introduce you to the PHPhotoLibrary change history API and demonstrate how you can persist change tokens across launches to help your app recognize additions, deletions, and updates to someone’s photo library.","type":"text"}],"title":"Discover PhotoKit change history"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","type":"topic","title":"WWDC21","role":"collectionGroup","url":"\/documentation\/wwdcnotes\/wwdc21","kind":"article","images":[{"type":"icon","identifier":"WWDC21-Icon.png"},{"type":"card","identifier":"WWDC21.jpeg"}],"abstract":[{"text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"MusicKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DocC","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit 2","type":"codeVoice"},{"text":", and more.","type":"text"}]},"https://developer.apple.com/documentation/photokit/phphotolibrary/3616113-presentlimitedlibrarypicker":{"url":"https:\/\/developer.apple.com\/documentation\/photokit\/phphotolibrary\/3616113-presentlimitedlibrarypicker","identifier":"https:\/\/developer.apple.com\/documentation\/photokit\/phphotolibrary\/3616113-presentlimitedlibrarypicker","type":"link","title":"photoLibrary.presentLimitedLibraryPicker()","titleInlineContent":[{"type":"codeVoice","code":"photoLibrary.presentLimitedLibraryPicker()"}]},"mackuba":{"variants":[{"traits":["1x","light"],"url":"\/images\/mackuba.jpeg"}],"identifier":"mackuba","type":"image","alt":"Profile image of Kuba Suder"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10652-Meet-the-new-Photos-picker":{"type":"topic","kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10652-Meet-the-new-Photos-picker","url":"\/documentation\/wwdcnotes\/wwdc20-10652-meet-the-new-photos-picker","title":"Meet the new Photos picker","abstract":[{"text":"Let people select photos and videos to use in your app without requiring full Photo Library access. Discover how the PHPicker API for iOS and Mac Catalyst ensures privacy while providing your app the features you need.","type":"text"}]},"/notes/wwdc20/10641/":{"url":"\/notes\/wwdc20\/10641\/","identifier":"\/notes\/wwdc20\/10641\/","type":"link","title":"Handle the Limited Photos Library in Your App","titleInlineContent":[{"type":"text","text":"Handle the Limited Photos Library in Your App"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10160-Capture-and-process-ProRAW-images":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10160-Capture-and-process-ProRAW-images","role":"sampleCode","kind":"article","abstract":[{"text":"When you support ProRAW in your app, you can help photographers easily capture and edit images by combining standard RAW information with Apple’s advanced computational photography techniques. We’ll take you through an overview of the format, including the look and feel of ProRAW images, quality metrics, and compatibility with your app. From there, we’ll explore how you can incorporate ProRAW into your app at every stage of the production pipeline, including capturing imagery with AVFoundation, storage using PhotoKit, and editing with Core Image.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10160-capture-and-process-proraw-images","title":"Capture and process ProRAW images","type":"topic"},"https://developer.apple.com/documentation/photokit/phlocalidentifierserrorkey":{"url":"https:\/\/developer.apple.com\/documentation\/photokit\/phlocalidentifierserrorkey","identifier":"https:\/\/developer.apple.com\/documentation\/photokit\/phlocalidentifierserrorkey","type":"link","title":"PHLocalIdentifiersErrorKey","titleInlineContent":[{"type":"codeVoice","code":"PHLocalIdentifiersErrorKey"}]},"WWDC21.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDC21.jpeg"}],"identifier":"WWDC21.jpeg","type":"image","alt":null},"doc://WWDCNotes/documentation/WWDCNotes":{"abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"type":"topic","kind":"symbol","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"title":"WWDC Notes","role":"collection","url":"\/documentation\/wwdcnotes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10023-Whats-new-in-the-Photos-picker":{"url":"\/documentation\/wwdcnotes\/wwdc22-10023-whats-new-in-the-photos-picker","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10023-Whats-new-in-the-Photos-picker","type":"topic","title":"What’s new in the Photos picker","kind":"article","abstract":[{"type":"text","text":"PHPicker provides simple and secure integration between your app and the system Photos library. Learn how SwiftUI and Transferable can help you offer integration across iOS, iPadOS, macOS, and watchOS."}],"role":"sampleCode"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"type":"link","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!"},"https://developer.apple.com/wwdc21/10046":{"type":"download","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc21\/10046","identifier":"https:\/\/developer.apple.com\/wwdc21\/10046"},"WWDCNotes.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"identifier":"WWDCNotes.png"},"https://developer.apple.com/documentation/photokit/phcloudidentifier/2909174-stringvalue":{"type":"link","url":"https:\/\/developer.apple.com\/documentation\/photokit\/phcloudidentifier\/2909174-stringvalue","titleInlineContent":[{"code":"stringValue","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/photokit\/phcloudidentifier\/2909174-stringvalue","title":"stringValue"},"https://developer.apple.com/documentation/photokit/phcloudidentifier":{"type":"link","url":"https:\/\/developer.apple.com\/documentation\/photokit\/phcloudidentifier","titleInlineContent":[{"code":"PHCloudIdentifier","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/photokit\/phcloudidentifier","title":"PHCloudIdentifier"}}}