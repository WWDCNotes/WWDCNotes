{"kind":"article","hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24"]]},"sections":[],"metadata":{"role":"sampleCode","roleHeading":"WWDC24","title":"Run, Break, Inspect: Explore effective debugging in LLDB","modules":[{"name":"WWDC Notes"}]},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10198-Run-Break-Inspect-Explore-effective-debugging-in-LLDB","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Learn how to use LLDB to explore and debug codebases. We’ll show you how to make the most of crashlogs and backtraces, and how to supercharge breakpoints with actions and complex stop conditions. We’ll also explore how the “p” command and the latest features in Swift 6 can enhance your debugging experience."}],"sampleCodeDownload":{"action":{"isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc24\/10198","overridingTitle":"Watch Video","type":"reference"},"kind":"sampleDownload"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Key-Takeaways","text":"Key Takeaways"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Explore Code with Ease","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Find bugs faster"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Pause program at any time","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Inspect variable states","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Evaluate expressions","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Much more","type":"text"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Presenter","text":"Presenter"},{"inlineContent":[{"inlineContent":[{"text":"Felipe Piovezan, Debugging Technologies","type":"text"}],"type":"emphasis"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Getting-Started","text":"Getting Started"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Define a debugging model"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Debugging using crashlogs"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Program pausing using breakpoints"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Tools - ","type":"text"},{"code":"p","type":"codeVoice"},{"text":" command","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Data type appearence in debugger","type":"text"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Program-Errors","text":"Program Errors"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Crash","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Incorrect Value","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Program Hanging"}]}]}]},{"inlineContent":[{"type":"text","text":"Somewhere between the start of the program execution, and the point in which the incorrect behavior is observed, faulty code was executed.The bug can usually be found by inspecting the state of the program at different points in time, with each inspection the problematic code being brought closer."}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Log-Statements","text":"Log Statements"},{"inlineContent":[{"type":"image","identifier":"WWDC24-10198-debugging-using-logs"}],"type":"paragraph"},{"inlineContent":[{"text":"If the log is detailed enough, it may be all that’s needed to pinpoint the bug in the code. This requires foresight by the programer to determine what is useful information to log, but can be a powerful technique to transmit app diagnostics between users and developers.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Print-Debugging","text":"Print Debugging"},{"syntax":"swift","code":["print(\"this string shows in the console\")"],"type":"codeListing"},{"inlineContent":[{"type":"image","identifier":"WWDC24-10198-debugging-using-print"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Insert print statements in the code"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Recompile"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Reproduce bug"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Inspect printed statements"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Remove print statements"}]}]}]}]},{"level":2,"type":"heading","anchor":"LLDB-Tools","text":"LLDB Tools"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Backtraces","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Variable inspection"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Breakpoints","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Expression Evaluation","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"identifier":"WWDC24-10198-run-break-inspect","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Repeating the run, break, inspect loop efficiently is key to an effective debugging session"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Crashlogs","text":"Crashlogs"},{"inlineContent":[{"type":"text","text":"When a program crashes a log is made called the crashlog. These can be opened by LLDB to potentially find the source of the bug before relaunching the program."}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Backtrace","text":"Backtrace"},{"inlineContent":[{"text":"The backtrace describes the sequence of function calls, or stack frames, that led to this program state. It provides a view into what each function was doing, where they were called, and also where each of them was going to return to.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC24-10198-backtrace"}],"type":"paragraph"},{"inlineContent":[{"text":"Make sure the project is checked out on the same commit as the version of the app that created the crashlog, and that the dSYM bundle for that build is available. By inspecting the backtrace, confirmations can be made showing the  middle of nested calls constructing UI elements.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Breakpoints","text":"Breakpoints"},{"inlineContent":[{"text":"Breakpoints observe the line and column information assigning each an ID. The most basic breakpoint can lead to breaking in interesting ways.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["Button(action: { watchLater.toggle(video: video) }) {","    let inList = watchLater.isInList(video: video)","    Label(inList ? \"In Watch Later\" : \"Add to Watch Later\",","    systemImage: inList ? \"checkmark\" : \"plus\")","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Three separate code regions attributed to the same line, but reached through different code paths:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Constructor Call","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Trailing Closure called by constructor","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Action Closure called when button is clicked"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Breakpoint-Actions","text":"Breakpoint Actions"},{"inlineContent":[{"type":"text","text":"The debugger can run commands when breakpoints are reached."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Command Line","anchor":"Command-Line"},{"inlineContent":[{"text":"LLDB provides detailed description of all of its commands by using the help command.","type":"text"}],"type":"paragraph"},{"syntax":"lldb","type":"codeListing","code":["(lldb) help <command>"]},{"inlineContent":[{"type":"text","text":"Any option of a specific command also has help."}],"type":"paragraph"},{"syntax":"lldb","type":"codeListing","code":["(lldb) help <command> <option>"]},{"inlineContent":[{"type":"text","text":"More lldb features can be discovered using the apropros command."}],"type":"paragraph"},{"syntax":"lldb","type":"codeListing","code":["(lldb) apropros <keyword>"]},{"inlineContent":[{"text":"A search for commands related to backtraces finds frame select and its alias, the f command. Also finding the thread backtrace command.","type":"text"}],"type":"paragraph"},{"syntax":"lldb","type":"codeListing","code":["(lldb) apropros backtrace","","The following commands may relate to 'backtrace':","    frame select        --Select the current stack frame by index from within the current thread (see 'thread backtrace'.)","    thread backtrace    --Show thread call stacks. Defaults to the current thread, thread indexes can be specified as arguements.","    f                   --Select the current stack frame by index from within the current thread (see 'thread backtrace'.)"]},{"level":2,"type":"heading","text":"Breakpoint Conditions","anchor":"Breakpoint-Conditions"},{"tabs":[{"title":"Xcode","content":[{"type":"paragraph","inlineContent":[{"identifier":"WWDC24-10198-breakpoint-condition","type":"image"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"Secondary click on the breakpoint","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Navigate to Edit Breakpoint","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Populate Condition field"}]}]}]}]},{"title":"CommandLine","content":[{"code":["(lldb) break modify <breakpoint ID> --condition \"video.length > 60\""],"type":"codeListing","syntax":"lldb"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Breakpoint only stops the program if the current video is longer than 60 seconds.","type":"text"}],"type":"paragraph"}]}]}]}],"type":"tabNavigator"},{"inlineContent":[{"text":"}","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC24-10198-tbreakpoint-condition"}],"type":"paragraph"},{"inlineContent":[{"text":"A temporary breakpoint causes the program to stop only once at that location.","type":"text"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["```lldb","(lldb) break modify <breakpoint ID> --ignore-count 10","```"]},{"inlineContent":[{"text":"Setting a breakpoint inside an if statement that executes only when the condition is true is a performant way.","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ High-firing breakpoints","","for video in videos {","    if (\/*break_condition*\/) {","        \/*set breakpoint here*\/","    }","    if (video.hasRemoteMedia) {","        video.loadRemoteMedia()","    }","    processVideo(video)","}"]},{"inlineContent":[{"type":"text","text":"A nice trick is to use the raise function with the SIGSTOP signal: this instructs the application to stop and, if running it through Xcode or lldb, the debugger will take over as if a breakpoint had been reached."}],"type":"paragraph"},{"level":2,"type":"heading","text":"LLDB Commands","anchor":"LLDB-Commands"},{"inlineContent":[{"type":"text","text":"** "},{"code":"p","type":"codeVoice"},{"type":"text","text":" Command **"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Command for most situations in which you need to inspect a variable or evaluate an expression. Has been reworked as an alias to the “do what I mean” print command."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"** Some Other Commands **"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"po","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"register read"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"memory read"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"target variable"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"type":"heading","text":"Type Summaries","anchor":"Type-Summaries"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"With Swift 6, the output of p can be customized","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Annotate the type with ","type":"text"},{"code":"@DebugDescription","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provide a "},{"type":"codeVoice","code":"debugdescription"},{"type":"text","text":" string property using"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"String interpolation","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Stored Properties"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"@DebugDescription"},{"type":"text","text":" can replace "},{"type":"codeVoice","code":"CustomDebugStringConvertible"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the protocol is implemented with:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"String interpolation"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Computed Properties","type":"text"},{"text":" ","type":"text"},{"text":"You can use the macro","type":"text"}]}]}]}]}],"type":"unorderedList"},{"level":2,"type":"heading","text":"Written By","anchor":"Written-By"},{"numberOfColumns":5,"type":"row","columns":[{"content":[{"inlineContent":[{"identifier":"dl-alexandre","type":"image"}],"type":"paragraph"}],"size":1},{"content":[{"text":"Dalton Alexandre","anchor":"Dalton-Alexandre","level":3,"type":"heading"},{"inlineContent":[{"type":"reference","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/dl-alexandre","overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/dl-alexandre","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/x.com\/d_creatio","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/daltonalexandre.carrd.co","isActive":true}],"type":"paragraph"}],"size":4}]},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true}],"type":"paragraph"},{"level":2,"type":"heading","text":"Related Sessions","anchor":"Related-Sessions"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10211-Symbolication-Beyond-the-basics","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10226-Debug-with-structured-logging"],"style":"list","type":"links"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc24-10198-run-break-inspect-explore-effective-debugging-in-lldb"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"https://github.com/dl-alexandre":{"type":"link","titleInlineContent":[{"type":"text","text":"GitHub"}],"identifier":"https:\/\/github.com\/dl-alexandre","title":"GitHub","url":"https:\/\/github.com\/dl-alexandre"},"WWDCNotes.png":{"type":"image","identifier":"WWDCNotes.png","alt":null,"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}]},"WWDC24-10198-backtrace":{"type":"image","identifier":"WWDC24-10198-backtrace","alt":null,"variants":[{"url":"\/images\/WWDC24-10198-backtrace.jpeg","traits":["1x","light"]}]},"WWDC24-Icon.png":{"type":"image","identifier":"WWDC24-Icon.png","alt":null,"variants":[{"url":"\/images\/WWDC24-Icon.png","traits":["1x","light"]}]},"dl-alexandre":{"type":"image","identifier":"dl-alexandre","alt":"Profile image of Dalton Alexandre","variants":[{"url":"\/images\/dl-alexandre.jpeg","traits":["1x","light"]}]},"dl-alexandre.jpeg":{"type":"image","identifier":"dl-alexandre.jpeg","alt":null,"variants":[{"url":"\/images\/dl-alexandre.jpeg","traits":["1x","light"]}]},"WWDC24.jpeg":{"type":"image","identifier":"WWDC24.jpeg","alt":null,"variants":[{"url":"\/images\/WWDC24.jpeg","traits":["1x","light"]}]},"https://x.com/d_creatio":{"type":"link","titleInlineContent":[{"type":"text","text":"X\/Twitter"}],"identifier":"https:\/\/x.com\/d_creatio","title":"X\/Twitter","url":"https:\/\/x.com\/d_creatio"},"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","kind":"symbol","url":"\/documentation\/wwdcnotes","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"title":"WWDC Notes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"role":"collection"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24","abstract":[{"text":"Xcode 16, Swift 6, iOS 18, macOS 15 (Sequoia), tvOS 18, visionOS 2, watchOS 11.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: Swift Testing, ","type":"text"},{"code":"FinanceKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"TabletopKit","type":"codeVoice"},{"type":"text","text":", and more."}],"images":[{"type":"icon","identifier":"WWDC24-Icon.png"},{"type":"card","identifier":"WWDC24.jpeg"}],"url":"\/documentation\/wwdcnotes\/wwdc24","kind":"article","role":"collectionGroup","type":"topic","title":"WWDC24"},"WWDC24-10198-debugging-using-print":{"type":"image","identifier":"WWDC24-10198-debugging-using-print","alt":null,"variants":[{"url":"\/images\/WWDC24-10198-debugging-using-print.jpeg","traits":["1x","light"]}]},"WWDC24-10198-tbreakpoint-condition":{"type":"image","identifier":"WWDC24-10198-tbreakpoint-condition","alt":null,"variants":[{"url":"\/images\/WWDC24-10198-tbreakpoint-condition.jpeg","traits":["1x","light"]}]},"WWDC24-10198-run-break-inspect":{"type":"image","identifier":"WWDC24-10198-run-break-inspect","alt":null,"variants":[{"url":"\/images\/WWDC24-10198-run-break-inspect.jpeg","traits":["1x","light"]}]},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"type":"link","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10211-Symbolication-Beyond-the-basics":{"type":"topic","role":"sampleCode","abstract":[{"type":"text","text":"Discover how you can achieve maximum performance and insightful debugging with your app. Symbolication is at the center of tools such as Instruments and LLDB to help bridge the layers between your application’s runtime and your source code. Learn how this process works and the steps you can take to gain the most insight into your app."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10211-Symbolication-Beyond-the-basics","title":"Symbolication: Beyond the basics","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc21-10211-symbolication-beyond-the-basics"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10226-Debug-with-structured-logging":{"type":"topic","role":"sampleCode","abstract":[{"type":"text","text":"Discover the debug console in Xcode 15 and learn how you can improve your diagnostic experience through logging. Explore how you can navigate your logs easily and efficiently using advanced filtering and improved visualization. We’ll also show you how to use the dwim-print command to evaluate expressions in your code while debugging."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10226-Debug-with-structured-logging","title":"Debug with structured logging","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-10226-debug-with-structured-logging"},"doc://WWDCNotes/documentation/WWDCNotes/dl-alexandre":{"images":[{"type":"card","identifier":"dl-alexandre.jpeg"},{"identifier":"dl-alexandre.jpeg","type":"icon"}],"title":"Dalton Alexandre (6 notes)","abstract":[{"text":"Organic Dairy Farmer","type":"text"}],"kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/dl-alexandre","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/dl-alexandre","type":"topic"},"WWDC24-10198-debugging-using-logs":{"alt":null,"type":"image","variants":[{"url":"\/images\/WWDC24-10198-debugging-using-logs.jpeg","traits":["1x","light"]}],"identifier":"WWDC24-10198-debugging-using-logs"},"https://developer.apple.com/wwdc24/10198":{"type":"download","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc24\/10198","url":"https:\/\/developer.apple.com\/wwdc24\/10198"},"https://daltonalexandre.carrd.co":{"url":"https:\/\/daltonalexandre.carrd.co","titleInlineContent":[{"text":"Blog","type":"text"}],"type":"link","title":"Blog","identifier":"https:\/\/daltonalexandre.carrd.co"},"WWDC24-10198-breakpoint-condition":{"alt":null,"type":"image","identifier":"WWDC24-10198-breakpoint-condition","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC24-10198-breakpoint-condition.jpeg"}]}}}