{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"article","primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"üò± ‚ÄúNo Overview Available!‚Äù"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Be the hero to change that by watching the video and providing notes! It‚Äôs super easy:"},{"type":"text","text":" "},{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}],"type":"paragraph"},{"anchor":"Related-Sessions","type":"heading","text":"Related Sessions","level":2},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10211-Symbolication-Beyond-the-basics","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10226-Debug-with-structured-logging"],"type":"links","style":"list"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}],"type":"small"},{"inlineContent":[{"text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}],"type":"small"}]}],"sampleCodeDownload":{"kind":"sampleDownload","action":{"isActive":true,"overridingTitle":"Watch Video","identifier":"https:\/\/developer.apple.com\/wwdc24\/10198","type":"reference"}},"abstract":[{"type":"text","text":"Learn how to use LLDB to explore and debug codebases. We‚Äôll show you how to make the most of crashlogs and backtraces, and how to supercharge breakpoints with actions and complex stop conditions. We‚Äôll also explore how the ‚Äúp‚Äù command and the latest features in Swift 6 can enhance your debugging experience."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc24-10198-run-break-inspect-explore-effective-debugging-in-lldb"]}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24"]]},"metadata":{"title":"Run, Break, Inspect: Explore effective debugging in LLDB","roleHeading":"WWDC24","modules":[{"name":"WWDC Notes"}],"role":"sampleCode"},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10198-Run-Break-Inspect-Explore-effective-debugging-in-LLDB","interfaceLanguage":"swift"},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10226-Debug-with-structured-logging":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10226-Debug-with-structured-logging","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23-10226-debug-with-structured-logging","kind":"article","abstract":[{"text":"Discover the debug console in Xcode 15 and learn how you can improve your diagnostic experience through logging. Explore how you can navigate your logs easily and efficiently using advanced filtering and improved visualization. We‚Äôll also show you how to use the dwim-print command to evaluate expressions in your code while debugging.","type":"text"}],"role":"sampleCode","title":"Debug with structured logging"},"WWDCNotes.png":{"alt":null,"identifier":"WWDCNotes.png","type":"image","variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24":{"kind":"article","role":"collectionGroup","url":"\/documentation\/wwdcnotes\/wwdc24","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24","abstract":[{"text":"Xcode 16, Swift 6, iOS 18, macOS 15 (Sequoia), tvOS 18, visionOS 2, watchOS 11.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: Swift Testing, ","type":"text"},{"code":"FinanceKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"TabletopKit","type":"codeVoice"},{"type":"text","text":", and more."}],"title":"WWDC24"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10211-Symbolication-Beyond-the-basics":{"title":"Symbolication: Beyond the basics","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10211-Symbolication-Beyond-the-basics","kind":"article","role":"sampleCode","abstract":[{"type":"text","text":"Discover how you can achieve maximum performance and insightful debugging with your app. Symbolication is at the center of tools such as Instruments and LLDB to help bridge the layers between your application‚Äôs runtime and your source code. Learn how this process works and the steps you can take to gain the most insight into your app."}],"url":"\/documentation\/wwdcnotes\/wwdc21-10211-symbolication-beyond-the-basics","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes":{"abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","title":"WWDC Notes","url":"\/documentation\/wwdcnotes","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"role":"collection"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"title":"Learn More‚Ä¶","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Learn More‚Ä¶"}],"url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","type":"link"},"https://developer.apple.com/wwdc24/10198":{"identifier":"https:\/\/developer.apple.com\/wwdc24\/10198","url":"https:\/\/developer.apple.com\/wwdc24\/10198","type":"download","checksum":null}}}