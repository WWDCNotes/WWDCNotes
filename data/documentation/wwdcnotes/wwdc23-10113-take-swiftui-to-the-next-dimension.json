{"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc23-10113-take-swiftui-to-the-next-dimension"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"sampleCodeDownload":{"action":{"identifier":"https:\/\/developer.apple.com\/wwdc23\/10113","isActive":true,"type":"reference","overridingTitle":"Watch Video (19 min)"},"kind":"sampleDownload"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10113-Take-SwiftUI-to-the-next-dimension"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23"]]},"sections":[],"metadata":{"role":"sampleCode","roleHeading":"WWDC23","title":"Take SwiftUI to the next dimension","modules":[{"name":"WWDC Notes"}]},"primaryContentSections":[{"content":[{"level":2,"text":"Introduction","type":"heading","anchor":"Introduction"},{"inlineContent":[{"text":"There are 3 ways to display content in visionOS:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Window"}]},{"text":": 2D content","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Volume"}],"type":"strong"},{"text":": bounded 3D experiences","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Full Space","type":"text"}],"type":"strong"},{"text":": display of unbounded 3D content","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"This talk focuses on ","type":"text"},{"inlineContent":[{"type":"text","text":"Volumes"}],"type":"strong"},{"text":".","type":"text"}],"type":"paragraph"},{"level":2,"text":"Volumes","type":"heading","anchor":"Volumes"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Can use without any windows"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Provides a fixed scale container"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlike windows, maintains the same size at any distance"}]}]},{"content":[{"inlineContent":[{"text":"Horizontally aligned, and support viewing from any angle","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Doesn’t take over the entire space","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"code":".windowStyle(.volumetric)","type":"codeVoice"},{"type":"text","text":" modifier on a WindowGroup"}]}]}]},{"level":2,"text":"3D views and layout","type":"heading","anchor":"3D-views-and-layout"},{"level":4,"text":"Model3D","type":"heading","anchor":"Model3D"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"A RealityKit view to load simple 3D scenes asynchronously"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Similar to "},{"type":"codeVoice","code":"AsyncImage"},{"type":"text","text":", you can use placeholders during loading"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"code":".resizable","type":"codeVoice"},{"type":"text","text":" modifier with model, similar to "},{"code":"Image","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Default alignment is against back plane. Otherwise, use "},{"type":"codeVoice","code":".frame(depth:alignment:)"},{"type":"text","text":" with "},{"type":"codeVoice","code":".front"},{"type":"text","text":" alignment"}]}]},{"content":[{"inlineContent":[{"text":"Can use ","type":"text"},{"type":"codeVoice","code":".glassBackgroundEffect()"},{"text":" to make text labels readable in visionOS","type":"text"}],"type":"paragraph"}]}]},{"level":2,"text":"RealityView","type":"heading","anchor":"RealityView"},{"inlineContent":[{"text":"Use for more involved 3D scenes","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Can use RealityKit’s Entity-Component system for advanced rendering"}],"type":"paragraph"},{"level":4,"text":"RealityView attachments","type":"heading","anchor":"RealityView-attachments"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Pair tagged (","type":"text"},{"code":".tag","type":"codeVoice"},{"text":") SwiftUI views with Entity inside RealityView","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Useful for adding annotations or editing affordances"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"These live views can respond to state changes, run animations, and handle gestures"}]}]}]},{"level":2,"text":"3D gestures","type":"heading","anchor":"3D-gestures"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Existing gestures supported in 3D","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Hands, eyes, trackpad mechanics supported"}]}]}]},{"inlineContent":[{"text":"Add ","type":"text"},{"code":"InputTargetComponent","type":"codeVoice"},{"text":" to RealityKit Entity to receive input","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"codeVoice","code":"CollisionComponent"},{"text":" is used to define shape of entity’s interactive region","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Can use "},{"code":"SpatialTapGesture","type":"codeVoice"},{"type":"text","text":" to allow user to interact with entity"}],"type":"paragraph"},{"inlineContent":[{"code":".targetedToEntity","type":"codeVoice"},{"type":"text","text":" modifier ties gestures to specific entities"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Convert from SwiftUI local space to scene’s coordinate space"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Instead of loading another model using RealityKit, you can add a "},{"code":"Model3D","type":"codeVoice"},{"type":"text","text":" as an attachment"}],"type":"paragraph"},{"inlineContent":[{"type":"codeVoice","code":"RotateGesture3D"},{"type":"text","text":" is another new gesture you can use"}],"type":"paragraph"},{"level":2,"text":"Written By","type":"heading","anchor":"Written-By"},{"type":"row","columns":[{"size":1,"content":[{"inlineContent":[{"type":"image","identifier":"coughski"}],"type":"paragraph"}]},{"size":4,"content":[{"anchor":"Kuba-Szulaczkowski","type":"heading","text":"Kuba Szulaczkowski","level":3},{"type":"paragraph","inlineContent":[{"type":"reference","overridingTitle":"Contributed Notes","isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/coughski","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}]},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/coughski"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/x.com\/coughski"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/"}]}]}],"numberOfColumns":5},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"isActive":true,"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","type":"reference"}],"type":"paragraph"},{"level":2,"text":"Related Sessions","type":"heading","anchor":"Related-Sessions"},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10080-Build-spatial-experiences-with-RealityKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10081-Enhance-your-spatial-computing-app-with-RealityKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10110-Elevate-your-windowed-app-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10111-Go-beyond-the-window-with-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10203-Develop-your-first-immersive-app"]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}],"type":"small"},{"inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}],"type":"small"}],"kind":"content"}],"abstract":[{"type":"text","text":"Get ready to add depth and dimension to your visionOS apps. Find out how to bring three-dimensional objects to your app using volumes, get to know the Model 3D API, and learn how to position and animate content. We’ll also show you how to use UI attachments in RealityView and support gestures in your content."}],"references":{"coughski.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/coughski.jpeg"}],"type":"image","identifier":"coughski.jpeg","alt":null},"https://developer.apple.com/wwdc23/10113":{"type":"download","url":"https:\/\/developer.apple.com\/wwdc23\/10113","identifier":"https:\/\/developer.apple.com\/wwdc23\/10113","checksum":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10111-Go-beyond-the-window-with-SwiftUI":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-10111-go-beyond-the-window-with-swiftui","abstract":[{"text":"Get ready to launch into space — a new SwiftUI scene type that can help you make great immersive experiences for visionOS. We’ll show you how to create a new scene with ImmersiveSpace, place 3D content, and integrate RealityView. Explore how you can use the immersionStyle scene modifier to increase the level of immersion in an app and learn best practices for managing spaces, adding virtual hands with ARKit, adding support for SharePlay, and building an “out of this world” experience!","type":"text"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10111-Go-beyond-the-window-with-SwiftUI","title":"Go beyond the window with SwiftUI","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/coughski":{"url":"\/documentation\/wwdcnotes\/coughski","title":"Kuba Szulaczkowski (3 notes)","abstract":[{"type":"text","text":"No Bio on GitHub"}],"images":[{"identifier":"coughski.jpeg","type":"card"},{"identifier":"coughski.jpeg","type":"icon"}],"kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/coughski","role":"sampleCode"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"type":"link","title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}]},"coughski":{"variants":[{"traits":["1x","light"],"url":"\/images\/coughski.jpeg"}],"type":"image","identifier":"coughski","alt":"Profile image of Kuba Szulaczkowski"},"https://github.com/coughski":{"type":"link","title":"GitHub","url":"https:\/\/github.com\/coughski","identifier":"https:\/\/github.com\/coughski","titleInlineContent":[{"type":"text","text":"GitHub"}]},"WWDC23.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23.jpeg"}],"type":"image","identifier":"WWDC23.jpeg","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10203-Develop-your-first-immersive-app":{"url":"\/documentation\/wwdcnotes\/wwdc23-10203-develop-your-first-immersive-app","abstract":[{"text":"Find out how you can build immersive apps for visionOS using Xcode and Reality Composer Pro. We’ll show you how to get started with a new visionOS project, use Xcode Previews for your SwiftUI development, and take advantage of RealityKit and RealityView to render 3D content.","type":"text"}],"role":"sampleCode","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10203-Develop-your-first-immersive-app","title":"Develop your first immersive app"},"WWDCNotes.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}],"type":"image","identifier":"WWDCNotes.png","alt":null},"https://":{"type":"link","title":"Blog","url":"https:\/\/","identifier":"https:\/\/","titleInlineContent":[{"type":"text","text":"Blog"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10080-Build-spatial-experiences-with-RealityKit":{"abstract":[{"text":"Discover how RealityKit can bring your apps into a new dimension. Get started with RealityKit entities, components, and systems, and learn how you can add 3D models and effects to your app on visionOS. We’ll also take you through the RealityView API and demonstrate how to add 3D objects to windows, volumes, and spaces to make your apps more immersive. And we’ll explore combining RealityKit with spatial input, animation, and spatial audio.","type":"text"}],"kind":"article","title":"Build spatial experiences with RealityKit","url":"\/documentation\/wwdcnotes\/wwdc23-10080-build-spatial-experiences-with-realitykit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10080-Build-spatial-experiences-with-RealityKit","type":"topic","role":"sampleCode"},"https://x.com/coughski":{"type":"link","title":"X\/Twitter","url":"https:\/\/x.com\/coughski","identifier":"https:\/\/x.com\/coughski","titleInlineContent":[{"type":"text","text":"X\/Twitter"}]},"doc://WWDCNotes/documentation/WWDCNotes":{"title":"WWDC Notes","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","url":"\/documentation\/wwdcnotes"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10110-Elevate-your-windowed-app-for-spatial-computing":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10110-Elevate-your-windowed-app-for-spatial-computing","title":"Elevate your windowed app for spatial computing","type":"topic","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10110-elevate-your-windowed-app-for-spatial-computing","abstract":[{"type":"text","text":"Discover how you can bring your multiplatform SwiftUI app to visionOS and the Shared Space. We’ll show you how to add the visionOS destination to an existing app and view your app in the Simulator. Explore how your SwiftUI code automatically adapts to support the unique context and presentation of the visionOS platform. Learn how you can update custom views, improve your app’s UI, and add features and controls specific to this platform."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23":{"title":"WWDC23","images":[{"type":"icon","identifier":"WWDC23-Icon.png"},{"type":"card","identifier":"WWDC23.jpeg"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23","abstract":[{"type":"text","text":"Xcode 15, Swift 5.9, iOS 17, macOS 14 (Sonoma), tvOS 17, visionOS 1, watchOS 10."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"SwiftData"},{"text":", ","type":"text"},{"code":"Observation","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit","type":"codeVoice"},{"text":" views, and more.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc23","type":"topic","role":"collectionGroup"},"WWDC23-Icon.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDC23-Icon.png"}],"type":"image","identifier":"WWDC23-Icon.png","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10081-Enhance-your-spatial-computing-app-with-RealityKit":{"type":"topic","abstract":[{"text":"Go beyond the window and learn how you can bring engaging and immersive 3D content to your apps with RealityKit. Discover how SwiftUI scenes work in tandem with RealityView and how you can embed your content into an entity hierarchy. We’ll also explore how you can blend virtual content and the real world using anchors, bring particle effects into your apps, add video content, and create more immersive experiences with portals.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc23-10081-enhance-your-spatial-computing-app-with-realitykit","title":"Enhance your spatial computing app with RealityKit","kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10081-Enhance-your-spatial-computing-app-with-RealityKit"}}}