{"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20"]]},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10615-Build-GPU-binaries-with-Metal"},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"üò± ‚ÄúNo Overview Available!‚Äù"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Be the hero to change that by watching the video and providing notes! It‚Äôs super easy:"},{"type":"text","text":" "},{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}]},{"level":2,"type":"heading","text":"Related Sessions","anchor":"Related-Sessions"},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10124-Bring-your-game-to-Mac-Part-2-Compile-your-shaders","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10102-Target-and-optimize-GPU-binaries-with-Metal-3","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10229-Discover-compilation-workflows-in-Metal","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10616-Debug-GPUside-errors-in-Metal","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10631-Bring-your-Metal-app-to-Apple-silicon-Macs","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10632-Optimize-Metal-Performance-for-Apple-silicon-Macs"],"style":"list"},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}]}],"metadata":{"title":"Build GPU binaries with Metal","role":"sampleCode","modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC20"},"abstract":[{"type":"text","text":"Power up your shader pipeline with enhancements to the Metal shader compilation model ‚Äî all leading to a dramatic reduction in Pipeline State Object (PSO) loading time, especially upon first launch. Learn about explicit PSO caching and sharing of GPU binaries using Metal binary archives and dynamic libraries. And we‚Äôll detail the toolchain to create libraries and improve your shader compilation workflow."}],"sampleCodeDownload":{"kind":"sampleDownload","action":{"identifier":"https:\/\/developer.apple.com\/wwdc20\/10615","overridingTitle":"Watch Video (36 min)","isActive":true,"type":"reference"}},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc20-10615-build-gpu-binaries-with-metal"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","title":"WWDC Notes","url":"\/documentation\/wwdcnotes","type":"topic","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"images":[{"identifier":"WWDCNotes.png","type":"icon"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","role":"collection"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10229-Discover-compilation-workflows-in-Metal":{"role":"sampleCode","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc21-10229-discover-compilation-workflows-in-metal","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10229-Discover-compilation-workflows-in-Metal","abstract":[{"type":"text","text":"The Metal shading language is a powerful C++ based language that allows apps to render stunning effects while maintaining a flexible shader development pipeline. Discover how to more easily build and extend your render pipelines using Dynamic Libraries and Function Pointers. We‚Äôll also show you how to accelerate your shader compilation at runtime with Binary Function Archives, Function Linking, and Function Stitching."}],"title":"Discover compilation workflows in Metal"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10631-Bring-your-Metal-app-to-Apple-silicon-Macs":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10631-Bring-your-Metal-app-to-Apple-silicon-Macs","title":"Bring your Metal app to Apple silicon Macs","role":"sampleCode","abstract":[{"type":"text","text":"Meet the Tile Based Deferred Rendering (TBDR) GPU architecture for Apple silicon Macs ‚Äî the heart of your Metal app or game‚Äôs graphics performance. Learn how you can translate or port your graphics-intensive app over to Apple silicon, and how to take advantage of TBDR and Metal when building natively for the platform. We‚Äôll look at how TBDR compares with the Immediate Mode Rendering pipeline of older Macs, go through common issues you may face when bringing an app or game over, and explore how to offer incredible performance when building with the native SDK."}],"url":"\/documentation\/wwdcnotes\/wwdc20-10631-bring-your-metal-app-to-apple-silicon-macs","type":"topic"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","title":"Learn More‚Ä¶","url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Learn More‚Ä¶"}],"type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20":{"abstract":[{"type":"text","text":"Xcode 12, Swift 5.3, iOS 14, macOS 11 (Big Sur), tvOS 14, watchOS 7."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"code":"WidgetKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit Testing","type":"codeVoice"},{"text":", and more.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"url":"\/documentation\/wwdcnotes\/wwdc20","role":"collectionGroup","type":"topic","kind":"article","title":"WWDC20"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10102-Target-and-optimize-GPU-binaries-with-Metal-3":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10102-Target-and-optimize-GPU-binaries-with-Metal-3","title":"Target and optimize GPU binaries with Metal 3","role":"sampleCode","abstract":[{"type":"text","text":"Discover how you can reduce in-app stutters, first launch times, and new level load times when you generate your GPU binaries entirely at project build time with offline compilation. We‚Äôll also show you how to improve total compile time and binary size for larger GPU programs using the ‚ÄúOptimize for size‚Äù compiler option."}],"url":"\/documentation\/wwdcnotes\/wwdc22-10102-target-and-optimize-gpu-binaries-with-metal-3","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10124-Bring-your-game-to-Mac-Part-2-Compile-your-shaders":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10124-Bring-your-game-to-Mac-Part-2-Compile-your-shaders","title":"Bring your game to Mac, Part 2: Compile your shaders","role":"sampleCode","abstract":[{"type":"text","text":"Discover how the Metal shader converter streamlines the process of bringing your HLSL shaders to Metal as we continue our three-part series on bringing your game to Mac. Find out how to build a fast, end-to-end shader pipeline from DXIL that supports all shader stages and allows you to leverage the advanced features of Apple GPUs. We‚Äôll also show you how to reduce app launch time and stutters by generating GPU binaries with the offline compiler."}],"url":"\/documentation\/wwdcnotes\/wwdc23-10124-bring-your-game-to-mac-part-2-compile-your-shaders","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10632-Optimize-Metal-Performance-for-Apple-silicon-Macs":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10632-Optimize-Metal-Performance-for-Apple-silicon-Macs","title":"Optimize Metal Performance for Apple silicon Macs","role":"sampleCode","abstract":[{"type":"text","text":"Apple silicon Macs are a transformative new platform for graphics-intensive apps ‚Äî and we‚Äôre going to show you how to fire up the GPU to create blazingly fast apps and games."}],"url":"\/documentation\/wwdcnotes\/wwdc20-10632-optimize-metal-performance-for-apple-silicon-macs","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10616-Debug-GPUside-errors-in-Metal":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10616-Debug-GPUside-errors-in-Metal","title":"Debug GPU-side errors in Metal","role":"sampleCode","abstract":[{"type":"text","text":"Track down even the trickiest GPU-side programming errors with enhanced reporting in Xcode 12. While Metal‚Äôs API validation layer can catch most problems in a project, GPU errors can cause a host of difficult-to-debug issues."}],"url":"\/documentation\/wwdcnotes\/wwdc20-10616-debug-gpuside-errors-in-metal","type":"topic"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","alt":null,"type":"image","variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}]},"https://developer.apple.com/wwdc20/10615":{"identifier":"https:\/\/developer.apple.com\/wwdc20\/10615","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc20\/10615","type":"download"}}}