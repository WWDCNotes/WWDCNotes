{"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20"]]},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc20-10077-eliminate-animation-hitches-with-xctest"],"traits":[{"interfaceLanguage":"swift"}]}],"sampleCodeDownload":{"action":{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc20\/10077","overridingTitle":"Watch Video (13 min)"},"kind":"sampleDownload"},"kind":"article","sections":[],"abstract":[{"text":"Animations can dramatically enhance the user experience of your app, provide a sense of direct manipulation, and help people to better understand the results of their actions. Animation hitches can break that experience. Discover how to use XCTest to detect interruptions to smooth scrolling and animations, and learn how to catch regressions before they affect the people relying on your app.","type":"text"}],"primaryContentSections":[{"content":[{"text":"Hitches","type":"heading","level":2,"anchor":"Hitches"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Scrolling animation sometimes appears to jitter, those jitters in Xcode are called hitches"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A "},{"type":"emphasis","inlineContent":[{"text":"hitch","type":"text"}]},{"type":"text","text":" is a frame that is displayed on the screen later than expected."},{"type":"text","text":" "},{"type":"image","identifier":"WWDC20-10077-frame_delay"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"iPhones and iPads have screens with 60Hz refresh rate, iPad Pros go up to 120Hz. 60Hz means that each frame should stay on screen for 16.67ms, 120Hz means 8.33ms","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"VSYNC is what usually manages swapping frames on screen, we see a hitch when a frame misses its expected VSYNC"}]}]}]},{"text":"Hitch Metrics","type":"heading","level":2,"anchor":"Hitch-Metrics"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Hitch time: how many ms a frame is late"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Hitch ratio: Hitch time in ms per second for a given duration of hitches for a given duration (for a test, scroll event or transition)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Hitch time isn’t accurate as the desired screen refresh rate isn’t always 60 or 120fps, it can be perfectly fine for VSYNC to swipe zero frames for an idle screen"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"This is why we use Hitch ratio, it’s consistent across different cases and tests"}],"type":"paragraph"}]}]},{"text":"User impact targets for hitch ratio:","type":"heading","level":3,"anchor":"User-impact-targets-for-hitch-ratio"},{"inlineContent":[{"identifier":"WWDC20-10077-hitch_ratio_targets","type":"image"}],"type":"paragraph"},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"You should always aim to have <= 5ms\/s hitch ratio","type":"text"}],"type":"paragraph"}],"name":"Note"},{"text":"Measuring Hitches","type":"heading","level":2,"anchor":"Measuring-Hitches"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"It’s possible to measure hitches in development and production environment (production for iOS 14 only) using different tools:","type":"text"},{"text":"\n","type":"text"},{"identifier":"WWDC20-10077-hitch_measurement_tools","type":"image"}]}]},{"content":[{"inlineContent":[{"text":"XCTest Metrics is used to measure hitches in development environment, while MetricKit and Xcode Organizer can show you measures from the customers devices directly","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"XCTest Metrics has many tests you can use to measure different parts of your application, the one we’re concerned with here is ","type":"text"},{"code":"XCTOSSignPostMetric","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"XCTOSSignPostMetric"},{"type":"text","text":" used to measure animation duration in previous versions of Xcode, new in Xcode 12, this metric will provide 5 additional information:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Total count of hitches","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Total duration of hitches","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Hitch time ratio","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Frame rate"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Frame count","type":"text"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"To collect these metrics, you should write a test case that collects ","type":"text"},{"type":"codeVoice","code":"os_signpost"},{"text":" intervals with the new","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"In Xcode 11, this produced a non-animation "},{"code":"os_signpost","type":"codeVoice"},{"type":"text","text":" intervals:"}],"type":"paragraph"}]}]},{"code":["os_signpost(.begin, log: logHandle, name: \"performInterval\")","os_signpost(.end, log: logHandle, name: \"performInterval\")"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Now in Xcode 12, you can use the "},{"type":"codeVoice","code":".animationBegin"},{"type":"text","text":" instead to specify the extra metrics related to animation:"}],"type":"paragraph"}]}]},{"code":["os_signpost(.animationBegin, log: logHandle, name: \"performAnimationInterval\")","os_signpost(.end, log: logHandle, name: \"performAnimationInterval\")"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"You can also use one of the predefined ","type":"text"},{"code":"UIKit","type":"codeVoice"},{"text":" instrumented intervals for testing around navigation transitions and scrolling, these are sub-metrics provided on the XCTOSSignpostMetric class.","type":"text"}],"type":"paragraph"}]}]},{"code":["extension XCTOSSignpostMetric {","\t open class var navigationTransitionMetric: XCTMetric { get }","\t open class var customNavigationTransitionMetric: XCTMetric { get }","\t open class var scrollDecelerationMetric: XCTMetric { get }","\t open class var scrollDraggingMetric: XCTMetric { get }","}"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Here is a sample test case that launches the app, taps on ","type":"text"},{"inlineContent":[{"type":"text","text":"”Meal Planner”"}],"type":"emphasis"},{"text":" and measures the scrolling animation in a ","type":"text"},{"code":".fast","type":"codeVoice"},{"text":" velocity:","type":"text"}],"type":"paragraph"}]}]},{"code":["\/\/ Measure scrolling animation performance using a Performance XCTest","func testScrollingAnimationPerformance() throws {","\tapp.launch()","\tapp.staticTexts[\"Meal Planner\"].tap()","\tlet foodCollection = app.collectionViews.firstMatch","","\tmeasure(metrics: [XCTOSSignpostMetric.scrollDecelerationMetric]) {","\tfoodCollection.swipeUp(velocity: .fast)","\t}","}"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"To avoid swiping between different content in the 5 iterations of the measure block, we can reset the application state during measurements:"}],"type":"paragraph"}]}]},{"code":["func testScrollingAnimationPerformance() throws { ","\tapp.launch()","\tapp.staticTexts[\"Meal Planner\"].tap()","\tlet foodCollection = app.collectionViews.firstMatch","","\tlet measureOptions = XCTMeasureOptions()","\tmeasureOptions.invocationOptions = [.manuallyStop]","","\tmeasure(metrics: [XCTOSSignpostMetric.scrollDecelerationMetric],","\t\toptions: measureOptions) {","\tfoodCollection.swipeUp(velocity: .fast)","\tstopMeasuring()","\tfoodCollection.swipeDown(velocity: .fast)","\t}","}"],"type":"codeListing","syntax":"swift"},{"text":"Tips for creating performance tests:","type":"heading","level":4,"anchor":"Tips-for-creating-performance-tests"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Create a separate test scheme for your Performance XCTest"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"Release"},{"type":"text","text":"  Build Configuration and uncheck Debug executable"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Switch off Automatic Screenshots and Code Coverage"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Turn off all diagnostic options, checkers, sanitizers and memory management","type":"text"}]}]}]},{"text":"Written By","type":"heading","level":2,"anchor":"Written-By"},{"numberOfColumns":5,"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"ATahhan"}]}]},{"size":4,"content":[{"text":"Ammar AlTahhan","anchor":"Ammar-AlTahhan","type":"heading","level":3},{"inlineContent":[{"isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/ATahhan","type":"reference","overridingTitle":"Contributed Notes"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"identifier":"https:\/\/github.com\/ATahhan","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"identifier":"https:\/\/","type":"reference"}],"type":"paragraph"}]}],"type":"row"},{"type":"thematicBreak"},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"isActive":true,"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}],"type":"paragraph"},{"text":"Related Sessions","type":"heading","level":2,"anchor":"Related-Sessions"},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10181-Ultimate-application-performance-survival-guide","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10057-Identify-trends-with-the-Power-and-Performance-API","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10076-Diagnose-performance-issues-with-the-Xcode-Organizer","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10081-Whats-new-in-MetricKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10164-XCTSkip-your-tests","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10220-Handle-interruptions-and-alerts-in-UI-tests","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10687-Triage-test-failures-with-XCTIssue"]},{"inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10077-Eliminate-animation-hitches-with-XCTest"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC20","title":"Eliminate animation hitches with XCTest","role":"sampleCode"},"references":{"ATahhan.jpeg":{"alt":null,"type":"image","identifier":"ATahhan.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/ATahhan.jpeg"}]},"https://developer.apple.com/wwdc20/10077":{"url":"https:\/\/developer.apple.com\/wwdc20\/10077","identifier":"https:\/\/developer.apple.com\/wwdc20\/10077","checksum":null,"type":"download"},"https://":{"titleInlineContent":[{"type":"text","text":"Blog"}],"title":"Blog","identifier":"https:\/\/","type":"link","url":"https:\/\/"},"WWDC20-Icon.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC20-Icon.png"}],"identifier":"WWDC20-Icon.png","type":"image","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10164-XCTSkip-your-tests":{"abstract":[{"text":"Get the test results that matter — and skip the ones that don’t. Discover how you can implement XCTSkip to conditionally avoid tests at runtime. We’ll take you through how to return this new test result and better document tests beyond pass and fail within your test bundle.","type":"text"}],"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10164-XCTSkip-your-tests","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc20-10164-xctskip-your-tests","title":"XCTSkip your tests"},"doc://WWDCNotes/documentation/WWDCNotes":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"url":"\/documentation\/wwdcnotes","type":"topic","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"role":"collection","title":"WWDC Notes","kind":"symbol"},"WWDCNotes.png":{"alt":null,"type":"image","identifier":"WWDCNotes.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDCNotes.png"}]},"ATahhan":{"alt":"Profile image of Ammar AlTahhan","identifier":"ATahhan","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/ATahhan.jpeg"}]},"WWDC20.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC20.jpeg"}],"identifier":"WWDC20.jpeg","type":"image","alt":null},"WWDC20-10077-frame_delay":{"alt":null,"type":"image","identifier":"WWDC20-10077-frame_delay","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC20-10077-frame_delay.png"}]},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"title":"Contributions are welcome!","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"https://github.com/ATahhan":{"url":"https:\/\/github.com\/ATahhan","identifier":"https:\/\/github.com\/ATahhan","title":"GitHub","type":"link","titleInlineContent":[{"type":"text","text":"GitHub"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10076-Diagnose-performance-issues-with-the-Xcode-Organizer":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10076-Diagnose-performance-issues-with-the-Xcode-Organizer","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc20-10076-diagnose-performance-issues-with-the-xcode-organizer","type":"topic","abstract":[{"text":"Analyze aggregated power and performance data from multiple versions of your app with just a few clicks. We’ll introduce you to the latest version of the Xcode Organizer and its interactive interface, where you can easily compare and contrast app metrics across releases. Explore disk write diagnostics and scroll hitch metrics, and learn how you can use these to offer better performance, reduce battery consumption, and improve device health for people using your app.","type":"text"}],"title":"Diagnose performance issues with the Xcode Organizer"},"doc://WWDCNotes/documentation/WWDCNotes/ATahhan":{"abstract":[{"type":"text","text":"Software Engineer"}],"url":"\/documentation\/wwdcnotes\/atahhan","type":"topic","kind":"article","title":"Ammar AlTahhan (12 notes)","images":[{"identifier":"ATahhan.jpeg","type":"card"},{"identifier":"ATahhan.jpeg","type":"icon"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/ATahhan"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20":{"title":"WWDC20","images":[{"type":"icon","identifier":"WWDC20-Icon.png"},{"type":"card","identifier":"WWDC20.jpeg"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20","kind":"article","abstract":[{"text":"Xcode 12, Swift 5.3, iOS 14, macOS 11 (Big Sur), tvOS 14, watchOS 7.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"WidgetKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit Testing","type":"codeVoice"},{"text":", and more.","type":"text"}],"role":"collectionGroup","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10687-Triage-test-failures-with-XCTIssue":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10687-Triage-test-failures-with-XCTIssue","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc20-10687-triage-test-failures-with-xctissue","type":"topic","abstract":[{"text":"Put your test failures to work: Learn how to triage and diagnose uncaught issues in your app using the latest testing APIs in Xcode. We’ll show you how to help ease your testing workflow and put failures into context to help you deliver the best quality product.","type":"text"}],"title":"Triage test failures with XCTIssue"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10057-Identify-trends-with-the-Power-and-Performance-API":{"type":"topic","role":"sampleCode","kind":"article","title":"Identify trends with the Power and Performance API","url":"\/documentation\/wwdcnotes\/wwdc20-10057-identify-trends-with-the-power-and-performance-api","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10057-Identify-trends-with-the-Power-and-Performance-API","abstract":[{"text":"Track your app’s performance metrics in custom team dashboards, bug reporting systems, and other custom workflows with the Power and Performance Metrics and Diagnostics API. Explore how you can access the same data that drives the Power and Performance analysis tools in Xcode to quickly identify trends and regressions. Learn how to leverage diagnostic signatures and logs — including call stack trees — to prioritize and debug issues. And discover how you can integrate this API with your development team’s existing tools to troubleshoot issues quickly, offering better overall performance for people who use your app.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10220-Handle-interruptions-and-alerts-in-UI-tests":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10220-Handle-interruptions-and-alerts-in-UI-tests","url":"\/documentation\/wwdcnotes\/wwdc20-10220-handle-interruptions-and-alerts-in-ui-tests","role":"sampleCode","type":"topic","kind":"article","abstract":[{"text":"Learn how to anticipate potential interruptions to your app’s interface and build smart tests to identify them. UI interruptions often appear indeterminately, typically during onboarding or first launch, which can make them hard to track down. Learn how to understand interruptions, write stronger tests with UI interruption handlers, and manage expected alerts.","type":"text"}],"title":"Handle interruptions and alerts in UI tests"},"WWDC20-10077-hitch_measurement_tools":{"alt":null,"type":"image","identifier":"WWDC20-10077-hitch_measurement_tools","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC20-10077-hitch_measurement_tools.png"}]},"WWDC20-10077-hitch_ratio_targets":{"alt":null,"identifier":"WWDC20-10077-hitch_ratio_targets","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC20-10077-hitch_ratio_targets.png"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10081-Whats-new-in-MetricKit":{"abstract":[{"type":"text","text":"Quickly detect power and performance regressions and troubleshoot app issues when you adopt MetricKit. Discover the latest trackable metrics for your app, including CPU instructions, animation hitches, and exit reasons. And learn about diagnostics in MetricKit that can help you troubleshoot hangs, crashes, and disk writes."}],"url":"\/documentation\/wwdcnotes\/wwdc20-10081-whats-new-in-metrickit","type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10081-Whats-new-in-MetricKit","kind":"article","title":"What’s new in MetricKit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10181-Ultimate-application-performance-survival-guide":{"abstract":[{"text":"Performance optimization can seem like a daunting task — with many metrics to track and tools to use. Fear not: Our survival guide to app performance is here to help you understand tooling, metrics, and paradigms that can help smooth your development process and contribute to a great experience for people using your app.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10181-ultimate-application-performance-survival-guide","type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10181-Ultimate-application-performance-survival-guide","kind":"article","title":"Ultimate application performance survival guide"}}}