{"kind":"article","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"content":[{"type":"heading","anchor":"Getting-Started","level":2,"text":"Getting Started"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"General tab > Add run destination > visionOS"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Asset Catalog > New app icon"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"visionOS app icons have 3 layers that respond dynamically"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"type":"heading","anchor":"Platform-Differences","level":2,"text":"Platform Differences"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Cannot use APIs that were deprecated prior to iOS 14","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Cannot use APIs that don’t translate well to visionOS. Examples (not an exhaustive list, check the docs):"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"UIDeviceOrientation"}]}]},{"content":[{"inlineContent":[{"text":"UIScreen","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"UITabBar leading and trailing accessory views","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Tab bar is vertical"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Apple Pencil","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"code":"#if !os(visionOS)","type":"codeVoice"},{"text":" to exclude code that can’t run on visionOS.","type":"text"}]}]}]},{"type":"heading","anchor":"Polishing-Your-App","level":2,"text":"Polishing Your App"},{"type":"heading","anchor":"Simulator","level":4,"text":"Simulator"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"In the simulator, clicking simulates looking at a spot and pinching your fingers."}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Colors","level":4,"text":"Colors"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Semantic colors are especially important for this platform."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Use semantic colors, fonts, and materials."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"code":"UIColor.label","type":"codeVoice"},{"type":"text","text":", "},{"code":"UIColor.secondaryLabel","type":"codeVoice"},{"type":"text","text":", etc."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Labels using semantic colors get vibrancy by default","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"In their case they wanted to update a text field to use "},{"type":"codeVoice","code":"borderStyle = .roundedRect"},{"type":"text","text":" to give a style that matched the visionOS search bar"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"No distinction between dark and light mode on visionOS."}]}]}]},{"type":"heading","anchor":"Vibrancy-and-Materials","level":4,"text":"Vibrancy and Materials"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"UINavigationController"},{"type":"text","text":" and "},{"type":"codeVoice","code":"UISplitViewController"},{"type":"text","text":" get the glass background by default"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Can override background with the new ","type":"text"},{"type":"codeVoice","code":"preferredContainerBackgroundStyle"},{"text":" property on ","type":"text"},{"type":"codeVoice","code":"UIViewController"},{"text":" (","type":"text"},{"type":"codeVoice","code":"automatic"},{"text":", ","type":"text"},{"type":"codeVoice","code":"glass"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"hidden"},{"text":")","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Hover","level":4,"text":"Hover"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Makes app feel responsive","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Hover effects indicate interactivity"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Exactly where someone is looking is never delivered to your process","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"UIView","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"New property ","type":"text"},{"code":"hoverStyle","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"UIHoverStyle","type":"codeVoice"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"highlight"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"lift"},{"text":", or remove by setting to ","type":"text"},{"type":"codeVoice","code":"nil"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"code":"UIShape","type":"codeVoice"},{"type":"text","text":" to set shape of hover"}]}]}]}]}]},{"type":"heading","anchor":"Input","level":4,"text":"Input"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Looking at something and pinching is like a tap"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Looking at something, pinching, moving your hand, then releasing is like a pan gesture"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If you’re close to the app you can also reach out and touch it","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"You can also use a trackpad"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Accessibility has voiceover and switch control"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"System gesture recognizers just work"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Maximum of two inputs on this platform (one for each hand). Gesture recognizers that look for more than 2 touches won’t work."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Can use "},{"type":"codeVoice","code":"traitCollection.userInterfaceIdiom == .reality"},{"type":"text","text":" to check whether we’re running in a spatial computing environment, and then don’t use more than 2 touches"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Outside-the-bounds","level":2,"text":"Outside the bounds"},{"type":"heading","anchor":"Presentations","level":3,"text":"Presentations"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Sheets"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Pushes the presenting view controller back and dims it","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Won’t dismiss based on touches outside the bounds or other gestures, regardless of "},{"type":"codeVoice","code":"isModalInPresentation"},{"type":"text","text":", unlike iPadOS"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Alerts"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"2D representation of the app icon is placed at the top of an alert"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Make sure to always present an alert from the view controller that should be pushed back","type":"text"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"text":"Popovers","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"On iPad, popovers are constrained to the scene, but not in visionOS (similar to macOS)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"May want to update "},{"type":"codeVoice","code":"permittedArrowDirections"},{"type":"text","text":" to "},{"type":"codeVoice","code":".any"},{"type":"text","text":" on popovers to handle cases where it would now be more natural for the popover to go beyond the bounds of the window."}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"type":"heading","anchor":"Ornaments","level":3,"text":"Ornaments"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Views that are separate from but anchored to the scene."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Requires SwiftUI"}]}]},{"content":[{"inlineContent":[{"text":"Take advantage of the extra space the spatial platform provides","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Scene-relative placement","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Examples in the system","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Tab View goes on leading side of scene"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Safari puts the address bar above page content"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Freeform puts a toolbar at the bottom","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Ornaments are placed forward from the main content, and outside the scene bounds"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Require SwiftUI","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Ornament Alignment","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Scene alignment and content alignment (add screenshots)","type":"text"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Create an array of ","type":"text"},{"type":"codeVoice","code":"UIHostingOrnament"},{"text":" objects and set to ","type":"text"},{"type":"codeVoice","code":"self.ornaments"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Build SwiftUI content inside initializer "},{"type":"codeVoice","code":"UIHostingOrnament(sceneAlignment: contentAlignment:)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Ornaments share controller lifecycle","type":"text"}]}]}]},{"type":"heading","anchor":"RealityKit","level":3,"text":"RealityKit"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There’s a new SwiftUI view, "},{"type":"codeVoice","code":"RealityView"},{"type":"text","text":", used to host RealityKit content (see talk “Build spatial experiences with RealityKit”)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"UIHostingController"},{"type":"text","text":" to use "},{"type":"codeVoice","code":"RealityView"},{"type":"text","text":" (show example code)"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Written-By","level":2,"text":"Written By"},{"type":"row","columns":[{"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/avatars.githubusercontent.com\/u\/227043?v=4"}]}],"size":1},{"content":[{"level":3,"type":"heading","anchor":"Chris-Vasselli","text":"Chris Vasselli"},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/chrisvasselli","overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}]},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/chrisvasselli"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/x.com\/chrisvasselli"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/"}]}],"size":4}],"numberOfColumns":5},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}]},{"type":"heading","anchor":"Related-Sessions","level":2,"text":"Related Sessions"},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10072-Principles-of-spatial-design","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10080-Build-spatial-experiences-with-RealityKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10090-Run-your-iPad-and-iPhone-apps-in-the-Shared-Space","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10109-Meet-SwiftUI-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10110-Elevate-your-windowed-app-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10203-Develop-your-first-immersive-app"]},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}]},{"type":"small","inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}],"kind":"content"}],"abstract":[{"text":"Learn how to bring your UIKit app to visionOS. We’ll show you how to build for a new destination, explore APIs and best practices for spatial computing, and take your content into the third dimension when you use SwiftUI with UIKit in visionOS.","type":"text"}],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-111215-Meet-UIKit-for-spatial-computing","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"New Tools & Frameworks","generated":true,"identifiers":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10082-Meet-ARKit-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10184-Meet-ActivityKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10032-Meet-Assistive-Access","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10147-Meet-Core-Location-Monitor","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10146-Meet-Core-Location-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10043-Meet-MapKit-for-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10191-Meet-Object-Capture-for-iOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10025-Meet-Push-Notifications-Console","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10083-Meet-Reality-Composer-Pro","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10099-Meet-RealityKit-Trace","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10279-Meet-Safari-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10013-Meet-StoreKit-for-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10171-Meet-Swift-OpenAPI-Generator","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10187-Meet-SwiftData","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10109-Meet-SwiftUI-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10039-Meet-device-management-for-Apple-Watch","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10268-Meet-mergeable-libraries","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10026-Meet-watchOS-10"]}],"sampleCodeDownload":{"action":{"identifier":"https:\/\/developer.apple.com\/wwdc23\/111215","type":"reference","isActive":true,"overridingTitle":"Watch Video (25 min)"},"kind":"sampleDownload"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc23-111215-meet-uikit-for-spatial-computing"]}],"metadata":{"title":"Meet UIKit for spatial computing","modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC23","role":"sampleCode"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23"]]},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC23":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23","abstract":[{"text":"Xcode 15, Swift 5.9, iOS 17, macOS 14, tvOS 17, visionOS 1, watchOS 10.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"SwiftData","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Observation","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit","type":"codeVoice"},{"text":" views, and more.","type":"text"}],"images":[{"identifier":"WWDCNotes.png","type":"icon"}],"url":"\/documentation\/wwdcnotes\/wwdc23","type":"topic","role":"collectionGroup","title":"WWDC23","kind":"article"},"https://x.com/chrisvasselli":{"url":"https:\/\/x.com\/chrisvasselli","identifier":"https:\/\/x.com\/chrisvasselli","title":"X\/Twitter","type":"link","titleInlineContent":[{"text":"X\/Twitter","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10147-Meet-Core-Location-Monitor":{"kind":"article","title":"Meet Core Location Monitor","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10147-Meet-Core-Location-Monitor","url":"\/documentation\/wwdcnotes\/wwdc23-10147-meet-core-location-monitor","type":"topic","abstract":[{"type":"text","text":"Discover how Core Location Monitor can help you better understand location and beacon events in your app. Learn how to use Core Location Conditions to describe and track the state of events in your app, and find out how you can better respond to transitions in your apps through Swift semantics and improved reliability."}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10099-Meet-RealityKit-Trace":{"title":"Meet RealityKit Trace","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10099-Meet-RealityKit-Trace","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10099-meet-realitykit-trace","type":"topic","abstract":[{"type":"text","text":"Discover how you can use RealityKit Trace to improve the performance of your spatial computing apps. Explore performance profiling guidelines for this platform and learn how the RealityKit Trace template can help you optimize rendering for your apps. We’ll also provide guidance on profiling various types of content in your app to help pinpoint performance issues."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10187-Meet-SwiftData":{"url":"\/documentation\/wwdcnotes\/wwdc23-10187-meet-swiftdata","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10187-Meet-SwiftData","role":"sampleCode","title":"Meet SwiftData","abstract":[{"text":"SwiftData is a powerful and expressive persistence framework built for Swift. We’ll show you how you can model your data directly from Swift code, use SwiftData to work with your models, and integrate with SwiftUI.","type":"text"}],"kind":"article","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10110-Elevate-your-windowed-app-for-spatial-computing":{"title":"Elevate your windowed app for spatial computing","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-10110-elevate-your-windowed-app-for-spatial-computing","role":"sampleCode","abstract":[{"text":"Discover how you can bring your multiplatform SwiftUI app to visionOS and the Shared Space. We’ll show you how to add the visionOS destination to an existing app and view your app in the Simulator. Explore how your SwiftUI code automatically adapts to support the unique context and presentation of the visionOS platform. Learn how you can update custom views, improve your app’s UI, and add features and controls specific to this platform.","type":"text"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10110-Elevate-your-windowed-app-for-spatial-computing"},"https://":{"url":"https:\/\/","identifier":"https:\/\/","title":"Blog","type":"link","titleInlineContent":[{"type":"text","text":"Blog"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10082-Meet-ARKit-for-spatial-computing":{"title":"Meet ARKit for spatial computing","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10082-Meet-ARKit-for-spatial-computing","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10082-meet-arkit-for-spatial-computing","type":"topic","abstract":[{"type":"text","text":"Discover how you can use ARKit’s tracking and scene understanding features to develop a whole new universe of immersive apps and games. Learn how visionOS and ARKit work together to help you create apps that understand a person’s surroundings — all while preserving privacy. Explore the latest updates to the ARKit API and follow along as we demonstrate how to take advantage of hand tracking and scene geometry in your apps."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10083-Meet-Reality-Composer-Pro":{"title":"Meet Reality Composer Pro","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10083-Meet-Reality-Composer-Pro","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10083-meet-reality-composer-pro","type":"topic","abstract":[{"text":"Discover how to easily compose, edit, and preview 3D content with Reality Composer Pro. Follow along as we explore this developer tool by setting up a new project, composing scenes, adding particle emitters and audio, and even previewing content on device.","type":"text"}]},"https://developer.apple.com/wwdc23/111215":{"url":"https:\/\/developer.apple.com\/wwdc23\/111215","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc23\/111215","type":"download"},"doc://WWDCNotes/documentation/WWDCNotes":{"images":[{"type":"icon","identifier":"WWDCNotes.png"}],"title":"WWDC Notes","url":"\/documentation\/wwdcnotes","kind":"symbol","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","role":"collection","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10080-Build-spatial-experiences-with-RealityKit":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23-10080-build-spatial-experiences-with-realitykit","abstract":[{"type":"text","text":"Discover how RealityKit can bring your apps into a new dimension. Get started with RealityKit entities, components, and systems, and learn how you can add 3D models and effects to your app on visionOS. We’ll also take you through the RealityView API and demonstrate how to add 3D objects to windows, volumes, and spaces to make your apps more immersive. And we’ll explore combining RealityKit with spatial input, animation, and spatial audio."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10080-Build-spatial-experiences-with-RealityKit","role":"sampleCode","title":"Build spatial experiences with RealityKit","kind":"article"},"https://avatars.githubusercontent.com/u/227043?v=4":{"alt":"Profile image of Chris Vasselli","type":"image","identifier":"https:\/\/avatars.githubusercontent.com\/u\/227043?v=4","variants":[{"traits":["1x","light"],"url":"https:\/\/avatars.githubusercontent.com\/u\/227043?v=4"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10279-Meet-Safari-for-spatial-computing":{"kind":"article","title":"Meet Safari for spatial computing","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10279-Meet-Safari-for-spatial-computing","url":"\/documentation\/wwdcnotes\/wwdc23-10279-meet-safari-for-spatial-computing","type":"topic","abstract":[{"type":"text","text":"Discover the web for visionOS and learn how people can experience your web content in a whole new way. Explore the unique input model powering this platform and learn how you can optimize your website for spatial computing. We’ll also share how emerging standards are helping shape 3D experiences for the web."}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10072-Principles-of-spatial-design":{"abstract":[{"text":"Discover the fundamentals of spatial design. Learn how to design with depth, scale, windows, and immersion, and apply best practices for creating comfortable, human-centered experiences that transform reality. Find out how you can use these spatial design principles to extend your existing app or bring a new idea to life.","type":"text"}],"title":"Principles of spatial design","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10072-Principles-of-spatial-design","role":"sampleCode","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-10072-principles-of-spatial-design","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10026-Meet-watchOS-10":{"title":"Meet watchOS 10","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10026-Meet-watchOS-10","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10026-meet-watchos-10","type":"topic","abstract":[{"text":"Discover some of the most significant changes to Apple Watch since its introduction as we tour the redesigned user interface and the new Smart Stack. Learn how Apple designers approached the design of watchOS 10 as we explore layout, navigation, and visual style, and find out how you can apply them to create a great app for Apple Watch.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10171-Meet-Swift-OpenAPI-Generator":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10171-Meet-Swift-OpenAPI-Generator","url":"\/documentation\/wwdcnotes\/wwdc23-10171-meet-swift-openapi-generator","type":"topic","title":"Meet Swift OpenAPI Generator","abstract":[{"type":"text","text":"Discover how Swift OpenAPI Generator can help you work with HTTP server APIs whether you’re extending an iOS app or writing a server in Swift. We’ll show you how this package plugin can streamline your workflow and simplify your codebase by generating code from an OpenAPI document."}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10039-Meet-device-management-for-Apple-Watch":{"type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10039-Meet-device-management-for-Apple-Watch","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-10039-meet-device-management-for-apple-watch","title":"Meet device management for Apple Watch","abstract":[{"text":"Organizations can now deploy and configure Apple Watch in addition to other Apple devices. Learn how to implement device management for watchOS to help organizations improve productivity, support wellness, and provide additional support for their employees.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10013-Meet-StoreKit-for-SwiftUI":{"title":"Meet StoreKit for SwiftUI","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10013-Meet-StoreKit-for-SwiftUI","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10013-meet-storekit-for-swiftui","type":"topic","abstract":[{"type":"text","text":"Discover how you can use App Store product metadata and Xcode Previews to add in-app purchases to your app with just a few lines of code. Explore a new collection of UI components in StoreKit and learn how you can easily merchandise your products, present subscriptions in a way that helps users make informed decisions, and more."}]},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"title":"Contributions are welcome!","type":"link","url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10032-Meet-Assistive-Access":{"title":"Meet Assistive Access","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10032-Meet-Assistive-Access","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10032-meet-assistive-access","type":"topic","abstract":[{"type":"text","text":"Learn how Assistive Access can help people with cognitive disabilities more easily use iPhone and iPad. Discover the design principles that guide Assistive Access and find out how the system experience adapts to lighten cognitive load. We’ll show you how Assistive Access works and what you can do to support this experience in your app."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10203-Develop-your-first-immersive-app":{"title":"Develop your first immersive app","url":"\/documentation\/wwdcnotes\/wwdc23-10203-develop-your-first-immersive-app","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10203-Develop-your-first-immersive-app","role":"sampleCode","abstract":[{"text":"Find out how you can build immersive apps for visionOS using Xcode and Reality Composer Pro. We’ll show you how to get started with a new visionOS project, use Xcode Previews for your SwiftUI development, and take advantage of RealityKit and RealityView to render 3D content.","type":"text"}]},"WWDCNotes.png":{"alt":null,"type":"image","identifier":"WWDCNotes.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10191-Meet-Object-Capture-for-iOS":{"url":"\/documentation\/wwdcnotes\/wwdc23-10191-meet-object-capture-for-ios","kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10191-Meet-Object-Capture-for-iOS","title":"Meet Object Capture for iOS","type":"topic","abstract":[{"type":"text","text":"Discover how you can offer an end-to-end Object Capture experience directly in your iOS apps to help people turn their objects into ready-to-use 3D models. Learn how you can create a fully automated Object Capture scan flow with our sample app and how you can assist people in automatically capturing the best content for their model. We’ll also discuss LiDAR data and provide best practices for scanning objects."}]},"doc://WWDCNotes/documentation/WWDCNotes/chrisvasselli":{"url":"\/documentation\/wwdcnotes\/chrisvasselli","kind":"article","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/chrisvasselli","abstract":[{"type":"text","text":"Indie app developer, dad, creator of"}],"title":"Chris Vasselli (1 note)"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10268-Meet-mergeable-libraries":{"title":"Meet mergeable libraries","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10268-Meet-mergeable-libraries","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10268-meet-mergeable-libraries","type":"topic","abstract":[{"type":"text","text":"Discover how mergeable libraries combine the best parts of static and dynamic libraries to help improve your app’s productivity and runtime performance. Learn how you can enable faster development while shipping the smallest app. We’ll show you how to adopt mergeable libraries in Xcode 15 and share best practices for working with your code."}]},"https://github.com/chrisvasselli":{"titleInlineContent":[{"text":"GitHub","type":"text"}],"title":"GitHub","type":"link","url":"https:\/\/github.com\/chrisvasselli","identifier":"https:\/\/github.com\/chrisvasselli"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10109-Meet-SwiftUI-for-spatial-computing":{"url":"\/documentation\/wwdcnotes\/wwdc23-10109-meet-swiftui-for-spatial-computing","kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10109-Meet-SwiftUI-for-spatial-computing","title":"Meet SwiftUI for spatial computing","type":"topic","abstract":[{"type":"text","text":"Take a tour of the solar system with us and explore SwiftUI for visionOS! Discover how you can build an entirely new universe of apps with windows, volumes, and spaces. We’ll show you how to get started with SwiftUI on this platform as we build an astronomy app, add 3D content, and create a fully immersive experience to transport people to the stars."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10090-Run-your-iPad-and-iPhone-apps-in-the-Shared-Space":{"role":"sampleCode","type":"topic","title":"Run your iPad and iPhone apps in the Shared Space","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10090-Run-your-iPad-and-iPhone-apps-in-the-Shared-Space","url":"\/documentation\/wwdcnotes\/wwdc23-10090-run-your-ipad-and-iphone-apps-in-the-shared-space","abstract":[{"type":"text","text":"Discover how you can run your existing iPad and iPhone apps on Vision Pro. Learn how iPadOS and iOS apps operate on this platform, find out about the Designed for iPad experience, and explore the paths available for enhancing your app experience on visionOS."}],"kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10146-Meet-Core-Location-for-spatial-computing":{"url":"\/documentation\/wwdcnotes\/wwdc23-10146-meet-core-location-for-spatial-computing","kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10146-Meet-Core-Location-for-spatial-computing","title":"Meet Core Location for spatial computing","type":"topic","abstract":[{"type":"text","text":"Discover how Core Location helps your app find its place in the world — literally. We’ll share how you can build a spatial computing app that uses a person’s location while respecting their privacy. You’ll also learn how your app can request location access and how Core Location adapts requests from compatible iPad and iPhone apps."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10184-Meet-ActivityKit":{"kind":"article","title":"Meet ActivityKit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10184-Meet-ActivityKit","url":"\/documentation\/wwdcnotes\/wwdc23-10184-meet-activitykit","type":"topic","abstract":[{"type":"text","text":"Live Activities are a glanceable way for someone to keep track of the progress of a task within your app. We’ll teach you how you can create helpful experiences for the Lock Screen, the Dynamic Island, and StandBy. Learn how to update your app’s Live Activities, monitor activity state, and take advantage of WidgetKit and SwiftUI to build richer experiences."}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10043-Meet-MapKit-for-SwiftUI":{"title":"Meet MapKit for SwiftUI","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10043-Meet-MapKit-for-SwiftUI","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10043-meet-mapkit-for-swiftui","type":"topic","abstract":[{"text":"Discover how expanded SwiftUI support for MapKit has made it easier than ever for you to integrate Maps into your app. We’ll show you how to use SwiftUI to add annotations and overlays to a map, control the camera, and more.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10025-Meet-Push-Notifications-Console":{"url":"\/documentation\/wwdcnotes\/wwdc23-10025-meet-push-notifications-console","kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10025-Meet-Push-Notifications-Console","title":"Meet Push Notifications Console","type":"topic","abstract":[{"type":"text","text":"The Push Notifications Console is the best way to quickly test user notifications in your app. Learn how you can iterate on new ideas quickly by sending notifications directly from the console and analyze delivery logs to learn more about your pushes. We’ll also show you how to generate and validate tokens to successfully authenticate with Apple Push Notification service (APNs)."}]}}}