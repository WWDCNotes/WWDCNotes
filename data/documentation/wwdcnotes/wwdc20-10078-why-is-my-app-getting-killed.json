{"sampleCodeDownload":{"kind":"sampleDownload","action":{"identifier":"https:\/\/developer.apple.com\/wwdc20\/10078","isActive":true,"overridingTitle":"Watch Video (13 min)","type":"reference"}},"metadata":{"role":"sampleCode","modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC20","title":"Why is my app getting killed?"},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc20-10078-why-is-my-app-getting-killed"]}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20"]]},"primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Top causes of app termination:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Crashes","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"CPU Resources limit"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Watchdog"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Memory limit exceeded"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Memory pressure exit","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Background task timeout","type":"text"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"New-MetricKit-API","text":"New MetricKit API"},{"type":"paragraph","inlineContent":[{"code":"MXBackgroundExitData","type":"codeVoice"},{"text":" helps us understand why our app is getting killed by providing the exit count every time app is getting terminated:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["- cumulativeBadAccessExitCount","- cumulativeIllegalInstructionExitCount","- cumulativeAbnormalExitCount","- cumulativeCPUResourceLimitExitCount","- cumulativeMemoryResourceLimitExitCount","- cumulativeMemoryPressureExitCount","- cumulativeSuspendedwithLockedFileExitCount","- cumulativeAppWatchdogExitCount","- cumulativeBackgroundTaskAssertionTimeoutExitCount","- cumulativeNormalExitCount "]},{"level":3,"type":"heading","anchor":"Crashes","text":"Crashes"},{"inlineContent":[{"type":"text","text":"Crash is the most straightforward type of terminations. Crash may happen because of these 3 reasons:"}],"type":"paragraph"},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Segmentation fault"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Illegal Instruction","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Asserts and uncaught exceptions"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"These event will be generated on crashlog and the crash will report to us automatically. In addition of the Xcode organizer, MetricKit add more APIs for diagnostic on a per device basis which is "},{"type":"codeVoice","code":"MXCrashDiagnostic"}],"type":"paragraph"},{"inlineContent":[{"type":"codeVoice","code":"MXCrashDiagnostic"},{"text":" will provide:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"StackTrace","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Signal","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Exception Code"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Termination Reason"}],"type":"paragraph"}]}]},{"text":"Watchdog","level":3,"type":"heading","anchor":"Watchdog"},{"inlineContent":[{"type":"text","text":"Another termination happen because of Watchdog event that happen because of timeout during some key transitions."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Timeout during key transitions: long hang during app key transition such as launch, going background or foreground again. It has time limit around 20 seconds during transition."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Disabled in Simulator and in the debugger"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Fixing watchdog event will help to eliminate deadlocks, infinite loop, and unending synchronous work on the main thread","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Report available in "},{"type":"codeVoice","code":"MXCrashDiagnostic"}],"type":"paragraph"}]}]},{"text":"CPU Resource limit","level":3,"type":"heading","anchor":"CPU-Resource-limit"},{"inlineContent":[{"text":"CPU Resource limit is indicating the high sustained CPU load in background","type":"text"},{"text":" ","type":"text"},{"text":"Addition in Xcode 12 there will be solution:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Energy Exception Report through Xcode organizer and ","type":"text"},{"code":"MXCPUExceptionDiagnostic","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Call stack point out hotspots in code"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Consider moving work into "},{"type":"codeVoice","code":"BGProcessingTask"}]}]}]},{"text":"Memory footprint exceeded","level":3,"type":"heading","anchor":"Memory-footprint-exceeded"},{"inlineContent":[{"text":"App using too much memory. Some solutions:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Same limit for foreground and background"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Use instruments and memory debugger","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Keep in mind limitation for older devices","type":"text"}]}]}]},{"level":3,"anchor":"Jetsam-Memory-pressure-exit","text":"Jetsam (Memory pressure exit)","type":"heading"},{"content":[{"type":"paragraph","inlineContent":[{"text":"This is not a bug in our app, and it is most common termination.","type":"text"}]}],"style":"note","name":"Note","type":"aside"},{"items":[{"content":[{"inlineContent":[{"text":"System freeing up memory for active applications","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"How to reduce jetsam rate?","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Aim for less than 50 MB  in the background","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Upon backgrounding:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Flush state to disk"}]}]},{"content":[{"inlineContent":[{"text":"Clear out image view","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Drop caches"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"There are also suggestion for recovering from jetsam:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Save state upon entering background such as view controller stack, draft input in text fields, media playback position and many more depend on your use case"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Adopt UIKit State Restoration"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Remember users should not realize that the app was terminated"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"anchor":"Background-task-timeout","text":"Background task timeout","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can use "},{"type":"codeVoice","code":"beginBackgroundTask"},{"type":"text","text":" and "},{"type":"codeVoice","code":"endBackgroundTask"},{"type":"text","text":" for executing background task when going to background (Remember we have 30 seconds before app is suspended)"}]},{"syntax":"swift","code":["UIApplication.beginBackgroundTask(expirationHandler:)","UIApplication.endBackgroundTask(_:)"],"type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"text":"The problem is when we donâ€™t call ","type":"text"},{"code":"endBackgroundTask","type":"codeVoice"},{"text":", it will lead to failure to end task explicitly result in termination. However it is preventable","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Counts exposed via ","type":"text"},{"type":"codeVoice","code":"MXBackgroundExitData"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We should use the name  variant of UIKit API to prevent the termination happen"}]},{"syntax":"swift","code":["UIApplication.beginBackgroundTask(withName:expirationHandler:)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Why?"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The terminations do not occur in debugger"}]}]},{"content":[{"inlineContent":[{"text":"After that we can do console message and do an audit of our call to matching background and end task process","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Another solution is using "},{"type":"codeVoice","code":"expirationHandler"}]},{"items":[{"content":[{"inlineContent":[{"text":"Implement an ","type":"text"},{"code":"expirationHandler","type":"codeVoice"},{"text":" as safety net and do not rely it exclusively","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Call "},{"code":"endBackgroundTask","type":"codeVoice"},{"type":"text","text":" inside handler"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Do not begin new work inside handler","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Add telemetry at the start and each of each expiration handler"}],"type":"paragraph"}]}],"type":"unorderedList"},{"syntax":"swift","code":["let handle = MXMetricManager.makeLogHandle(category: \"DatabaseExpHandler\")","mxSignpost(.event, log: handle, name: \"Entered\")","cancelOperations()","closeDatabase()","mxSignpost(.event, log: handle, name: \"Exited\")","","UIApplication.shared.endBackgroundTask(backgroundTaskIdentifier)"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now let us inspect "},{"type":"codeVoice","code":"MXMetricPayload"},{"type":"text","text":" to see the signpost count and check any imbalance of the signpost count"}]},{"syntax":"xml","code":["\"signpostMetrics\": [ ","  {","    \"signpostCategory\": \"DatabaseExpirationHandler\",","    \"signpostName\": \"Entered\",","    \"totalSignpostCount\": 2","  },","  {","    \"signpostCategory\": \"DatabaseExpirationHandler\", ","    \"signpostName\": \"Exited\",","    \"totalSignpostCount\": 1 ","  }","]"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Another solutions to improve debugging of app terminations is checking ","type":"text"},{"code":"backgroundTimeRemaining","type":"codeVoice"},{"text":" before doing some background work","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Only start work if plenty of time remains","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Unsafe to begin task with < 5 seconds remaining"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Example code:","type":"text"}]},{"syntax":"swift","code":["let minimumTimeRemaining = min(5, estimateProcessingTime(inputData))","","if UIApplication.shared.backgroundTimeRemaining > minimumTimeRemaining {","    \/\/ Enough time remains, call begin background task","    return UIApplication.shared.beginBackgroundTask { ... }","} else {","    \/\/ Not enough time remains, defer this work until later","    registerProcessingTask(inputData)","    return .invalid","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The next thing we need to do also is avoiding leaking "},{"type":"codeVoice","code":"UIBackgroundTaskIdentifier"},{"type":"text","text":". Use local variable instead of an instance variable to hold "},{"type":"codeVoice","code":"UIBackgroundTaskIdentifier"},{"type":"text","text":" and it will preventing the leak since it will allocated on different memory"}]},{"type":"paragraph","inlineContent":[{"text":"Example code:","type":"text"}]},{"syntax":"swift","code":["@IBAction func beginDataExport(sender: UIButton) {","    var taskId: UIBackgroundTaskIdentifier = .invalid","    taskId = UIApplication.shared.beginBackgroundTask {...}","    \/\/ End the background task after archiving, which takes several seconds","    ArchiveUtility.exportUserData(completion: ()->()) {","        UIApplication.shared.endBackgroundTask(taskId)","    }","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"Finally we learn about some solutions to reduce termination:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"Identify and fix termination","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Reduce memory usage"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement state restoration"}]}]}],"type":"unorderedList"},{"level":2,"anchor":"Written-By","text":"Written By","type":"heading"},{"numberOfColumns":5,"type":"row","columns":[{"size":1,"content":[{"inlineContent":[{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/7501729?v=4","type":"image"}],"type":"paragraph"}]},{"size":4,"content":[{"type":"heading","level":3,"text":"Michael Abadi Santoso","anchor":"Michael-Abadi-Santoso"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/abadikaka","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"overridingTitle":"Contributed Notes","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/abadikaka","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/michaelabadi.com","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/x.com\/michaelabadiii","isActive":true,"type":"reference"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}]},{"level":2,"anchor":"Related-Sessions","text":"Related Sessions","type":"heading"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10087-Diagnose-Power-and-Performance-regressions-in-your-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10181-Ultimate-application-performance-survival-guide","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10203-Triage-TestFlight-crashes-in-Xcode-Organizer","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10081-Whats-new-in-MetricKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-417-Improving-Battery-Life-and-Performance"],"style":"list","type":"links"},{"type":"small","inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}]},{"type":"small","inlineContent":[{"text":"All content copyright Â© 2012 â€“ 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}]}],"abstract":[{"type":"text","text":"Put on your detectiveâ€™s hat: Itâ€™s time to track down those unruly app terminations. Weâ€™ll outline the six major reasons apps terminate in the background, and show you how you can use MetricKit to to help you identify key statistics to drive down the rate of terminations. Learn how to prevent problems and recover gracefully from inevitable jetsams, identify any underlying issues, and take actionable measures to fix them. And discover the importance of implementing state restoration to make terminations less jarring â€” especially where text entry or playback is concerned."}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10078-Why-is-my-app-getting-killed"},"references":{"https://developer.apple.com/wwdc20/10078":{"checksum":null,"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc20\/10078","url":"https:\/\/developer.apple.com\/wwdc20\/10078"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10081-Whats-new-in-MetricKit":{"abstract":[{"type":"text","text":"Quickly detect power and performance regressions and troubleshoot app issues when you adopt MetricKit. Discover the latest trackable metrics for your app, including CPU instructions, animation hitches, and exit reasons. And learn about diagnostics in MetricKit that can help you troubleshoot hangs, crashes, and disk writes."}],"role":"sampleCode","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10081-Whats-new-in-MetricKit","url":"\/documentation\/wwdcnotes\/wwdc20-10081-whats-new-in-metrickit","title":"Whatâ€™s new in MetricKit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10087-Diagnose-Power-and-Performance-regressions-in-your-app":{"abstract":[{"text":"Quickly discover how to identify priorities when viewing power and performance regressions. Learn how to track metrics that have regressed with device-and percentile-specific information, so you can focus your efforts on optimization and save valuable development time. Weâ€™ll also show you how to track down common anti-patterns in your app that wear out device storage, help you customize your workflows, and add App Store Connect APIs to help you stay up to date on your appâ€™s real-world performance.","type":"text"}],"title":"Diagnose Power and Performance regressions in your app","url":"\/documentation\/wwdcnotes\/wwdc21-10087-diagnose-power-and-performance-regressions-in-your-app","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10087-Diagnose-Power-and-Performance-regressions-in-your-app","role":"sampleCode","type":"topic","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20":{"abstract":[{"text":"Xcode 12, Swift 5.3, iOS 14, macOS 11 (Big Sur), tvOS 14, watchOS 7.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"type":"codeVoice","code":"WidgetKit"},{"text":", ","type":"text"},{"type":"codeVoice","code":"StoreKit Testing"},{"text":", and more.","type":"text"}],"kind":"article","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"title":"WWDC20","role":"collectionGroup","url":"\/documentation\/wwdcnotes\/wwdc20","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20"},"doc://WWDCNotes/documentation/WWDCNotes/abadikaka":{"url":"\/documentation\/wwdcnotes\/abadikaka","title":"Michael Abadi Santoso (7 notes)","kind":"article","abstract":[{"text":"iOS Engineer","type":"text"}],"images":[{"type":"card","identifier":"abadikaka.jpeg"},{"type":"icon","identifier":"abadikaka.jpeg"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/abadikaka","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10181-Ultimate-application-performance-survival-guide":{"abstract":[{"type":"text","text":"Performance optimization can seem like a daunting task â€” with many metrics to track and tools to use. Fear not: Our survival guide to app performance is here to help you understand tooling, metrics, and paradigms that can help smooth your development process and contribute to a great experience for people using your app."}],"role":"sampleCode","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10181-Ultimate-application-performance-survival-guide","url":"\/documentation\/wwdcnotes\/wwdc21-10181-ultimate-application-performance-survival-guide","title":"Ultimate application performance survival guide"},"https://michaelabadi.com":{"type":"link","identifier":"https:\/\/michaelabadi.com","title":"Blog","titleInlineContent":[{"type":"text","text":"Blog"}],"url":"https:\/\/michaelabadi.com"},"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","title":"WWDC Notes","kind":"symbol","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"url":"\/documentation\/wwdcnotes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"role":"collection"},"WWDCNotes.png":{"type":"image","identifier":"WWDCNotes.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}],"alt":null},"https://x.com/michaelabadiii":{"type":"link","identifier":"https:\/\/x.com\/michaelabadiii","title":"X\/Twitter","titleInlineContent":[{"type":"text","text":"X\/Twitter"}],"url":"https:\/\/x.com\/michaelabadiii"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10203-Triage-TestFlight-crashes-in-Xcode-Organizer":{"abstract":[{"type":"text","text":"Learn how Xcode Organizer makes it easier and faster to triage and fix crashes. Weâ€™ll explore how you can get access to crash information and feedback from your TestFlight testers just moments after they occur. And weâ€™ll show you how to analyze crashes, view metrics, and even share crash information among your team."}],"role":"sampleCode","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10203-Triage-TestFlight-crashes-in-Xcode-Organizer","url":"\/documentation\/wwdcnotes\/wwdc21-10203-triage-testflight-crashes-in-xcode-organizer","title":"Triage TestFlight crashes in Xcode Organizer"},"https://github.com/abadikaka":{"type":"link","identifier":"https:\/\/github.com\/abadikaka","title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}],"url":"https:\/\/github.com\/abadikaka"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-417-Improving-Battery-Life-and-Performance":{"url":"\/documentation\/wwdcnotes\/wwdc19-417-improving-battery-life-and-performance","kind":"article","role":"sampleCode","title":"Improving Battery Life and Performance","type":"topic","abstract":[{"text":"Learn about new ways to find and fix performance issues during daily development, beta testing, and public release on the App Store. Learn how to catch performance issues during daily development by measuring CPU, memory, and more in your XCTests. Discover how to find issues in the field during beta testing and public release using MetricKit. See how the Xcode Organizer now displays the most important metrics from your app aggregated from each version on the App Store.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-417-Improving-Battery-Life-and-Performance"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"type":"link","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing"},"https://avatars.githubusercontent.com/u/7501729?v=4":{"type":"image","identifier":"https:\/\/avatars.githubusercontent.com\/u\/7501729?v=4","variants":[{"traits":["1x","light"],"url":"https:\/\/avatars.githubusercontent.com\/u\/7501729?v=4"}],"alt":"Profile image of Michael Abadi Santoso"},"abadikaka.jpeg":{"type":"image","identifier":"abadikaka.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/abadikaka.jpeg"}],"alt":null}}}