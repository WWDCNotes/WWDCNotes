{"sampleCodeDownload":{"action":{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc22\/10136","overridingTitle":"Watch Video (17 min)"},"kind":"sampleDownload"},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10136-Hello-Swift-Charts","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Say hello to Swift Charts — a flexible framework that helps you create charts entirely in SwiftUI that look and feel right at home on all Apple platforms. Discover how you can use compositional syntax to make informative, delightful, and accessible charts with less code. We’ll share the building blocks for making visualizations with Swift Charts, and explore how you can change your charts’ design with a simple modifier. We’ll also take you through the latest updates to Xcode Previews to help you chart a path toward an engaging experience."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22"]]},"metadata":{"modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC22","role":"sampleCode","title":"Hello Swift Charts"},"sections":[],"primaryContentSections":[{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"There is a new framework: Swift Charts. Swift Charts is a flexible framework for making Apple-designed charts."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Declarative, Compositional, like SwiftUI"}]}]},{"content":[{"inlineContent":[{"text":"requires ","type":"text"},{"code":"import Charts","type":"codeVoice"},{"text":" to use","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC22-10136-charts1"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Introducing the sample app about a pop-up pancake food truck sales."},{"type":"text","text":" "},{"identifier":"WWDC22-10136-truck1","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The truck serves an international variety of sweet and savory pancakes like cachapa, injera, crêpe, jian bing, dosa, or American pancakes."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC22-10136-truck2"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The food truck served more than 4500 pancakes across these styles in the last 30 days. Cachapa were the most popular and the app already shows the most important information in the title."}]},{"type":"paragraph","inlineContent":[{"text":"We add a chart to show a detailed breakdown for the six pancakes.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"In Swift Charts, we build charts by composition. The main components of a bar chart are the bars, which are visual elements for each item in your data. Swift Charts calls these visual elements “marks.”","type":"text"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC22-10136-charts2","type":"image"}]},{"type":"heading","anchor":"Chart","level":2,"text":"Chart"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Chart"},{"type":"text","text":" is the main outside wrapper"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"BarMark"},{"type":"text","text":" with "},{"type":"codeVoice","code":"x"},{"type":"text","text":" and "},{"type":"codeVoice","code":"y"},{"type":"text","text":" positions and "},{"type":"codeVoice","code":".value"},{"type":"text","text":" data"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"first argument of value is description, second the value"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In Xcode we start with adding a chart. To make a bar, we add a BarMark inside the Chart. To show a bar for the number of cachapas, we have to set the name and the sales."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We set the x-position of the bar to be derived from the value of the name of pancake – in this case “Cachapa.” The first argument to the .value factory method is the description of the value, and the second is the value itself."}]},{"type":"codeListing","syntax":"swift","code":["import Charts ","import SwiftUI","","struct StylesDetailsChart: View {","\tvar body: some View {","\t\tChart {","\t\t\tBarMark(","\t\t\t\tx: .value(\"Name\", \"Cachapa\")","\t\t\t\ty: .value(\"Sales\", 916)","\t\t\tBarMark(","\t\t\t\tx: .value(\"Name\", \"Injera\"),","\t\t\t\ty: .value(\"Sales\", 850)","\t\t\t)","\t\t}","\t}","}"]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC22-10136-charts3"}]},{"type":"paragraph","inlineContent":[{"text":"The height of each bar described by the y attribute should be set by the number of cachapas sold, which were 916. To indicate that we’re not setting the position or height of the bar directly, we use .value. Swift Charts automatically creates not only the bar but also a label for the bars on the x-axis and a y-axis that shows what the length of a bar means. Let’s add a second bar for injera, of which the truck sold 850.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We usually want to create a chart driven by a collection such as an array of structs."}]},{"type":"codeListing","syntax":"struct","code":["struct Pancakes: Identifiable {","\tvar name: String","\tvar sales: Int","\t","\tvar id: String { name }","}"]},{"type":"paragraph","inlineContent":[{"text":"It has a name – which is a string – and how many pancakes the truck sold – which is an int. Because we want to use it to be repeated, we make it identifiable and define an ID-computed property that returns the name. Now we can create our data set as an array of pancakes. We could load this from an external data source but here we’ll define it in the code. Besides cachapa and injera, we also add crêpe. We can make the bar chart data driven with ForEach.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let sales: [Pancakes] = [","\t.init (name: \"Cachapa\", sales: 916), ","\t.init (name: \"Injera\", sales: 850), ","\t.init (name: \"Crêpk\", sales: 802)","]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"And all we need to do now is to repeat the BarMark with a ForEach."}]},{"type":"codeListing","syntax":"swift","code":["Chart {","\tForEach(sales) { element in","\t\tBarMark(","\t\t\tx: .value(\"Name\", element.name),","\t\t\ty: .value(\"Sales\", element.sales)","\t\t)","\t}","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If ForEach is the only content in the chart, we can also put the data directly into the chart initializer."}]},{"type":"codeListing","syntax":"swift","code":["Chart(sales) { element in","\tBarMark(","\t\tx: .value(\"Name\", element.name),","\t\ty: .value(\"Sales\", element.sales)","\t)","}"]},{"type":"paragraph","inlineContent":[{"text":"We can now add the remaining three entries for the jian bing, dosa, and american pancakes.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let sales: [Pancakes] = [","\t.init (name: \"Cachapa\", sales: 916), ","\t.init (name: \"Injera\", sales: 850), ","\t.init (name: \"Crêpk\", sales: 802),","\t.init (name: \"Jian Bing\", sales: 753), ","\t.init (name: \"Dosa\", sales: 654), ","\t.init (name: \"American\", sales: 618)","]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The labels are becoming now too close to each other. By swapping x and y, we transpose the chart and give the labels for each bar more space."}]},{"type":"codeListing","syntax":"swift","code":["Chart(sales) { element in","\tBarMark(","\t\tx: .value(\"Name\", element.name),","\t\ty: .value(\"Sales\", element.sales)","\t)","}"]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC22-10136-charts4"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The Swift Charts framework automatically chooses an appropriate axis style."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"make data types "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":" to use in "},{"type":"codeVoice","code":"Charts"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"supports "},{"type":"codeVoice","code":"ForEach"},{"type":"text","text":" for "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":" data collections"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implicit "},{"code":"forEach","type":"codeVoice"},{"type":"text","text":" via a "},{"code":"Chart","type":"codeVoice"},{"type":"text","text":" initializer taking a data collection"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Charts chooses an appropriate visualization automatically"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adapts to dynamic type, device sizes, orientations, dark mode and supports accessibility automatically"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Swift Charts exposes the data in a visualization to VoiceOver When we navigate the chart in VoiceOver, it speaks the name and number of pancakes sold. Like, VoiceOver: Cachapa, 916. Injera, 850. Crêpes, etc.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"And the chart supports the Audio Graphs feature Apple presented in 2021, including the sonifications. VoiceOver: Describe chart. Chart Details. Play Audio Graph.  Complete.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Adding now two locations to the truck, Cupertino and San Francisco. where to park on different days of the week?","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC22-10136-charts5"}]},{"type":"paragraph","inlineContent":[{"text":"To answer this question, let’s visualize the data as a time series for our two cities.","type":"text"},{"text":" ","type":"text"},{"text":"We will start by making a bar graph for Cupertino. Then, we will add the data for San Francisco and add a picker. And finally, we will combine the data into one multiseries line chart.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC22-10136-charts6"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s start with the bar chart showing the average number of pancakes sold per day of the week. The sales data has the weekday stored as a date and how many pancakes the truck sold as an integer. The data for Cupertino is in a variable, cupertinoData."}]},{"type":"codeListing","syntax":"swift","code":["struct SalesSummary: Identifiable {","\tlet weekday: Date ","\tlet sales: Int","\t","\tvar id: Date { weekday }","}","","\/\/ Need this to get the date from the data","func date(_ year: Int, _ month: Int, _ day: Int = 1) -> Date {","\tlet day = Calendar.current.date(from: DateComponents(year: year, month: month, day: day)) ?? Date()","\treturn Calendar.current.component(.weekday, from: day)","\t","}","","let cupertinoData: [SalesSummary] = [","\t\/\/ Monday","\t.init(weekday: date (2022, 5, 2), sales: 54),","\t\/\/ Tuesday","\t.init(weekday: date (2022, 5, 3), sales: 42),","\t\/\/ Wednesday","\t.init(weekday: date (2022, 5, 4), sales: 88),","\t\/\/ Thursday","\t.init(weekday: date (2022, 5, 5), sales: 49),","\t\/\/ Friday","\t.init(weekday: date (2022, 5, 6), sales: 42),","\t\/\/ Saturday","\t.init(weekday: date (2022, 5, 7), sales: 125),","\t\/\/ Sunday","\t.init(weekday: date (2022, 5, 8), sales: 67)","]","","struct CupertinoDetailsChart: View {","\tvar body: some View {","\t\tChart(cupertinoData) { element in","\t\t\tBarMark(","\t\t\t\tx: . value(\"Day\", element.weekday, unit: .day),","\t\t\t\ty: .value(\"Sales\", element.sales)","\t\t\t)","\t\t}","\t\t\/\/ this was not in the video but there is no other way to get the weekdays showing in the x axis... added by the note taker!","\t\t.chartXAxis {","\t\t\tAxisMarks(values: .stride(by: .day)) { _ in","\t\t\t\tAxisGridLine()","\t\t\t\tAxisValueLabel(format: .dateTime.weekday(.abbreviated), centered: true)","\t\t\t}","\t\t}","\t}","}\t\t\t\t"]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC22-10136-charts7"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For the second iteration, let’s add the data for San Francisco. The sales data for San Francisco is in the sfData variable."}]},{"type":"codeListing","syntax":"swift","code":["let sfData: [SalesSummary] = [","\t.init (weekday: date (2022, 5, 2), sales: 81), ","\t.init(weekday: date (2022, 5, 3), sales: 90), ","\t.init (weekday: date (2022, 5, 4), sales: 52), ","\t.init (weekday: date (2022, 5, 5), sales: 72), ","\t.init (weekday: date (2022, 5, 6), sales: 84),","\t.init (weekday: date (2022, 5, 7), sales: 84), ","\t.init (weekday: date (2022, 5, 8), sales: 137)","]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We want to toggle between the two cities and see the bar chart for each city. We start with adding a state variable, city. And then we add a SwiftUI picker for the city to the View. To toggle between the sales summaries for the two cities via the city variable, we add a switch statement for the data variable."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ need this too","enum City {","\tcase cupertino","\tcase sanFrancisco","}","","struct LocationsToggleChart: View {","\t@State var city: City = .cupertino","\tvar data: [SalesSummary] {","\t\tswitch city {","\t\tcase .cupertino:","\t\t\treturn cupertinoData ","\t\tcase .sanFrancisco:","\t\t\treturn sfData","\t\t}","\t}","","\tvar body: some View {","\t\tVStack {","\t\t\tPicker(\"City\", selection: $city.animation(.easeInOut)) {","\t\t\t\tText(\"Cupertino\").tag(City.cupertino)","\t\t\t\tText(\"San Francisco\").tag(City.sanFrancisco)","\t\t\t}","\t\t\t.pickerStyle(.segmented)","\t\t\t","\t\t\tChart(data) { element in","\t\t\t\tBarMark(","\t\t\t\t\tx: .value(\"Day\", element .weekday, unit: .day),","\t\t\t\t\ty: .value(\"Sales\", element. sales)","\t\t\t\t)","\t\t\t}","\t\t\t.chartXAxis { ... } \/\/ see above","\t\t}","\t}","}",""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Charts works with SwiftUI animations, so if we specify that the transition should be animated with easeInOut, the bars animate as we toggle between the two cities and also only shows one location at a time."}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC22-10136-charts8","type":"image"}]},{"type":"heading","anchor":"Working-with-series","level":2,"text":"Working with series"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lets show both series in a line chart. The data for Cupertino and San Francisco is in an array of series. Series structs have the city and sales data."}]},{"type":"codeListing","syntax":"swift","code":["struct Series: Identifiable {","\tlet city: String ","\tlet sales: [SalesSummary]","\tvar id: String { city }","}","","let seriesData: [Series] = [","\t.init (city: \"Cupertino\", sales: cupertinoData),","\t.init(city: \"San Francisco\", sales: sfData),","]"]},{"type":"paragraph","inlineContent":[{"text":"To distinguish the data for the two cities, the color of the bars will be derived from the city. For this, the foregroundStyle is set from the city in the series.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"To show what city a color represents, Swift Charts creates a legend below the chart.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["Chart(seriesData) { series in","\tForEach(series.sales) { element in","\t\tBarMark(","\t\t\tx: .value(\"Day\", element.weekday, unit: .day),","\t\t\ty: .value(\"Sales\", element.sales)","\t\t)","\t\t.foregroundStyle(by: .value(\"City\", series.city))","\t}","}"]},{"type":"paragraph","inlineContent":[{"text":"Swift Charts automatically chooses a color for San Francisco, and it shows the bars for both cities in the chart. Charts show data for a particular context and a visualization may need to change as data or questions change.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Change the mark type from a BarMark to a PointMark to display the pancakes sold as points, or to a LineMark to show the data as a line chart.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC22-10136-charts9"}]},{"type":"paragraph","inlineContent":[{"text":"A line chart is a good fit for the sales data since it can compare the two cities in each day of the week. Charts can combine multiple marks. For example, adding a PointMark. To make the series differentiable without color, we set the symbol to be derived from the city.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["Chart(seriesData) { series in","\tForEach(series.sales) { element in","\t\tBarMark(","\t\t\tx: .value(\"Day\", element.weekday, unit: .day),","\t\t\ty: .value(\"Sales\", element.sales)","\t\t)","\t\t.foregroundStyle(by: .value(\"City\", series.city))","\t\t","\t\tPointMark(","\t\t\tx: .value(\"Day\", element.weekday, unit: .day),","\t\t\ty: .value(\"Sales\", element.sales)","\t\t)","\t\t.foregroundStyle(by: .value(\"City\", series.city))","\t\t.symbol(by: .value(\"City\", series.city))","\t}","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Now each point indicates the city by its color and symbol."}]},{"type":"paragraph","inlineContent":[{"text":"Swift Charts has a shorthand for this.The style of the points adapts to the line.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["Chart(seriesData) { series in","\tForEach(series.sales) { element in","\t\tBarMark(","\t\t\tx: .value(\"Day\", element.weekday, unit: .day),","\t\t\ty: .value(\"Sales\", element.sales)","\t\t)","\t\t.foregroundStyle(by: .value(\"City\", series.city))","\t\t.symbol(by: .value(\"City\", series.city))","\t}","}"]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC22-10136-charts10","type":"image"}]},{"type":"heading","anchor":"Features","level":2,"text":"Features"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"When navigation charts in VoiceOver speaks the description + value","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Supports AudioGraph feature from 2021, too (peep sounds)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":".value also accepts a ","type":"text"},{"code":"unit","type":"codeVoice"},{"text":" for types like ","type":"text"},{"code":"Date","type":"codeVoice"},{"text":", e.g. ","type":"text"},{"code":".day","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"text":"Supports SwiftUI animations (e.g. animate between different data collections but same bar chart view)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":".foregroundStyle(by:"},{"type":"text","text":" to group data by color → auto-generated legend for the colors"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Easy to change from "},{"type":"codeVoice","code":"BarMark"},{"type":"text","text":" to "},{"type":"codeVoice","code":"PointMark"},{"type":"text","text":" or "},{"type":"codeVoice","code":"LineMark"},{"type":"text","text":" (great for prototyping charts!)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Also "},{"type":"codeVoice","code":".symbol(by:"},{"type":"text","text":" a value available to use square\/circle instead of color to differentiate data form each other"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Marks: Bar, Point, Line"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mark Properties: X Position, Y Position, Foreground Style, Symbol"}]}]},{"content":[{"inlineContent":[{"text":"More Marks available: ","type":"text"},{"type":"codeVoice","code":"Area"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Rule"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Rectangle"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"More Mark Properties available: ","type":"text"},{"code":"Symbol Size","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Line Style","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Support for:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Dark Mode"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Device Screen Sizes","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Dynamic Type"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Voice Over","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Audio Graphs","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"High-Contrast"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Localization"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Multi-Platform","type":"text"}]}]}]}]}]},{"type":"heading","anchor":"Wrap-up-Charts-Cheat-sheet","level":2,"text":"Wrap up - Charts Cheat sheet"},{"type":"paragraph","inlineContent":[{"text":"BarMark with x and y properties:","type":"text"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC22-10136-charts11","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"With points:"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC22-10136-charts12","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"With lines:"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC22-10136-charts13"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Showing multiple series:"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC22-10136-charts14","type":"image"}]},{"type":"paragraph","inlineContent":[{"text":"Even more options:","type":"text"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC22-10136-charts15","type":"image"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"till advanced!"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC22-10136-charts16"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Support for:"}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC22-10136-charts17"}]},{"type":"heading","anchor":"Resources","level":2,"text":"Resources"},{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/Charts\/Creating-a-chart-using-Swift-Charts","isActive":true},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/forums\/create\/question?&tag1=386030&tag2=432030","isActive":true},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/forums\/tags\/wwdc2022-10136","isActive":true},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/charts\/visualizing_your_app_s_data","isActive":true},{"type":"text","text":""},{"type":"text","text":"\n"},{"type":"reference","identifier":"","isActive":true}]},{"type":"heading","anchor":"Related-Videos","level":2,"text":"Related Videos"},{"type":"heading","anchor":"Tech-Talks","level":3,"text":"Tech Talks"},{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/developer.apple.com\/videos\/play\/tech-talks\/110356","type":"reference","isActive":true}]},{"type":"heading","anchor":"Sessions","level":3,"text":"Sessions"},{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/10133"},{"text":"","type":"text"},{"text":"\n","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/110340"},{"text":"","type":"text"},{"text":"\n","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/110342"},{"text":"","type":"text"},{"text":"\n","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/10137"},{"text":"","type":"text"},{"text":"\n","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/10072"},{"text":"","type":"text"},{"text":"\n","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/10052"}]},{"type":"heading","anchor":"Written-By","level":2,"text":"Written By"},{"type":"row","numberOfColumns":5,"columns":[{"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Jeehut"}]}],"size":1},{"content":[{"text":"Cihat Gündüz","level":3,"type":"heading","anchor":"Cihat-G%C3%BCnd%C3%BCz"},{"inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Jeehut","overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/Jeehut","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/x.com\/Jeehut","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/fline.dev","isActive":true,"type":"reference"}],"type":"paragraph"}],"size":4}]},{"type":"row","numberOfColumns":5,"columns":[{"size":1,"content":[{"inlineContent":[{"identifier":"multitudes","type":"image"}],"type":"paragraph"}]},{"size":4,"content":[{"text":"laurent b","anchor":"laurent-b","type":"heading","level":3},{"inlineContent":[{"overridingTitle":"Contributed Notes","type":"reference","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/multitudes","isActive":true,"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}]},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/multitudes","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/x.com\/wrmultitudes","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/laurentbrusa.hashnode.dev\/","isActive":true}],"type":"paragraph"}]}]},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true}]},{"type":"heading","anchor":"Related-Sessions","level":2,"text":"Related Sessions"},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10052-Whats-new-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10072-Use-SwiftUI-with-UIKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10133-Build-a-productivity-app-for-Apple-Watch","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110340-Design-an-effective-chart","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110342-Design-app-experiences-with-charts"],"style":"list"},{"type":"small","inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}]},{"type":"small","inlineContent":[{"text":"All content copyright © 2012 – 2025 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}],"kind":"content"}],"kind":"article","variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc22-10136-hello-swift-charts"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"WWDC22-10136-charts3":{"identifier":"WWDC22-10136-charts3","type":"image","alt":"Swift Charts","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts3.jpg","traits":["1x","light"]}]},"https://github.com/Jeehut":{"title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}],"identifier":"https:\/\/github.com\/Jeehut","url":"https:\/\/github.com\/Jeehut","type":"link"},"https://developer.apple.com/forums/create/question?&tag1=386030&tag2=432030":{"type":"link","identifier":"https:\/\/developer.apple.com\/forums\/create\/question?&tag1=386030&tag2=432030","title":"Have a question? Ask with tag wwdc2022-10136","titleInlineContent":[{"type":"text","text":"Have a question? Ask with tag wwdc2022-10136"}],"url":"https:\/\/developer.apple.com\/forums\/create\/question?&tag1=386030&tag2=432030"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10052-Whats-new-in-SwiftUI":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10052-Whats-new-in-SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc22-10052-whats-new-in-swiftui","abstract":[{"text":"It’s a SwiftUI party — and you’re invited! Join us as we share the latest updates and a glimpse into the future of UI framework design. Discover deep levels of customization, advanced techniques for layout, elegant strategies for sharing, and rock-solid structural approaches for designing an app top-to-bottom in SwiftUI. We’ll also have some celebratory fun as we play with the latest graphical effects and explore APIs.","type":"text"}],"kind":"article","title":"What’s new in SwiftUI","type":"topic","role":"sampleCode"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"title":"Contributions are welcome!"},"https://x.com/wrmultitudes":{"title":"X\/Twitter","titleInlineContent":[{"text":"X\/Twitter","type":"text"}],"identifier":"https:\/\/x.com\/wrmultitudes","url":"https:\/\/x.com\/wrmultitudes","type":"link"},"WWDC22-10136-charts10":{"type":"image","identifier":"WWDC22-10136-charts10","alt":"Swift Charts","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts10.jpg","traits":["1x","light"]}]},"WWDCNotes.png":{"identifier":"WWDCNotes.png","type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}]},"WWDC22-10136-charts17":{"alt":"Swift Charts","identifier":"WWDC22-10136-charts17","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts17.jpg","traits":["1x","light"]}],"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"title":"WWDC Notes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","role":"collection","type":"topic","url":"\/documentation\/wwdcnotes"},"WWDC22-10136-charts7":{"type":"image","identifier":"WWDC22-10136-charts7","alt":"Swift Charts","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts7.jpg","traits":["1x","light"]}]},"WWDC22-Icon.png":{"identifier":"WWDC22-Icon.png","type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDC22-Icon.png","traits":["1x","light"]}]},"https://x.com/Jeehut":{"title":"X\/Twitter","titleInlineContent":[{"text":"X\/Twitter","type":"text"}],"identifier":"https:\/\/x.com\/Jeehut","url":"https:\/\/x.com\/Jeehut","type":"link"},"https://developer.apple.com/videos/play/wwdc2022/110340":{"type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/110340","title":"Design an effective chart - WWDC22","titleInlineContent":[{"type":"text","text":"Design an effective chart - WWDC22"}],"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/110340"},"WWDC22.jpeg":{"identifier":"WWDC22.jpeg","type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDC22.jpeg","traits":["1x","light"]}]},"WWDC22-10136-charts1":{"alt":"Swift Charts","identifier":"WWDC22-10136-charts1","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts1.jpg","traits":["1x","light"]}],"type":"image"},"https://developer.apple.com/documentation/Charts/Creating-a-chart-using-Swift-Charts":{"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/Charts\/Creating-a-chart-using-Swift-Charts","title":"Creating a chart using Swift Charts","titleInlineContent":[{"type":"text","text":"Creating a chart using Swift Charts"}],"url":"https:\/\/developer.apple.com\/documentation\/Charts\/Creating-a-chart-using-Swift-Charts"},"WWDC22-10136-charts11":{"identifier":"WWDC22-10136-charts11","type":"image","alt":"Swift Charts","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts11.jpg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/multitudes":{"type":"topic","title":"laurent b (33 notes)","role":"sampleCode","kind":"article","url":"\/documentation\/wwdcnotes\/multitudes","images":[{"type":"card","identifier":"multitudes.jpeg"},{"type":"icon","identifier":"multitudes.jpeg"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/multitudes","abstract":[{"type":"text","text":"student at 42Berlin 🐬 | C & C++ | 🍎 Swift(UI) app dev  | speciality coffee ☕️ & cycling 🚴🏻‍♂️"}]},"https://developer.apple.com/forums/tags/wwdc2022-10136":{"title":"Search the forums for tag wwdc2022-10136","titleInlineContent":[{"text":"Search the forums for tag wwdc2022-10136","type":"text"}],"identifier":"https:\/\/developer.apple.com\/forums\/tags\/wwdc2022-10136","url":"https:\/\/developer.apple.com\/forums\/tags\/wwdc2022-10136","type":"link"},"https://developer.apple.com/videos/play/wwdc2022/10072":{"type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/10072","title":"Use SwiftUI with UIKit - WWDC22","titleInlineContent":[{"type":"text","text":"Use SwiftUI with UIKit - WWDC22"}],"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/10072"},"multitudes":{"identifier":"multitudes","type":"image","alt":"Profile image of laurent b","variants":[{"url":"\/images\/WWDCNotes\/multitudes.jpeg","traits":["1x","light"]}]},"https://fline.dev":{"title":"Blog","titleInlineContent":[{"text":"Blog","type":"text"}],"identifier":"https:\/\/fline.dev","url":"https:\/\/fline.dev","type":"link"},"https://laurentbrusa.hashnode.dev/":{"type":"link","identifier":"https:\/\/laurentbrusa.hashnode.dev\/","title":"Blog","titleInlineContent":[{"type":"text","text":"Blog"}],"url":"https:\/\/laurentbrusa.hashnode.dev\/"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10133-Build-a-productivity-app-for-Apple-Watch":{"url":"\/documentation\/wwdcnotes\/wwdc22-10133-build-a-productivity-app-for-apple-watch","kind":"article","type":"topic","title":"Build a productivity app for Apple Watch","abstract":[{"type":"text","text":"Your wrist has never been more productive. Discover how you can use SwiftUI and system features to build a great productivity app for Apple Watch. We’ll show you how you can design great work experiences for the wrist, and explore how you can get text input, display a basic chart, and share content with friends."}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10133-Build-a-productivity-app-for-Apple-Watch"},"WWDC22-10136-charts16":{"identifier":"WWDC22-10136-charts16","type":"image","alt":"Swift Charts","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts16.jpg","traits":["1x","light"]}]},"multitudes.jpeg":{"alt":null,"identifier":"multitudes.jpeg","variants":[{"url":"\/images\/WWDCNotes\/multitudes.jpeg","traits":["1x","light"]}],"type":"image"},"https://developer.apple.com/videos/play/wwdc2022/110342":{"type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/110342","title":"Design app experiences with charts - WWDC22","titleInlineContent":[{"type":"text","text":"Design app experiences with charts - WWDC22"}],"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/110342"},"Jeehut":{"identifier":"Jeehut","type":"image","alt":"Profile image of Cihat Gündüz","variants":[{"url":"\/images\/WWDCNotes\/Jeehut.jpeg","traits":["1x","light"]}]},"https://developer.apple.com/videos/play/wwdc2022/10133":{"title":"Build a productivity app for Apple Watch - WWDC22","titleInlineContent":[{"text":"Build a productivity app for Apple Watch - WWDC22","type":"text"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/10133","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/10133","type":"link"},"https://developer.apple.com/wwdc22/10136":{"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc22\/10136","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc22\/10136"},"WWDC22-10136-truck1":{"identifier":"WWDC22-10136-truck1","type":"image","alt":"The sample app","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-truck1.jpg","traits":["1x","light"]}]},"WWDC22-10136-charts4":{"type":"image","identifier":"WWDC22-10136-charts4","alt":"Swift Charts","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts4.jpg","traits":["1x","light"]}]},"https://developer.apple.com/documentation/charts/visualizing_your_app_s_data":{"title":"Swift Charts","titleInlineContent":[{"type":"text","text":"Swift Charts"}],"identifier":"https:\/\/developer.apple.com\/documentation\/charts\/visualizing_your_app_s_data","url":"https:\/\/developer.apple.com\/documentation\/charts\/visualizing_your_app_s_data","type":"link"},"https://developer.apple.com/videos/play/wwdc2022/10052":{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/10052","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/10052","titleInlineContent":[{"text":"What’s new in SwiftUI - WWDC22","type":"text"}],"title":"What’s new in SwiftUI - WWDC22"},"Jeehut.jpeg":{"type":"image","identifier":"Jeehut.jpeg","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/Jeehut.jpeg","traits":["1x","light"]}]},"WWDC22-10136-charts12":{"alt":"Swift Charts","identifier":"WWDC22-10136-charts12","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts12.jpg","traits":["1x","light"]}],"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22":{"kind":"article","images":[{"identifier":"WWDC22-Icon.png","type":"icon"},{"identifier":"WWDC22.jpeg","type":"card"}],"abstract":[{"type":"text","text":"Xcode 14, Swift 5.7, iOS 16, macOS 13 (Ventura), tvOS 16, watchOS 9."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"WeatherKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"ScreenCaptureKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"Swift Regex"},{"type":"text","text":", and more."}],"title":"WWDC22","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22","role":"collectionGroup","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110340-Design-an-effective-chart":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22-110340-design-an-effective-chart","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110340-Design-an-effective-chart","role":"sampleCode","title":"Design an effective chart","abstract":[{"type":"text","text":"Learn how to design focused, approachable, and accessible charts. We’ll show you how to design great charts with clear marks, axes, descriptions, interaction, and color and help you create useful experiences for everyone."}]},"https://github.com/multitudes":{"identifier":"https:\/\/github.com\/multitudes","type":"link","url":"https:\/\/github.com\/multitudes","titleInlineContent":[{"text":"GitHub","type":"text"}],"title":"GitHub"},"WWDC22-10136-charts5":{"type":"image","identifier":"WWDC22-10136-charts5","alt":"Swift Charts","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts5.jpg","traits":["1x","light"]}]},"":{"title":"Visualizing your app’s data","titleInlineContent":[{"type":"text","text":"Visualizing your app’s data"}],"identifier":"","url":"","type":"link"},"WWDC22-10136-charts14":{"identifier":"WWDC22-10136-charts14","type":"image","alt":"Swift Charts","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts14.jpg","traits":["1x","light"]}]},"WWDC22-10136-charts6":{"type":"image","identifier":"WWDC22-10136-charts6","alt":"Swift Charts","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts6.jpg","traits":["1x","light"]}]},"WWDC22-10136-charts9":{"alt":"Swift Charts","identifier":"WWDC22-10136-charts9","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts9.jpg","traits":["1x","light"]}],"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10072-Use-SwiftUI-with-UIKit":{"url":"\/documentation\/wwdcnotes\/wwdc22-10072-use-swiftui-with-uikit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10072-Use-SwiftUI-with-UIKit","role":"sampleCode","kind":"article","type":"topic","abstract":[{"text":"Learn how to take advantage of the power of SwiftUI in your UIKit app. Build custom UICollectionView and UITableView cells seamlessly with SwiftUI using UIHostingConfiguration. We’ll also show you how to manage data flow between UIKit and SwiftUI components within your app.","type":"text"}],"title":"Use SwiftUI with UIKit"},"WWDC22-10136-truck2":{"identifier":"WWDC22-10136-truck2","type":"image","alt":"The sample app","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-truck2.jpg","traits":["1x","light"]}]},"WWDC22-10136-charts15":{"type":"image","identifier":"WWDC22-10136-charts15","alt":"Swift Charts","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts15.jpg","traits":["1x","light"]}]},"WWDC22-10136-charts2":{"alt":"Swift Charts","identifier":"WWDC22-10136-charts2","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts2.jpg","traits":["1x","light"]}],"type":"image"},"https://developer.apple.com/videos/play/tech-talks/110356":{"identifier":"https:\/\/developer.apple.com\/videos\/play\/tech-talks\/110356","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/tech-talks\/110356","titleInlineContent":[{"text":"What’s new for enterprise developers - WWDC22","type":"text"}],"title":"What’s new for enterprise developers - WWDC22"},"WWDC22-10136-charts8":{"type":"image","identifier":"WWDC22-10136-charts8","alt":"Swift Charts","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts8.jpg","traits":["1x","light"]}]},"https://developer.apple.com/videos/play/wwdc2022/10137":{"title":"Swift Charts: Raise the bar - WWDC22","titleInlineContent":[{"type":"text","text":"Swift Charts: Raise the bar - WWDC22"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/10137","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2022\/10137","type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110342-Design-app-experiences-with-charts":{"url":"\/documentation\/wwdcnotes\/wwdc22-110342-design-app-experiences-with-charts","abstract":[{"type":"text","text":"Learn how you can enhance your app with charts to communicate data with more clarity and appeal. We’ll show you when to use charts, how to use them and how they work together in a chart design system."}],"title":"Design app experiences with charts","role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110342-Design-app-experiences-with-charts","kind":"article"},"WWDC22-10136-charts13":{"identifier":"WWDC22-10136-charts13","type":"image","alt":"Swift Charts","variants":[{"url":"\/images\/WWDCNotes\/WWDC22-10136-charts13.jpg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/Jeehut":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Jeehut","url":"\/documentation\/wwdcnotes\/jeehut","kind":"article","abstract":[{"type":"text","text":"Spatial-first Indie Developer for  Platforms. Actively contributing to Open Source since 2011!"}],"title":"Cihat Gündüz (62 notes)","type":"topic","role":"sampleCode","images":[{"identifier":"Jeehut.jpeg","type":"card"},{"identifier":"Jeehut.jpeg","type":"icon"}]}}}