{"sections":[],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"üò± ‚ÄúNo Overview Available!‚Äù"}]},{"type":"paragraph","inlineContent":[{"text":"Be the hero to change that by watching the video and providing notes! It‚Äôs super easy:","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}]},{"text":"Related Sessions","type":"heading","level":2,"anchor":"Related-Sessions"},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10102-Target-and-optimize-GPU-binaries-with-Metal-3","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10159-Scale-compute-workloads-across-Apple-GPUs","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10229-Discover-compilation-workflows-in-Metal"]}]}],"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc23-10127-optimize-gpu-renderers-with-metal"],"traits":[{"interfaceLanguage":"swift"}]}],"sampleCodeDownload":{"action":{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10127","overridingTitle":"Watch Video (16 min)","type":"reference","isActive":true},"kind":"sampleDownload"},"kind":"article","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"Optimize GPU renderers with Metal","modules":[{"name":"WWDC Notes"}],"role":"sampleCode","roleHeading":"WWDC23"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10127-Optimize-GPU-renderers-with-Metal"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23"]]},"abstract":[{"type":"text","text":"Discover how to optimize your GPU renderer using the latest Metal features and best practices. We‚Äôll show you how to use function specialization and parallel shader compilation to maintain responsive authoring workflows and the fastest rendering speeds, and help you tune your compute shaders for optimal performance."}],"references":{"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","title":"WWDC Notes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"url":"\/documentation\/wwdcnotes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","role":"collection","images":[{"identifier":"WWDCNotes.png","type":"icon"}]},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Learn More‚Ä¶","titleInlineContent":[{"type":"text","text":"Learn More‚Ä¶"}]},"WWDC23-Icon.png":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC23-Icon.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"WWDC23-Icon.png"},"https://developer.apple.com/videos/play/wwdc2023/10127":{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10127","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10127","checksum":null,"type":"download"},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"type":"image","identifier":"WWDCNotes.png","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10102-Target-and-optimize-GPU-binaries-with-Metal-3":{"type":"topic","abstract":[{"text":"Discover how you can reduce in-app stutters, first launch times, and new level load times when you generate your GPU binaries entirely at project build time with offline compilation. We‚Äôll also show you how to improve total compile time and binary size for larger GPU programs using the ‚ÄúOptimize for size‚Äù compiler option.","type":"text"}],"title":"Target and optimize GPU binaries with Metal 3","kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10102-Target-and-optimize-GPU-binaries-with-Metal-3","url":"\/documentation\/wwdcnotes\/wwdc22-10102-target-and-optimize-gpu-binaries-with-metal-3"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10229-Discover-compilation-workflows-in-Metal":{"abstract":[{"text":"The Metal shading language is a powerful C++ based language that allows apps to render stunning effects while maintaining a flexible shader development pipeline. Discover how to more easily build and extend your render pipelines using Dynamic Libraries and Function Pointers. We‚Äôll also show you how to accelerate your shader compilation at runtime with Binary Function Archives, Function Linking, and Function Stitching.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10229-discover-compilation-workflows-in-metal","role":"sampleCode","title":"Discover compilation workflows in Metal","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10229-Discover-compilation-workflows-in-Metal","kind":"article","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10159-Scale-compute-workloads-across-Apple-GPUs":{"url":"\/documentation\/wwdcnotes\/wwdc22-10159-scale-compute-workloads-across-apple-gpus","title":"Scale compute workloads across Apple GPUs","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10159-Scale-compute-workloads-across-Apple-GPUs","abstract":[{"text":"Discover how you can create compute workloads that scale efficiently across Apple GPUs. Learn how to saturate the GPU by improving your work distribution, minimize GPU timeline gaps with effective pipelining and concurrent dispatches, and use atomic operations effectively. We‚Äôll also take you through the latest counters and tools in Xcode and Instruments that can help you optimize spatial and temporal memory access patterns.","type":"text"}],"type":"topic","kind":"article","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23":{"kind":"article","title":"WWDC23","abstract":[{"type":"text","text":"Xcode 15, Swift 5.9, iOS 17, macOS 14 (Sonoma), tvOS 17, visionOS 1, watchOS 10."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"SwiftData"},{"type":"text","text":", "},{"type":"codeVoice","code":"Observation"},{"type":"text","text":", "},{"type":"codeVoice","code":"StoreKit"},{"type":"text","text":" views, and more."}],"url":"\/documentation\/wwdcnotes\/wwdc23","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23","type":"topic","role":"collectionGroup","images":[{"type":"icon","identifier":"WWDC23-Icon.png"},{"type":"card","identifier":"WWDC23.jpeg"}]},"WWDC23.jpeg":{"identifier":"WWDC23.jpeg","variants":[{"url":"\/images\/WWDCNotes\/WWDC23.jpeg","traits":["1x","light"]}],"alt":null,"type":"image"}}}