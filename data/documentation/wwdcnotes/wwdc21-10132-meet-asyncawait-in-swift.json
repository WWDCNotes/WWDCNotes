{"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"metadata":{"title":"Meet async\/await in Swift","modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC21","role":"sampleCode"},"sampleCodeDownload":{"kind":"sampleDownload","action":{"type":"reference","overridingTitle":"Watch Video (33 min)","isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc21\/10132"}},"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"items":[{"content":[{"inlineContent":[{"text":"When you call an asynchronous function, it unblocks your thread quickly, having kicked off its work. That allows the thread to do other things while that long running work completes.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"in functions, properties, and initializers, "},{"type":"codeVoice","code":"await"},{"type":"text","text":" can be used on expressions to indicate where the function might unblock the thread"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"text":"Async Sequences","type":"heading","anchor":"Async-Sequences"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An async sequence is just like a normal sequence except that it vends its elements asynchronously. So fetching the next item must be marked with the await keyword, indicating that it’s async."}]},{"code":["for await id in staticImageIDsURL.lines {","  let thumbnail = await fetchThumbnail(for: id)","  collage.add(thumbnail)","}","let result = await collage.draw()"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"As the function iterates over the async sequence, over and over, it may unblock the thread while awaiting the next element and then resume either with the next element into the body of the loop or, if there are no elements left, after the loop.","type":"text"}]},{"level":2,"text":"Suspension","type":"heading","anchor":"Suspension"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"await","type":"codeVoice"},{"type":"text","text":" keyword indicates that your async function might suspend there."}]},{"type":"paragraph","inlineContent":[{"text":"What does it mean for an async function to suspend?","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"For sync functions, when called, you hand your function’s thread control over to that function. Then the thread will be fully occupied doing work on behalf of that one function until it finishes"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"For asynchronous functions, when called, it "},{"type":"emphasis","inlineContent":[{"type":"text","text":"can"}]},{"type":"text","text":" give up control of the thread by suspending. When an async function suspends, it gives up control of the thread. But rather than giving control back to your function, it gives control of the thread to the system. The system is then free to use the thread to do other work."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"a function can suspend itself as many times as it needs to","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"text":"Takeaways","type":"heading","anchor":"Takeaways"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"async"},{"text":" enables a function to suspend - when a function suspends itself, it suspends its callers too. So its callers must be async as well","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"await","type":"codeVoice"},{"text":" marks where a function ","type":"text"},{"inlineContent":[{"text":"may","type":"text"}],"type":"emphasis"},{"text":" suspend","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"other work can happen during a suspension - the thread is not blocked"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"once an awaited async call completes, execution resumes after the await"}]}]}],"type":"unorderedList"},{"level":2,"text":"Bridging from sync to async","type":"heading","anchor":"Bridging-from-sync-to-async"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When you want to call an async function from a sync function, you can use an async task function:"}]},{"code":["struct ThumbnailView: View {","  ...","","  var body: some View {","    Image(uiImage: self.image ?? placeholder)","      .onAppear { \/\/ 👈🏻 on appear accepts a sync function","        Task { \/\/ 👈🏻 async task","          self.image = try? await self.viewModel.fetchThumbnail(for: post.id)","        }","      }","  }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An async task packages up the work in the closure and sends it to the system for immediate execution on the next available thread, like the async function on a global dispatch queue."}]},{"level":2,"text":"Async alternatives and continuations","type":"heading","anchor":"Async-alternatives-and-continuations"},{"inlineContent":[{"text":"When you have a sync function and would like to create an async alternative, use ","type":"text"},{"code":"withCheckedThrowingContinuation","type":"codeVoice"},{"text":":","type":"text"}],"type":"paragraph"},{"code":["\/\/ Existing function","func getPersistentPosts(completion: @escaping ([Post], Error?) -> Void) {     ","  do {","    let req = Post.fetchRequest()","    req.sortDescriptors = [NSSortDescriptor(key: \"date\", ascending: true)]","    let asyncRequest = NSAsynchronousFetchRequest<Post>(fetchRequest: req) { result in","      completion(result.finalResult ?? [], nil)","    }","    try self.managedObjectContext.execute(asyncRequest)","  } catch {","    completion([], error)","  }","}","","\/\/ Async alternative","func persistentPosts() async throws -> [Post] {     ","  return try await withCheckedThrowingContinuation { (continuation: CheckedContinuation<[Post], Error>) in","    self.getPersistentPosts { posts, error in","      if let error = error { ","        continuation.resume(throwing: error) ","      } else {","        continuation.resume(returning: posts)","      }","    }","  }","}"],"syntax":"swift","type":"codeListing"},{"level":2,"text":"Written By","anchor":"Written-By","type":"heading"},{"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4"}]}]},{"size":4,"content":[{"type":"heading","text":"Federico Zanetello","anchor":"Federico-Zanetello","level":3},{"type":"paragraph","inlineContent":[{"type":"reference","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"overridingTitle":"Contributed Notes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/zntfdr","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/zntfdr.dev","isActive":true}]}]}],"numberOfColumns":5,"type":"row"},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}],"type":"paragraph"},{"level":2,"text":"Related Sessions","anchor":"Related-Sessions","type":"heading"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10142-Efficiency-awaits-Background-tasks-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110350-Visualize-and-optimize-Swift-concurrency","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110360-Use-Xcode-for-serverside-development","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10017-Bring-Core-Data-concurrency-to-Swift-and-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10019-Discover-concurrency-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10054-Whats-new-in-AppKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10058-Meet-AsyncSequence","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10086-Whats-new-in-CloudKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10095-Use-asyncawait-with-URLSession","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10133-Protect-mutable-state-with-Swift-actors","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10134-Explore-structured-concurrency-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10146-Whats-new-in-AVFoundation","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10192-Whats-new-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10194-Swift-concurrency-Update-a-sample-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10254-Swift-concurrency-Behind-the-scenes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10296-Diagnose-unreliable-code-with-test-repetitions"],"type":"links","style":"list"},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}],"type":"small"},{"inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}],"type":"small"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"kind":"article","abstract":[{"text":"Swift now supports asynchronous functions — a pattern commonly known as async\/await. Discover how the new syntax can make your code easier to read and understand. Learn what happens when a function suspends, and find out how to adapt existing completion handlers to asynchronous functions.","type":"text"}],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10132-Meet-asyncawait-in-Swift","interfaceLanguage":"swift"},"seeAlsoSections":[{"title":"New Tools & Frameworks","generated":true,"identifiers":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10058-Meet-AsyncSequence","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10257-Meet-ClassKit-for-filebased-apps","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10117-Meet-CloudKit-Console","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10166-Meet-DocC-documentation-in-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10183-Meet-Group-Activities","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10294-Meet-MusicKit-for-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10104-Meet-Safari-Web-Extensions-on-iOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10232-Meet-Shortcuts-for-macOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10114-Meet-StoreKit-2","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10170-Meet-TestFlight-on-Mac","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10061-Meet-TextKit-2","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10267-Meet-Xcode-Cloud","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10131-Meet-declarative-device-management","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10171-Meet-inapp-events-on-the-App-Store","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10033-Meet-privacypreserving-ad-attribution","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10102-Meet-the-Location-Button","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10123-Meet-the-Screen-Time-API","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10256-Meet-the-Swift-Algorithms-and-Collections-packages","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10064-Meet-the-UIKit-button-system"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc21-10132-meet-asyncawait-in-swift"]}],"references":{"https://zntfdr.dev":{"title":"Blog","type":"link","identifier":"https:\/\/zntfdr.dev","url":"https:\/\/zntfdr.dev","titleInlineContent":[{"text":"Blog","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"url":"\/documentation\/wwdcnotes\/wwdc21","title":"WWDC21","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"abstract":[{"text":"Xcode 13, Swift 5.5, iOS 15, macOS 12, tvOS 15, watchOS 8.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"type":"codeVoice","code":"MusicKit"},{"text":", ","type":"text"},{"type":"codeVoice","code":"DocC"},{"type":"text","text":", "},{"type":"codeVoice","code":"StoreKit 2"},{"type":"text","text":", and more."}],"role":"collectionGroup"},"https://avatars.githubusercontent.com/u/5277837?v=4":{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4","alt":"Profile image of Federico Zanetello","variants":[{"url":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4","traits":["1x","light"]}],"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110350-Visualize-and-optimize-Swift-concurrency":{"url":"\/documentation\/wwdcnotes\/wwdc22-110350-visualize-and-optimize-swift-concurrency","title":"Visualize and optimize Swift concurrency","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110350-Visualize-and-optimize-Swift-concurrency","abstract":[{"type":"text","text":"Learn how you can optimize your app with the Swift Concurrency template in Instruments. We’ll discuss common performance issues and show you how to use Instruments to find and resolve these problems. Learn how you can keep your UI responsive, maximize parallel performance, and analyze Swift concurrency activity within your app."}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10232-Meet-Shortcuts-for-macOS":{"url":"\/documentation\/wwdcnotes\/wwdc21-10232-meet-shortcuts-for-macos","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10232-Meet-Shortcuts-for-macOS","abstract":[{"text":"Shortcuts is coming to macOS, and your apps are a key part of that process. Discover how you can elevate the capabilities of your app by exposing those features as Shortcuts actions. We’ll show you how to build actions for your macOS apps built with Catalyst or AppKit, deploy actions across platforms, publish and share shortcuts, and enable your app to run shortcuts from other apps. We’ll also take you through how Shortcuts fits in with existing Mac automation technologies like Automator and AppleScript.","type":"text"}],"type":"topic","title":"Meet Shortcuts for macOS","role":"sampleCode"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"type":"link","url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10183-Meet-Group-Activities":{"url":"\/documentation\/wwdcnotes\/wwdc21-10183-meet-group-activities","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10183-Meet-Group-Activities","abstract":[{"text":"Learn more about the framework powering SharePlay, and discover the different types of shared experiences you can implement for people who use your app. Explore a high-level overview of the framework’s architecture and concepts, including how Group Activities and AVFoundation work in tandem, and learn how to implement it into your app. This is a great starting point to know more about SharePlay and how to integrate Group Activities in your apps.","type":"text"}],"type":"topic","title":"Meet Group Activities","role":"sampleCode"},"https://developer.apple.com/wwdc21/10132":{"type":"download","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc21\/10132","identifier":"https:\/\/developer.apple.com\/wwdc21\/10132"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10296-Diagnose-unreliable-code-with-test-repetitions":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10296-diagnose-unreliable-code-with-test-repetitions","abstract":[{"type":"text","text":"Test repetitions can help you debug even the most unreliable code. Discover how you can use the maximum repetitions, until failure, and retry on failure testing modes within test plans, Xcode, and xcodebuild to track down bugs and crashers and make your app more stable for everyone."}],"role":"sampleCode","title":"Diagnose unreliable code with test repetitions","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10296-Diagnose-unreliable-code-with-test-repetitions","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10064-Meet-the-UIKit-button-system":{"url":"\/documentation\/wwdcnotes\/wwdc21-10064-meet-the-uikit-button-system","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10064-Meet-the-UIKit-button-system","abstract":[{"text":"Every app uses Buttons. With iOS 15, you can adopt updated styles to create gorgeous buttons that fit effortlessly into your interface. We’ll explore features that make it easier to create different types of buttons, learn how to provide richer interactions, and discover how you can get great buttons when using Mac Catalyst.","type":"text"}],"type":"topic","title":"Meet the UIKit button system","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10058-Meet-AsyncSequence":{"url":"\/documentation\/wwdcnotes\/wwdc21-10058-meet-asyncsequence","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10058-Meet-AsyncSequence","abstract":[{"text":"Iterating over a sequence of values over time is now as easy as writing a “for” loop. Find out how the new AsyncSequence protocol enables a natural, simple syntax for iterating over anything from notifications to bytes being streamed from a server. We’ll also show you how to adapt existing code to provide asynchronous sequences of your own.","type":"text"}],"type":"topic","title":"Meet AsyncSequence","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10257-Meet-ClassKit-for-filebased-apps":{"url":"\/documentation\/wwdcnotes\/wwdc21-10257-meet-classkit-for-filebased-apps","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10257-Meet-ClassKit-for-filebased-apps","abstract":[{"text":"The ClassKit framework can help surface educational activities within your app to teachers using the Schoolwork app. Discover how you can provide teachers with greater insights into student learning by adopting the latest file-based API to report student progress data within your app. We’ll also show you how to use ClassKit to report out different data types, and how to test your implementation in developer mode.","type":"text"}],"type":"topic","title":"Meet ClassKit for file-based apps","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10171-Meet-inapp-events-on-the-App-Store":{"url":"\/documentation\/wwdcnotes\/wwdc21-10171-meet-inapp-events-on-the-app-store","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10171-Meet-inapp-events-on-the-App-Store","abstract":[{"text":"Discover how you can promote timely events happening in your apps and games — like a game competition, a movie premiere, and more — directly on the App Store. We’ll show you how in-app events now appear on the App Store and how to create, schedule, and manage them in App Store Connect.","type":"text"}],"type":"topic","title":"Meet in-app events on the App Store","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10146-Whats-new-in-AVFoundation":{"title":"What’s new in AVFoundation","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10146-whats-new-in-avfoundation","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10146-Whats-new-in-AVFoundation","abstract":[{"type":"text","text":"Discover the latest updates to AVFoundation, Apple’s framework for inspecting, playing, and authoring audiovisual presentations. We’ll explore how you can use AVFoundation to query attributes of audiovisual assets, further customize your custom video compositions with timed metadata, and author caption files."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10114-Meet-StoreKit-2":{"url":"\/documentation\/wwdcnotes\/wwdc21-10114-meet-storekit-2","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10114-Meet-StoreKit-2","abstract":[{"text":"StoreKit 2 delivers powerful, Swift-native APIs for in-app purchases and auto-renewable subscriptions. Learn how you can easily implement in-app purchases and subscriptions, and discover APIs for retrieving product information, handling transactions, determining product entitlements and customer status, as well as comprehensive testing support in Xcode.","type":"text"}],"type":"topic","title":"Meet StoreKit 2","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10019-Discover-concurrency-in-SwiftUI":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10019-discover-concurrency-in-swiftui","abstract":[{"type":"text","text":"Discover how you can use Swift’s concurrency features to build even better SwiftUI apps. We’ll show you how concurrent workflows interact with your ObservableObjects, and explore how you can use them directly in your SwiftUI views and models. Find out how to use await to make your app run smoothly on the SwiftUI runloop, and learn how to fetch remote images quickly with the AsyncImage API. And we’ll take you through the process of enabling additional asynchronous flows in your custom views."}],"role":"sampleCode","title":"Discover concurrency in SwiftUI","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10019-Discover-concurrency-in-SwiftUI","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10267-Meet-Xcode-Cloud":{"url":"\/documentation\/wwdcnotes\/wwdc21-10267-meet-xcode-cloud","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10267-Meet-Xcode-Cloud","abstract":[{"text":"Get to know Xcode Cloud, Apple’s continuous integration and continuous delivery (CI\/CD) service for building apps and frameworks for all Apple platforms. Find out how Xcode Cloud can improve both the productivity of your team and the quality of your products. We’ll show you how to start your first build, use a build report to fix issues, and collaborate with your team.","type":"text"}],"type":"topic","title":"Meet Xcode Cloud","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10054-Whats-new-in-AppKit":{"url":"\/documentation\/wwdcnotes\/wwdc21-10054-whats-new-in-appkit","title":"What’s new in AppKit","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10054-Whats-new-in-AppKit","abstract":[{"text":"Explore the latest advancements in Mac app development with AppKit. We’ll show how you can enhance your app’s design with new control features and SF Symbols 3, build powerful text experiences using TextKit 2, and harness the latest Swift features in your app.","type":"text"}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10142-Efficiency-awaits-Background-tasks-in-SwiftUI":{"type":"topic","title":"Efficiency awaits: Background tasks in SwiftUI","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10142-efficiency-awaits-background-tasks-in-swiftui","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10142-Efficiency-awaits-Background-tasks-in-SwiftUI","abstract":[{"text":"Background Tasks help apps respond to system events and keep time-sensitive data up to date. Learn how you can use the SwiftUI Background Tasks API to handle tasks succinctly. We’ll show you how to use Swift Concurrency to handle network responses, background refresh, and more — all while preserving performance and power.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110360-Use-Xcode-for-serverside-development":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-110360-use-xcode-for-serverside-development","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110360-Use-Xcode-for-serverside-development","title":"Use Xcode for server-side development","abstract":[{"type":"text","text":"Discover how you can create, build, and deploy a Swift server app alongside your pre-existing Xcode projects within the same workspace. We’ll show you how to create your own local app and test endpoints using Xcode, and explore how you can structure and share code between server and client apps to ease your development process"}],"kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10117-Meet-CloudKit-Console":{"url":"\/documentation\/wwdcnotes\/wwdc21-10117-meet-cloudkit-console","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10117-Meet-CloudKit-Console","abstract":[{"text":"Discover how CloudKit Console can help you better interact with your containers. We’ll show you how to put the database app to work and define, modify, and deploy schema changes with confidence. You’ll learn how to craft queries in the query builder and filter your records with ease. And we’ll explore how to use telemetry and log data to gain new insights into your app behavior over time.","type":"text"}],"type":"topic","title":"Meet CloudKit Console","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","title":"WWDC Notes","role":"collection","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"url":"\/documentation\/wwdcnotes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10033-Meet-privacypreserving-ad-attribution":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10033-meet-privacypreserving-ad-attribution","title":"Meet privacy-preserving ad attribution","abstract":[{"type":"text","text":"Discover how you can measure your ad campaigns in apps and on the web without compromising privacy. We’ll introduce you to Private Click Measurement and explore SKAdNetwork, which provides you with a more secure, private, and useful way to measure your app installs."}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10033-Meet-privacypreserving-ad-attribution","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency":{"url":"\/documentation\/wwdcnotes\/wwdc22-110351-eliminate-data-races-using-swift-concurrency","title":"Eliminate data races using Swift Concurrency","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency","abstract":[{"text":"Join us as we explore one of the core concepts in Swift concurrency: isolation of tasks and actors. We’ll take you through Swift’s approach to eliminating data races and its effect on app architecture. We’ll also discuss the importance of atomicity in your code, share the nuances of Sendable checking to maintain isolation, and revisit assumptions about ordering work in a concurrent system.","type":"text"}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10192-Whats-new-in-Swift":{"kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10192-Whats-new-in-Swift","url":"\/documentation\/wwdcnotes\/wwdc21-10192-whats-new-in-swift","type":"topic","abstract":[{"type":"text","text":"Join us for an update on Swift. Discover the latest language advancements that make your code easier to read and write. Explore the growing number of APIs available as Swift packages. And we’ll introduce you to Swift’s async\/await syntax, structured concurrency, and actors."}],"title":"What‘s new in Swift"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10086-Whats-new-in-CloudKit":{"title":"What’s new in CloudKit","url":"\/documentation\/wwdcnotes\/wwdc21-10086-whats-new-in-cloudkit","kind":"article","type":"topic","abstract":[{"type":"text","text":"CloudKit provides a secure, convenient, and reliable cloud database for your apps — and it’s only getting better. Discover how you can unravel your threads with support for async\/await and convenience API additions. We’ll also show you how to encourage collaboration between people using your app through sharing entire record zones of data, and explore how to adopt CloudKit features like encrypted values and help protect sensitive data within your app."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10086-Whats-new-in-CloudKit","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10256-Meet-the-Swift-Algorithms-and-Collections-packages":{"url":"\/documentation\/wwdcnotes\/wwdc21-10256-meet-the-swift-algorithms-and-collections-packages","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10256-Meet-the-Swift-Algorithms-and-Collections-packages","abstract":[{"text":"Discover two of the latest additions to the list of open-source Swift packages from Apple: Swift Algorithms and Swift Collections. Not only can you use these packages immediately, they also incubate new algorithms and data structures for eventual inclusion in the Swift Standard Library. We’ll show you how you can integrate these packages into your projects and select the right algorithms and data structures to make your code clearer and faster.","type":"text"}],"type":"topic","title":"Meet the Swift Algorithms and Collections packages","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10134-Explore-structured-concurrency-in-Swift":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10134-Explore-structured-concurrency-in-Swift","title":"Explore structured concurrency in Swift","url":"\/documentation\/wwdcnotes\/wwdc21-10134-explore-structured-concurrency-in-swift","kind":"article","role":"sampleCode","abstract":[{"type":"text","text":"When you have code that needs to run at the same time as other code, it’s important to choose the right tool for the job. We’ll take you through the different kinds of concurrent tasks you can create in Swift, show you how to create groups of tasks, and find out how to cancel tasks in progress. We’ll also provide guidance on when you may want to use unstructured tasks."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10170-Meet-TestFlight-on-Mac":{"url":"\/documentation\/wwdcnotes\/wwdc21-10170-meet-testflight-on-mac","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10170-Meet-TestFlight-on-Mac","abstract":[{"text":"TestFlight has come to Mac. Learn how you can manage builds and testers, collect feedback, and deploy your macOS app. Discover enhancements for internal testing and new features that integrate with Xcode Cloud to make testing even easier on all platforms.","type":"text"}],"type":"topic","title":"Meet TestFlight on Mac","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10131-Meet-declarative-device-management":{"url":"\/documentation\/wwdcnotes\/wwdc21-10131-meet-declarative-device-management","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10131-Meet-declarative-device-management","abstract":[{"text":"The future of device management is here: Learn how you can support mobile device management while allowing individual devices to be autonomous and proactive, bringing both increased performance and scalability. We’ll show you how you can incorporate this declarative model in your MDM solution.","type":"text"}],"type":"topic","title":"Meet declarative device management","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10133-Protect-mutable-state-with-Swift-actors":{"role":"sampleCode","title":"Protect mutable state with Swift actors","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10133-Protect-mutable-state-with-Swift-actors","abstract":[{"type":"text","text":"Data races occur when two separate threads concurrently access the same mutable state. They are trivial to construct, but are notoriously hard to debug."}],"url":"\/documentation\/wwdcnotes\/wwdc21-10133-protect-mutable-state-with-swift-actors","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10123-Meet-the-Screen-Time-API":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10123-meet-the-screen-time-api","title":"Meet the Screen Time API","abstract":[{"type":"text","text":"Explore the Screen Time API and learn how you can build apps that support customized parental controls — all while putting privacy first. Learn how you can use key features like core restrictions and device activity monitoring to create safe, secure experiences in your app while providing measurable control for parents and guardians."}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10123-Meet-the-Screen-Time-API","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10017-Bring-Core-Data-concurrency-to-Swift-and-SwiftUI":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10017-Bring-Core-Data-concurrency-to-Swift-and-SwiftUI","title":"Bring Core Data concurrency to Swift and SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc21-10017-bring-core-data-concurrency-to-swift-and-swiftui","kind":"article","role":"sampleCode","abstract":[{"type":"text","text":"Discover how Core Data is adopting the new concurrency capabilities of Swift 5.5, leading to more concise, efficient, and safe asynchronous code. We’ll show you how to update Core Data in your apps to work with concurrency, and detail the many other improvements throughout the framework that make working with Swift and SwiftUI more expressive and powerful."}]},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"WWDCNotes.png"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10102-Meet-the-Location-Button":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10102-meet-the-location-button","title":"Meet the Location Button","abstract":[{"type":"text","text":"Meet CLLocationButton: a secure interface element that provides an easy, low-friction way to grant your app location access only when and where it is needed. Learn how you can add CLLocationButton to new or existing code, how to customize it within interface legibility guidelines, how to recognize and address customization failures, and how it interacts with iOS’s traditional prompt-based Location Services authorization."}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10102-Meet-the-Location-Button","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10166-Meet-DocC-documentation-in-Xcode":{"kind":"article","abstract":[{"type":"text","text":"Discover how you can use DocC to build and share documentation for Swift packages and frameworks. We’ll show you how to begin generating documentation from your own code — or from third-party code you depend upon — and write and format it using Markdown. And we’ll also take you through the export process, helping you generate DocC archives to share with the public."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10166-Meet-DocC-documentation-in-Xcode","title":"Meet DocC documentation in Xcode","type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10166-meet-docc-documentation-in-xcode"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/zntfdr","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","title":"Federico Zanetello (214 notes)","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10061-Meet-TextKit-2":{"url":"\/documentation\/wwdcnotes\/wwdc21-10061-meet-textkit-2","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10061-Meet-TextKit-2","abstract":[{"text":"Meet TextKit 2: Apple’s next-generation text engine, redesigned for improved correctness, safety, and performance. Discover how TextKit 2 can help you provide a better text experience for international audiences, create more diverse layouts by mixing text content with visual content, and ensure smooth scrolling performance. We’ll introduce the latest APIs, dive into some practical examples, and provide guidance for modernizing your apps.","type":"text"}],"type":"topic","title":"Meet TextKit 2","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10104-Meet-Safari-Web-Extensions-on-iOS":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10104-meet-safari-web-extensions-on-ios","title":"Meet Safari Web Extensions on iOS","abstract":[{"type":"text","text":"Safari Web Extensions use HTML, CSS, and JavaScript to offer people powerful browser customizations — and you can now create them for every device that supports Safari. Learn how to build a Safari Web Extension that works for all devices, and discover how you can convert an existing extension to Safari through Xcode and the Safari Web Extension Converter."}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10104-Meet-Safari-Web-Extensions-on-iOS","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10095-Use-asyncawait-with-URLSession":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10095-use-asyncawait-with-urlsession","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10095-Use-asyncawait-with-URLSession","abstract":[{"text":"Discover how you can adopt Swift concurrency in URLSession using async\/await and AsyncSequence, and how you can apply Swift concurrency concepts to improve your networking code.","type":"text"}],"title":"Use async\/await with URLSession"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10194-Swift-concurrency-Update-a-sample-app":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10194-Swift-concurrency-Update-a-sample-app","abstract":[{"text":"Discover Swift concurrency in action: Follow along as we update an existing sample app. Get real-world experience with async\/await, actors, and continuations. We’ll also explore techniques for migrating existing code to Swift concurrency over time.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10194-swift-concurrency-update-a-sample-app","title":"Swift concurrency: Update a sample app","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10254-Swift-concurrency-Behind-the-scenes":{"abstract":[{"text":"Dive into the details of Swift concurrency and discover how Swift provides greater safety from data races and thread explosion while simultaneously improving performance. We’ll explore how Swift tasks differ from Grand Central Dispatch, how the new cooperative threading model works, and how to ensure the best performance for your apps.","type":"text"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10254-Swift-concurrency-Behind-the-scenes","type":"topic","title":"Swift concurrency: Behind the scenes","url":"\/documentation\/wwdcnotes\/wwdc21-10254-swift-concurrency-behind-the-scenes","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10294-Meet-MusicKit-for-Swift":{"role":"sampleCode","title":"Meet MusicKit for Swift","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10294-meet-musickit-for-swift","kind":"article","abstract":[{"text":"MusicKit makes it easy to integrate Apple Music into your app. Explore the Swift-based framework: We’ll take you through the basic process of using MusicKit — including how to find, request, and play content — and show you how you can incorporate music subscription workflows into your app if someone hasn’t yet signed up to Apple Music.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10294-Meet-MusicKit-for-Swift"},"https://github.com/zntfdr":{"type":"link","url":"https:\/\/github.com\/zntfdr","title":"GitHub","identifier":"https:\/\/github.com\/zntfdr","titleInlineContent":[{"type":"text","text":"GitHub"}]}}}