{"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc23-10203-develop-your-first-immersive-app"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","sections":[],"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"inlineContent":[{"text":"Speakers: Peter Zion, RealityKit Tools","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Create-a-new-app-project-in-Xcode-0106","text":"Create a new app project in Xcode 01:06"},{"inlineContent":[{"type":"text","text":"Two new options are presented when creating a new project for the visionOS platform:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Initial Scene"}]},{"type":"text","text":" which allows us to specify the type of the initial scene that’s automatically included in the app"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Note: you can always add additional scenes later","type":"text"}],"type":"emphasis"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There are 2 initial scenes to choose from: "},{"type":"strong","inlineContent":[{"text":"Window","type":"text"}]},{"type":"text","text":" and "},{"type":"strong","inlineContent":[{"text":"Volume","type":"text"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Window"}]},{"type":"text","text":" primarily used for present 2D content and can be resized in their planar dimension"},{"type":"text","text":" "},{"type":"text","text":"* Learn more about windows in "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10109","isActive":true}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Volumes","type":"text"}]},{"text":" are designed to present 3D content and cannot be adjusted by the person using the app","type":"text"},{"text":" ","type":"text"},{"text":"* Learn more about volumes in ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10113\/"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Immersive Space"}],"type":"strong"},{"type":"text","text":" gives us the opportunity to add a starting point for immersive content to our app"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Immersive Space can be used to present unbounded content anywere on the infinite canvas","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When your app activates this scene type, it moves from "},{"inlineContent":[{"text":"Shared Space","type":"text"}],"type":"strong"},{"type":"text","text":" to "},{"inlineContent":[{"type":"text","text":"Full Space"}],"type":"strong"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Full Space provides access to dedicated rendering resources and can request permission to enable ARKit permissions"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"3 styles of immersive space: "},{"type":"strong","inlineContent":[{"type":"text","text":"Mixed Immersion"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"text":"Progressive Immersion","type":"text"}]},{"type":"text","text":", "},{"type":"strong","inlineContent":[{"type":"text","text":"Full Immersion"}]},{"type":"text","text":" "},{"type":"text","text":"* "},{"type":"strong","inlineContent":[{"type":"text","text":"Mixed Immersion"}]},{"type":"text","text":" lets you place unbounded virtual content in a Full Space while maintaining passthrough"},{"type":"text","text":" "},{"type":"text","text":"* "},{"type":"strong","inlineContent":[{"text":"Progressive Immersion","type":"text"}]},{"type":"text","text":" opens a portal for a roughly 180-degree view of your content"},{"type":"text","text":" "},{"type":"text","text":"* "},{"type":"strong","inlineContent":[{"type":"text","text":"Full Immersion"}]},{"type":"text","text":" hides passthrough entirely and surrounds eople with your app’s environment"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Learn more about Immersive Spaces in ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10111\/","isActive":true,"type":"reference"}]}]}]}]}]},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"In general, we recommend apps always start in a window on this platform, and provide clear entry and exit controls so that people can decide when to be more immersed in your content.","type":"text"}],"type":"paragraph"}],"name":"Note"},{"level":3,"type":"heading","anchor":"ContentView-0615","text":"ContentView 06:15"},{"inlineContent":[{"type":"text","text":"Most of the prepared code is inside the "},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":" file, which uses new platform-specific features."}],"type":"paragraph"},{"level":3,"type":"heading","anchor":"RealityView-0723","text":"RealityView 07:23"},{"inlineContent":[{"text":"RealityView allows you to place Reality content into a SwiftUI view hierarchy and the initializer takes 2 closures as parameters: ","type":"text"},{"inlineContent":[{"type":"text","text":"make closure"}],"type":"strong"},{"text":", and an ","type":"text"},{"inlineContent":[{"type":"text","text":"update closure"}],"type":"strong"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Make closure","type":"text"}]},{"text":" adds the initial RealityKit content to the view","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Update closure","type":"text"}]},{"text":" is optional but called when SwiftUI state changes","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"text":"Note: update closure is not a rendering update loop and is not called on every frame; only when the SwiftUI state changes","type":"text"}]}]}]}],"type":"unorderedList"}]}]},{"inlineContent":[{"type":"text","text":"Learn more about RealityView and gestures in "},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10080\/#:~:text=With%20RealityKit%2C%20you%20can%20augment,offers%20a%20lot%20of%20features."}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Introduction-to-the-Simulator-0856","text":"Introduction to the Simulator 08:56"},{"inlineContent":[{"type":"text","text":"Mimicks what somebody would see when wearing the device. This section walks through simulator controls."}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"How-to-use-Xcode-Previews-for-Quick-Iteration-1210","text":"How to use Xcode Previews for Quick Iteration 12:10"},{"inlineContent":[{"text":"As with the simulator, Xcode previews are presented as a simulated device view. This section walks through the Xcode Previews controls, and mentions that there are advanced features such as creating custom camera angles. More information on this can be found in the developer documentation.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Introduction-to-Reality-Composer-Pro-1333","text":"Introduction to Reality Composer Pro 13:33"},{"inlineContent":[{"text":"RealityKit content packages are Swift packages containing RealityKit content, and are processed at build time to optimize your content for runtime use. You can preview scenes by clicking on the content packages in your file hierarchy within Xcode, and can open those scenes to edit them inside Reality Composer Pro by clicking the button ","type":"text"},{"type":"codeVoice","code":"Open in Reality Composer Pro"},{"text":" in the top right of the scene preview window.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Reality Composer Pro organizes its content into "},{"type":"strong","inlineContent":[{"text":"scenes","type":"text"}]},{"type":"text","text":". To create 3D content for a different scene in your app, simply create a new scene inside Reality Composer Pro that will target the new scene in your app (i.e. "},{"code":"immersiveScene","type":"codeVoice"},{"type":"text","text":" inside Reality Composer Pro could be used to render content inside your "},{"code":"appImmersiveScene","type":"codeVoice"},{"type":"text","text":" which would be different than content rendered in your app window or volume)."}],"type":"paragraph"},{"level":3,"type":"heading","anchor":"2-more-key-details-to-understand-about-Immersive-Space-1600","text":"2 more key details to understand about Immersive Space 16:00"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Uses the inferred position of your feet as the origin of the content"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"When your apps run in a full space, they can request access to additional data such as the exact position and orientation of your hands","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"text":"Note: this is not available in shared space","type":"text"}]}]}]}]}]}]},{"inlineContent":[{"type":"text","text":"Learn more about accessible user data in "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10082\/#:~:text=ARKit%20uses%20sophisticated%20computer%20vision,the%20palm%20of%20your%20hand.","isActive":true}],"type":"paragraph"},{"inlineContent":[{"inlineContent":[{"text":"Navigating Reality Composer Pro ","type":"text"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10203\/?time=1017","isActive":true}],"type":"strong"}],"type":"paragraph"},{"level":3,"type":"heading","anchor":"Create-an-Immersive-Scene-2017","text":"Create an Immersive Scene 20:17"},{"inlineContent":[{"type":"text","text":"The first scene in the body property within your "},{"type":"codeVoice","code":"App.swift"},{"type":"text","text":" file is the one that will be presented by the app when it is launched. Add additional scenes to your app by adding them after the first scene."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Adding multiple scenes to your App.swift file ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10203\/?time=1277","isActive":true,"type":"reference"}],"type":"strong"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"How to preview immserive scenes in Xcode Previews "},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10203\/?time=1363","type":"reference","isActive":true}]}]}]}]},{"type":"aside","style":"note","content":[{"inlineContent":[{"text":"By default, previews are clipped to default scene bounds. If it’s presenting a view that loads content outside of these bounds, the content will not be visible. In order to support previewing immersive content that extends beyond these bounds, simply modify the view being prepared with .previewLayout(.sizeThatFits).","type":"text"}],"type":"paragraph"}],"name":"Note"},{"type":"codeListing","syntax":"swift","code":["#Preview {","    ImmersiveView()","        .previewLayout(.sizeThatFits)","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"How to have your app open in Immserive Space ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10203\/?time=1427"}]}]}]}]},{"level":3,"type":"heading","anchor":"Target-SwiftUI-Gestures-to-RealityKit-Entities-2537","text":"Target SwiftUI Gestures to RealityKit Entities 25:37"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Gestures"}],"type":"strong"},{"type":"text","text":" allow SwiftUI views to respond to input events. "},{"inlineContent":[{"text":"Entity targetting","type":"text"}],"type":"strong"},{"type":"text","text":" is how input events can be targetted to specific Reality entities (e.g. tapping a specific 3D model in Immersive Space). For entity targetting to work, entities must have both a "},{"code":"CollisionComponent","type":"codeVoice"},{"type":"text","text":" and an "},{"code":"InputTargetComponent","type":"codeVoice"}],"type":"paragraph"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Entity targeting is the glue that connects SwiftUI interactions to RealityKit content… In a more complex app, you can use entity targeting to trigger more sophisticated actions, such as presenting additional views, playing audio, or starting animations."}]}],"name":"Note"},{"level":2,"type":"heading","anchor":"Written-By","text":"Written By"},{"type":"row","numberOfColumns":5,"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"stevenpaulhoward"}]}]},{"size":4,"content":[{"level":3,"text":"stevenpaulhoward","anchor":"stevenpaulhoward","type":"heading"},{"inlineContent":[{"overridingTitle":"Contributed Notes","type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/stevenpaulhoward","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/stevenpaulhoward","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/x.com\/stevnhoward","isActive":true}],"type":"paragraph"}]}]},{"type":"thematicBreak"},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Related-Sessions","text":"Related Sessions"},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10080-Build-spatial-experiences-with-RealityKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10082-Meet-ARKit-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10083-Meet-Reality-Composer-Pro","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10111-Go-beyond-the-window-with-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10113-Take-SwiftUI-to-the-next-dimension","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10260-Get-started-with-building-apps-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10273-Work-with-Reality-Composer-Pro-content-in-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-111215-Meet-UIKit-for-spatial-computing"]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2025 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}],"kind":"content"}],"abstract":[{"type":"text","text":"Find out how you can build immersive apps for visionOS using Xcode and Reality Composer Pro. We’ll show you how to get started with a new visionOS project, use Xcode Previews for your SwiftUI development, and take advantage of RealityKit and RealityView to render 3D content."}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23"]]},"sampleCodeDownload":{"kind":"sampleDownload","action":{"isActive":true,"overridingTitle":"Watch Video (31 min)","identifier":"https:\/\/developer.apple.com\/wwdc23\/10203","type":"reference"}},"metadata":{"modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC23","role":"sampleCode","title":"Develop your first immersive app"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10203-Develop-your-first-immersive-app"},"references":{"https://developer.apple.com/videos/play/wwdc2023/10113/":{"title":"Take SwiftUI to the next dimension","titleInlineContent":[{"type":"text","text":"Take SwiftUI to the next dimension"}],"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10113\/","type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10113\/"},"https://developer.apple.com/videos/play/wwdc2023/10203/?time=1427":{"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10203\/?time=1427","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10203\/?time=1427","type":"link","titleInlineContent":[{"type":"emphasis","inlineContent":[{"text":"23:48","type":"text"}]}],"title":"23:48"},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"WWDCNotes.png"},"https://":{"title":"Blog","titleInlineContent":[{"text":"Blog","type":"text"}],"url":"https:\/\/","type":"link","identifier":"https:\/\/"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10113-Take-SwiftUI-to-the-next-dimension":{"title":"Take SwiftUI to the next dimension","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10113-Take-SwiftUI-to-the-next-dimension","abstract":[{"type":"text","text":"Get ready to add depth and dimension to your visionOS apps. Find out how to bring three-dimensional objects to your app using volumes, get to know the Model 3D API, and learn how to position and animate content. We’ll also show you how to use UI attachments in RealityView and support gestures in your content."}],"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10113-take-swiftui-to-the-next-dimension"},"https://developer.apple.com/videos/play/wwdc2023/10203/?time=1017":{"title":"16:58","titleInlineContent":[{"type":"emphasis","inlineContent":[{"text":"16:58","type":"text"}]}],"type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10203\/?time=1017","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10203\/?time=1017"},"https://developer.apple.com/videos/play/wwdc2023/10080/#:~:text=With%20RealityKit%2C%20you%20can%20augment,offers%20a%20lot%20of%20features.":{"titleInlineContent":[{"text":"Build Spatial Experiences with RealityKit","type":"text"}],"type":"link","title":"Build Spatial Experiences with RealityKit","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10080\/#:~:text=With%20RealityKit%2C%20you%20can%20augment,offers%20a%20lot%20of%20features.","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10080\/#:~:text=With%20RealityKit%2C%20you%20can%20augment,offers%20a%20lot%20of%20features."},"https://developer.apple.com/videos/play/wwdc2023/10082/#:~:text=ARKit%20uses%20sophisticated%20computer%20vision,the%20palm%20of%20your%20hand.":{"title":"Meet ARKit for Spatial Computing","titleInlineContent":[{"type":"text","text":"Meet ARKit for Spatial Computing"}],"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10082\/#:~:text=ARKit%20uses%20sophisticated%20computer%20vision,the%20palm%20of%20your%20hand.","type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10082\/#:~:text=ARKit%20uses%20sophisticated%20computer%20vision,the%20palm%20of%20your%20hand."},"doc://WWDCNotes/documentation/WWDCNotes/stevenpaulhoward":{"images":[{"type":"card","identifier":"stevenpaulhoward.jpeg"},{"type":"icon","identifier":"stevenpaulhoward.jpeg"}],"title":"stevenpaulhoward (4 notes)","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/stevenpaulhoward","kind":"article","url":"\/documentation\/wwdcnotes\/stevenpaulhoward","abstract":[{"text":"3D connoisseur","type":"text"}],"type":"topic","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10080-Build-spatial-experiences-with-RealityKit":{"url":"\/documentation\/wwdcnotes\/wwdc23-10080-build-spatial-experiences-with-realitykit","title":"Build spatial experiences with RealityKit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10080-Build-spatial-experiences-with-RealityKit","kind":"article","type":"topic","role":"sampleCode","abstract":[{"type":"text","text":"Discover how RealityKit can bring your apps into a new dimension. Get started with RealityKit entities, components, and systems, and learn how you can add 3D models and effects to your app on visionOS. We’ll also take you through the RealityView API and demonstrate how to add 3D objects to windows, volumes, and spaces to make your apps more immersive. And we’ll explore combining RealityKit with spatial input, animation, and spatial audio."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10273-Work-with-Reality-Composer-Pro-content-in-Xcode":{"title":"Work with Reality Composer Pro content in Xcode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10273-Work-with-Reality-Composer-Pro-content-in-Xcode","abstract":[{"text":"Learn how to bring content from Reality Composer Pro to life in Xcode. We’ll show you how to load 3D scenes into Xcode, integrate your content with your code, and add interactivity to your app. We’ll also share best practices and tips for using these tools together in your development workflow.","type":"text"}],"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10273-work-with-reality-composer-pro-content-in-xcode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23":{"title":"WWDC23","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23","role":"collectionGroup","abstract":[{"type":"text","text":"Xcode 15, Swift 5.9, iOS 17, macOS 14 (Sonoma), tvOS 17, visionOS 1, watchOS 10."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"SwiftData"},{"type":"text","text":", "},{"type":"codeVoice","code":"Observation"},{"type":"text","text":", "},{"type":"codeVoice","code":"StoreKit"},{"type":"text","text":" views, and more."}],"images":[{"type":"icon","identifier":"WWDC23-Icon.png"},{"type":"card","identifier":"WWDC23.jpeg"}],"kind":"article"},"https://developer.apple.com/videos/play/wwdc2023/10203/?time=1363":{"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10203\/?time=1363","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10203\/?time=1363","type":"link","titleInlineContent":[{"type":"text","text":"22:43"}],"title":"22:43"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10083-Meet-Reality-Composer-Pro":{"title":"Meet Reality Composer Pro","url":"\/documentation\/wwdcnotes\/wwdc23-10083-meet-reality-composer-pro","kind":"article","abstract":[{"type":"text","text":"Discover how to easily compose, edit, and preview 3D content with Reality Composer Pro. Follow along as we explore this developer tool by setting up a new project, composing scenes, adding particle emitters and audio, and even previewing content on device."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10083-Meet-Reality-Composer-Pro","type":"topic","role":"sampleCode"},"WWDC23.jpeg":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC23.jpeg","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"WWDC23.jpeg"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10260-Get-started-with-building-apps-for-spatial-computing":{"title":"Get started with building apps for spatial computing","url":"\/documentation\/wwdcnotes\/wwdc23-10260-get-started-with-building-apps-for-spatial-computing","kind":"article","abstract":[{"type":"text","text":"Get ready to develop apps and games for visionOS! Discover the fundamental building blocks that make up spatial computing — windows, volumes, and spaces — and find out how you can use these elements to build engaging and immersive experiences."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10260-Get-started-with-building-apps-for-spatial-computing","type":"topic","role":"sampleCode"},"https://developer.apple.com/videos/play/wwdc2023/10203/?time=1277":{"title":"21:18","titleInlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"21:18"}]}],"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10203\/?time=1277","type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10203\/?time=1277"},"https://developer.apple.com/videos/play/wwdc2023/10111/":{"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10111\/","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10111\/","type":"link","titleInlineContent":[{"type":"text","text":"Go Beyond the Window with SwiftUI"}],"title":"Go Beyond the Window with SwiftUI"},"https://developer.apple.com/wwdc23/10203":{"type":"download","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc23\/10203","identifier":"https:\/\/developer.apple.com\/wwdc23\/10203"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-111215-Meet-UIKit-for-spatial-computing":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc23-111215-meet-uikit-for-spatial-computing","title":"Meet UIKit for spatial computing","abstract":[{"type":"text","text":"Learn how to bring your UIKit app to visionOS. We’ll show you how to build for a new destination, explore APIs and best practices for spatial computing, and take your content into the third dimension when you use SwiftUI with UIKit in visionOS."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-111215-Meet-UIKit-for-spatial-computing","type":"topic","role":"sampleCode"},"https://x.com/stevnhoward":{"title":"X\/Twitter","titleInlineContent":[{"type":"text","text":"X\/Twitter"}],"type":"link","url":"https:\/\/x.com\/stevnhoward","identifier":"https:\/\/x.com\/stevnhoward"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"type":"link","title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"WWDC23-Icon.png":{"identifier":"WWDC23-Icon.png","type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC23-Icon.png"}]},"https://github.com/stevenpaulhoward":{"title":"GitHub","titleInlineContent":[{"type":"text","text":"GitHub"}],"type":"link","url":"https:\/\/github.com\/stevenpaulhoward","identifier":"https:\/\/github.com\/stevenpaulhoward"},"stevenpaulhoward":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/stevenpaulhoward.jpeg"}],"type":"image","alt":"Profile image of stevenpaulhoward","identifier":"stevenpaulhoward"},"https://developer.apple.com/videos/play/wwdc2023/10109":{"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10109","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2023\/10109","type":"link","titleInlineContent":[{"text":"Meet SwiftUI for Spatial Computing","type":"text"}],"title":"Meet SwiftUI for Spatial Computing"},"stevenpaulhoward.jpeg":{"alt":null,"variants":[{"url":"\/images\/WWDCNotes\/stevenpaulhoward.jpeg","traits":["1x","light"]}],"type":"image","identifier":"stevenpaulhoward.jpeg"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10082-Meet-ARKit-for-spatial-computing":{"title":"Meet ARKit for spatial computing","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10082-Meet-ARKit-for-spatial-computing","abstract":[{"type":"text","text":"Discover how you can use ARKit’s tracking and scene understanding features to develop a whole new universe of immersive apps and games. Learn how visionOS and ARKit work together to help you create apps that understand a person’s surroundings — all while preserving privacy. Explore the latest updates to the ARKit API and follow along as we demonstrate how to take advantage of hand tracking and scene geometry in your apps."}],"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10082-meet-arkit-for-spatial-computing"},"doc://WWDCNotes/documentation/WWDCNotes":{"url":"\/documentation\/wwdcnotes","kind":"symbol","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","title":"WWDC Notes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"role":"collection","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10111-Go-beyond-the-window-with-SwiftUI":{"title":"Go beyond the window with SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc23-10111-go-beyond-the-window-with-swiftui","role":"sampleCode","abstract":[{"text":"Get ready to launch into space — a new SwiftUI scene type that can help you make great immersive experiences for visionOS. We’ll show you how to create a new scene with ImmersiveSpace, place 3D content, and integrate RealityView. Explore how you can use the immersionStyle scene modifier to increase the level of immersion in an app and learn best practices for managing spaces, adding virtual hands with ARKit, adding support for SharePlay, and building an “out of this world” experience!","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10111-Go-beyond-the-window-with-SwiftUI","kind":"article","type":"topic"}}}