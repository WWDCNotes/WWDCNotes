{"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"Scene-Overview","text":"Scene Overview"},{"level":3,"type":"heading","anchor":"Configuration","text":"Configuration"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The structure of a scene’s components is defined by a scene configuration."}]},{"items":[{"content":[{"inlineContent":[{"text":"defines scene role and delegate class","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"optional attributes:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"name"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"storyboard"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UIScene"},{"type":"text","text":" subclass"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Can be declared either in the "},{"type":"codeVoice","code":"Info.plist"},{"type":"text","text":" or can be created at runtime"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"Content","text":"Content"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"represented by an ","type":"text"},{"code":"NSUserActivity","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"These activities are used for requesting scenes as well as for state restoration"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"Scene-management","text":"Scene management"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"managed by a scene delegate"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"the delegate is responsible for:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"setting up the UI","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"responding to lifecycle events"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"saving and restoring state."}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"Scene-tracking","text":"Scene tracking"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"tracked by "},{"type":"codeVoice","code":"UISceneSession"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"scenes can be disconnected and reconnected by the system when it’s in the background"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"the scene session tracks the scene regardless of its connection state and persists between (scene) launches"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"A scene session can be thought of as the representation in the system app switcher:","type":"text"},{"text":"\n","type":"text"},{"text":"Each item in the switcher corresponds to a scene session.","type":"text"}]},{"level":2,"type":"heading","anchor":"Scene-request-options","text":"Scene request options"},{"type":"paragraph","inlineContent":[{"text":"When requesting a scene from the system, you can provide an options object for customizing the request.","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"new in iPadOS 15, "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiwindowscene\/activationrequestoptions","isActive":true},{"type":"text","text":" offers new options subclass specifically for window scenes"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Using this subclass allows you to specify a presentation style (","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiwindowscene\/presentationstyle"},{"text":" (","type":"text"},{"type":"codeVoice","code":".prominent"},{"text":", ","type":"text"},{"type":"codeVoice","code":".standard"},{"text":", ","type":"text"},{"type":"codeVoice","code":".automatic"},{"text":")","type":"text"}]}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"Prominent-presentation","text":"Prominent presentation"},{"type":"paragraph","inlineContent":[{"identifier":"WWDC21-10057-prominent","type":"image"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"new style"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"presented modally in the current workspace with the scenes behind it dimmed.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"this presentation should provide "},{"type":"codeVoice","code":"Cancel"},{"type":"text","text":", "},{"type":"codeVoice","code":"Close"},{"type":"text","text":", or "},{"type":"codeVoice","code":"Done"},{"type":"text","text":" buttons"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"can be re-positioned like any other scene"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"this presentation should be dedicated to specific content within your app like a document or file.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"this dedicated content scope must be defined in the scene’s activation conditions ("},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uisceneactivationconditions"},{"type":"text","text":")"}]}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"Window-scene-activation-action","text":"Window scene activation action"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiwindowscene\/activationaction","type":"reference","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"to be used in menus, buttons, and bar button items"}]}]},{"content":[{"inlineContent":[{"text":"defaults to prominent style","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"provides title and image","type":"text"}]}]}],"type":"unorderedList"},{"code":["let newSceneAction = UIWindowScene.ActivationAction({ _ in","","  \/\/ Create the user activity that represents the new scene content.","  let userActivity = NSUserActivity(activityType: \"com.myapp.detailscene\")","","  \/\/ Return the activation configuration.","  return UIWindowScene.ActivationConfiguration(userActivity: userActivity)","})","","\/\/ Add the action to the menu.","let menu = UIMenu(children: [","  newSceneAction,","  flagAction,","  shareAction","])"],"syntax":"swift","type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"text":"on iPhone this action is automatically hidden","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"an alternate action can be provided on the ","type":"text"},{"code":"ActivationAction","type":"codeVoice"},{"text":" initialization","type":"text"}]}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"Open-scenes-via-gesture","text":"Open scenes via gesture"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"requires prominent style"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"Two ways:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"new ","type":"text"},{"type":"codeVoice","code":"UICollectionViewDelegate"},{"text":" method","type":"text"}]}]}],"type":"orderedList"},{"code":["func collectionView(","  _ collectionView: UICollectionView,","  sceneActivationConfigurationForItemAt indexPath: IndexPath,","  point: CGPoint",") -> UIWindowScene.ActivationConfiguration? {","","  \/\/ Get the item's user activity.","  guard let itemActivity = <#User Activity#> else {","    \/\/ Return nil if item can’t be opened in a dedicated scene.","    return nil","  }","","  \/\/ Return the activation configuration.","  return UIWindowScene.ActivationConfiguration(userActivity: itemActivity)","}",""],"syntax":"swift","type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiwindowscene\/activationinteraction","isActive":true,"type":"reference"}],"type":"paragraph"}]}],"type":"orderedList","start":2},{"code":["\/\/ Create an activation interaction.","let newSceneInteraction = UIWindowScene.ActivationInteraction { interaction, point in","  \/\/ Get the activity for specific point in view.","  guard let userActivity = <#User Activity#> else { return nil }","","  \/\/ Return an activation configuration.","  return UIWindowScene.ActivationConfiguration(userActivity: userActivity)","","} errorHandler: { error in","  \/\/ Present the content in another manner.","  <#Present Content#>","}","","\/\/ Add interaction to the view.","<#View#>.addInteraction(newSceneInteraction)"],"syntax":"swift","type":"codeListing"},{"level":2,"type":"heading","anchor":"QLPreviewSceneActivationConfiguration","text":"`QLPreviewSceneActivationConfiguration`"},{"items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/quicklook\/qlpreviewsceneactivationconfiguration"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"special scene for displaying files","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"system-managed (no need for delegate, or callbacks to worry about)"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"type":"heading","anchor":"Scene-state-restoration","text":"Scene state restoration"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"can restore interaction states of textfields via new "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uitextfield\/3821028-interactionstate"},{"type":"text","text":" property"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"New in iPadOS 15, there’s a new callback dedicated to state restoration"}]}]},{"content":[{"inlineContent":[{"code":"scene(_:restoreInteractionState:)","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"called after the scene is connected and the storyboard has been loaded, but before the first transition to foreground"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"Extending-state-restoration","text":"Extending state restoration"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"iPadOS 15 allows your app to request a short-term extension","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"During this extension, the launch image will remain visible while still allowing the main RunLoop to execute","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"app must signal when complete (app will be terminated otherwise)","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"code":["func scene(_ scene: UIScene, restoreInteractionState stateRestorationActivity: NSUserActivity) {","  guard let viewController = window?.rootViewController as? <#Expected View Controller Class#> else { return }","","  \/\/ Request an extension.","  scene.extendStateRestoration()","","  \/\/ Fetch content asynchronously.","  <#self.someAsyncFunction#> { result in","    <#Restore Content#>","","    \/\/ Signal that state has been restored.","    scene.completeStateRestoration()","  }","}"],"syntax":"swift","type":"codeListing"},{"level":2,"type":"heading","anchor":"Keyboard-shortcuts","text":"Keyboard shortcuts"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On iPadOS 15, the Mac Catalyst menu system will show as the new shortcut interface"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"hold down the Command key (in an external keyboard) to display this menu"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"disabled commands are hidden in iPadsOS","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"includes all system commands (undo\/redo included)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"to customize this, override the "},{"code":"buildMenu(with:)","type":"codeVoice"},{"type":"text","text":" app delegate function"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"type":"heading","anchor":"Pointer-enhancements","text":"Pointer enhancements"},{"level":3,"type":"heading","anchor":"Multiple-items-selection","text":"Multiple items selection"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"new "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uibandselectioninteraction"},{"type":"text","text":" to select multiple items on iPad (you get this for free if you’re using a collection view)"}]}]}],"type":"unorderedList"},{"code":["\/\/ Support multi-selection using UIBandSelectionInteraction.","","let selectionInteraction = UIBandSelectionInteraction { [weak self] interaction in","  guard let strongSelf = self else { return }","          ","  \/\/ Handle selection by responding to interaction state.","  if interaction.state == .selecting {","    strongSelf.selectItemsInRect(interaction.selectionRect)","  } ","  else if interaction.state == .ended {","    strongSelf.finalizeSelection()","  }","}","","view.addInteraction(selectionInteraction)"],"syntax":"swift","type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"can further select and deselect items by looking at the "},{"type":"codeVoice","code":"initialModifierFlags"},{"type":"text","text":" "},{"type":"codeVoice","code":"UIBandSelectionInteraction"},{"type":"text","text":" property"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"Pointer-accessories","text":"Pointer accessories"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"ability to attach accessories to system pointers"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"provide contextual hints by combining secondary shapes with the primary pointer"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"accessories are visually separate and secondary to the main pointer"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"rendered differently than the main pointer, have separate animation"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"can be combined with any pointer style"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"type":"heading","anchor":"Pointer-latching","text":"Pointer latching"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"iPadOS 15 introduces the concept of ","type":"text"},{"type":"codeVoice","code":"latchingAxes"},{"text":" on ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uipointerregion","type":"reference"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"e.g. a horizontally latching region lets you drag freely along the x-axis while still rubberbanding along the y-axis"}]}]}],"type":"unorderedList"},{"level":2,"type":"heading","anchor":"Written-By","text":"Written By"},{"columns":[{"content":[{"inlineContent":[{"identifier":"zntfdr","type":"image"}],"type":"paragraph"}],"size":1},{"content":[{"level":3,"anchor":"Federico-Zanetello","text":"Federico Zanetello","type":"heading"},{"inlineContent":[{"type":"reference","isActive":true,"overridingTitle":"Contributed Notes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}]},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/zntfdr"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/zntfdr.dev"}],"type":"paragraph"}],"size":4}],"type":"row","numberOfColumns":5},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}]},{"level":2,"type":"heading","anchor":"Related-Sessions","text":"Related Sessions"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10053-Qualities-of-a-great-Mac-Catalyst-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10056-Qualities-of-great-iPad-and-iPhone-apps-on-Macs-with-M1","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10059-Whats-new-in-UIKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10260-Focus-on-iPad-keyboard-navigation","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10093-Build-for-the-iPadOS-pointer","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10109-Support-hardware-keyboards-in-your-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10640-Design-for-the-iPadOS-pointer","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-212-Introducing-Multiple-Windows-on-iPad","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-259-Targeting-Content-with-Multiple-Windows"],"type":"links","style":"list"},{"type":"small","inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}]},{"type":"small","inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}],"kind":"content"}],"sections":[],"abstract":[{"type":"text","text":"Make even better iPad apps: Learn how you can adopt prominent scenes for uninterrupted, focused interactions. Help people stay engaged and fast with keyboard shortcuts and the keyboard shortcut interface. Explore how the latest in pointer enhancements can help your app boost productivity."}],"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":3},"sampleCodeDownload":{"action":{"isActive":true,"type":"reference","overridingTitle":"Watch Video (36 min)","identifier":"https:\/\/developer.apple.com\/wwdc21\/10057"},"kind":"sampleDownload"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10057-Take-your-iPad-apps-to-the-next-level"},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc21-10057-take-your-ipad-apps-to-the-next-level"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"Take your iPad apps to the next level","modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC21","role":"sampleCode"},"references":{"WWDC21-10057-prominent":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDC21-10057-prominent.png"}],"type":"image","alt":null,"identifier":"WWDC21-10057-prominent"},"https://developer.apple.com/documentation/uikit/uiwindowscene/activationrequestoptions":{"url":"https:\/\/developer.apple.com\/documentation\/uikit\/uiwindowscene\/activationrequestoptions","title":"UIWindowScene.ActivationRequestOptions","titleInlineContent":[{"type":"codeVoice","code":"UIWindowScene.ActivationRequestOptions"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiwindowscene\/activationrequestoptions"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10640-Design-for-the-iPadOS-pointer":{"abstract":[{"text":"Bring the power of the pointer to your iPad app: We’ll show you how Apple’s design team approached designing the iPadOS pointer to complement touch input, and how you can customize and refine pointer interactions in your app to make workflows more efficient and gratifying. Discover how the pointer’s adaptive precision enables people to quickly and confidently target interface elements regardless of their size. We’ll also share some best practices on adapting the pointer to complement your app’s unique needs including how to select pointer effects and design pointer shapes, integrate trackpad gestures, and keyboard modifiers.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10640-Design-for-the-iPadOS-pointer","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc20-10640-design-for-the-ipados-pointer","type":"topic","title":"Design for the iPadOS pointer","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10053-Qualities-of-a-great-Mac-Catalyst-app":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10053-Qualities-of-a-great-Mac-Catalyst-app","type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10053-qualities-of-a-great-mac-catalyst-app","kind":"article","title":"Qualities of a great Mac Catalyst app","abstract":[{"type":"text","text":"Discover best practices, tools, and techniques to help craft the best possible Mac Catalyst app. We’ll take you through key considerations when you bring your iPad app to macOS, explore detailed code examples for refining your interface and experience, and show you how to distribute your Mac app to everyone."}]},"https://github.com/zntfdr":{"url":"https:\/\/github.com\/zntfdr","title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}],"type":"link","identifier":"https:\/\/github.com\/zntfdr"},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"WWDCNotes.png"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-212-Introducing-Multiple-Windows-on-iPad":{"title":"Introducing Multiple Windows on iPad","abstract":[{"type":"text","text":"Multitasking is an exciting way to add power to your iPad app. It is easy to enable your app to run two instances of your interface side-by-side, and your customers will love it. Learn how to take your existing features like drag and drop and use them to easily create a second window. Find out how supporting multiple windows changes the app lifecycle and what that means for all applications. Hear about some common mistakes and how to solve them, setting you and your customers up for a fantastic experience."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-212-Introducing-Multiple-Windows-on-iPad","url":"\/documentation\/wwdcnotes\/wwdc19-212-introducing-multiple-windows-on-ipad","kind":"article","type":"topic","role":"sampleCode"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"type":"link","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"url":"\/documentation\/wwdcnotes\/wwdc21","type":"topic","kind":"article","title":"WWDC21","abstract":[{"text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"MusicKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"DocC"},{"type":"text","text":", "},{"type":"codeVoice","code":"StoreKit 2"},{"type":"text","text":", and more."}],"role":"collectionGroup","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","images":[{"identifier":"WWDC21-Icon.png","type":"icon"},{"identifier":"WWDC21.jpeg","type":"card"}]},"https://developer.apple.com/documentation/uikit/uipointerregion":{"url":"https:\/\/developer.apple.com\/documentation\/uikit\/uipointerregion","title":"UIPointerRegion","titleInlineContent":[{"type":"codeVoice","code":"UIPointerRegion"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uipointerregion"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10109-Support-hardware-keyboards-in-your-app":{"title":"Support hardware keyboards in your app","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10109-Support-hardware-keyboards-in-your-app","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10109-support-hardware-keyboards-in-your-app","role":"sampleCode","abstract":[{"type":"text","text":"When people use hardware keyboards with your app, they’re not only getting a more tactile and familiar typing experience — they can quickly navigate or use keyboard shortcuts, too. Discover how you can best support hardware keyboards for your iPadOS and Mac Catalyst apps: We’ll demystify the responder chain and show you best practices for implementing custom keyboard shortcuts. Learn how easy it is to get up and running with common system keyboard shortcuts, use modifier flags with gesture recognizers, and leverage the raw keyboard event API to respond to key down and key up events."}]},"https://developer.apple.com/documentation/uikit/uisceneactivationconditions":{"title":"UISceneActivationConditions","titleInlineContent":[{"code":"UISceneActivationConditions","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uisceneactivationconditions","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uisceneactivationconditions"},"https://developer.apple.com/documentation/uikit/uitextfield/3821028-interactionstate":{"title":"interactionState","titleInlineContent":[{"code":"interactionState","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uitextfield\/3821028-interactionstate","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uitextfield\/3821028-interactionstate"},"https://developer.apple.com/documentation/uikit/uibandselectioninteraction":{"title":"UIBandSelectionInteraction","titleInlineContent":[{"code":"UIBandSelectionInteraction","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uibandselectioninteraction","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uibandselectioninteraction"},"WWDC21.jpeg":{"type":"image","variants":[{"url":"\/images\/WWDC21.jpeg","traits":["1x","light"]}],"identifier":"WWDC21.jpeg","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"url":"\/documentation\/wwdcnotes\/zntfdr","type":"topic","kind":"article","title":"Federico Zanetello (332 notes)","abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","images":[{"identifier":"zntfdr.jpeg","type":"card"},{"identifier":"zntfdr.jpeg","type":"icon"}]},"https://developer.apple.com/documentation/uikit/uiwindowscene/presentationstyle":{"title":"UIWindowScene.PresentationStyle","titleInlineContent":[{"code":"UIWindowScene.PresentationStyle","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uiwindowscene\/presentationstyle","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiwindowscene\/presentationstyle"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10059-Whats-new-in-UIKit":{"url":"\/documentation\/wwdcnotes\/wwdc21-10059-whats-new-in-uikit","abstract":[{"text":"Discover the latest updates and improvements to UIKit and learn how to build better iPadOS, iOS, and Mac Catalyst apps. We’ll take you through UI refinements, productivity updates, and API enhancements, and help you explore performance improvements and security & privacy features.","type":"text"}],"role":"sampleCode","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10059-Whats-new-in-UIKit","title":"What’s new in UIKit"},"WWDC21-Icon.png":{"type":"image","variants":[{"url":"\/images\/WWDC21-Icon.png","traits":["1x","light"]}],"identifier":"WWDC21-Icon.png","alt":null},"doc://WWDCNotes/documentation/WWDCNotes":{"title":"WWDC Notes","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"role":"collection","type":"topic","kind":"symbol","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","url":"\/documentation\/wwdcnotes"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-259-Targeting-Content-with-Multiple-Windows":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-259-Targeting-Content-with-Multiple-Windows","url":"\/documentation\/wwdcnotes\/wwdc19-259-targeting-content-with-multiple-windows","title":"Targeting Content with Multiple Windows","type":"topic","kind":"article","role":"sampleCode","abstract":[{"type":"text","text":"Learn how to target content for a specific window in your app. Find out how to identify which scene the system should open from a notification, a shortcut item, and other user activities."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10260-Focus-on-iPad-keyboard-navigation":{"abstract":[{"type":"text","text":"Improve the keyboard experience in your iPad and Mac Catalyst app. Discover how you can accelerate access to key features with the hardware keyboard, and navigate through your views and view controllers. Learn how to customize which elements are keyboard navigable, as well as how to customize the tab loop."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10260-Focus-on-iPad-keyboard-navigation","url":"\/documentation\/wwdcnotes\/wwdc21-10260-focus-on-ipad-keyboard-navigation","type":"topic","title":"Focus on iPad keyboard navigation","kind":"article","role":"sampleCode"},"zntfdr.jpeg":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/zntfdr.jpeg"}],"identifier":"zntfdr.jpeg","alt":null},"https://developer.apple.com/documentation/uikit/uiwindowscene/activationaction":{"title":"UIWindowScene.ActivationAction","titleInlineContent":[{"code":"UIWindowScene.ActivationAction","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/uikit\/uiwindowscene\/activationaction","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiwindowscene\/activationaction"},"https://developer.apple.com/wwdc21/10057":{"type":"download","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc21\/10057","identifier":"https:\/\/developer.apple.com\/wwdc21\/10057"},"https://zntfdr.dev":{"url":"https:\/\/zntfdr.dev","title":"Blog","titleInlineContent":[{"type":"text","text":"Blog"}],"type":"link","identifier":"https:\/\/zntfdr.dev"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10056-Qualities-of-great-iPad-and-iPhone-apps-on-Macs-with-M1":{"type":"topic","abstract":[{"text":"It’s easier than ever to offer your existing iPad and iPhone apps on Macs with M1. We’ll show you how to bring your app to macOS, and explore how the system automatically bridges various features of your app to work on the Mac. We’ll also provide guidance on best practices in your iPad app, combined with improvements in macOS Monterey — like Apple Pay support, improved AV handling, and shortcuts — to provide the fullest experience on Macs with M1.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10056-qualities-of-great-ipad-and-iphone-apps-on-macs-with-m1","title":"Qualities of great iPad and iPhone apps on Macs with M1","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10056-Qualities-of-great-iPad-and-iPhone-apps-on-Macs-with-M1","role":"sampleCode"},"zntfdr":{"variants":[{"traits":["1x","light"],"url":"\/images\/zntfdr.jpeg"}],"type":"image","alt":"Profile image of Federico Zanetello","identifier":"zntfdr"},"https://developer.apple.com/documentation/uikit/uiwindowscene/activationinteraction":{"url":"https:\/\/developer.apple.com\/documentation\/uikit\/uiwindowscene\/activationinteraction","title":"UIWindowScene.ActivationInteraction","titleInlineContent":[{"type":"codeVoice","code":"UIWindowScene.ActivationInteraction"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uiwindowscene\/activationinteraction"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10093-Build-for-the-iPadOS-pointer":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10093-Build-for-the-iPadOS-pointer","title":"Build for the iPadOS pointer","url":"\/documentation\/wwdcnotes\/wwdc20-10093-build-for-the-ipados-pointer","role":"sampleCode","abstract":[{"type":"text","text":"Help people who use iPad with a Magic Keyboard, mouse, trackpad or other input device get the most out of your app. We’ll show you how to add customizations to the pointer on iPad using pointer interaction APIs, create pointer effects for your buttons and custom views, and change the pointer shape in specific areas of your app to highlight them."}],"kind":"article"},"https://developer.apple.com/documentation/quicklook/qlpreviewsceneactivationconfiguration":{"url":"https:\/\/developer.apple.com\/documentation\/quicklook\/qlpreviewsceneactivationconfiguration","title":"QLPreviewSceneActivationConfiguration","titleInlineContent":[{"code":"QLPreviewSceneActivationConfiguration","type":"codeVoice"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/quicklook\/qlpreviewsceneactivationconfiguration"}}}