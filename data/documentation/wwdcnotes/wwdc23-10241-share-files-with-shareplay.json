{"kind":"article","sections":[],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"content","content":[{"text":"Limitations of GroupSessionManager","level":3,"anchor":"Limitations-of-GroupSessionManager","type":"heading"},{"inlineContent":[{"text":"Previously, if you were creating a group drawing app and wanted to drop a photo onto the canvas, this wasn’t possible due to the size limitations of ","type":"text"},{"type":"codeVoice","code":"GroupSessionManager"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"New in iOS17, file attachment transfers are not only possible but are very fast and end to end encrypted.","type":"text"}],"type":"paragraph"},{"text":"GroupSessionJournal","level":3,"anchor":"GroupSessionJournal","type":"heading"},{"inlineContent":[{"text":"New to iOS17. ","type":"text"},{"code":"GroupSessionJournal","type":"codeVoice"},{"text":" an object that stays consistent for everyone across the ","type":"text"},{"code":"GroupSession","type":"codeVoice"},{"text":". Actions you take on the journal affect everyone and properties on the journal are similarly synced for everyone.","type":"text"}],"type":"paragraph"},{"code":["public final class GroupSessionJournal {","    public lazy var attachments: Attachments","    public func add‹ItemType: Transferable>(_ item: ItemType) async throws → Attachment","    public func remove(attachment: Attachment) async throws","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"text":"You can upload any of your custom attachments with the “add” function. Just be sure your type conforms to the ","type":"text"},{"code":"Transferable","type":"codeVoice"},{"text":" protocol.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"When calling ","type":"text"},{"code":"add","type":"codeVoice"},{"text":" or","type":"text"},{"code":"remove","type":"codeVoice"},{"text":" everyone in the GroupSession will observe their “attachments” AsyncSequence being updated with the event.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Attachments are limited to 100MB."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The lifecycle of the attachment is as long as members of the "},{"code":"GroupSession","type":"codeVoice"},{"type":"text","text":" are connected"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the person who uploaded the attachment leaves the "},{"type":"codeVoice","code":"GroupSession"},{"type":"text","text":" the attachment remains until everyone disconnects"}]}]}]}]}],"type":"unorderedList"},{"text":"GroupSessionJournal: Late Joiners","level":3,"anchor":"GroupSessionJournal-Late-Joiners","type":"heading"},{"inlineContent":[{"type":"text","text":"Another advantage of "},{"code":"GroupSessionJournal","type":"codeVoice"},{"type":"text","text":" over "},{"code":"GroupSessionMessenger","type":"codeVoice"},{"type":"text","text":" is how it handles late joiners."}],"type":"paragraph"},{"inlineContent":[{"text":"In ","type":"text"},{"type":"codeVoice","code":"GroupSessionMessenger"},{"text":", late joiners are “caught up” on the session by having each session member re-upload their interactions behind the scenes. Obviously, having each member re-upload 100MB file attachments is not efficient so ","type":"text"},{"type":"codeVoice","code":"GroupSessionJournal"},{"text":" ensures that late joiners receive attachments without any re-uploads.","type":"text"}],"type":"paragraph"},{"text":"Code Example: Syncing an image and it’s location across devices","level":3,"anchor":"Code-Example-Syncing-an-image-and-its-location-across-devices","type":"heading"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a struct for the image data and add it to your Canvas model"}]}]}],"type":"orderedList"},{"code":["struct CanvasImage: Identifiable {","    var id: UUID","    let location: CGPoint","    let imageData: Data","}","","class Canvas: ObservableObject {","    @Published var images = [CanvasImage]()","    \/\/...","}"],"syntax":"swift","type":"codeListing"},{"start":2,"items":[{"content":[{"inlineContent":[{"type":"text","text":"In your Canvas model, setup your "},{"type":"codeVoice","code":"GroupSessionJournal"},{"type":"text","text":" and listen for changes to its attachments"}],"type":"paragraph"}]}],"type":"orderedList"},{"code":["func configureGroupSession(_ groupSession: GroupSession<DrawTogether>) {","    self.groupSession = groupSession","    let messenger = GroupSessionMessenger(session: groupSession)","    self.messenger = messenger","    let journal = GroupSessionJournal(session: groupSession)","    self.journal = journal","    ","    \/\/set up groupSession, handle messenger events...","    ","    task = Task {","        for await images in journal.attachments {","            await handle(images)","        }","    }","    tasks.insert(task)","","    \/\/...","}"],"syntax":"swift","type":"codeListing"},{"start":3,"items":[{"content":[{"inlineContent":[{"type":"text","text":"In your Canvas model, create the image handler to convert journal attachments to "},{"type":"codeVoice","code":"CanvasImage"}],"type":"paragraph"}]}],"type":"orderedList"},{"code":["func handle(_ attachments: GroupSessionJournal.Attachments.Element) async {","    \/\/ Now make sure that our canvas always has all the images from this sequence.","    self.images = await withTaskGroup(of: CanvasImage?.self) { group in","        var images = [CanvasImage]()","        attachments.forEach { attachment in","            group.addTask {","                do {","                    let metadata = try await attachment.loadMetadata(","                        of: ImageMetadataMessage.self","                    )","                    let imageData = try await attachment.load(","                        Data.self","                    )","                    return .init(","                        id: attachment.id,","                        location: metadata.location,","                        imageData: imageData","                    )","                } catch { return nil }","            }","            for await image in group {","                if let image {","                    images.append(image)","                }","            }","            return images","        }","    }","}"],"syntax":"swift","type":"codeListing"},{"start":4,"items":[{"content":[{"inlineContent":[{"type":"text","text":"At this stage, simply update your UI to reflect Canvas.images"}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"identifier":"WWDC23-10241-example-code-shareplay-attachments","type":"image"}],"type":"paragraph"},{"text":"Written By","level":2,"anchor":"Written-By","type":"heading"},{"numberOfColumns":5,"columns":[{"size":1,"content":[{"inlineContent":[{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/475976?v=4","type":"image"}],"type":"paragraph"}]},{"size":4,"content":[{"anchor":"Travis-Ma","type":"heading","level":3,"text":"Travis Ma"},{"type":"paragraph","inlineContent":[{"type":"reference","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/trav-ma","isActive":true,"overridingTitle":"Contributed Notes"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/trav-ma","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/www.travisma.me","isActive":true}]}]}],"type":"row"},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}],"type":"paragraph"},{"text":"Related Sessions","level":2,"anchor":"Related-Sessions","type":"heading"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10239-Add-SharePlay-to-your-app"],"style":"list","type":"links"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}]}],"metadata":{"modules":[{"name":"WWDC Notes"}],"role":"sampleCode","title":"Share files with SharePlay","roleHeading":"WWDC23"},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc23-10241-share-files-with-shareplay"],"traits":[{"interfaceLanguage":"swift"}]}],"sampleCodeDownload":{"kind":"sampleDownload","action":{"overridingTitle":"Watch Video (9 min)","type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc23\/10241","isActive":true}},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10241-Share-files-with-SharePlay","interfaceLanguage":"swift"},"abstract":[{"text":"Discover how to work with files and attachments in a SharePlay activity. We’ll explain how to use the GroupSessionJournal API to sync large amounts of data faster and show you how to adopt it in a demo of the sample app DrawTogether.","type":"text"}],"references":{"https://developer.apple.com/wwdc23/10241":{"type":"download","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc23\/10241","url":"https:\/\/developer.apple.com\/wwdc23\/10241"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23":{"images":[{"type":"icon","identifier":"WWDCNotes.png"}],"kind":"article","abstract":[{"text":"Xcode 15, Swift 5.9, iOS 17, macOS 14 (Sonoma), tvOS 17, visionOS 1, watchOS 10.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"SwiftData","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Observation","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"StoreKit"},{"type":"text","text":" views, and more."}],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23","title":"WWDC23","url":"\/documentation\/wwdcnotes\/wwdc23"},"https://github.com/trav-ma":{"titleInlineContent":[{"text":"GitHub","type":"text"}],"type":"link","identifier":"https:\/\/github.com\/trav-ma","url":"https:\/\/github.com\/trav-ma","title":"GitHub"},"https://www.travisma.me":{"titleInlineContent":[{"text":"Blog","type":"text"}],"type":"link","identifier":"https:\/\/www.travisma.me","url":"https:\/\/www.travisma.me","title":"Blog"},"doc://WWDCNotes/documentation/WWDCNotes/trav-ma":{"abstract":[{"text":"Software Development Manager for IQVIA’s Mobile team in Arizona.","type":"text"}],"type":"topic","kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/trav-ma","url":"\/documentation\/wwdcnotes\/trav-ma","title":"Travis Ma (5 notes)"},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"WWDCNotes.png"},"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","title":"WWDC Notes","url":"\/documentation\/wwdcnotes","kind":"symbol","role":"collection","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"images":[{"identifier":"WWDCNotes.png","type":"icon"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10239-Add-SharePlay-to-your-app":{"abstract":[{"text":"Discover how your app can take advantage of SharePlay to turn any activity into a shareable experience with friends! We’ll share the latest updates to SharePlay, explore the benefits of creating shared activities, dive into some exciting use cases, and take you through best practices to create engaging and fun moments of connection in your app.","type":"text"}],"type":"topic","kind":"article","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10239-Add-SharePlay-to-your-app","url":"\/documentation\/wwdcnotes\/wwdc23-10239-add-shareplay-to-your-app","title":"Add SharePlay to your app"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"type":"link","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!"},"https://avatars.githubusercontent.com/u/475976?v=4":{"type":"image","alt":"Profile image of Travis Ma","variants":[{"traits":["1x","light"],"url":"https:\/\/avatars.githubusercontent.com\/u\/475976?v=4"}],"identifier":"https:\/\/avatars.githubusercontent.com\/u\/475976?v=4"},"WWDC23-10241-example-code-shareplay-attachments":{"type":"image","alt":"Example: Sync image across devices","variants":[{"url":"\/images\/WWDC23-10241-example-code-shareplay-attachments.png","traits":["1x","light"]}],"identifier":"WWDC23-10241-example-code-shareplay-attachments"}}}