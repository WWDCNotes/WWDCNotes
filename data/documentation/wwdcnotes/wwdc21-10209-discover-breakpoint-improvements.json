{"abstract":[{"text":"Breakpoints can help you debug issues by allowing you to pause and inspect problems in the middle of a process. Discover the latest improvements to breakpoints in Xcode including column and unresolved breakpoints. We’ll also go over best practices for general breakpoints and LLDB tips and tricks.","type":"text"}],"kind":"article","identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10209-Discover-breakpoint-improvements","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"text":"Source file breakpoints","type":"heading","anchor":"Source-file-breakpoints","level":2},{"type":"paragraph","inlineContent":[{"text":"When a compiler compiles a file under debug condition, it creates a map called a ","type":"text"},{"type":"text","text":"line table"},{"type":"text","text":" that maps source lines and columns to compiled addresses."},{"type":"text","text":" "},{"type":"text","text":"Source breakpoints rely on this table to determine when to pause the process execution."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Line breakpoint","type":"text"},{"text":" is set in a single file","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"to create one is simply to click in the gutter next to the line you want to pause"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"New: ","type":"text"},{"text":"Column breakpoints","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"to create one, command-click on the expression to bring up the Actions popover, and then select "},{"type":"text","text":"Set Column Breakpoint"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"When the breakpoint hits, Xcode uses the "},{"type":"text","text":"line PC"},{"type":"text","text":" to tell you the paused line, it draws a light green highlight over the line"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"From Xcode 11.4, we also have "},{"type":"text","text":"column PC"},{"type":"text","text":". The column PC shows you the paused column by drawing a green underscore under an expression."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"it lets you know the expression the debugger is going to execute next"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"type":"heading","level":2,"anchor":"Symbolic-breakpoints","text":"Symbolic breakpoints"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"breakpoints on function names that will pause the process when those functions are executed"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"useful particularly when you don’t have access to the source files and hence, you can’t compile them with debug info"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"to create one, click on the ","type":"text"},{"text":"+","type":"text"},{"text":" add button at the bottom of the breakpoint navigator, and select ","type":"text"},{"text":"Symbolic Breakpoint","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"LLDB will match the "},{"type":"text","text":"symbol"},{"type":"text","text":" name in your symbolic breakpoint in all the libraries that are loaded in the process, including the system libraries"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"to restrict the search scope, specify in which module you’re interested in by using the "},{"type":"text","text":"Module"},{"type":"text","text":" field in your break point. A module is a binary or image that can be loaded during execution, including the main binary. (e.g. use "},{"type":"codeVoice","code":"YourAppName"},{"type":"text","text":" for the main module)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"if you’re not sure on the symbol name, you can search for it:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"in the source code","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"in lldb via "},{"type":"codeVoice","code":"image lookup -rn insertSymbolNameHere"},{"type":"text","text":" ("},{"type":"codeVoice","code":"-r"},{"type":"text","text":" for regex, "},{"type":"codeVoice","code":"n"},{"type":"text","text":" for name), you can also specify the module name after the symbol name"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"type":"heading","level":2,"anchor":"Runtime-issue-breakpoints","text":"Runtime issue breakpoints"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A runtime issue is an issue that occurs at runtime that is not as serious as a crash"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"by default, Xcode doesn’t pause your process, because it can be too disruptive when you are focusing on something else","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"to pause execution when a runtime issue happens, create a Runtime issue breakpoint","type":"text"}]}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"to create a runtime issue breakpoint, click on the "},{"type":"text","text":"+"},{"type":"text","text":" add button at the bottom of the breakpoint navigator, and select "},{"type":"text","text":"Runtime issue Breakpoint"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"there are different types of runtime issue: for some of them to trigger, you need to enable the corresponding feature in the diagnostics tab of the scheme editor."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","level":2,"anchor":"Written-By","text":"Written By"},{"type":"row","columns":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"zntfdr","type":"image"}]}],"size":1},{"content":[{"type":"heading","anchor":"Federico-Zanetello","level":3,"text":"Federico Zanetello"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"type":"reference","overridingTitle":"Contributed Notes","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/github.com\/zntfdr","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/zntfdr.dev","type":"reference","isActive":true}]}],"size":4}],"numberOfColumns":5},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}]},{"type":"heading","level":2,"anchor":"Related-Sessions","text":"Related Sessions"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110370-Debug-Swift-debugging-with-LLDB","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-429-LLDB-Beyond-po","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-412-Advanced-Debugging-with-Xcode-and-LLDB"],"type":"links","style":"list"},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}]},{"type":"small","inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}]}],"metadata":{"modules":[{"name":"WWDC Notes"}],"role":"sampleCode","title":"Discover breakpoint improvements","roleHeading":"WWDC21"},"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc21-10209-discover-breakpoint-improvements"]}],"sampleCodeDownload":{"action":{"overridingTitle":"Watch Video (12 min)","identifier":"https:\/\/developer.apple.com\/wwdc21\/10209","type":"reference","isActive":true},"kind":"sampleDownload"},"references":{"WWDC21.jpeg":{"alt":null,"identifier":"WWDC21.jpeg","type":"image","variants":[{"url":"\/images\/WWDC21.jpeg","traits":["1x","light"]}]},"zntfdr.jpeg":{"alt":null,"variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}],"type":"image","identifier":"zntfdr.jpeg"},"doc://WWDCNotes/documentation/WWDCNotes":{"role":"collection","title":"WWDC Notes","url":"\/documentation\/wwdcnotes","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"kind":"symbol"},"https://github.com/zntfdr":{"identifier":"https:\/\/github.com\/zntfdr","type":"link","url":"https:\/\/github.com\/zntfdr","titleInlineContent":[{"type":"text","text":"GitHub"}],"title":"GitHub"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC18-412-Advanced-Debugging-with-Xcode-and-LLDB":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-412-Advanced-Debugging-with-Xcode-and-LLDB","title":"Advanced Debugging with Xcode and LLDB","abstract":[{"text":"Discover advanced techniques, and tips and tricks for enhancing your Xcode debugging workflows. Learn how to take advantage of LLDB and custom breakpoints for more powerful debugging. Get the most out of Xcode’s view debugging tools to solve UI issues in your app more efficiently.","type":"text"}],"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc18-412-advanced-debugging-with-xcode-and-lldb","type":"topic"},"WWDCNotes.png":{"alt":null,"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"type":"image","identifier":"WWDCNotes.png"},"zntfdr":{"alt":"Profile image of Federico Zanetello","identifier":"zntfdr","type":"image","variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}]},"https://zntfdr.dev":{"url":"https:\/\/zntfdr.dev","titleInlineContent":[{"text":"Blog","type":"text"}],"type":"link","identifier":"https:\/\/zntfdr.dev","title":"Blog"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"images":[{"identifier":"zntfdr.jpeg","type":"card"},{"identifier":"zntfdr.jpeg","type":"icon"}],"role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","title":"Federico Zanetello (332 notes)","kind":"article","url":"\/documentation\/wwdcnotes\/zntfdr"},"https://developer.apple.com/wwdc21/10209":{"identifier":"https:\/\/developer.apple.com\/wwdc21\/10209","checksum":null,"type":"download","url":"https:\/\/developer.apple.com\/wwdc21\/10209"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-429-LLDB-Beyond-po":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc19-429-lldb-beyond-po","abstract":[{"text":"LLDB is a powerful tool for exploring and debugging your app at runtime. Discover the various ways to display values in your app, how to format custom data types, and how to extend LLDB using your own Python 3 scripts.","type":"text"}],"role":"sampleCode","title":"LLDB: Beyond “po”","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-429-LLDB-Beyond-po"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"role":"collectionGroup","title":"WWDC21","url":"\/documentation\/wwdcnotes\/wwdc21","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","images":[{"identifier":"WWDC21-Icon.png","type":"icon"},{"identifier":"WWDC21.jpeg","type":"card"}],"abstract":[{"type":"text","text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"code":"MusicKit","type":"codeVoice"},{"type":"text","text":", "},{"code":"DocC","type":"codeVoice"},{"type":"text","text":", "},{"code":"StoreKit 2","type":"codeVoice"},{"text":", and more.","type":"text"}],"kind":"article"},"WWDC21-Icon.png":{"identifier":"WWDC21-Icon.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC21-Icon.png"}],"alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110370-Debug-Swift-debugging-with-LLDB":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22-110370-debug-swift-debugging-with-lldb","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110370-Debug-Swift-debugging-with-LLDB","abstract":[{"type":"text","text":"Learn how you can set up complex Swift projects for debugging. We’ll take you on a deep dive into the internals of LLDB and debug info. We’ll also share best practices for complex scenarios such as debugging code built on build servers or code from custom build systems."}],"title":"Debug Swift debugging with LLDB","role":"sampleCode","type":"topic"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link"}}}