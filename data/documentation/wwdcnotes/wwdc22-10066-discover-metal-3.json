{"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"text":"üò± ‚ÄúNo Overview Available!‚Äù","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Be the hero to change that by watching the video and providing notes! It‚Äôs super easy:"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true}],"type":"paragraph"},{"level":2,"anchor":"Related-Sessions","text":"Related Sessions","type":"heading"},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10063-Accelerate-machine-learning-with-Metal","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10101-Go-bindless-with-Metal-3","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10102-Target-and-optimize-GPU-binaries-with-Metal-3","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10103-Boost-performance-with-MetalFX-Upscaling","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10104-Load-resources-faster-with-Metal-3","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10105-Maximize-your-Metal-ray-tracing-performance","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10159-Scale-compute-workloads-across-Apple-GPUs","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10160-Program-Metal-in-C++-with-metalcpp","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10162-Transform-your-geometry-with-Metal-mesh-shaders"],"style":"list"},{"type":"small","inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22"]]},"metadata":{"title":"Discover Metal 3","role":"sampleCode","roleHeading":"WWDC22","modules":[{"name":"WWDC Notes"}]},"sampleCodeDownload":{"action":{"identifier":"https:\/\/developer.apple.com\/wwdc22\/10066","overridingTitle":"Watch Video (15 min)","type":"reference","isActive":true},"kind":"sampleDownload"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10066-Discover-Metal-3"},"kind":"article","variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc22-10066-discover-metal-3"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Harness the full potential of Apple silicon in your app with Metal 3. We‚Äôll introduce you to the latest features, improvements, and tooling. We‚Äôll also explore how you can use advanced features and compiler tools to load resources faster, compile shader binaries at build time, process complex geometry with mesh shaders, render high-resolution graphics in less time, train machine learning networks faster, and more."}],"references":{"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"text":"Learn More‚Ä¶","type":"text"}],"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","title":"Learn More‚Ä¶"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10162-Transform-your-geometry-with-Metal-mesh-shaders":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10162-Transform-your-geometry-with-Metal-mesh-shaders","abstract":[{"text":"Meet Metal mesh shaders ‚Äî a modern and flexible pipeline in Metal for GPU-driven geometry creation and processing. We‚Äôll explore how this API can improve and add flexibility to your render pipeline, and share some of the opportunities that GPU-driven work can create. Discover how you can create procedural geometry ‚Äî like hair rendering ‚Äî on the GPU using mesh shaders, and build single render passes without additional compute passes or intermediate buffers. We‚Äôll also show you how to improve scene processing and rendering through GPU-driven meshlet culling.","type":"text"}],"role":"sampleCode","title":"Transform your geometry with Metal mesh shaders","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-10162-transform-your-geometry-with-metal-mesh-shaders"},"https://developer.apple.com/wwdc22/10066":{"url":"https:\/\/developer.apple.com\/wwdc22\/10066","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc22\/10066","type":"download"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10103-Boost-performance-with-MetalFX-Upscaling":{"kind":"article","type":"topic","title":"Boost performance with MetalFX Upscaling","url":"\/documentation\/wwdcnotes\/wwdc22-10103-boost-performance-with-metalfx-upscaling","abstract":[{"text":"Discover MetalFX, a new API that provides platform optimized graphics effects for Metal applications. With MetalFX Upscaling, your application can now render frames at a lower resolution, reducing rendering time, without compromising rendering quality. We‚Äôll also show you how and when to use its two effects: spatial upscaling, which delivers substantial performance gains, and temporal AA and upscaling, which delivers the highest quality rendering.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10103-Boost-performance-with-MetalFX-Upscaling","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10102-Target-and-optimize-GPU-binaries-with-Metal-3":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10102-Target-and-optimize-GPU-binaries-with-Metal-3","type":"topic","title":"Target and optimize GPU binaries with Metal 3","kind":"article","abstract":[{"text":"Discover how you can reduce in-app stutters, first launch times, and new level load times when you generate your GPU binaries entirely at project build time with offline compilation. We‚Äôll also show you how to improve total compile time and binary size for larger GPU programs using the ‚ÄúOptimize for size‚Äù compiler option.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc22-10102-target-and-optimize-gpu-binaries-with-metal-3","role":"sampleCode"},"WWDC22.jpeg":{"alt":null,"identifier":"WWDC22.jpeg","type":"image","variants":[{"url":"\/images\/WWDC22.jpeg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10063-Accelerate-machine-learning-with-Metal":{"kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10063-accelerate-machine-learning-with-metal","type":"topic","abstract":[{"type":"text","text":"Discover how you can use Metal to accelerate your PyTorch model training on macOS. We‚Äôll take you through updates to TensorFlow training support, explore the latest features and operations of MPS Graph, and share best practices to help you achieve great performance for all your machine learning needs."}],"title":"Accelerate machine learning with Metal","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10063-Accelerate-machine-learning-with-Metal"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10104-Load-resources-faster-with-Metal-3":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10104-Load-resources-faster-with-Metal-3","url":"\/documentation\/wwdcnotes\/wwdc22-10104-load-resources-faster-with-metal-3","role":"sampleCode","title":"Load resources faster with Metal 3","kind":"article","type":"topic","abstract":[{"type":"text","text":"Discover how you can use fast resource streaming in Metal 3 to quickly load assets. We‚Äôll show you how to use an asynchronous set-it-and-forget-it workflow in your app to take advantage of the speed of SSD storage and the throughput of Apple silicon‚Äôs unified memory architecture. We‚Äôll also explore how you can create separate queues that run parallel to ‚Äî and synchronize with ‚Äî your GPU render and compute work. Finally, we‚Äôll share how to designate assets like audio with high-priority queues to help you load data with lower latency."}]},"doc://WWDCNotes/documentation/WWDCNotes":{"images":[{"type":"icon","identifier":"WWDCNotes.png"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","title":"WWDC Notes","kind":"symbol","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"url":"\/documentation\/wwdcnotes","role":"collection"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10105-Maximize-your-Metal-ray-tracing-performance":{"url":"\/documentation\/wwdcnotes\/wwdc22-10105-maximize-your-metal-ray-tracing-performance","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10105-Maximize-your-Metal-ray-tracing-performance","role":"sampleCode","title":"Maximize your Metal ray tracing performance","abstract":[{"text":"Learn how to simplify your ray tracing code and increase performance with the power of Metal 3. We‚Äôll explore the GPU debugging and profiling tools that can help you tune your ray tracing applications. We‚Äôll also show you how you can speed up intersection tests and reduce shader code memory accesses and indirections with per-primitive data in an acceleration structure. And we‚Äôll help you implement faster acceleration structure builds and refits to reduce load times and per-frame overhead.","type":"text"}],"type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10160-Program-Metal-in-C++-with-metalcpp":{"url":"\/documentation\/wwdcnotes\/wwdc22-10160-program-metal-in-c++-with-metalcpp","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10160-Program-Metal-in-C++-with-metalcpp","role":"sampleCode","title":"Program Metal in C++ with metal-cpp","abstract":[{"text":"Your C++ games and apps can now tap into the power of Metal. We‚Äôll show you how metal-cpp helps you bridge your C++ code to Metal, explore how each manages object lifecycles, and demonstrate utilities that can help these language cooperate in your app. We‚Äôll also share best practices for designing app architecture to elegantly integrate Objective-C and C++ together.","type":"text"}],"type":"topic"},"WWDCNotes.png":{"alt":null,"identifier":"WWDCNotes.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10159-Scale-compute-workloads-across-Apple-GPUs":{"abstract":[{"text":"Discover how you can create compute workloads that scale efficiently across Apple GPUs. Learn how to saturate the GPU by improving your work distribution, minimize GPU timeline gaps with effective pipelining and concurrent dispatches, and use atomic operations effectively. We‚Äôll also take you through the latest counters and tools in Xcode and Instruments that can help you optimize spatial and temporal memory access patterns.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10159-Scale-compute-workloads-across-Apple-GPUs","kind":"article","title":"Scale compute workloads across Apple GPUs","url":"\/documentation\/wwdcnotes\/wwdc22-10159-scale-compute-workloads-across-apple-gpus","role":"sampleCode","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10101-Go-bindless-with-Metal-3":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10101-Go-bindless-with-Metal-3","url":"\/documentation\/wwdcnotes\/wwdc22-10101-go-bindless-with-metal-3","abstract":[{"type":"text","text":"Learn how you can unleash powerful rendering techniques like ray tracing when you go bindless with Metal 3. We‚Äôll show you how to make your app‚Äôs bindless journey a joy by simplifying argument buffers, allocating acceleration structures from heaps, and benefitting from the improvements to the Metal‚Äôs validation layer and Debugger Tools. We‚Äôll also explore how you can command more CPU and GPU performance with long-term resource structures."}],"title":"Go bindless with Metal 3","type":"topic","role":"sampleCode","kind":"article"},"WWDC22-Icon.png":{"alt":null,"identifier":"WWDC22-Icon.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC22-Icon.png"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22":{"kind":"article","role":"collectionGroup","url":"\/documentation\/wwdcnotes\/wwdc22","type":"topic","abstract":[{"type":"text","text":"Xcode 14, Swift 5.7, iOS 16, macOS 13 (Ventura), tvOS 16, watchOS 9."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"code":"WeatherKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"ScreenCaptureKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Swift Regex","type":"codeVoice"},{"text":", and more.","type":"text"}],"images":[{"identifier":"WWDC22-Icon.png","type":"icon"},{"identifier":"WWDC22.jpeg","type":"card"}],"title":"WWDC22","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22"}}}