{"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"article","sections":[],"abstract":[{"type":"text","text":"Learn how to create great single and multi-window apps in visionOS, macOS, and iPadOS. Discover tools that let you programmatically open and close windows, adjust position and size, and even replace one window with another. We‚Äôll also explore design principles for windows that help people use your app within their workflows."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc24-10149-work-with-windows-in-swiftui"]}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24"]]},"sampleCodeDownload":{"kind":"sampleDownload","action":{"identifier":"https:\/\/developer.apple.com\/wwdc24\/10149","isActive":true,"type":"reference","overridingTitle":"Watch Video"}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10149-Work-with-windows-in-SwiftUI"},"metadata":{"title":"Work with windows in SwiftUI","roleHeading":"WWDC24","modules":[{"name":"WWDC Notes"}],"role":"sampleCode"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Key-takeaways","type":"heading","level":2,"text":"Key takeaways"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"ü™ü Windows are containers for app contents, allowing users to see different pieces of data at the same time, or have multiple instances of the same interface.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"‚ú® SwiftUI provides a few environment actions to work with windows."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"‚ÜîÔ∏è You can set a default position and size for windows, but users can move or resize windows (within your frame constraints)."}],"type":"paragraph"}]}]},{"anchor":"Presenters","type":"heading","level":2,"text":"Presenters"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Andrew Sawyer, SwiftUI Engineer"}]},{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Windows are a container for the contents of your app.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Users can reposition, resize, or close windows using consistent controls.","type":"text"}],"type":"paragraph"}]}]},{"anchor":"Fundamentals","type":"heading","level":2,"text":"Fundamentals"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Windows allow users to use different parts of your app at the same time, or have multiple instances of the same interface."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Windows are defined using "},{"type":"codeVoice","code":"WindowGroup"},{"type":"text","text":" in SwiftUI. "},{"type":"codeVoice","code":"WindowGroup"},{"type":"text","text":"s may have multiple styles, such as "},{"type":"codeVoice","code":".windowStyle(.volumetric)"},{"type":"text","text":" for visionOS."}]}]},{"content":[{"inlineContent":[{"code":"WindowGroup","type":"codeVoice"},{"text":"s should have an ","type":"text"},{"code":"id","type":"codeVoice"},{"text":", which is used to open an instance of that window.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Environment actions, which are available anywhere in the SwiftUI view hierarchy, can be used to work with windows.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"openWindow"},{"type":"text","text":" is used to open windows by ID."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"dismissWindow","type":"codeVoice"},{"text":" is used to close windows.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"pushWindow","type":"codeVoice"},{"text":" can be used to open a new window and hide the originating window. When you close the new window, the original window will reappear.","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The title bar and close button are always visible by default, but you can use the ","type":"text"},{"type":"codeVoice","code":".persistentSystemOverlays(.hidden)"},{"text":" modifier to hide them.","type":"text"}]}]}]},{"anchor":"Placement","type":"heading","level":2,"text":"Placement"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Default window position varies by platform, but it can be customized with the "},{"code":"defaultWindowPlacement","type":"codeVoice"},{"type":"text","text":" modifier."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"You can return different placements depending on the platform by using the "},{"type":"codeVoice","code":"#if os(‚Ä¶)"},{"type":"text","text":" directive."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"defaultWindowPlacement"},{"type":"text","text":" takes a block that receives a "},{"type":"codeVoice","code":"context"},{"type":"text","text":" parameter, which includes metrics for the "},{"type":"codeVoice","code":"defaultDisplay"},{"type":"text","text":" on macOS."}],"type":"paragraph"}]}]},{"anchor":"Sizing","type":"heading","level":2,"text":"Sizing"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Window sizing, by default, is automatically determined by the system."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"You can set other sizing as part of the "},{"type":"codeVoice","code":"WindowPlacement"},{"type":"text","text":" return value of "},{"type":"codeVoice","code":"defaultWindowPlacement"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"WindowLayoutRoot","type":"codeVoice"},{"text":", one of the parameters to the ","type":"text"},{"code":"defaultWindowPlacement","type":"codeVoice"},{"text":" block, includes a ","type":"text"},{"code":"sizeThatFits(‚Ä¶)","type":"codeVoice"},{"text":" method that allows you to get a size for some given window content.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"You can also use the "},{"type":"codeVoice","code":"defaultSize"},{"type":"text","text":" modifier on the "},{"type":"codeVoice","code":"WindowGroup"},{"type":"text","text":" directly."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Default sizes are ignored if there are other size constraints, like a size provided by the window placement API or when windows are restored.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"A "},{"inlineContent":[{"text":"pushed","type":"text"}],"type":"emphasis"},{"type":"text","text":" window, by default, has the same size as its originating window."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Use the "},{"code":"windowResizability(.contentSize)","type":"codeVoice"},{"type":"text","text":" modifier to constrain window resizability to the allowable range of sizes for the window‚Äôs content."}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"If the window content has a fixed size, rather than a range of min and max sizes, then the window will not be resizable.","type":"text"}]}]}],"type":"unorderedList"}]}]},{"anchor":"Written-By","type":"heading","level":2,"text":"Written By"},{"type":"row","numberOfColumns":5,"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"feifanzhou"}]}]},{"size":4,"content":[{"anchor":"Feifan-Zhou","level":3,"type":"heading","text":"Feifan Zhou"},{"inlineContent":[{"type":"reference","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/feifanzhou","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"isActive":true,"overridingTitle":"Contributed Notes"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/feifanzhou","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/x.com\/FeifanZ","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/feifan.blog","isActive":true}],"type":"paragraph"}]}]},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}]},{"anchor":"Related-Sessions","type":"heading","level":2,"text":"Related Sessions"},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10148-Tailor-macOS-windows-with-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10110-Elevate-your-windowed-app-for-spatial-computing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10076-Design-for-spatial-user-interfaces"]},{"type":"small","inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}]},{"type":"small","inlineContent":[{"text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}]}],"references":{"https://feifan.blog":{"type":"link","titleInlineContent":[{"text":"Blog","type":"text"}],"identifier":"https:\/\/feifan.blog","title":"Blog","url":"https:\/\/feifan.blog"},"WWDC24-Icon.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC24-Icon.png"}],"type":"image","identifier":"WWDC24-Icon.png","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10148-Tailor-macOS-windows-with-SwiftUI":{"url":"\/documentation\/wwdcnotes\/wwdc24-10148-tailor-macos-windows-with-swiftui","role":"sampleCode","title":"Tailor macOS windows with SwiftUI","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10148-Tailor-macOS-windows-with-SwiftUI","type":"topic","abstract":[{"text":"Make your windows feel tailor-made for macOS. Fine-tune your app‚Äôs windows for focused purposes, ease of use, and to express functionality. Use SwiftUI to style window toolbars and backgrounds. Arrange your windows with precision, and make smart decisions about restoration and minimization.","type":"text"}],"kind":"article"},"WWDC24.jpeg":{"alt":null,"type":"image","identifier":"WWDC24.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC24.jpeg"}]},"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"title":"WWDC Notes","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"url":"\/documentation\/wwdcnotes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","kind":"symbol","role":"collection"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10076-Design-for-spatial-user-interfaces":{"title":"Design for spatial user interfaces","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10076-Design-for-spatial-user-interfaces","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23-10076-design-for-spatial-user-interfaces","role":"sampleCode","kind":"article","abstract":[{"type":"text","text":"Learn how to design great interfaces for spatial computing apps. We‚Äôll share how your existing screen-based knowledge easily translates into creating great experiences for visionOS. Explore guidelines for UI components, materials, and typography and find out how you can design experiences that are familiar, legible, and easy to use."}]},"https://developer.apple.com/wwdc24/10149":{"type":"download","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc24\/10149","url":"https:\/\/developer.apple.com\/wwdc24\/10149"},"WWDCNotes.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDCNotes.png"}],"type":"image","identifier":"WWDCNotes.png","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/feifanzhou":{"url":"\/documentation\/wwdcnotes\/feifanzhou","title":"Feifan Zhou (1 note)","type":"topic","images":[{"type":"card","identifier":"feifanzhou.jpeg"},{"type":"icon","identifier":"feifanzhou.jpeg"}],"kind":"article","abstract":[{"type":"text","text":"Building Tanagram, a tool for searching through codebases like a relational\/graph database."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/feifanzhou","role":"sampleCode"},"https://github.com/feifanzhou":{"title":"GitHub","url":"https:\/\/github.com\/feifanzhou","type":"link","identifier":"https:\/\/github.com\/feifanzhou","titleInlineContent":[{"text":"GitHub","type":"text"}]},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"title":"Contributions are welcome!","type":"link","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"feifanzhou.jpeg":{"alt":null,"type":"image","identifier":"feifanzhou.jpeg","variants":[{"url":"\/images\/WWDCNotes\/feifanzhou.jpeg","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24":{"type":"topic","abstract":[{"text":"Xcode 16, Swift 6, iOS 18, macOS 15 (Sequoia), tvOS 18, visionOS 2, watchOS 11.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: Swift Testing, ","type":"text"},{"code":"FinanceKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"TabletopKit","type":"codeVoice"},{"type":"text","text":", and more."}],"title":"WWDC24","images":[{"type":"icon","identifier":"WWDC24-Icon.png"},{"type":"card","identifier":"WWDC24.jpeg"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24","url":"\/documentation\/wwdcnotes\/wwdc24","role":"collectionGroup"},"feifanzhou":{"variants":[{"url":"\/images\/WWDCNotes\/feifanzhou.jpeg","traits":["1x","light"]}],"type":"image","identifier":"feifanzhou","alt":"Profile image of Feifan Zhou"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10110-Elevate-your-windowed-app-for-spatial-computing":{"role":"sampleCode","type":"topic","abstract":[{"type":"text","text":"Discover how you can bring your multiplatform SwiftUI app to visionOS and the Shared Space. We‚Äôll show you how to add the visionOS destination to an existing app and view your app in the Simulator. Explore how your SwiftUI code automatically adapts to support the unique context and presentation of the visionOS platform. Learn how you can update custom views, improve your app‚Äôs UI, and add features and controls specific to this platform."}],"title":"Elevate your windowed app for spatial computing","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10110-Elevate-your-windowed-app-for-spatial-computing","url":"\/documentation\/wwdcnotes\/wwdc23-10110-elevate-your-windowed-app-for-spatial-computing","kind":"article"},"https://x.com/FeifanZ":{"titleInlineContent":[{"type":"text","text":"X\/Twitter"}],"title":"X\/Twitter","type":"link","identifier":"https:\/\/x.com\/FeifanZ","url":"https:\/\/x.com\/FeifanZ"}}}