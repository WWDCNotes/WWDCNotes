{"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-220-Advances-in-UI-Data-Sources","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Use UI Data Sources to simplify updating your table view and collection view items using automatic diffing. High fidelity, quality animations of set changes are automatic and require no extra code! This improved data source mechanism completely avoids synchronization bugs, exceptions, and crashes! Learn about this simplified data model that uses on identifiers and snapshots so that you can focus on your app‚Äôs dynamic data and content instead of the minutia of UI data synchronization."}],"sections":[],"metadata":{"modules":[{"name":"WWDC Notes"}],"title":"Advances in UI Data Sources","roleHeading":"WWDC19","role":"sampleCode"},"sampleCodeDownload":{"kind":"sampleDownload","action":{"isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc19\/220","overridingTitle":"Watch Video (36 min)","type":"reference"}},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc19-220-advances-in-ui-data-sources"]}],"kind":"article","primaryContentSections":[{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"All our collection views (both "},{"code":"UITableView","type":"codeVoice"},{"type":"text","text":" and "},{"code":"UICollectionView","type":"codeVoice"},{"text":") are getting an overdue refresh this year.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We no longer need to use "},{"code":"IGListKit","type":"codeVoice"},{"type":"text","text":" and the likes, we no longer need to call "},{"code":".reloadData()","type":"codeVoice"},{"type":"text","text":" or "},{"code":"performBatchUpdates()","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Introducing:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uicollectionviewdiffabledatasource","type":"reference","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uitableviewdiffabledatasource"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In short, what we must do now in our collection views is inject one of the two data sources above."}]},{"type":"paragraph","inlineContent":[{"text":"These new data source types will manage a snapshot of our data state:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"You can think of a snapshot as the collection view current state (you can query them the number of sections and rows per section and more)."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The snapshot has elements, which can be our models instances, or just as an identifier of a model, that helps us identify unequivocally a data element. These elements must conform to Hashable.","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Three steps:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"create a snapshot (you can start from the current snapshot, or create a new one)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"configure it"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"apply to our data source","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"All is awesome for data sources now, what about our collection views delegates?","type":"text"},{"text":" ","type":"text"},{"text":"No api changes, for them. However, the data source exposes a way to go from an ","type":"text"},{"code":"indexPath","type":"codeVoice"},{"text":" to a ","type":"text"},{"code":"identifier","type":"codeVoice"},{"text":":","type":"text"}]},{"code":["func collectionView(","  _ collectionView: UICollectionView,","  didSelectItemAt indexPath: IndexPath",") { ","  if let identifier = dataSource.itemIdentifier(for: indexPath) { ","    \/\/ Do something","  }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Therefore we get all the advantages of our new datasource in the delegate as well üëçüèª"},{"type":"text","text":" "},{"type":"text","text":"Note: this indexPath -> identifier\/object is done in constant time."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can call "},{"code":"apply()","type":"codeVoice"},{"type":"text","text":" in a background thread."}]},{"style":"note","type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"‚ö†Ô∏è We must always call "},{"type":"codeVoice","code":"apply()"},{"type":"text","text":" from the background queue or the  main queue. No mix!"}]}]},{"type":"paragraph","inlineContent":[{"text":"Here‚Äôs an example of how to inject a data source:","type":"text"}]},{"code":["func configureDataSource() { ","  dataSource = UICollectionViewDiffableDataSource ","    <Section, MountainsController.Mountain>(collectionView: mountainsCollectionView) { ","      (collectionView: UICollectionView, indexPath: IndexPath, mountain: MountainsController. Mountain) -> UICollectionViewCell? in ","    guard let mountainCell = collectionView.dequeueReusableCell(","      withReuseIdentifier: LabelCell.reuseIdentifier, for: indexPath) as? LabelCell else {","        fatalError(\"Cannot create new cell\")","    } ","    mountainCell.label.text = mountain.name","    return mountainCell","  }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note how we also pass the method to set and return a new cell when injecting it, most importantly, note how that method also passes our associated element at that index. We no longer need to do lookups etc."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Lastly, both the new data source types are generic (no objc), therefore we will need two (hashable) types, one for sections (an enum will suffice) and one for the elements (duh)."}]},{"anchor":"Written-By","type":"heading","text":"Written By","level":2},{"type":"row","columns":[{"content":[{"inlineContent":[{"type":"image","identifier":"zntfdr"}],"type":"paragraph"}],"size":1},{"content":[{"level":3,"text":"Federico Zanetello","type":"heading","anchor":"Federico-Zanetello"},{"inlineContent":[{"overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/zntfdr","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/zntfdr.dev","isActive":true,"type":"reference"}],"type":"paragraph"}],"size":4}],"numberOfColumns":5},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"isActive":true,"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}]},{"anchor":"Related-Sessions","type":"heading","text":"Related Sessions","level":2},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10045-Advances-in-diffable-data-sources","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10097-Advances-in-UICollectionView","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10105-Build-for-iPad","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-210-Whats-New-in-AppKit-for-macOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-215-Advances-in-Collection-View-Layout","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-230-Making-Apps-with-Core-Data"]},{"type":"small","inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright ¬© 2012 ‚Äì 2025 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}]}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19"]]},"references":{"zntfdr":{"alt":"Profile image of Federico Zanetello","variants":[{"url":"\/images\/WWDCNotes\/zntfdr.jpeg","traits":["1x","light"]}],"identifier":"zntfdr","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-210-Whats-New-in-AppKit-for-macOS":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-210-Whats-New-in-AppKit-for-macOS","abstract":[{"text":"Learn about the latest APIs in AppKit and associated frameworks. Get an overview of the enhancements coming in macOS Catalina to help you save time, take advantage of the latest hardware, and add polish to your application.","type":"text"}],"title":"What‚Äôs New in AppKit for macOS","url":"\/documentation\/wwdcnotes\/wwdc19-210-whats-new-in-appkit-for-macos","type":"topic","role":"sampleCode"},"https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource":{"type":"link","titleInlineContent":[{"type":"codeVoice","code":"UITableViewDiffableDataSource"}],"url":"https:\/\/developer.apple.com\/documentation\/uikit\/uitableviewdiffabledatasource","title":"UITableViewDiffableDataSource","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uitableviewdiffabledatasource"},"WWDC19.jpeg":{"type":"image","alt":null,"identifier":"WWDC19.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC19.jpeg"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10045-Advances-in-diffable-data-sources":{"kind":"article","title":"Advances in diffable data sources","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10045-Advances-in-diffable-data-sources","role":"sampleCode","abstract":[{"type":"text","text":"Diffable data sources dramatically simplify the work involved in managing and updating collection and table views to create dynamic and responsive experiences in your apps. Discover how you can use section snapshots to efficiently build lists and outline collection views for iOS and iPadOS and provide support for implementing the sidebar in an iPad app. We‚Äôll also show you how to simplify cell reordering using UICollectionViewDiffableDataSource to help you streamline your code and build app interfaces more quickly."}],"url":"\/documentation\/wwdcnotes\/wwdc20-10045-advances-in-diffable-data-sources"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"images":[{"identifier":"zntfdr.jpeg","type":"card"},{"identifier":"zntfdr.jpeg","type":"icon"}],"title":"Federico Zanetello (332 notes)","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/zntfdr","type":"topic"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"type":"link","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"title":"WWDC Notes","role":"collection","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"url":"\/documentation\/wwdcnotes"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-230-Making-Apps-with-Core-Data":{"kind":"article","title":"Making Apps with Core Data","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-230-Making-Apps-with-Core-Data","url":"\/documentation\/wwdcnotes\/wwdc19-230-making-apps-with-core-data","role":"sampleCode","type":"topic","abstract":[{"type":"text","text":"Core Data helps manage the flow of data throughout your app. Hear about new features in Core Data that make your code simpler and more powerful, including derived attributes, history tracking, change notifications and batch operations. Learn more about using these facilities and the new diffing APIs in UIKit and Foundation to make your apps run more efficiently."}]},"https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource":{"type":"link","titleInlineContent":[{"type":"codeVoice","code":"UICollectionViewDiffableDataSource"}],"url":"https:\/\/developer.apple.com\/documentation\/uikit\/uicollectionviewdiffabledatasource","title":"UICollectionViewDiffableDataSource","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/uicollectionviewdiffabledatasource"},"https://developer.apple.com/wwdc19/220":{"type":"download","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc19\/220","url":"https:\/\/developer.apple.com\/wwdc19\/220"},"WWDCNotes.png":{"alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"identifier":"WWDCNotes.png","type":"image"},"WWDC19-Icon.png":{"type":"image","alt":null,"identifier":"WWDC19-Icon.png","variants":[{"url":"\/images\/WWDCNotes\/WWDC19-Icon.png","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-215-Advances-in-Collection-View-Layout":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc19-215-advances-in-collection-view-layout","abstract":[{"text":"Collection View Layouts make it easy to build rich interactive collections. Learn how to make dynamic and responsive layouts that range in complexity from basic lists to an advanced, multi-dimensional browsing experience.","type":"text"}],"title":"Advances in Collection View Layout","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-215-Advances-in-Collection-View-Layout"},"zntfdr.jpeg":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/zntfdr.jpeg"}],"identifier":"zntfdr.jpeg"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10105-Build-for-iPad":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10105-Build-for-iPad","title":"Build for iPad","abstract":[{"type":"text","text":"Learn how to improve iPad apps to leverage the increased screen size and additional features of iPadOS, and help people accomplish more with their devices. Discover how you can build detailed multi-column layouts and integrate lists into your app with little adjustment to your existing code. We‚Äôll also explore reducing modality within your views to make it easier to navigate your interface with fewer taps and touches."}],"kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc20-10105-build-for-ipad","type":"topic"},"https://github.com/zntfdr":{"identifier":"https:\/\/github.com\/zntfdr","title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}],"type":"link","url":"https:\/\/github.com\/zntfdr"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19":{"images":[{"type":"icon","identifier":"WWDC19-Icon.png"},{"type":"card","identifier":"WWDC19.jpeg"}],"title":"WWDC19","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19","kind":"article","abstract":[{"text":"Xcode 11, Swift 5.1, iOS 13, macOS 10.15 (Catalina), tvOS 13, watchOS 6.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"type":"codeVoice","code":"Combine"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Core Haptics"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Create ML"},{"text":", and more.","type":"text"}],"role":"collectionGroup","url":"\/documentation\/wwdcnotes\/wwdc19","type":"topic"},"https://zntfdr.dev":{"type":"link","identifier":"https:\/\/zntfdr.dev","url":"https:\/\/zntfdr.dev","title":"Blog","titleInlineContent":[{"type":"text","text":"Blog"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10097-Advances-in-UICollectionView":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10097-Advances-in-UICollectionView","title":"Advances in UICollectionView","abstract":[{"text":"Learn about new features of UICollectionView that make it easier to use and unlock powerful new functionality. We‚Äôll show you how to use section snapshots with your diffable data source to create outlines that can expand and collapse, and introduce you to building lists with compositional layout to create UITableView-like interfaces with a collection view. And discover modern techniques for dequeuing cells and configuring their content and styling.","type":"text"}],"kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc20-10097-advances-in-uicollectionview","type":"topic"}}}