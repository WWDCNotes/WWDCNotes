{"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc19-224-modernizing-your-ui-for-ios-13"]}],"sampleCodeDownload":{"action":{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc19\/224","overridingTitle":"Watch Video (50 min)"},"kind":"sampleDownload"},"kind":"article","sections":[],"abstract":[{"type":"text","text":"iOS 13 combines powerful new multitasking and productivity technologies with a refreshed look and feel for all applications. Familiarize yourself with new requirements to keep your app ready for upcoming versions of iOS. Discover improvements to search fields and a totally new way to present UI. Learn how to adopt new gestures around selection, access peek and pop on all hardware, and how to renew your app’s look for iOS 13."}],"primaryContentSections":[{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Deprecation of LaunchImages","type":"text"}]},{"type":"text","text":" use Launch Storyboards instead"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"New App Store Requirement"}],"type":"strong"},{"type":"text","text":" Any app linking to iOS 13 must ensure correct layout at any size"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Split Screen Multitasking"}]},{"type":"text","text":" is strongly recommended for iPad Apps"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Apple is going to expect that "},{"inlineContent":[{"text":"most","type":"text"}],"type":"strong"},{"type":"text","text":" of the applications, "},{"inlineContent":[{"type":"text","text":"unless"}],"type":"strong"},{"type":"text","text":" you want to provide a truly immersive experience, are going to support split screen multitasking"}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"UINavigationBarAppearance","type":"text"}],"type":"strong"},{"text":" customize ","type":"text"},{"code":".standardAppearance","type":"codeVoice"},{"text":" (iPhone portrait), ","type":"text"},{"code":".compactAppearance","type":"codeVoice"},{"text":" (iPhone landscape), ","type":"text"},{"code":".scrollEdgeAppearance","type":"codeVoice"},{"text":" (if attached to scrollView and scrolled to top, bar uses this one)","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"settable per ","type":"text"},{"type":"codeVoice","code":"navigationItem"},{"text":" so customization per view controller possible (including color, transparency, …)","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"code":["let appearance = navigationBar.standardAppearance.copy()","\/* configuration *\/","navigationItem.standardAppearance = appearance"],"type":"codeListing","syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"UIBarButtonAppearance, UIToolBarAppearance"}]}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"UITabBarAppearance","type":"text"}],"type":"strong"},{"type":"text","text":" customize "},{"code":".stackedLayoutAppearance","type":"codeVoice"},{"type":"text","text":" (text below icon), "},{"code":".inlineLayoutAppearance","type":"codeVoice"},{"type":"text","text":" (text right to icon; iPads), "},{"code":".compactInlineLayoutAppearance","type":"codeVoice"},{"type":"text","text":" (text right to icon; landscape; smaller phones)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"UIModalPresentationStyle.[automatic | formSheet | pageSheet]"}],"type":"strong"},{"type":"text","text":" are able to stack behind each other"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"code":".automatic","type":"codeVoice"},{"type":"text","text":" is the new default; gets resolved at presentation time"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"get the old behavior by "},{"type":"codeVoice","code":"viewController.modalPresentationStyle = .fullScreen"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"sheets get gesture recognizer added automatically to support "},{"type":"codeVoice","code":"pull-to-dismiss"},{"type":"text","text":" - opt-out possible (see link in description for example project)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Appearance Callbacks Not Called for .PageSheet and .FormSheet"}]},{"text":" on presentingViewController:","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"viewWillAppear"},{"text":", ","type":"text"},{"type":"codeVoice","code":"viewDisappear"},{"text":", ","type":"text"},{"type":"codeVoice","code":"viewWillDisappear"},{"text":", ","type":"text"},{"type":"codeVoice","code":"viewDidDisappear"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Search UI","type":"text"}],"type":"strong"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"offers possibility to hide cancel button and scope control","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"expose "},{"type":"codeVoice","code":"UISearchTextField"},{"type":"text","text":" on "},{"type":"codeVoice","code":"UISearchBar"},{"type":"text","text":" so customization becomes possible"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"Search Tokens"},{"type":"text","text":" that represent complex searches"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"are copy&pastable and support drag&drop"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"can be created by user\/developer from selected text in UISearchTextField"}]}]}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"UITextInteraction","type":"text"}],"type":"strong"},{"text":" the new & easy way to control selection UI","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Multi Selection in Table-\/Collection Views"}],"type":"strong"},{"text":" simply by Two-Finger-Swipe","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"opt-in by implementing only 1 new delegate method for Tables and Collections"}]}]}]}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"New Editing Gestures","type":"text"}],"type":"strong"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":"pinch 3 fingers in"},{"type":"text","text":": copy selected text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"pinch 3 fingers out","type":"codeVoice"},{"type":"text","text":" paste copied text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"3 finger tap || 3 finger swipe back","type":"codeVoice"},{"type":"text","text":" undo"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"3 finger swipe forward"},{"text":" redo","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"opt out by ","type":"text"},{"code":"responder.editingInteractionConfiguration = .none","type":"codeVoice"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"UIContextMenuInteraction"}]},{"text":" context menus with ","type":"text"},{"code":"rich preview","type":"codeVoice"},{"text":", ","type":"text"},{"code":"nested menus","type":"codeVoice"},{"text":", ","type":"text"},{"code":"in-line sections","type":"codeVoice"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"transform to context menus on macOS","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"UIMenu","type":"codeVoice"},{"text":" & ","type":"text"},{"code":"UIInteraction","type":"codeVoice"},{"text":" provide hierarchical menu construction system","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"adopt by "},{"type":"codeVoice","code":"view.addInteraction(UIContextMenuInteraction(delegate: self))"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"customize how  view and menu will be presented: "},{"code":"UITargetedPreview & UITargetedDragPreview","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"convenience delegate methods for context menus on UITableView & UICollectionView"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UIViewControllerPreviewing"},{"text":" (peek & pop) is deprecated for sake of this new API","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"replace long-press driven behavior\/menus by this new API"}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"text":"Written By","anchor":"Written-By","type":"heading","level":2},{"columns":[{"size":1,"content":[{"inlineContent":[{"type":"image","identifier":"Blackjacx"}],"type":"paragraph"}]},{"size":4,"content":[{"type":"heading","anchor":"Stefan-Herold","text":"Stefan Herold","level":3},{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Blackjacx","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"type":"reference","overridingTitle":"Contributed Notes"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/Blackjacx","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/x.com\/blackjacxxx","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/stherold.com","type":"reference"}]}]}],"type":"row","numberOfColumns":5},{"type":"thematicBreak"},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}],"type":"paragraph"},{"text":"Related Sessions","anchor":"Related-Sessions","type":"heading","level":2},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10071-Adopt-desktopclass-editing-interactions","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10063-Customize-and-resize-sheets-in-UIKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10191-Deliver-a-great-playback-experience-on-tvOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10109-Support-hardware-keyboards-in-your-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-214-Implementing-Dark-Mode-on-iOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-808-Whats-New-in-iOS-Design"],"style":"list"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}],"kind":"content"}],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-224-Modernizing-Your-UI-for-iOS-13","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"title":"Modernizing Your UI for iOS 13","roleHeading":"WWDC19","modules":[{"name":"WWDC Notes"}],"role":"sampleCode"},"references":{"https://stherold.com":{"titleInlineContent":[{"text":"Blog","type":"text"}],"type":"link","identifier":"https:\/\/stherold.com","url":"https:\/\/stherold.com","title":"Blog"},"https://developer.apple.com/wwdc19/224":{"url":"https:\/\/developer.apple.com\/wwdc19\/224","checksum":null,"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc19\/224"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-214-Implementing-Dark-Mode-on-iOS":{"title":"Implementing Dark Mode on iOS","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-214-Implementing-Dark-Mode-on-iOS","abstract":[{"text":"Hear from the UIKit engineering team about the principles and concepts that anchor Dark Mode on iOS. Get introduced to the principles of enhancing your app with this new appearance using dynamic colors and images, and add an experience that people are sure to love.","type":"text"}],"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc19-214-implementing-dark-mode-on-ios","kind":"article"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"type":"image"},"WWDC19-Icon.png":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC19-Icon.png"}],"alt":null,"type":"image","identifier":"WWDC19-Icon.png"},"https://x.com/blackjacxxx":{"titleInlineContent":[{"text":"X\/Twitter","type":"text"}],"type":"link","identifier":"https:\/\/x.com\/blackjacxxx","url":"https:\/\/x.com\/blackjacxxx","title":"X\/Twitter"},"doc://WWDCNotes/documentation/WWDCNotes/Blackjacx":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Blackjacx","images":[{"type":"card","identifier":"Blackjacx.jpeg"},{"type":"icon","identifier":"Blackjacx.jpeg"}],"url":"\/documentation\/wwdcnotes\/blackjacx","abstract":[{"type":"text","text":"iOS Engineer a.d. 2009 • iOS \/ OSX Enthusiast • WWDC19 • Passionate Mountainbiker"}],"type":"topic","role":"sampleCode","title":"Stefan Herold (28 notes)","kind":"article"},"https://github.com/Blackjacx":{"identifier":"https:\/\/github.com\/Blackjacx","title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}],"url":"https:\/\/github.com\/Blackjacx","type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10063-Customize-and-resize-sheets-in-UIKit":{"abstract":[{"type":"text","text":"Discover how you can create a layered and customized sheet experience in UIKit. We’ll explore how you can build a non-modal experience in your app to allow interaction with content both in a sheet and behind the sheet at the same time. We’ll also take you through sheet size customization, revealing or hiding grabber controls, and adapting between popovers and customized sheets in your app."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10063-customize-and-resize-sheets-in-uikit","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10063-Customize-and-resize-sheets-in-UIKit","type":"topic","title":"Customize and resize sheets in UIKit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10071-Adopt-desktopclass-editing-interactions":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10071-Adopt-desktopclass-editing-interactions","abstract":[{"type":"text","text":"Discover advanced desktop-class editing features that can help people accelerate their productivity in your app. Learn how you can provide more interactions inline with your UI to help people quickly access editing features and make your iPadOS app feel right at home on macOS with Mac Catalyst. We’ll also explore the highly-customizable find interaction and learn how the system UI can help people consistently find content in your app."}],"title":"Adopt desktop-class editing interactions","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10071-adopt-desktopclass-editing-interactions"},"Blackjacx":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/Blackjacx.jpeg"}],"alt":"Profile image of Stefan Herold","type":"image","identifier":"Blackjacx"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"type":"link","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10109-Support-hardware-keyboards-in-your-app":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10109-Support-hardware-keyboards-in-your-app","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc20-10109-support-hardware-keyboards-in-your-app","role":"sampleCode","title":"Support hardware keyboards in your app","abstract":[{"text":"When people use hardware keyboards with your app, they’re not only getting a more tactile and familiar typing experience — they can quickly navigate or use keyboard shortcuts, too. Discover how you can best support hardware keyboards for your iPadOS and Mac Catalyst apps: We’ll demystify the responder chain and show you best practices for implementing custom keyboard shortcuts. Learn how easy it is to get up and running with common system keyboard shortcuts, use modifier flags with gesture recognizers, and leverage the raw keyboard event API to respond to key down and key up events.","type":"text"}],"type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-808-Whats-New-in-iOS-Design":{"abstract":[{"type":"text","text":"Discover how to update your app’s interface for Dark Mode to create beautiful and accessible apps. And learn how refinements to modal sheets and the new contextual menu UI can help improve usability and lead to more powerful and efficient workflows."}],"role":"sampleCode","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-808-Whats-New-in-iOS-Design","title":"What’s New in iOS Design","url":"\/documentation\/wwdcnotes\/wwdc19-808-whats-new-in-ios-design"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc19","role":"collectionGroup","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19","title":"WWDC19","images":[{"type":"icon","identifier":"WWDC19-Icon.png"},{"type":"card","identifier":"WWDC19.jpeg"}],"abstract":[{"type":"text","text":"Xcode 11, Swift 5.1, iOS 13, macOS 10.15 (Catalina), tvOS 13, watchOS 6."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"Combine"},{"type":"text","text":", "},{"type":"codeVoice","code":"Core Haptics"},{"type":"text","text":", "},{"type":"codeVoice","code":"Create ML"},{"type":"text","text":", and more."}],"type":"topic"},"Blackjacx.jpeg":{"identifier":"Blackjacx.jpeg","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/Blackjacx.jpeg","traits":["1x","light"]}],"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"url":"\/documentation\/wwdcnotes","type":"topic","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"role":"collection","title":"WWDC Notes","kind":"symbol"},"WWDC19.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC19.jpeg"}],"alt":null,"type":"image","identifier":"WWDC19.jpeg"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10191-Deliver-a-great-playback-experience-on-tvOS":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10191-Deliver-a-great-playback-experience-on-tvOS","url":"\/documentation\/wwdcnotes\/wwdc21-10191-deliver-a-great-playback-experience-on-tvos","title":"Deliver a great playback experience on tvOS","type":"topic","role":"sampleCode","kind":"article","abstract":[{"text":"Find out how you can use Apple TV’s redesigned playback interface to build great media experiences in your apps. Learn how the latest interface helps people access relevant controls and information while maintaining focus on content. We’ll show you how you can adopt AVPlayerViewController and other APIs for your tvOS app to help people find, play, and enjoy content.","type":"text"}]}}}