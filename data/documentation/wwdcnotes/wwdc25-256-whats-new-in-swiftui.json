{"sections":[],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","anchor":"Key-Takeaways","text":"Key Takeaways","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"SwiftUI adopts the new look and feel of the OS out of the box, but provides a variety of tools to customize the behavior.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Better interoperability with other frameworks across the board (like AppKit, RealityKit, and WebKit) provides additional flexibility and optionality for advanced use cases and incremental adoption."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"New views and functionality open SwiftUI to new use cases that previously required bridging, like rich text editing and web views."}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Adopt-the-new-design","text":"Adopt the new design","level":2},{"type":"heading","anchor":"Toolbars","text":"Toolbars","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"New ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/toolbarspacer","type":"reference"},{"text":" API to separate buttons.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"borderedProminent"},{"type":"text","text":" appearance for toolbar items supports tinting via the "},{"type":"codeVoice","code":"tint"},{"type":"text","text":" modifier."}]}]}]},{"type":"heading","anchor":"Bottom-aligned-search-fields-on-iOS","text":"Bottom aligned search fields on iOS","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"searchable"},{"type":"text","text":" on the outside of the "},{"type":"codeVoice","code":"NavigationSplitView"},{"type":"text","text":" to get the bottom aligned search automatically."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On iPad, the new search appearance is on the top trailing corner."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"For tab based apps, you can get the morphing search tab by using ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/tab\/init(role:content:)","type":"reference"},{"text":" on your ","type":"text"},{"type":"codeVoice","code":"Tab"},{"text":": ","type":"text"},{"type":"codeVoice","code":"Tab(role: .search) { … }"}]}]}]},{"type":"heading","anchor":"Custom-views","text":"Custom views","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Custom views can adopt the new look too.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/glasseffect(_:in:isenabled:)","isActive":true},{"type":"text","text":" modifier can be applied to reflect the content behind your custom view."}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Menu-bar-on-iPadOS","text":"Menu bar on iPadOS","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Using the "},{"code":"commands","type":"codeVoice"},{"type":"text","text":" modifier now yields the same result across iPad and Mac."}]}]}]},{"type":"heading","anchor":"Adopt-fluid-resizing","text":"Adopt fluid resizing","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"On ","type":"text"},{"inlineContent":[{"type":"text","text":"iPadOS"}],"type":"strong"},{"text":", migrate off APIs that fix the screen to full size.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remove "},{"code":"UIRequiresFullScreen","type":"codeVoice"},{"type":"text","text":". It is now deprecated."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Watch "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/208","isActive":true},{"type":"text","text":" to learn more."}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"On "},{"type":"strong","inlineContent":[{"type":"text","text":"macOS"}]},{"type":"text","text":", for window resizes caused by content size changes, SwiftUI now synchronizes the animation between content and window sizes."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Use the new "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/windowresizeanchor(_:)"},{"type":"text","text":" API to customize where the animation originates."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Great for animating tab switching in the settings window on macOS."}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"inlineContent":[{"text":"To learn more about adopting the new design, watch ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/323","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"type":"heading","anchor":"SwiftUI-performance","text":"SwiftUI performance","level":2},{"inlineContent":[{"type":"text","text":"Key performance improvement areas:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lists"}]},{"items":[{"content":[{"inlineContent":[{"text":"Improvements to large lists and incremental updates.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Scrolling","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Improved scheduling for updates on iOS and macOS."}],"type":"paragraph"}]}]}]},{"content":[{"inlineContent":[{"text":"Debugging and profiling","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"New SwiftUI Performance instrument in Xcode"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Watch "},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/306","type":"reference","isActive":true},{"type":"text","text":"."}]}]}]},{"inlineContent":[{"identifier":"WWDC25-256-SwiftUI-Xcode-Instruments","type":"image"}],"type":"paragraph"},{"type":"heading","anchor":"Animatable-macro","text":"Animatable macro","level":2},{"inlineContent":[{"text":"New ","type":"text"},{"code":"@Animatable","type":"codeVoice"},{"text":" macro allows you to delete manual custom ","type":"text"},{"code":"animatableData","type":"codeVoice"},{"text":" property declarations.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"You can exclude properties that shouldn’t be animatable as "},{"type":"codeVoice","code":"@AnimatableIgnored"},{"type":"text","text":" within your "},{"type":"codeVoice","code":"@Animatable"},{"type":"text","text":" annotated type."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["@Animatable","struct LoadingArc: Shape {","    var center: CGPoint","    var radius: CGFloat","    var startAngle: Angle","    var endAngle: Angle","    @AnimatableIgnored var drawPathClockwise: Bool","}"]},{"type":"heading","anchor":"SwiftUI-on-visionOS","text":"SwiftUI on visionOS","level":2},{"inlineContent":[{"type":"text","text":"More volumetric and spatial layout options."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To learn more about new layout techniques like the "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/spatialoverlay(alignment:content:)"},{"type":"text","text":" modifier, watch Meet SwiftUI spatial layout."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To learn more about volumes and scenes, watch "},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/290"},{"type":"text","text":"."}]}]}]},{"type":"heading","anchor":"SwiftUI-across-the-system","text":"SwiftUI across the system","level":2},{"type":"heading","anchor":"Scene-bridging","text":"Scene bridging","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Allows you to request scenes from AppKit and UIKit contexts.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Mac apps can now render remote immersive spaces using a new scene.","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Uses "},{"type":"codeVoice","code":"CompositorServices"},{"type":"text","text":" under the hood."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"To learn more, watch "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/294"},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"A new "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/assistiveaccess","isActive":true},{"type":"text","text":" scene type allows your app to take advantage of the special mode for users with cognitive disabilities."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"To learn more, watch "},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/238","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"unorderedList"}]}]},{"type":"heading","anchor":"Enhancements-to-AppKit-interoperability","text":"Enhancements to AppKit interoperability","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"You can show sheets in "},{"type":"codeVoice","code":"NSWindow"},{"type":"text","text":"s with SwiftUI "},{"type":"codeVoice","code":"View"},{"type":"text","text":"s in them."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"AppKit gestures can be bridged to SwiftUI using ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/nsgesturerecognizerrepresentable","type":"reference"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"NSHostingView"},{"type":"text","text":" can be used in Interface Builder."}]}]}]},{"type":"heading","anchor":"Improvements-to-RealityKit-interoperability","text":"Improvements to RealityKit interoperability","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"RealityKit entities now conform to "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":"."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Makes it trivial to observe changes in SwiftUI views."}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"An improved coordinate conversion API."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Enhanced support for presentations right from RealityKit.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"For instance, you can present SwiftUI popovers directly from a RealityKit "},{"type":"codeVoice","code":"Entity"},{"type":"text","text":" using the new "},{"type":"codeVoice","code":"PresentationComponent"},{"type":"text","text":" API."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"To learn more, watch "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/274"},{"type":"text","text":"."}],"type":"paragraph"}]}]}]}]},{"type":"heading","anchor":"Platform-adoption","text":"Platform adoption","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Custom Controls are coming to macOS and watchOS.","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Widgets are coming to visionOS and CarPlay.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"To learn about additions to widgets, watch ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/278","type":"reference"},{"text":".","type":"text"}]}]}],"type":"unorderedList"}]}]},{"type":"heading","anchor":"New--updated-SwiftUI-views","text":"New & updated SwiftUI views","level":2},{"type":"heading","anchor":"WebView","text":"WebView","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"New SwiftUI view for showing web content.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Powered by WebKit."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Can show "},{"type":"codeVoice","code":"URL"},{"type":"text","text":"s or "},{"type":"codeVoice","code":"WebPage"},{"type":"text","text":"s."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"WebPage"},{"type":"text","text":" is a new "},{"type":"codeVoice","code":"Observable"},{"type":"text","text":" type that enables rich interaction with the web."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"To learn more about these APIs and the better WebKit interoperability, watch ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/231","type":"reference","isActive":true},{"text":".","type":"text"}]}]}]},{"type":"heading","anchor":"3D-Charts","text":"3D Charts","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Declared using "},{"code":"Chart3D","type":"codeVoice"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Could use "},{"code":"z","type":"codeVoice"},{"type":"text","text":" axis specific modifiers like "},{"code":"chartZScale","type":"codeVoice"},{"type":"text","text":" to specify e.g. scales"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"To learn more, watch "},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/313","type":"reference"},{"type":"text","text":"."}],"type":"paragraph"}]}]},{"inlineContent":[{"identifier":"WWDC25-256-3D-Charts","type":"image"}],"type":"paragraph"},{"type":"heading","anchor":"Drag--Drop","text":"Drag & Drop","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"New variant of the "},{"type":"codeVoice","code":"draggable"},{"type":"text","text":" modifier "},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/draggable(containeritemid:)","isActive":true,"type":"reference"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/dragcontainer(for:id:in:_:)"},{"text":" modifier makes the target view a container for drag items.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"SwiftUI requests drag items lazily when a drop occurs."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Customize the drag behavior by adopting the new ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/dragconfiguration(_:)","type":"reference","isActive":true},{"text":" modifier.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Observe drag event updates, use the new "},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/ondragsessionupdated(_:)","isActive":true,"type":"reference"},{"type":"text","text":" modifier."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"To customize the drag preview for multiple items, you can specify the formation of the items using the ","type":"text"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/dragpreviewsformation(_:)","isActive":true},{"text":" modifier.","type":"text"}]}]}]},{"type":"heading","anchor":"Rich-text-editing","text":"Rich text editing","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"TextEditor"},{"type":"text","text":" now accepts an "},{"type":"codeVoice","code":"AttributedString"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Introduces abilities to add paragraph styles, transform attributes, and constrain text inputs.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Watch ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/280"},{"text":" and ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/225"},{"text":".","type":"text"}]}]}]},{"type":"heading","anchor":"Written-By","text":"Written By","level":2},{"numberOfColumns":5,"type":"row","columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"identifier":"philptr","type":"image"}]}]},{"size":4,"content":[{"type":"heading","anchor":"Phil-Zakharchenko","level":3,"text":"Phil Zakharchenko"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/philptr","overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/github.com\/philptr","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/philz.work","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/x.com\/philzet","type":"reference","isActive":true}]}]}]},{"type":"thematicBreak"},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}],"type":"paragraph"},{"type":"heading","anchor":"Related-Sessions","text":"Related Sessions","level":2},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-294-Whats-new-in-Metal-rendering-for-immersive-apps","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-225-Codealong-Explore-localization-with-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-225-Codealong-Explore-localization-with-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-231-Meet-WebKit-for-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-238-Customize-your-app-for-Assistive-Access","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-268-Embracing-Swift-concurrency","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-268-Embracing-Swift-concurrency","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-278-Whats-new-in-widgets","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-313-Bring-Swift-Charts-to-the-third-dimension","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-266-Explore-concurrency-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-280-Codealong-Cook-up-a-rich-text-experience-in-SwiftUI-with-AttributedString","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-273-Meet-SwiftUI-spatial-layout","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-274-Better-together-SwiftUI-and-RealityKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-290-Set-the-scene-with-SwiftUI-in-visionOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-323-Build-a-SwiftUI-app-with-the-new-design","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-306-Optimize-SwiftUI-performance-with-Instruments","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-208-Elevate-the-design-of-your-iPad-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-317-Whats-new-in-visionOS-26"],"style":"list"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2025 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}]}],"metadata":{"title":"What’s new in SwiftUI","role":"sampleCode","modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC25"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Learn what’s new in SwiftUI to build great apps for any Apple platform. We’ll explore how to give your app a brand new look and feel with Liquid Glass. Discover how to boost performance with framework enhancements and new instruments, and integrate advanced capabilities like web content and rich text editing. We’ll also show you how SwiftUI is expanding to more places, including laying out views in three dimensions."}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25"]]},"sampleCodeDownload":{"action":{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/256","type":"reference","isActive":true,"overridingTitle":"Watch Video (25 min)"},"kind":"sampleDownload"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-256-Whats-new-in-SwiftUI"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc25-256-whats-new-in-swiftui"]}],"kind":"article","references":{"https://developer.apple.com/documentation/swiftui/assistiveaccess":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/assistiveaccess","type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/assistiveaccess","title":"AssistiveAccess","titleInlineContent":[{"type":"codeVoice","code":"AssistiveAccess"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-238-Customize-your-app-for-Assistive-Access":{"title":"Customize your app for Assistive Access","abstract":[{"type":"text","text":"Assistive Access is a distinctive, focused iOS experience that makes it easier for people with cognitive disabilities to use iPhone and iPad independently. In iOS and iPadOS 26, you can customize your app when it’s running in Assistive Access to give people greater ease and independence. Learn how to tailor your app using the AssistiveAccess SwiftUI scene type, and explore the key design principles that can help you create a high-quality Assistive Access experience for everyone."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-238-Customize-your-app-for-Assistive-Access","type":"topic","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc25-238-customize-your-app-for-assistive-access"},"https://developer.apple.com/videos/play/wwdc2025/238":{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/238","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/238","title":"Customize your app for Assistive Access","titleInlineContent":[{"type":"text","text":"Customize your app for Assistive Access"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-278-Whats-new-in-widgets":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-278-Whats-new-in-widgets","role":"sampleCode","abstract":[{"text":"WidgetKit elevates your app with updates to widgets, Live Activities, and controls. Learn how to bring your widgets to visionOS, take them on the road with CarPlay, and make them look their best with accented rendering modes. Plus, find out how relevant widgets can be surfaced in the Smart Stack on watchOS, and discover how push notifications can be used to keep your widgets up to date.","type":"text"}],"title":"What’s new in widgets","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc25-278-whats-new-in-widgets","type":"topic"},"philptr.jpeg":{"type":"image","variants":[{"url":"\/images\/WWDCNotes\/philptr.jpeg","traits":["1x","light"]}],"alt":null,"identifier":"philptr.jpeg"},"https://philz.work":{"titleInlineContent":[{"type":"text","text":"Blog"}],"url":"https:\/\/philz.work","type":"link","title":"Blog","identifier":"https:\/\/philz.work"},"WWDC25.jpg":{"identifier":"WWDC25.jpg","type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDC25.jpg","traits":["1x","light"]}]},"https://developer.apple.com/documentation/swiftui/view/dragcontainer(for:id:in:_:)":{"type":"link","title":"dragContainer","titleInlineContent":[{"type":"codeVoice","code":"dragContainer"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/dragcontainer(for:id:in:_:)","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/dragcontainer(for:id:in:_:)"},"https://developer.apple.com/documentation/swiftui/view/glasseffect(_:in:isenabled:)":{"titleInlineContent":[{"type":"codeVoice","code":"glassEffect"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/glasseffect(_:in:isenabled:)","type":"link","title":"glassEffect","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/glasseffect(_:in:isenabled:)"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-231-Meet-WebKit-for-SwiftUI":{"url":"\/documentation\/wwdcnotes\/wwdc25-231-meet-webkit-for-swiftui","abstract":[{"type":"text","text":"Discover how you can use WebKit to effortlessly integrate web content into your SwiftUI apps. Learn how to load and display web content, communicate with webpages, and more."}],"title":"Meet WebKit for SwiftUI","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-231-Meet-WebKit-for-SwiftUI","type":"topic","role":"sampleCode","kind":"article"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","title":"Contributions are welcome!","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-280-Codealong-Cook-up-a-rich-text-experience-in-SwiftUI-with-AttributedString":{"type":"topic","role":"sampleCode","title":"Code-along: Cook up a rich text experience in SwiftUI with AttributedString","abstract":[{"text":"Learn how to build a rich text experience with SwiftUI’s TextEditor API and AttributedString. Discover how you can enable rich text editing, build custom controls that manipulate the contents of your editor, and customize the formatting options available. Explore advanced capabilities of AttributedString that help you craft the best text editing experiences.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc25-280-codealong-cook-up-a-rich-text-experience-in-swiftui-with-attributedstring","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-280-Codealong-Cook-up-a-rich-text-experience-in-SwiftUI-with-AttributedString","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-273-Meet-SwiftUI-spatial-layout":{"title":"Meet SwiftUI spatial layout","abstract":[{"type":"text","text":"Explore new tools for building spatial experiences using SwiftUI. Learn the basics of 3D SwiftUI views on visionOS, customize existing layouts with depth alignments, and use modifiers to rotate and position views in space. Discover how to use spatial containers to align views in the same 3D space, helping you create immersive and engaging apps."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-273-Meet-SwiftUI-spatial-layout","type":"topic","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc25-273-meet-swiftui-spatial-layout"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-225-Codealong-Explore-localization-with-Xcode":{"url":"\/documentation\/wwdcnotes\/wwdc25-225-codealong-explore-localization-with-xcode","abstract":[{"type":"text","text":"Learn how to localize your app into additional languages using Xcode. We’ll walk step-by-step through the process of creating a String Catalog, translating text, and exchanging files with external translators. You’ll learn best practices for providing necessary context to translators and how Xcode can help to provide this information automatically. For larger projects, we’ll also dive into techniques to manage complexity and streamline string management using type-safe Swift code."}],"title":"Code-along: Explore localization with Xcode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-225-Codealong-Explore-localization-with-Xcode","type":"topic","role":"sampleCode","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-268-Embracing-Swift-concurrency":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-268-Embracing-Swift-concurrency","abstract":[{"type":"text","text":"Join us to learn the core Swift concurrency concepts. Concurrency helps you improve app responsiveness and performance, and Swift is designed to make asynchronous and concurrent code easier to write correctly. We’ll cover the steps you need to take an app through from single-threaded to concurrent. We’ll also help you determine how and when to make the best use of Swift concurrency features – whether it’s making your code more asynchronous, moving it to the background, or sharing data across concurrent tasks."}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc25-268-embracing-swift-concurrency","type":"topic","title":"Embracing Swift concurrency","kind":"article"},"https://developer.apple.com/documentation/swiftui/toolbarspacer":{"type":"link","title":"ToolbarSpacer","titleInlineContent":[{"type":"codeVoice","code":"ToolbarSpacer"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/toolbarspacer","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/toolbarspacer"},"WWDC25-256-SwiftUI-Xcode-Instruments":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC25-256-SwiftUI-Xcode-Instruments.jpg","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"WWDC25-256-SwiftUI-Xcode-Instruments"},"https://developer.apple.com/videos/play/wwdc2025/256":{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/256","type":"download","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/256","checksum":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-323-Build-a-SwiftUI-app-with-the-new-design":{"title":"Build a SwiftUI app with the new design","abstract":[{"type":"text","text":"Explore the ways Liquid Glass transforms the look and feel of your app. Discover how this stunning new material enhances toolbars, controls, and app structures across platforms, providing delightful interactions and seamlessly integrating your app with the system. Learn how to adopt new APIs that can help you make the most of Liquid Glass."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-323-Build-a-SwiftUI-app-with-the-new-design","type":"topic","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc25-323-build-a-swiftui-app-with-the-new-design"},"https://developer.apple.com/videos/play/wwdc2025/323":{"titleInlineContent":[{"type":"text","text":"Build a SwiftUI app with the new design"}],"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/323","type":"link","title":"Build a SwiftUI app with the new design","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/323"},"WWDC25-256-3D-Charts":{"type":"image","variants":[{"url":"\/images\/WWDCNotes\/WWDC25-256-3D-Charts.jpg","traits":["1x","light"]}],"alt":null,"identifier":"WWDC25-256-3D-Charts"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-266-Explore-concurrency-in-SwiftUI":{"url":"\/documentation\/wwdcnotes\/wwdc25-266-explore-concurrency-in-swiftui","abstract":[{"type":"text","text":"Discover how SwiftUI leverages Swift concurrency to build safe and responsive apps. Explore how SwiftUI uses the main actor by default and offloads work to other actors. Learn how to interpret concurrency annotations and manage async tasks with SwiftUI’s event loop for smooth animations and UI updates. You’ll leave knowing how to avoid data races and write code fearlessly."}],"title":"Explore concurrency in SwiftUI","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-266-Explore-concurrency-in-SwiftUI","type":"topic","role":"sampleCode","kind":"article"},"https://developer.apple.com/documentation/swiftui/view/draggable(containeritemid:)":{"type":"link","title":"accepts a containerItemID","titleInlineContent":[{"type":"text","text":"accepts a "},{"type":"codeVoice","code":"containerItemID"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/draggable(containeritemid:)","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/draggable(containeritemid:)"},"WWDC25-Icon.png":{"identifier":"WWDC25-Icon.png","type":"image","alt":null,"variants":[{"url":"\/images\/WWDCNotes\/WWDC25-Icon.png","traits":["1x","light"]}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-317-Whats-new-in-visionOS-26":{"title":"What’s new in visionOS 26","abstract":[{"type":"text","text":"Explore exciting new features in visionOS 26. Discover enhanced volumetric APIs and learn how you can combine the power of SwiftUI, RealityKit and ARKit. Find out how you can build more engaging apps and games using faster hand tracking and input from spatial accessories. Get a sneak peek at updates to SharePlay, Compositor Services, immersive media, spatial web, Enterprise APIs, and much more."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-317-Whats-new-in-visionOS-26","type":"topic","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc25-317-whats-new-in-visionos-26"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-313-Bring-Swift-Charts-to-the-third-dimension":{"url":"\/documentation\/wwdcnotes\/wwdc25-313-bring-swift-charts-to-the-third-dimension","abstract":[{"text":"Learn how to bring your 2D Swift Charts to the third dimension with Chart3D and visualize your data sets from completely new perspectives. Plot your data in 3D, visualize mathematical surfaces, and customize everything from the camera to the materials to make your 3D charts more intuitive and delightful.","type":"text"}],"title":"Bring Swift Charts to the third dimension","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-313-Bring-Swift-Charts-to-the-third-dimension","type":"topic","role":"sampleCode","kind":"article"},"https://developer.apple.com/videos/play/wwdc2025/280":{"titleInlineContent":[{"type":"text","text":"Cook up a rich text experience in SwiftUI with AttributedString"}],"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/280","type":"link","title":"Cook up a rich text experience in SwiftUI with AttributedString","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/280"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-294-Whats-new-in-Metal-rendering-for-immersive-apps":{"abstract":[{"text":"Discover the latest improvements in Metal rendering for immersive apps with Compositor Services. Learn how to add hover effects to highlight your app’s interactive elements, and how to render in higher fidelity with dynamic render quality. Find out about the new progressive immersion style. And explore how you can bring immersive experiences to macOS apps by directly rendering Metal content from Mac to Vision Pro.","type":"text"}],"title":"What’s new in Metal rendering for immersive apps","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc25-294-whats-new-in-metal-rendering-for-immersive-apps","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-294-Whats-new-in-Metal-rendering-for-immersive-apps","type":"topic","kind":"article"},"https://developer.apple.com/videos/play/wwdc2025/306":{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/306","type":"link","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/306","title":"Optimize SwiftUI performance with Instruments","titleInlineContent":[{"text":"Optimize SwiftUI performance with Instruments","type":"text"}]},"https://developer.apple.com/videos/play/wwdc2025/290":{"title":"Set the scene with SwiftUI in visionOS","titleInlineContent":[{"type":"text","text":"Set the scene with SwiftUI in visionOS"}],"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/290","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/290","type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-290-Set-the-scene-with-SwiftUI-in-visionOS":{"title":"Set the scene with SwiftUI in visionOS","abstract":[{"type":"text","text":"Discover exciting new APIs to enhance windows, volumes, and immersive spaces in your visionOS app. Fine tune the behavior of your scenes when relaunched or locked in place. Make volumes adapt to their surroundings with clipping margins and snapping. Stream immersive content from Mac to Vision Pro. Elevate your existing UIKit-based apps with volumes and immersive spaces."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-290-Set-the-scene-with-SwiftUI-in-visionOS","type":"topic","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc25-290-set-the-scene-with-swiftui-in-visionos"},"https://developer.apple.com/documentation/swiftui/tab/init(role:content:)":{"title":"the role initializer","titleInlineContent":[{"type":"text","text":"the "},{"type":"codeVoice","code":"role"},{"type":"text","text":" initializer"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/tab\/init(role:content:)","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/tab\/init(role:content:)","type":"link"},"doc://WWDCNotes/documentation/WWDCNotes":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","type":"topic","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"role":"collection","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"title":"WWDC Notes","url":"\/documentation\/wwdcnotes","kind":"symbol"},"https://developer.apple.com/documentation/swiftui/view/dragpreviewsformation(_:)":{"titleInlineContent":[{"type":"codeVoice","code":"dragPreviewsFormation"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/dragpreviewsformation(_:)","type":"link","title":"dragPreviewsFormation","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/dragpreviewsformation(_:)"},"philptr":{"alt":"Profile image of Phil Zakharchenko","identifier":"philptr","type":"image","variants":[{"url":"\/images\/WWDCNotes\/philptr.jpeg","traits":["1x","light"]}]},"https://developer.apple.com/documentation/swiftui/view/windowresizeanchor(_:)":{"type":"link","title":"windowResizeAnchor","titleInlineContent":[{"type":"codeVoice","code":"windowResizeAnchor"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/windowresizeanchor(_:)","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/windowresizeanchor(_:)"},"https://developer.apple.com/documentation/swiftui/view/ondragsessionupdated(_:)":{"titleInlineContent":[{"type":"codeVoice","code":"onDragSessionUpdated"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/ondragsessionupdated(_:)","type":"link","title":"onDragSessionUpdated","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/ondragsessionupdated(_:)"},"https://developer.apple.com/documentation/swiftui/view/dragconfiguration(_:)":{"titleInlineContent":[{"type":"codeVoice","code":"dragConfiguration"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/dragconfiguration(_:)","type":"link","title":"dragConfiguration","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/dragconfiguration(_:)"},"https://developer.apple.com/videos/play/wwdc2025/208":{"type":"link","title":"Elevate the design of your iPad app","titleInlineContent":[{"type":"text","text":"Elevate the design of your iPad app"}],"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/208","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/208"},"https://github.com/philptr":{"titleInlineContent":[{"type":"text","text":"GitHub"}],"url":"https:\/\/github.com\/philptr","type":"link","title":"GitHub","identifier":"https:\/\/github.com\/philptr"},"https://developer.apple.com/videos/play/wwdc2025/231":{"titleInlineContent":[{"type":"text","text":"Meet WebKit for SwiftUI"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/231","type":"link","title":"Meet WebKit for SwiftUI","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/231"},"https://developer.apple.com/documentation/swiftui/view/spatialoverlay(alignment:content:)":{"type":"link","title":"spatialOverlay","titleInlineContent":[{"type":"codeVoice","code":"spatialOverlay"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/spatialoverlay(alignment:content:)","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/spatialoverlay(alignment:content:)"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-274-Better-together-SwiftUI-and-RealityKit":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc25-274-better-together-swiftui-and-realitykit","kind":"article","role":"sampleCode","abstract":[{"text":"Discover how to seamlessly blend SwiftUI and RealityKit in visionOS 26. We’ll explore enhancements to Model3D, including animation and ConfigurationCatalog support, and demonstrate smooth transitions to RealityView. You’ll learn how to leverage SwiftUI animations to drive RealityKit component changes, implement interactive manipulation, use new SwiftUI components for richer interactions, and observe RealityKit changes from your SwiftUI code. We’ll also cover how to use unified coordinate conversion for cross-framework coordinate transformations.","type":"text"}],"title":"Better together: SwiftUI and RealityKit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-274-Better-together-SwiftUI-and-RealityKit"},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"type":"image","alt":null,"identifier":"WWDCNotes.png"},"https://developer.apple.com/videos/play/wwdc2025/313":{"titleInlineContent":[{"type":"text","text":"Bring Swift Charts to the third dimension"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/313","type":"link","title":"Bring Swift Charts to the third dimension","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/313"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-208-Elevate-the-design-of-your-iPad-app":{"title":"Elevate the design of your iPad app","abstract":[{"type":"text","text":"Make your app look and feel great on iPadOS. Learn best practices for designing a responsive layout for resizable app windows. Get familiar with window controls and explore the best ways to accommodate them. Discover the building blocks of a great menu bar. And meet the new pointer and its updated effects."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-208-Elevate-the-design-of-your-iPad-app","type":"topic","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc25-208-elevate-the-design-of-your-ipad-app"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25":{"type":"topic","images":[{"type":"icon","identifier":"WWDC25-Icon.png"},{"type":"card","identifier":"WWDC25.jpg"}],"role":"collectionGroup","title":"WWDC25","kind":"article","abstract":[{"type":"text","text":"Xcode 26, Swift 6.2, iOS\/macOS\/tvOS\/visionOS 26."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"code":"Foundation Models","type":"codeVoice"},{"type":"text","text":", "},{"code":"AlarmKit","type":"codeVoice"},{"type":"text","text":", "},{"code":"PermissionKit","type":"codeVoice"},{"type":"text","text":", and more."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25","url":"\/documentation\/wwdcnotes\/wwdc25"},"https://developer.apple.com/videos/play/wwdc2025/225":{"titleInlineContent":[{"type":"text","text":"Explore localization with Xcode"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/225","type":"link","title":"Explore localization with Xcode","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/225"},"https://developer.apple.com/documentation/swiftui/nsgesturerecognizerrepresentable":{"type":"link","title":"NSGestureRecognizerRepresentable","titleInlineContent":[{"type":"codeVoice","code":"NSGestureRecognizerRepresentable"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/nsgesturerecognizerrepresentable","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/nsgesturerecognizerrepresentable"},"https://developer.apple.com/videos/play/wwdc2025/294":{"titleInlineContent":[{"type":"text","text":"What’s new in Metal rendering for immersive apps"}],"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/294","type":"link","title":"What’s new in Metal rendering for immersive apps","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/294"},"https://developer.apple.com/videos/play/wwdc2025/274":{"titleInlineContent":[{"type":"text","text":"Better together: SwiftUI and RealityKit"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/274","type":"link","title":"Better together: SwiftUI and RealityKit","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/274"},"https://developer.apple.com/videos/play/wwdc2025/278":{"type":"link","title":"What’s new in widgets","titleInlineContent":[{"type":"text","text":"What’s new in widgets"}],"url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/278","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2025\/278"},"https://x.com/philzet":{"titleInlineContent":[{"type":"text","text":"X\/Twitter"}],"url":"https:\/\/x.com\/philzet","type":"link","title":"X\/Twitter","identifier":"https:\/\/x.com\/philzet"},"doc://WWDCNotes/documentation/WWDCNotes/philptr":{"type":"topic","kind":"article","url":"\/documentation\/wwdcnotes\/philptr","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/philptr","abstract":[{"text":"macOS UI, Frameworks, and Systems. Previously AppKit @ Apple","type":"text"}],"role":"sampleCode","images":[{"identifier":"philptr.jpeg","type":"card"},{"identifier":"philptr.jpeg","type":"icon"}],"title":"Phil Zakharchenko (7 notes)"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC25-306-Optimize-SwiftUI-performance-with-Instruments":{"abstract":[{"type":"text","text":"Discover the new SwiftUI instrument. We’ll cover how SwiftUI updates views, how changes in your app’s data affect those updates, and how the new instrument helps you visualize those causes and effects."}],"title":"Optimize SwiftUI performance with Instruments","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC25-306-Optimize-SwiftUI-performance-with-Instruments","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc25-306-optimize-swiftui-performance-with-instruments","kind":"article"}}}