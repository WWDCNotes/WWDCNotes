{"metadata":{"roleHeading":"WWDC22","role":"sampleCode","modules":[{"name":"WWDC Notes"}],"title":"Meet Apple Maps Server APIs"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10006-Meet-Apple-Maps-Server-APIs"},"abstract":[{"type":"text","text":"Simplify your app’s mapping architecture by implementing the Apple Maps stack across MapKit, MapKit JS, and Apple Maps Server APIs. Learn how these APIs can reduce network calls and increase power efficiency, which can help improve the overall performance of your app. We’ll show you how to use geocoding and estimated time of arrival APIs to build functionality for a simple store locator, and explore the API authentication flow."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"Apple Maps app offers various end-user experiences to Apple customers around the globe."}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC22-10006-maps"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC22-10006-mapkitajs"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"New! introducing the Apple Maps Server APIs."}],"type":"paragraph"},{"inlineContent":[{"identifier":"WWDC22-10006-server","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC22-10006-three"}],"type":"paragraph"},{"inlineContent":[{"text":"These APIs will help integrating Maps into apps. With Geocoding APIs, an address an be converted to geographic coordinates latitude and longitude. Similarly, with Reverse Geocoding, we can do the opposite – go from geographic coordinates to an address. With Search API, we enter a search string to discover places like businesses, points of interest…","type":"text"},{"text":" ","type":"text"},{"text":"The ETA API can help find the closest store.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC22-10006-fullStack"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A benefit is the reduction in network calls."},{"type":"text","text":"\n"},{"type":"text","text":"Many times, users are making repetitive and redundant requests, maybe looking up the same address over and over again from an app running on different user devices. This causes a lot of network calls and wasted bandwidth."},{"type":"text","text":"\n"},{"type":"text","text":"Delegating this common operation to a server and doing it only once in the back end using server APIs will help consume less bandwidth and be power efficient too."}],"type":"paragraph"},{"text":"Let’s take some of these APIs for a spin.","level":1,"type":"heading","anchor":"Lets-take-some-of-these-APIs-for-a-spin"},{"inlineContent":[{"text":"Example: Building contact cards for a store locator application. There are three stores with their addresses and distance from the customer location.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"identifier":"WWDC22-10006-comicBook","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Let’s assume that these addresses are on a server which stores and serves the locations of comic bookstores."},{"type":"text","text":"\n"},{"type":"text","text":"There are many ways to build this, but for a second, let’s assume we don’t have these new server APIs."},{"type":"text","text":" "},{"type":"text","text":"What would a basic architecture look like? How would a client application get this data? In this diagram, our application is making a call to the server to get the list of store addresses."}],"type":"paragraph"},{"inlineContent":[{"identifier":"WWDC22-10006-basicArchitecture","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"The back-end server returns a list of store addresses to your client device.","type":"text"},{"text":"\n","type":"text"},{"text":"Since we don’t have the server APIs in this example, now our client application has to perform various actions on the address to build the contact card.","type":"text"},{"text":"\n","type":"text"},{"text":"To perform a single task, a client may have to make multiple calls to various back-end services.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Here we can see that the client app is making a call directly to the Apple Maps Server, either by using MapKit or MapKit JS. This chattiness between a client and a back end can adversely impact the performance and scale of the application."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Over a cellular network with typically high latency, using individual requests in this manner is inefficient and could result in broken connectivity or incomplete requests. While each request may be done in parallel, the application must send, wait, and process data for each request all on separate connections increasing the chance of failure."},{"type":"text","text":"\n"},{"type":"text","text":"Finally, all the responses on the client will have to be merged. And while all these calls happen, the user is seeing a spinner. Plus, the client device is using more bandwidth and power for these extra calls."}],"type":"paragraph"},{"inlineContent":[{"text":"That is not a good user experience.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Now, let’s look at a model architecture with access to Apple Maps Server APIs. Start using our back-end server as a gateway to reduce chattiness between the client and the services."}],"type":"paragraph"},{"inlineContent":[{"identifier":"WWDC22-10006-serverAggregation","type":"image"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Just like before, we request a list of stores to be displayed from our client. Next, we make a request from the server to do geocoding. We then receive responses for each API from the Apple Maps Server."}],"type":"paragraph"},{"inlineContent":[{"text":"The comic book server combines the responses from each service and sends the response to the application.","type":"text"},{"text":"\n","type":"text"},{"text":"This pattern can reduce the number of requests that the application makes to back-end services, and improve application performance over high-latency networks.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In summary, our client makes one call to our server to get the list of stores. Our server then does the heavy lifting to make appropriate API calls to compose a response most suited for your user."}],"type":"paragraph"},{"text":"Use Geocoding and ETA API to get the distance to the store.","level":1,"type":"heading","anchor":"Use-Geocoding-and-ETA-API-to-get-the-distance-to-the-store"},{"inlineContent":[{"type":"text","text":"We can use the Geocode API to find the latitude and longitude for the store addresses, which we’ll later use for ETA calculations."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"In this example, first, we are going to take the address for the comic book store and URL encode it."}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC22-10006-fetch"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Next, we’ll use the Geocode API and pass this URL-encoded address as a query parameter. (skipping over the authentication details for now). In the response, you can see the latitude and longitude for the address returned."}],"type":"paragraph"},{"inlineContent":[{"identifier":"WWDC22-10006-fetchCoordinates","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"We’ll repeat the same process to find the latitude and longitude for the customer’s address. This will be later used for ETA calculations.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"There are more fields in the response. The detailed documentation is in the Resources section below."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Let’s set the origin and destination on the ETA API with the data we got from the Geocode API."}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC22-10006-ETA"}],"type":"paragraph"},{"inlineContent":[{"text":"We have the origin latitude, longitude and the destination latitude, longitude.","type":"text"},{"text":" ","type":"text"},{"text":"Specify up to 10 destinations here if needed, and feeding that in the ETA API as origin and as destination query parameters which are URL encoded. The response to the API is a list of ETAs, one for each destination provided.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC22-10006-fetchingETA"}],"type":"paragraph"},{"inlineContent":[{"text":"In this case, we only have one since we provided one destination.","type":"text"},{"text":"\n","type":"text"},{"text":"Here for our example, we are interested in distanceMeters to calculate the distance to the store and we have all the pieces we need: the store address and the distance for the user to reach the store. we can also choose to augment or overlay this data with our store information, like store hours.","type":"text"}],"type":"paragraph"},{"text":"Authentication","level":1,"type":"heading","anchor":"Authentication"},{"inlineContent":[{"type":"text","text":"One critical piece is authentication."}],"type":"paragraph"},{"inlineContent":[{"text":"All the Apple Maps Server APIs are authenticated.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Using MapKit JS, we are already halfway there. Apple Maps Server APIs use the same mechanism as MapKit JS to authenticate."}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC22-10006-authflow"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"First, download our private key from our developer account.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Then use this private key to generate a Maps auth token in JWT format. (There is a detailed doc about how to generate one linked below.)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Exchange this Maps auth token using the token API to get Maps access token."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Authenticate the Maps auth token on the back end and send back Maps access token."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"This is in JWT format and will be used for all API interactions."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"This access token needs to be refreshed every 30 minutes by repeating the highlighted process here."}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"Here is a simple example of how to use the token API to fetch the access token.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"identifier":"WWDC22-10006-accessToken","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"We are using the token API here, passing the Maps auth token as a header. Getting back a Maps access token that can be used to access the API. This will be in JWT format and will have standard fields like expiry, issuedAt, etc.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"As a convenience, the expiresInSeconds field shows for how long the token is valid for. In this case, it’s 30 minutes."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Maps auth token is not the same as Maps access token, we exchange the Maps auth token to get a 30-minute long Maps access token to access the server APIs."}],"type":"paragraph"},{"text":"The API interaction with Maps access token","level":1,"type":"heading","anchor":"The-API-interaction-with-Maps-access-token"},{"inlineContent":[{"identifier":"WWDC22-10006-authflow2","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"We’ll pass the Maps access token along with server API call.","type":"text"},{"text":"\n","type":"text"},{"text":"It is added as a header to the API call, just like we saw a few slides ago.","type":"text"},{"text":"\n","type":"text"},{"text":"The Apple Maps Server will validate the Maps access token.","type":"text"},{"text":"\n","type":"text"},{"text":"Once the validation is successful, the Apple Maps Server will respond with an API response.","type":"text"}],"type":"paragraph"},{"text":"Usage limits","level":1,"type":"heading","anchor":"Usage-limits"},{"inlineContent":[{"type":"text","text":"There is a daily cap on how many API calls the app can make, and it’s big!"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC22-10006-25000"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Devs will get a quota of 25,000 service calls per day in total."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Calling services via MapKit JS and server APIs use the same quota."},{"type":"text","text":" "},{"type":"text","text":"Developers can view usage stats at the Maps developer dashboard."}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC22-10006-devDash"}],"type":"paragraph"},{"inlineContent":[{"text":"If using MapKit JS, the server API usage is categorized as Services, which we can see highlighted here.","type":"text"}],"type":"paragraph"},{"text":"Exceeding Quota","level":1,"type":"heading","anchor":"Exceeding-Quota"},{"inlineContent":[{"type":"text","text":"When the daily quota is exceeded, which means more than 25,000 server API calls, Apple will start rejecting new service calls and respond with HTTP status 429, which means too many requests."}],"type":"paragraph"},{"inlineContent":[{"identifier":"WWDC22-10006-exceedingq","type":"image"}],"type":"paragraph"},{"inlineContent":[{"text":"ddevelopers should make sure that the app experience degrades gracefully in such scenarios.","type":"text"},{"text":"\n","type":"text"},{"text":"In rare scenarios, when our services makes an unusual amount of requests – maybe it’s due to some bug in code or infrastructure – it’s possible to get HTTP status 429 as well.","type":"text"},{"text":"\n","type":"text"},{"text":"When we receive HTTP 429, it is important not to simply loop repeatedly in making requests.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"A better approach is to retry with increasing delays in between attempts."},{"type":"text","text":"\n"},{"type":"text","text":"This approach is known as exponential backoff."}],"type":"paragraph"},{"text":"Wrapping up","level":1,"type":"heading","anchor":"Wrapping-up"},{"inlineContent":[{"type":"text","text":"Four new server APIs: Geocoding, Reverse Geocoding, Search, and ETA."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Full stack implementation, using these APIs in conjunction with MapKit and MapKit JS."}],"type":"paragraph"},{"inlineContent":[{"text":"Redundant and repetitive calls can be optimised by delegating those tasks to the back-end server using Apple Maps Server APIs.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Daily quota for these APIs is 25,000 and is shared with the developer’s MapKit JS service usage."}],"type":"paragraph"},{"text":"Check out also","level":1,"type":"heading","anchor":"Check-out-also"},{"inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc23\/10043"},{"type":"text","text":""},{"type":"text","text":"\n"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc22\/10035"},{"type":"text","text":""},{"type":"text","text":"\n"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/tech-talks\/110356"},{"type":"text","text":""},{"type":"text","text":"\n"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/maps\/mapkitjs\/"},{"type":"text","text":""},{"type":"text","text":"\n"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/applemapsserverapi"},{"type":"text","text":""},{"type":"text","text":"\n"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/mapkitjs\/creating_a_maps_identifier_and_a_private_key"},{"type":"text","text":""},{"type":"text","text":"\n"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/mapkitjs\/creating_and_using_tokens_with_mapkit_js"},{"type":"text","text":""},{"type":"text","text":"\n"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/maps\/"},{"type":"text","text":""},{"type":"text","text":"\n"},{"isActive":true,"type":"reference","identifier":"https:\/\/maps.developer.apple.com\/maps-server-api-playground"}],"type":"paragraph"},{"text":"Written By","level":2,"type":"heading","anchor":"Written-By"},{"columns":[{"content":[{"inlineContent":[{"type":"image","identifier":"https:\/\/avatars.githubusercontent.com\/u\/29355828?v=4"}],"type":"paragraph"}],"size":1},{"content":[{"type":"heading","anchor":"laurent-b","text":"laurent b","level":3},{"inlineContent":[{"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/multitudes","overridingTitle":"Contributed Notes","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/github.com\/multitudes","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/laurentbrusa.hashnode.dev\/","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","identifier":"https:\/\/x.com\/wrmultitudes","isActive":true}],"type":"paragraph"}],"size":4}],"numberOfColumns":5,"type":"row"},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}],"type":"paragraph"},{"text":"Related Sessions","level":2,"type":"heading","anchor":"Related-Sessions"},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10043-Meet-MapKit-for-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10035-Whats-new-in-MapKit"],"style":"list"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}]}],"kind":"article","sections":[],"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc22-10006-meet-apple-maps-server-apis"],"traits":[{"interfaceLanguage":"swift"}]}],"seeAlsoSections":[{"title":"New Tools & Frameworks","generated":true,"identifiers":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10148-Meet-Apple-Music-API-and-MusicKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110403-Meet-Background-Assets","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10116-Meet-CKTool-JS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10121-Meet-Focus-filters","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10156-Meet-ScreenCaptureKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110355-Meet-Swift-Async-Algorithms","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110359-Meet-Swift-Package-plugins","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110357-Meet-Swift-Regex","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10062-Meet-Transferable","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10003-Meet-WeatherKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10098-Meet-Web-Push-for-Safari","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10069-Meet-desktopclass-iPad","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110356-Meet-distributed-actors-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10092-Meet-passkeys","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110381-Meet-the-expanded-San-Francisco-font-family"]}],"sampleCodeDownload":{"kind":"sampleDownload","action":{"isActive":true,"type":"reference","overridingTitle":"Watch Video (13 min)","identifier":"https:\/\/developer.apple.com\/wwdc22\/10006"}},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22"]]},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110356-Meet-distributed-actors-in-Swift":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110356-Meet-distributed-actors-in-Swift","url":"\/documentation\/wwdcnotes\/wwdc22-110356-meet-distributed-actors-in-swift","role":"sampleCode","title":"Meet distributed actors in Swift","abstract":[{"type":"text","text":"Discover distributed actors — an extension of Swift’s actor model that simplifies development of distributed systems. We’ll explore how distributed actor isolation and location transparency can help you avoid the accidental complexity of networking, serialization, and other transport concerns when working with distributed apps and systems."}]},"WWDC22-10006-fetchCoordinates":{"type":"image","variants":[{"url":"\/images\/WWDC22-10006-fetchCoordinates.jpg","traits":["1x","light"]}],"alt":"Fetch Coordinates","identifier":"WWDC22-10006-fetchCoordinates"},"WWDC22-10006-25000":{"alt":"daily cap","type":"image","identifier":"WWDC22-10006-25000","variants":[{"url":"\/images\/WWDC22-10006-25000.jpg","traits":["1x","light"]}]},"https://developer.apple.com/maps/mapkitjs/":{"titleInlineContent":[{"type":"text","text":"Apple Developer: MapKit JS"}],"type":"link","url":"https:\/\/developer.apple.com\/maps\/mapkitjs\/","title":"Apple Developer: MapKit JS","identifier":"https:\/\/developer.apple.com\/maps\/mapkitjs\/"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10062-Meet-Transferable":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10062-Meet-Transferable","url":"\/documentation\/wwdcnotes\/wwdc22-10062-meet-transferable","role":"sampleCode","title":"Meet Transferable","abstract":[{"type":"text","text":"Meet Transferable: a model-layer protocol that allows for effortless support for sharing, drag and drop, copy\/paste, and other features in your app."}]},"https://developer.apple.com/wwdc22/10035":{"type":"link","titleInlineContent":[{"type":"text","text":"What’s new in MapKit - WWDC22"}],"url":"https:\/\/developer.apple.com\/wwdc22\/10035","identifier":"https:\/\/developer.apple.com\/wwdc22\/10035","title":"What’s new in MapKit - WWDC22"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110357-Meet-Swift-Regex":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110357-Meet-Swift-Regex","url":"\/documentation\/wwdcnotes\/wwdc22-110357-meet-swift-regex","role":"sampleCode","title":"Meet Swift Regex","abstract":[{"type":"text","text":"Learn how you can process strings more effectively when you take advantage of Swift Regex. Come for concise literals but stay for Regex builders — a new, declarative approach to string processing. We’ll also explore the Unicode models in String and share how Swift Regex can make Unicode-correct processing easy."}]},"https://x.com/wrmultitudes":{"titleInlineContent":[{"type":"text","text":"X\/Twitter"}],"type":"link","url":"https:\/\/x.com\/wrmultitudes","title":"X\/Twitter","identifier":"https:\/\/x.com\/wrmultitudes"},"https://developer.apple.com/wwdc23/10043":{"type":"link","titleInlineContent":[{"type":"text","text":"Meet MapKit for SwiftUI -  WWDC23"}],"url":"https:\/\/developer.apple.com\/wwdc23\/10043","identifier":"https:\/\/developer.apple.com\/wwdc23\/10043","title":"Meet MapKit for SwiftUI -  WWDC23"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10121-Meet-Focus-filters":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10121-Meet-Focus-filters","url":"\/documentation\/wwdcnotes\/wwdc22-10121-meet-focus-filters","role":"sampleCode","title":"Meet Focus filters","abstract":[{"type":"text","text":"Discover how you can customize app behaviors based on someone’s currently enabled Focus. We’ll show you how to use App Intents to define your app’s Focus filters, act on changes from the system, and present your app’s views in different ways. We’ll also explore how you can filter notifications and update badge counts."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10043-Meet-MapKit-for-SwiftUI":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc23-10043-meet-mapkit-for-swiftui","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10043-Meet-MapKit-for-SwiftUI","kind":"article","role":"sampleCode","title":"Meet MapKit for SwiftUI","abstract":[{"type":"text","text":"Discover how expanded SwiftUI support for MapKit has made it easier than ever for you to integrate Maps into your app. We’ll show you how to use SwiftUI to add annotations and overlays to a map, control the camera, and more."}]},"WWDC22-10006-comicBook":{"type":"image","variants":[{"url":"\/images\/WWDC22-10006-comicBook.jpg","traits":["1x","light"]}],"alt":"the comic Book","identifier":"WWDC22-10006-comicBook"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10003-Meet-WeatherKit":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10003-Meet-WeatherKit","url":"\/documentation\/wwdcnotes\/wwdc22-10003-meet-weatherkit","role":"sampleCode","title":"Meet WeatherKit","abstract":[{"type":"text","text":"WeatherKit offers valuable weather data for your apps and services to help people stay up to date on the latest conditions."}]},"WWDCNotes.png":{"alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}],"identifier":"WWDCNotes.png","type":"image"},"WWDC22-10006-serverAggregation":{"alt":"Server Aggregation","variants":[{"url":"\/images\/WWDC22-10006-serverAggregation.jpg","traits":["1x","light"]}],"identifier":"WWDC22-10006-serverAggregation","type":"image"},"https://github.com/multitudes":{"titleInlineContent":[{"type":"text","text":"GitHub"}],"identifier":"https:\/\/github.com\/multitudes","title":"GitHub","type":"link","url":"https:\/\/github.com\/multitudes"},"doc://WWDCNotes/documentation/WWDCNotes/multitudes":{"url":"\/documentation\/wwdcnotes\/multitudes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/multitudes","role":"sampleCode","abstract":[{"type":"text","text":"student at 42Berlin 🐬 | 🍎 Swift(UI) app dev  | speciality coffee ☕️ & cycling 🚴🏻‍♂️"}],"title":"laurent b (32 notes)","type":"topic","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110403-Meet-Background-Assets":{"role":"sampleCode","title":"Meet Background Assets","url":"\/documentation\/wwdcnotes\/wwdc22-110403-meet-background-assets","abstract":[{"text":"Discover how you can use the Background Assets framework to download large files directly from your CDN and improve the initial launch experience of your apps and games. We’ll show you how to schedule background downloads during initial app install, app updates, and periodically as someone uses the app. We’ll also explore how you can manage scheduled downloads to make sure people have the content they want, when they want it.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110403-Meet-Background-Assets","kind":"article","type":"topic"},"WWDC22-10006-maps":{"alt":"MapKit","variants":[{"url":"\/images\/WWDC22-10006-maps.jpg","traits":["1x","light"]}],"identifier":"WWDC22-10006-maps","type":"image"},"WWDC22-10006-mapkitajs":{"alt":"MapKit JS","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC22-10006-mapkitajs.jpg"}],"identifier":"WWDC22-10006-mapkitajs","type":"image"},"WWDC22-10006-basicArchitecture":{"alt":"Basic Architecture","variants":[{"url":"\/images\/WWDC22-10006-basicArchitecture.jpg","traits":["1x","light"]}],"identifier":"WWDC22-10006-basicArchitecture","type":"image"},"WWDC22-10006-fetch":{"alt":"Geocoding Example","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC22-10006-fetch.jpg"}],"identifier":"WWDC22-10006-fetch","type":"image"},"https://developer.apple.com/documentation/applemapsserverapi":{"titleInlineContent":[{"type":"text","text":"Apple Maps Server API"}],"identifier":"https:\/\/developer.apple.com\/documentation\/applemapsserverapi","title":"Apple Maps Server API","type":"link","url":"https:\/\/developer.apple.com\/documentation\/applemapsserverapi"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10098-Meet-Web-Push-for-Safari":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10098-Meet-Web-Push-for-Safari","url":"\/documentation\/wwdcnotes\/wwdc22-10098-meet-web-push-for-safari","role":"sampleCode","title":"Meet Web Push for Safari","abstract":[{"type":"text","text":"Bring better notifications to your websites and web apps in Safari on macOS with Web Push. We’ll show you how you can remotely send notifications to people through the web standards-based combination of Push API, Notifications API, and Service Workers."}]},"WWDC22-10006-authflow2":{"alt":"API interaction with Maps access token","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC22-10006-authflow2.jpg"}],"identifier":"WWDC22-10006-authflow2","type":"image"},"WWDC22-10006-fetchingETA":{"alt":"fetching ETA","variants":[{"url":"\/images\/WWDC22-10006-fetchingETA.jpg","traits":["1x","light"]}],"identifier":"WWDC22-10006-fetchingETA","type":"image"},"WWDC22-10006-devDash":{"alt":"dashboard","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC22-10006-devDash.jpg"}],"identifier":"WWDC22-10006-devDash","type":"image"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","type":"link","url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing"},"WWDC22-10006-exceedingq":{"alt":"Exceeding Quota","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC22-10006-exceedingq.jpg"}],"identifier":"WWDC22-10006-exceedingq","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10148-Meet-Apple-Music-API-and-MusicKit":{"title":"Meet Apple Music API and MusicKit","role":"sampleCode","type":"topic","abstract":[{"type":"text","text":"Explore the Apple Music API and MusicKit client frameworks. Learn how you can integrate Apple Music features into your web service or Android app, make requests to the Apple Music API to discover and fetch content, and personalize the experience for subscribers."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10148-Meet-Apple-Music-API-and-MusicKit","url":"\/documentation\/wwdcnotes\/wwdc22-10148-meet-apple-music-api-and-musickit","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10156-Meet-ScreenCaptureKit":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10156-Meet-ScreenCaptureKit","url":"\/documentation\/wwdcnotes\/wwdc22-10156-meet-screencapturekit","role":"sampleCode","title":"Meet ScreenCaptureKit","abstract":[{"type":"text","text":"Learn how ScreenCaptureKit can deliver high-performance screen capture for your macOS screen sharing applications, video conferencing apps, game streaming services, and more. We’ll explore the building blocks of this API, learn how to configure streams to capture on-screen video and audio content, and share tips for integrating it into your existing apps."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110381-Meet-the-expanded-San-Francisco-font-family":{"url":"\/documentation\/wwdcnotes\/wwdc22-110381-meet-the-expanded-san-francisco-font-family","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110381-Meet-the-expanded-San-Francisco-font-family","role":"sampleCode","type":"topic","kind":"article","abstract":[{"type":"text","text":"Discover the latest additions to San Francisco – the system font for Apple platforms – and find out how they can provide more control and versatility when designing interfaces. In addition to weights and optical sizes, San Francisco now supports three new width styles: Condensed, Compressed, and Expanded. We’ll also take you through the linguistic expansion of San Francisco and learn more about the feature-rich Arabic system font families: SF Arabic and SF Arabic Rounded."}],"title":"Meet the expanded San Francisco font family"},"WWDC22-10006-ETA":{"variants":[{"url":"\/images\/WWDC22-10006-ETA.jpg","traits":["1x","light"]}],"type":"image","identifier":"WWDC22-10006-ETA","alt":"fetching ETA"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10069-Meet-desktopclass-iPad":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10069-Meet-desktopclass-iPad","url":"\/documentation\/wwdcnotes\/wwdc22-10069-meet-desktopclass-ipad","role":"sampleCode","title":"Meet desktop-class iPad","abstract":[{"type":"text","text":"Learn how you can bring desktop-class features to your iPad app. Explore updates to UINavigationBar that bring more discoverability and customizability to your app’s features. Find out how the latest updates to UIKit can help make it easier and faster for people to explore content in your app. Lastly, we’ll share a few updates on how it’s easier than ever to bring your iPad app to the desktop with Mac Catalyst."}]},"WWDC22-10006-fullStack":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDC22-10006-fullStack.jpg"}],"type":"image","identifier":"WWDC22-10006-fullStack","alt":"the stack"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10116-Meet-CKTool-JS":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10116-Meet-CKTool-JS","url":"\/documentation\/wwdcnotes\/wwdc22-10116-meet-cktool-js","role":"sampleCode","title":"Meet CKTool JS","abstract":[{"type":"text","text":"Discover how you can manage and automate your iCloud containers using CKTool JS. We’ll show you how to configure CKTool JS to manage your containers’ schemas, modify records with ease, and manipulate data on the fly. We’ll also explore how you can integrate CKTool JS into your automation and tooling workflows."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10092-Meet-passkeys":{"abstract":[{"text":"It’s time for a security upgrade: Learn how to add support for passkeys to create a quick and easy sign in experience for people, all while offering a radical increase to account security. Passkeys are simple and strong credentials built to eliminate phishing attacks. We’ll share how passkeys are designed with security in mind, show you how people will use them, go over how to integrate passkeys in your log in flow, and explore the platform and web APIs you need to adopt this feature.","type":"text"}],"type":"topic","title":"Meet passkeys","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22-10092-meet-passkeys","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10092-Meet-passkeys","role":"sampleCode"},"https://developer.apple.com/maps/":{"url":"https:\/\/developer.apple.com\/maps\/","type":"link","identifier":"https:\/\/developer.apple.com\/maps\/","titleInlineContent":[{"type":"text","text":"Maps for Developers"}],"title":"Maps for Developers"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110359-Meet-Swift-Package-plugins":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110359-Meet-Swift-Package-plugins","url":"\/documentation\/wwdcnotes\/wwdc22-110359-meet-swift-package-plugins","role":"sampleCode","title":"Meet Swift Package plugins","abstract":[{"type":"text","text":"Discover how you can perform actions on Swift packages and Xcode projects with Swift package plugins. We’ll go over how these plugins work and explore how you can use them to generate source code and automate your development workflow."}]},"WWDC22-10006-server":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDC22-10006-server.jpg"}],"type":"image","identifier":"WWDC22-10006-server","alt":"MapKit server APIs"},"WWDC22-10006-authflow":{"variants":[{"url":"\/images\/WWDC22-10006-authflow.jpg","traits":["1x","light"]}],"type":"image","identifier":"WWDC22-10006-authflow","alt":"Authentication flow"},"https://avatars.githubusercontent.com/u/29355828?v=4":{"variants":[{"traits":["1x","light"],"url":"https:\/\/avatars.githubusercontent.com\/u\/29355828?v=4"}],"type":"image","identifier":"https:\/\/avatars.githubusercontent.com\/u\/29355828?v=4","alt":"Profile image of laurent b"},"https://maps.developer.apple.com/maps-server-api-playground":{"url":"https:\/\/maps.developer.apple.com\/maps-server-api-playground","type":"link","identifier":"https:\/\/maps.developer.apple.com\/maps-server-api-playground","titleInlineContent":[{"type":"text","text":"Maps Server API test environment"}],"title":"Maps Server API test environment"},"https://laurentbrusa.hashnode.dev/":{"url":"https:\/\/laurentbrusa.hashnode.dev\/","type":"link","identifier":"https:\/\/laurentbrusa.hashnode.dev\/","titleInlineContent":[{"type":"text","text":"Blog"}],"title":"Blog"},"WWDC22-10006-accessToken":{"variants":[{"url":"\/images\/WWDC22-10006-accessToken.jpg","traits":["1x","light"]}],"type":"image","identifier":"WWDC22-10006-accessToken","alt":"accessToken"},"https://developer.apple.com/videos/play/tech-talks/110356":{"url":"https:\/\/developer.apple.com\/videos\/play\/tech-talks\/110356","type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/tech-talks\/110356","titleInlineContent":[{"type":"text","text":"What’s new for enterprise developers"}],"title":"What’s new for enterprise developers"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110355-Meet-Swift-Async-Algorithms":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110355-Meet-Swift-Async-Algorithms","url":"\/documentation\/wwdcnotes\/wwdc22-110355-meet-swift-async-algorithms","role":"sampleCode","title":"Meet Swift Async Algorithms","abstract":[{"type":"text","text":"Discover the latest open source Swift package from Apple: Swift Async Algorithms. We’ll explore algorithms from this package that you can use with AsyncSequence, including zip, merge, and throttle. Follow along with us as we use these algorithms to build a great messaging app. We’ll also share best practices for combining multiple AsyncSequences and using the Swift Clock type to work with values over time."}]},"https://developer.apple.com/documentation/mapkitjs/creating_a_maps_identifier_and_a_private_key":{"url":"https:\/\/developer.apple.com\/documentation\/mapkitjs\/creating_a_maps_identifier_and_a_private_key","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/mapkitjs\/creating_a_maps_identifier_and_a_private_key","titleInlineContent":[{"type":"text","text":"Creating a Maps identifier and a private key"}],"title":"Creating a Maps identifier and a private key"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22":{"kind":"article","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"url":"\/documentation\/wwdcnotes\/wwdc22","title":"WWDC22","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22","role":"collectionGroup","type":"topic","abstract":[{"text":"Xcode 14, Swift 5.7, iOS 16, macOS 13, tvOS 16, watchOS 9.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"WeatherKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"ScreenCaptureKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"Swift Regex"},{"type":"text","text":", and more."}]},"https://developer.apple.com/wwdc22/10006":{"checksum":null,"url":"https:\/\/developer.apple.com\/wwdc22\/10006","type":"download","identifier":"https:\/\/developer.apple.com\/wwdc22\/10006"},"WWDC22-10006-three":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC22-10006-three.jpg"}],"alt":"MapKit server APIs","identifier":"WWDC22-10006-three"},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"url":"\/documentation\/wwdcnotes","title":"WWDC Notes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","role":"collection","type":"topic","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10035-Whats-new-in-MapKit":{"url":"\/documentation\/wwdcnotes\/wwdc22-10035-whats-new-in-mapkit","kind":"article","abstract":[{"type":"text","text":"Come along with us as MapKit enters a new dimension. We’ll show you how you can upgrade your app to use the latest map and support the highly-detailed 3D City Experience. Learn how you can visualize data using overlays while ensuring they integrate smoothly into the 3D map. We’ll also cover how to create interactive and immersive experiences with Selectable Map Features and Look Around APIs."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10035-Whats-new-in-MapKit","role":"sampleCode","title":"What’s new in MapKit"},"https://developer.apple.com/documentation/mapkitjs/creating_and_using_tokens_with_mapkit_js":{"titleInlineContent":[{"type":"text","text":"Creating and using tokens with MapKit JS"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/mapkitjs\/creating_and_using_tokens_with_mapkit_js","title":"Creating and using tokens with MapKit JS","identifier":"https:\/\/developer.apple.com\/documentation\/mapkitjs\/creating_and_using_tokens_with_mapkit_js"}}}