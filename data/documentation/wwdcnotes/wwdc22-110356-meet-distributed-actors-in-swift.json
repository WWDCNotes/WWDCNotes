{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110356-Meet-distributed-actors-in-Swift"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"roleHeading":"WWDC22","modules":[{"name":"WWDC Notes"}],"role":"sampleCode","title":"Meet distributed actors in Swift"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22"]]},"sampleCodeDownload":{"action":{"isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc22\/110356","overridingTitle":"Watch Video (25 min)","type":"reference"},"kind":"sampleDownload"},"kind":"article","abstract":[{"type":"text","text":"Discover distributed actors ‚Äî an extension of Swift‚Äôs actor model that simplifies development of distributed systems. We‚Äôll explore how distributed actor isolation and location transparency can help you avoid the accidental complexity of networking, serialization, and other transport concerns when working with distributed apps and systems."}],"primaryContentSections":[{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"style":"note","type":"aside","name":"Note","content":[{"inlineContent":[{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/tictacfish_implementing_a_game_using_distributed_actors","type":"reference"}],"type":"paragraph"}]},{"anchor":"Introduction","type":"heading","text":"Introduction","level":2},{"type":"paragraph","inlineContent":[{"text":"Swift Actors","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"designed to protect you from low-level data races in the same process"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"compile-time enforced actor isolation checks"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Distributed actors"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"designed to protect you from low-level data races across multiple processes","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"e.g., communication among multiple devices or servers in a cluster"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Distributed-actors","type":"heading","text":"Distributed actors","level":2},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"By using distributed actors, we‚Äôre able to establish a channel between two processes and send messages between them"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Distributed actors still isolate their state and still can only communicate using asynchronous messages"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"It‚Äôs ok to have multiple distributed actors in the same process"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Distributed actors are just actors, but can participate in remote interactions whenever necessary","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Distributed actors always belong to some distributed actor system, which handles all the serialization and networking necessary to perform remote calls","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Every distributed actor is assigned an ","type":"text"},{"type":"codeVoice","code":"id"},{"text":", uniquely identify said actor in the entire distributed actor system that it is part of.","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"code":"id","type":"codeVoice"},{"type":"text","text":"s are assigned by the distributed actor system as the actor is initialized, and later managed by that system (we cannot declare or assign the "},{"code":"id","type":"codeVoice"},{"type":"text","text":" property manually)"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Location transparency:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"ability to be potentially remote without having to change how we interact with such distributed actor","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"regardless where a distributed actor is located, we can interact with it the same way"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"allows us to transparently move our actors, without having to change their implementation","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Road-to-distributed-actors","type":"heading","text":"Road to distributed actors","level":2},{"items":[{"content":[{"inlineContent":[{"text":"Pick a local actor that you‚Äôd like to move to distribute actor","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Turn it into a (still local) distributed actor","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Move the distributed actor "},{"type":"codeVoice","code":"ActorSystem"},{"type":"text","text":" to be remote"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Setup server side app","type":"text"}]}]}],"type":"orderedList"},{"anchor":"Example","type":"heading","text":"Example","level":3},{"items":[{"content":[{"inlineContent":[{"text":"Pick a local actor that you‚Äôd like to move to distribute actor","type":"text"}],"type":"paragraph"}]}],"type":"orderedList"},{"type":"codeListing","syntax":"swift","code":["public actor BotPlayer: Identifiable {","  nonisolated public let id: ActorIdentity = .random","  ","  var ai: RandomPlayerBotAI","  var gameState: GameState","  ","  public init(team: CharacterTeam) {","    self.gameState = .init()","    self.ai = RandomPlayerBotAI(playerID: self.id, team: team)","  }","  ","  public func makeMove() throws -> GameMove {","    return try ai.decideNextMove(given: &gameState)","  }","  ","  public func opponentMoved(_ move: GameMove) async throws {","    try gameState.mark(move)","  }","}"]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Turn it into a (still local) distributed actor"}]}]}],"start":2,"type":"orderedList"},{"items":[{"content":[{"inlineContent":[{"text":"import the ","type":"text"},{"code":"Distributed","type":"codeVoice"},{"text":" module (","type":"text"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/distributed","isActive":true},{"text":")","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"add the "},{"type":"codeVoice","code":"distributed"},{"type":"text","text":" keyword in front of the "},{"type":"codeVoice","code":"actor"},{"type":"text","text":" keyword, this way your actor will:"}]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"conform to "},{"code":"DistributedActor","type":"codeVoice"},{"type":"text","text":" protocol"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"enable a number of additional compile time checks","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"The compiler will asks as to declare which ","type":"text"},{"code":"ActorSystem","type":"codeVoice"},{"text":" our distributed actor can be used with","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"we can use one of the systems that come with the "},{"type":"codeVoice","code":"Distributed"},{"type":"text","text":" module, such as "},{"type":"codeVoice","code":"LocalTestingDistributedActor"},{"type":"text","text":", or define our own"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"we can declare a module-wide "},{"code":"DefaultDistributedActorSystem","type":"codeVoice"},{"type":"text","text":" typealias (used by all distributed actors), or an "},{"code":"ActorSystem","type":"codeVoice"},{"type":"text","text":" typealias in the body of the specific actor"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"each ","type":"text"},{"code":"distributed actor","type":"codeVoice"},{"text":" needs to declare an ","type":"text"},{"code":"actorSystem","type":"codeVoice"},{"text":" compiler synthesized property - accept an actor system in the initializer, and pass it through to the property","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"add the ","type":"text"},{"type":"codeVoice","code":"distributed"},{"text":" keyboard to instance methods that you‚Äôd like to expose for remote calls","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"ensure that all ","type":"text"},{"code":"distributed","type":"codeVoice"},{"text":" methods parameters and return values conform to the serialization requirement of the actor system (e.g., ","type":"text"},{"code":"Codable","type":"codeVoice"},{"text":")","type":"text"}],"type":"paragraph"}]}]}]}],"type":"unorderedList"},{"type":"codeListing","syntax":"swift","code":["import Distributed \/\/ üëàüèª import the distributed module","","\/\/         üëáüèª add distributed attribute","public distributed actor BotPlayer: Identifiable {","  typealias ActorSystem = LocalTestingDistributedActorSystem \/\/ üëàüèª declare the ActorSystem this actor belongs to","  ","  var ai: RandomPlayerBotAI","  var gameState: GameState","  ","  \/\/                                  üëáüèª accept the actorSystem during init","  public init(team: CharacterTeam, actorSystem: ActorSystem) {","    self.actorSystem = actorSystem \/\/ üëàüèª set compiler synthesized property","    self.gameState = .init()","    self.ai = RandomPlayerBotAI(playerID: self.id, team: team)","  }","  ","  \/\/        üëáüèª add distributed keyword to instance methods that can be called remotely","  public distributed func makeMove() throws -> GameMove {","    return try ai.decideNextMove(given: &gameState)","  }","  ","  public distributed func opponentMoved(_ move: GameMove) async throws {","    try gameState.mark(move)","  }","}"]},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Move the distributed actor "},{"type":"codeVoice","code":"ActorSystem"},{"type":"text","text":" to be remote"}],"type":"paragraph"}]}],"start":3,"type":"orderedList"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This step requires you to define your own "},{"type":"codeVoice","code":"ActorSystem"},{"type":"text","text":", which will be used in both your app and your server"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"see "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swift\/tictacfish_implementing_a_game_using_distributed_actors","isActive":true,"overridingTitleInlineContent":[{"text":"sample app","type":"text"}],"overridingTitle":"sample app"},{"type":"text","text":" for a "},{"type":"codeVoice","code":"SampleWebSocketActorSystem"},{"type":"text","text":" example"}],"type":"paragraph"}]}],"type":"unorderedList"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Setup server side app"}],"type":"paragraph"}]}],"start":4,"type":"orderedList"},{"type":"codeListing","syntax":"swift","code":["import Distributed","import TicTacFishShared","","\/\/\/ Stand alone server-side swift application, running our SampleWebSocketActorSystem in server mode.","@main","struct Boot {","  ","  static func main() {","    let system = try! SampleWebSocketActorSystem(mode: .serverOnly(host: \"localhost\", port: 8888))","    ","    \/\/       üëáüèª this is a pattern in sample app, not an API","    system.registerOnDemandResolveHandler { id in","      \/\/ We create new BotPlayers \"ad-hoc\" as they are requested for.","      \/\/ Subsequent resolves are able to resolve the same instance.","      if system.isBotID(id) {","        return system.makeActorWithID(id) {","          OnlineBotPlayer(team: .rodents, actorSystem: system)","        }","      }","      ","      return nil \/\/ unable to create-on-demand for given id","    }","    ","    print(\"========================================================\")","    print(\"=== TicTacFish Server Running on: ws:\/\/\\(system.host):\\(system.port) ==\")","    print(\"========================================================\")","    ","    try await server.terminated \/\/ waits effectively forever (until we shut down the system)","  }","}"]},{"anchor":"Cluster-Actor-System","type":"heading","text":"Cluster Actor System","level":3},{"type":"paragraph","inlineContent":[{"text":"Apple has made available a reference, server-side focused, ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-distributed-actors","isActive":true},{"text":".","type":"text"}]},{"anchor":"Written-By","type":"heading","text":"Written By","level":2},{"numberOfColumns":5,"type":"row","columns":[{"content":[{"inlineContent":[{"type":"image","identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4"}],"type":"paragraph"}],"size":1},{"content":[{"anchor":"Federico-Zanetello","type":"heading","text":"Federico Zanetello","level":3},{"inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitle":"Contributed Notes","isActive":true,"type":"reference"},{"type":"text","text":" "},{"identifier":"zntfdr.dev","isActive":true,"type":"reference"}],"type":"paragraph"}],"size":4}]},{"anchor":"Related-Sessions","type":"heading","text":"Related Sessions","level":2},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110354-Whats-new-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110360-Use-Xcode-for-serverside-development","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10133-Protect-mutable-state-with-Swift-actors"],"style":"list","type":"links"},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}],"kind":"content"}],"seeAlsoSections":[{"title":"New Tools & Frameworks","generated":true,"identifiers":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10006-Meet-Apple-Maps-Server-APIs","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10148-Meet-Apple-Music-API-and-MusicKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110403-Meet-Background-Assets","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10116-Meet-CKTool-JS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10121-Meet-Focus-filters","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10156-Meet-ScreenCaptureKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110355-Meet-Swift-Async-Algorithms","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110359-Meet-Swift-Package-plugins","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110357-Meet-Swift-Regex","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10062-Meet-Transferable","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10003-Meet-WeatherKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10098-Meet-Web-Push-for-Safari","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10069-Meet-desktopclass-iPad","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10092-Meet-passkeys","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110381-Meet-the-expanded-San-Francisco-font-family"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc22-110356-meet-distributed-actors-in-swift"]}],"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110381-Meet-the-expanded-San-Francisco-font-family":{"abstract":[{"text":"Discover the latest additions to San Francisco ‚Äì the system font for Apple platforms ‚Äì and find out how they can provide more control and versatility when designing interfaces. In addition to weights and optical sizes, San Francisco now supports three new width styles: Condensed, Compressed, and Expanded. We‚Äôll also take you through the linguistic expansion of San Francisco and learn more about the feature-rich Arabic system font families: SF Arabic and SF Arabic Rounded.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110381-Meet-the-expanded-San-Francisco-font-family","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-110381-meet-the-expanded-san-francisco-font-family","kind":"article","role":"sampleCode","title":"Meet the expanded San Francisco font family"},"https://developer.apple.com/wwdc22/110356":{"identifier":"https:\/\/developer.apple.com\/wwdc22\/110356","url":"https:\/\/developer.apple.com\/wwdc22\/110356","type":"download","checksum":null},"https://avatars.githubusercontent.com/u/5277837?v=4":{"variants":[{"url":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4","traits":["1x","light"]}],"identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4","type":"image","alt":"Profile image of Federico Zanetello"},"https://developer.apple.com/documentation/swift/tictacfish_implementing_a_game_using_distributed_actors":{"url":"https:\/\/developer.apple.com\/documentation\/swift\/tictacfish_implementing_a_game_using_distributed_actors","titleInlineContent":[{"text":"Sample app","type":"text"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swift\/tictacfish_implementing_a_game_using_distributed_actors","title":"Sample app","type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110354-Whats-new-in-Swift":{"abstract":[{"text":"Join us for an update on Swift. We‚Äôll take you through performance improvements, explore more secure and extensible Swift packages, and share advancements in Swift concurrency. We‚Äôll also introduce you to Swift Regex, better generics, and other tools built into the language to help you write more flexible & expressive code.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc22-110354-whats-new-in-swift","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110354-Whats-new-in-Swift","role":"sampleCode","title":"What‚Äôs new in Swift","kind":"article","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"kind":"article","title":"Federico Zanetello (214 notes)","abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"type":"topic","url":"\/documentation\/wwdcnotes\/zntfdr","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10156-Meet-ScreenCaptureKit":{"abstract":[{"text":"Learn how ScreenCaptureKit can deliver high-performance screen capture for your macOS screen sharing applications, video conferencing apps, game streaming services, and more. We‚Äôll explore the building blocks of this API, learn how to configure streams to capture on-screen video and audio content, and share tips for integrating it into your existing apps.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc22-10156-meet-screencapturekit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10156-Meet-ScreenCaptureKit","role":"sampleCode","title":"Meet ScreenCaptureKit","kind":"article","type":"topic"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"alt":null,"type":"image"},"https://github.com/apple/swift-distributed-actors":{"identifier":"https:\/\/github.com\/apple\/swift-distributed-actors","url":"https:\/\/github.com\/apple\/swift-distributed-actors","type":"link","titleInlineContent":[{"text":"cluster actor system implementation","type":"text"}],"title":"cluster actor system implementation"},"https://developer.apple.com/documentation/distributed":{"identifier":"https:\/\/developer.apple.com\/documentation\/distributed","url":"https:\/\/developer.apple.com\/documentation\/distributed","type":"link","titleInlineContent":[{"text":"api docs","type":"text"}],"title":"api docs"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10148-Meet-Apple-Music-API-and-MusicKit":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10148-Meet-Apple-Music-API-and-MusicKit","url":"\/documentation\/wwdcnotes\/wwdc22-10148-meet-apple-music-api-and-musickit","abstract":[{"text":"Explore the Apple Music API and MusicKit client frameworks. Learn how you can integrate Apple Music features into your web service or Android app, make requests to the Apple Music API to discover and fetch content, and personalize the experience for subscribers.","type":"text"}],"kind":"article","role":"sampleCode","type":"topic","title":"Meet Apple Music API and MusicKit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110357-Meet-Swift-Regex":{"abstract":[{"text":"Learn how you can process strings more effectively when you take advantage of Swift Regex. Come for concise literals but stay for Regex builders ‚Äî a new, declarative approach to string processing. We‚Äôll also explore the Unicode models in String and share how Swift Regex can make Unicode-correct processing easy.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110357-Meet-Swift-Regex","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-110357-meet-swift-regex","kind":"article","role":"sampleCode","title":"Meet Swift Regex"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10098-Meet-Web-Push-for-Safari":{"abstract":[{"text":"Bring better notifications to your websites and web apps in Safari on macOS with Web Push. We‚Äôll show you how you can remotely send notifications to people through the web standards-based combination of Push API, Notifications API, and Service Workers.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc22-10098-meet-web-push-for-safari","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10098-Meet-Web-Push-for-Safari","role":"sampleCode","title":"Meet Web Push for Safari","kind":"article","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10133-Protect-mutable-state-with-Swift-actors":{"abstract":[{"text":"Data races occur when two separate threads concurrently access the same mutable state. They are trivial to construct, but are notoriously hard to debug.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10133-Protect-mutable-state-with-Swift-actors","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10133-protect-mutable-state-with-swift-actors","kind":"article","role":"sampleCode","title":"Protect mutable state with Swift actors"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10006-Meet-Apple-Maps-Server-APIs":{"abstract":[{"text":"Simplify your app‚Äôs mapping architecture by implementing the Apple Maps stack across MapKit, MapKit JS, and Apple Maps Server APIs. Learn how these APIs can reduce network calls and increase power efficiency, which can help improve the overall performance of your app. We‚Äôll show you how to use geocoding and estimated time of arrival APIs to build functionality for a simple store locator, and explore the API authentication flow.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc22-10006-meet-apple-maps-server-apis","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10006-Meet-Apple-Maps-Server-APIs","role":"sampleCode","title":"Meet Apple Maps Server APIs","kind":"article","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110359-Meet-Swift-Package-plugins":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110359-Meet-Swift-Package-plugins","role":"sampleCode","kind":"article","title":"Meet Swift Package plugins","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-110359-meet-swift-package-plugins","abstract":[{"text":"Discover how you can perform actions on Swift packages and Xcode projects with Swift package plugins. We‚Äôll go over how these plugins work and explore how you can use them to generate source code and automate your development workflow.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10069-Meet-desktopclass-iPad":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10069-Meet-desktopclass-iPad","role":"sampleCode","kind":"article","title":"Meet desktop-class iPad","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-10069-meet-desktopclass-ipad","abstract":[{"text":"Learn how you can bring desktop-class features to your iPad app. Explore updates to UINavigationBar that bring more discoverability and customizability to your app‚Äôs features. Find out how the latest updates to UIKit can help make it easier and faster for people to explore content in your app. Lastly, we‚Äôll share a few updates on how it‚Äôs easier than ever to bring your iPad app to the desktop with Mac Catalyst.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10003-Meet-WeatherKit":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10003-Meet-WeatherKit","role":"sampleCode","kind":"article","title":"Meet WeatherKit","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-10003-meet-weatherkit","abstract":[{"text":"WeatherKit offers valuable weather data for your apps and services to help people stay up to date on the latest conditions.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10116-Meet-CKTool-JS":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10116-Meet-CKTool-JS","role":"sampleCode","kind":"article","title":"Meet CKTool JS","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-10116-meet-cktool-js","abstract":[{"text":"Discover how you can manage and automate your iCloud containers using CKTool JS. We‚Äôll show you how to configure CKTool JS to manage your containers‚Äô schemas, modify records with ease, and manipulate data on the fly. We‚Äôll also explore how you can integrate CKTool JS into your automation and tooling workflows.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110403-Meet-Background-Assets":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110403-Meet-Background-Assets","role":"sampleCode","kind":"article","title":"Meet Background Assets","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-110403-meet-background-assets","abstract":[{"text":"Discover how you can use the Background Assets framework to download large files directly from your CDN and improve the initial launch experience of your apps and games. We‚Äôll show you how to schedule background downloads during initial app install, app updates, and periodically as someone uses the app. We‚Äôll also explore how you can manage scheduled downloads to make sure people have the content they want, when they want it.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10121-Meet-Focus-filters":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10121-Meet-Focus-filters","role":"sampleCode","kind":"article","title":"Meet Focus filters","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-10121-meet-focus-filters","abstract":[{"text":"Discover how you can customize app behaviors based on someone‚Äôs currently enabled Focus. We‚Äôll show you how to use App Intents to define your app‚Äôs Focus filters, act on changes from the system, and present your app‚Äôs views in different ways. We‚Äôll also explore how you can filter notifications and update badge counts.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency":{"type":"topic","role":"sampleCode","title":"Eliminate data races using Swift Concurrency","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency","url":"\/documentation\/wwdcnotes\/wwdc22-110351-eliminate-data-races-using-swift-concurrency","abstract":[{"type":"text","text":"Join us as we explore one of the core concepts in Swift concurrency: isolation of tasks and actors. We‚Äôll take you through Swift‚Äôs approach to eliminating data races and its effect on app architecture. We‚Äôll also discuss the importance of atomicity in your code, share the nuances of Sendable checking to maintain isolation, and revisit assumptions about ordering work in a concurrent system."}],"kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110355-Meet-Swift-Async-Algorithms":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110355-Meet-Swift-Async-Algorithms","role":"sampleCode","kind":"article","title":"Meet Swift Async Algorithms","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-110355-meet-swift-async-algorithms","abstract":[{"text":"Discover the latest open source Swift package from Apple: Swift Async Algorithms. We‚Äôll explore algorithms from this package that you can use with AsyncSequence, including zip, merge, and throttle. Follow along with us as we use these algorithms to build a great messaging app. We‚Äôll also share best practices for combining multiple AsyncSequences and using the Swift Clock type to work with values over time.","type":"text"}]},"zntfdr.dev":{"identifier":"zntfdr.dev","title":"Blog","type":"link","url":"zntfdr.dev","titleInlineContent":[{"text":"Blog","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10062-Meet-Transferable":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10062-Meet-Transferable","role":"sampleCode","kind":"article","title":"Meet Transferable","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-10062-meet-transferable","abstract":[{"text":"Meet Transferable: a model-layer protocol that allows for effortless support for sharing, drag and drop, copy\/paste, and other features in your app.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","url":"\/documentation\/wwdcnotes","title":"WWDC Notes","type":"topic","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"images":[{"identifier":"WWDCNotes.png","type":"icon"}],"kind":"symbol","role":"collection"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110360-Use-Xcode-for-serverside-development":{"kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-110360-use-xcode-for-serverside-development","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110360-Use-Xcode-for-serverside-development","title":"Use Xcode for server-side development","role":"sampleCode","abstract":[{"text":"Discover how you can create, build, and deploy a Swift server app alongside your pre-existing Xcode projects within the same workspace. We‚Äôll show you how to create your own local app and test endpoints using Xcode, and explore how you can structure and share code between server and client apps to ease your development process","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22":{"kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22","title":"WWDC22","role":"collectionGroup","abstract":[{"text":"Xcode 14, Swift 5.7, iOS 16, macOS 13, tvOS 16, watchOS 9.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"type":"codeVoice","code":"WeatherKit"},{"text":", ","type":"text"},{"type":"codeVoice","code":"ScreenCaptureKit"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Swift Regex"},{"text":", and more.","type":"text"}],"images":[{"type":"icon","identifier":"WWDCNotes.png"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10092-Meet-passkeys":{"abstract":[{"text":"It‚Äôs time for a security upgrade: Learn how to add support for passkeys to create a quick and easy sign in experience for people, all while offering a radical increase to account security. Passkeys are simple and strong credentials built to eliminate phishing attacks. We‚Äôll share how passkeys are designed with security in mind, show you how people will use them, go over how to integrate passkeys in your log in flow, and explore the platform and web APIs you need to adopt this feature.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc22-10092-meet-passkeys","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10092-Meet-passkeys","role":"sampleCode","kind":"article","title":"Meet passkeys"}}}