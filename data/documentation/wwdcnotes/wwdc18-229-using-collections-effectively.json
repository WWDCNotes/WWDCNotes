{"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18"]]},"sections":[],"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc18-229-using-collections-effectively"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-229-Using-Collections-Effectively","interfaceLanguage":"swift"},"sampleCodeDownload":{"action":{"identifier":"https:\/\/developer.apple.com\/wwdc18\/229","overridingTitle":"Watch Video (37 min)","isActive":true,"type":"reference"},"kind":"sampleDownload"},"metadata":{"role":"sampleCode","roleHeading":"WWDC18","title":"Using Collections Effectively","modules":[{"name":"WWDC Notes"}]},"primaryContentSections":[{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Swift protocols for collections represent a good starting point for thinking about collection operations in swift."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Numerous types conform to these protocols (IndexPaths, Data etc..)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Slicing and Lazy collections represent optimizations and deferred operations but understanding the underlying memory semantics is important.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Mutable collections should be avoided and holding onto calculated indexes inherently dangerous when dealing with mutable collections","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Need to work with Thread Sanitizer TSAN more.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Collections are optimized for single thread access (but thread safe right?)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Bridging between objective-c and swift can affect performance. Look for bridge api calls and perf in Time Profiler.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"NS~Collection types (ref type) vs Swift collections.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Use foundation collections (","type":"text"},{"type":"codeVoice","code":"NS.."},{"text":")  when you reference semantics and the elements are known to be reference types.","type":"text"}]}]}],"type":"unorderedList"},{"anchor":"Written-By","type":"heading","level":2,"text":"Written By"},{"type":"row","numberOfColumns":5,"columns":[{"size":1,"content":[{"inlineContent":[{"type":"image","identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4"}],"type":"paragraph"}]},{"size":4,"content":[{"text":"Federico Zanetello","type":"heading","anchor":"Federico-Zanetello","level":3},{"type":"paragraph","inlineContent":[{"isActive":true,"overridingTitle":"Contributed Notes","type":"reference","overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"type":"text","text":" "},{"isActive":true,"identifier":"https:\/\/github.com\/zntfdr","type":"reference"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"identifier":"https:\/\/zntfdr.dev","type":"reference"}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}]},{"anchor":"Related-Sessions","type":"heading","level":2,"text":"Related Sessions"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-215-Advances-in-Collection-View-Layout","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-406-Swift-Generics-Expanded"],"type":"links","style":"list"},{"type":"small","inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}]},{"type":"small","inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}],"kind":"content"}],"kind":"article","abstract":[{"type":"text","text":"Every app uses collections! Go beyond the basics with specific tips on how best to use indices, slices, bridging, laziness, and reference types. Gain better understanding of when to use each collection for best performance."}],"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-215-Advances-in-Collection-View-Layout":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-215-Advances-in-Collection-View-Layout","kind":"article","abstract":[{"text":"Collection View Layouts make it easy to build rich interactive collections. Learn how to make dynamic and responsive layouts that range in complexity from basic lists to an advanced, multi-dimensional browsing experience.","type":"text"}],"role":"sampleCode","title":"Advances in Collection View Layout","url":"\/documentation\/wwdcnotes\/wwdc19-215-advances-in-collection-view-layout","type":"topic"},"https://avatars.githubusercontent.com/u/5277837?v=4":{"variants":[{"url":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4","traits":["1x","light"]}],"alt":"Profile image of Federico Zanetello","type":"image","identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"type":"topic","title":"Federico Zanetello (332 notes)","kind":"article","images":[{"type":"card","identifier":"zntfdr.jpeg"},{"type":"icon","identifier":"zntfdr.jpeg"}],"url":"\/documentation\/wwdcnotes\/zntfdr","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","title":"WWDC Notes","kind":"symbol","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"url":"\/documentation\/wwdcnotes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"role":"collection"},"https://zntfdr.dev":{"url":"https:\/\/zntfdr.dev","title":"Blog","type":"link","titleInlineContent":[{"text":"Blog","type":"text"}],"identifier":"https:\/\/zntfdr.dev"},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"WWDCNotes.png"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","type":"link","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC18":{"title":"WWDC18","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18","type":"topic","abstract":[{"type":"text","text":"Xcode 10, Swift 4.2, iOS 12, macOS 10.14 (Mojave), tvOS 12, watchOS 5."}],"url":"\/documentation\/wwdcnotes\/wwdc18","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"role":"collectionGroup"},"zntfdr.jpeg":{"variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"zntfdr.jpeg"},"https://github.com/zntfdr":{"url":"https:\/\/github.com\/zntfdr","title":"GitHub","type":"link","titleInlineContent":[{"text":"GitHub","type":"text"}],"identifier":"https:\/\/github.com\/zntfdr"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC18-406-Swift-Generics-Expanded":{"title":"Swift Generics (Expanded)","kind":"article","type":"topic","abstract":[{"text":"Generics are one of the most powerful features of Swift, enabling you to write flexible, reusable components while maintaining static type information. Learn about the design of Swift’s generics, including how to generalize protocols, leverage protocol inheritance to express the varying capabilities of related types, build composable generic components with conditional conformances, and reason about the interaction between class inheritance and generics. This expanded version of the WWDC 2018 session includes a brand-new discussion of recursive constraints.","type":"text"}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC18-406-Swift-Generics-Expanded","url":"\/documentation\/wwdcnotes\/wwdc18-406-swift-generics-expanded"},"https://developer.apple.com/wwdc18/229":{"url":"https:\/\/developer.apple.com\/wwdc18\/229","type":"download","identifier":"https:\/\/developer.apple.com\/wwdc18\/229","checksum":null}}}