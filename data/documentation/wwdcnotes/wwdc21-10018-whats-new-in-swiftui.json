{"sections":[],"kind":"article","sampleCodeDownload":{"action":{"isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc21\/10018","overridingTitle":"Watch Video (40 min)","type":"reference"},"kind":"sampleDownload"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc21-10018-whats-new-in-swiftui"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"There’s never been a better time to develop your apps with SwiftUI. Discover the latest updates to the UI framework — including lists, buttons, and text fields — and learn how these features can help you more fully adopt SwiftUI in your app. Find out how to create beautiful, visually-rich graphics using the canvas view, materials, and enhancements to symbols. Explore multi-column tables on macOS, refinements to focus and keyboard interaction, and the multi-platform search API. And we’ll show you how to take advantage of features like Swift concurrency, a brand new AttributedString, format styles, localization, and so much more.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"seeAlsoSections":[{"title":"Updated Tools & Frameworks","identifiers":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10290-Whats-new-in-AVKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10115-Whats-new-in-App-Analytics","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10012-Whats-new-in-App-Clips","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10054-Whats-new-in-AppKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10086-Whats-new-in-CloudKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10109-Whats-new-in-Foundation","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10052-Whats-new-in-Mac-Catalyst","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10059-Whats-new-in-UIKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10092-Whats-new-in-Wallet-and-Apple-Pay","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10002-Whats-new-in-watchOS-8","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10146-Whats-new-in-AVFoundation","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10066-Whats-new-in-Game-Center-Widgets-friends-and-multiplayer-improvements","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10097-Whats-new-in-SF-Symbols","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10047-Whats-new-in-camera-capture","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10130-Whats-new-in-managing-Apple-devices"],"generated":true}],"primaryContentSections":[{"content":[{"anchor":"AsyncImage","type":"heading","level":2,"text":"AsyncImage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"New view that automatically downloads and displays images, also has placeholder, images can be customized via modifiers as usual, can have custom behaviour for error handling."}]},{"type":"codeListing","syntax":"swift","code":["AsyncImage(url: ...) { image in","  image","    .resizable()","    .aspectRation(contentMode: .fill)","}"]},{"anchor":"task-concurrency-view-modifier","type":"heading","level":2,"text":"task(_:) concurrency view modifier"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"task(_:)"},{"type":"text","text":" lets you attach an "},{"type":"codeVoice","code":"async"},{"type":"text","text":" task to the lifetime of your view: it will be triggered when its view appears, and will be cancelled when this view disappears."}]},{"type":"codeListing","code":["Text(displayValue)","  .task {","    var results = TextProcessResults()","    for try await line in textURL.lines() {","      results.accumulateResults(line: line)","    }","    displayValue = results.textSummary()","  }"],"syntax":"swift"},{"level":2,"anchor":"Lists--Grids","type":"heading","text":"Lists & Grids"},{"level":3,"anchor":"Pull-to-refresh","type":"heading","text":"Pull to refresh"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Pull to refresh via "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/refreshable(action:)"},{"type":"text","text":" concurrency view modifier, this modifier configures a refresh action ("},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/refreshaction"},{"type":"text","text":") and passes down through the environment."}]},{"type":"paragraph","inlineContent":[{"text":"Use an ","type":"text"},{"code":"await","type":"codeVoice"},{"text":" expression inside the action. SwiftUI shows a refresh indicator, which stays visible for the duration of the awaited operation.","type":"text"}]},{"type":"codeListing","code":["List(mailbox.conversations) {","  ConversationCell($0)","}",".refreshable {","  await mailbox.fetch()","}"],"syntax":"swift"},{"level":3,"anchor":"Binding","type":"heading","text":"Binding"},{"type":"paragraph","inlineContent":[{"text":"New ","type":"text"},{"code":"List","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"ForEach","type":"codeVoice"},{"text":" initializers allowing us to get a binding per each element:","type":"text"}]},{"type":"codeListing","code":["struct DirectionsList: View {","  @Binding var directions: [Direction] ","","  var body: some View { ","    List($directions) { $direction in ","      Label { ","    TextField(\"Instructions\", text: $direction.text)","    } icon: { ","     DirectionsIcon(direction) ","    }","  }","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is back-ported all the way to iOS 13."}]},{"level":3,"anchor":"Separator-Customization","type":"heading","text":"Separator Customization"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/section\/listrowseparatortint(_:edges:)","type":"reference"},{"text":" - custom row separator colors","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/section\/listsectionseparatortint(_:edges:)","type":"reference","isActive":true},{"text":" - custom section separator colors","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/section\/listrowseparator(_:edges:)","type":"reference","isActive":true},{"type":"text","text":" - can be used to hide the separators altogether"}]}]}]},{"level":3,"anchor":"Swipe-Actions","type":"heading","text":"Swipe Actions"},{"type":"paragraph","inlineContent":[{"type":"text","text":"New "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/section\/swipeactions(edge:allowsfullswipe:content:)","isActive":true},{"type":"text","text":" view modifier to add swipe actions."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Define each action with "},{"type":"codeVoice","code":"Button"},{"type":"text","text":"s, use the "},{"type":"codeVoice","code":"tint(_:)"},{"type":"text","text":" view modifier to customize the background color (or use the button’s role)."}]},{"type":"codeListing","code":["List(store.messages) { message in","  MessageCell(message: message)","  .swipeActions(edge: .leading) {","    Button { store.toggleUnread(message) } label: {","      if message.isUnread {","        Label(\"Read\", systemImage: \"envelope.open\")","      } else {","        Label(\"Unread\", systemImage: \"envelope.badge\")","      }","    }","    .tint(.yellow)","  }","  .swipeActions(edge: .trailing) {","    Button(role: .destructive) {","      store.delete(message)","    } label: {","      Label(\"Delete\", systemImage: \"trash\")","    }","    .tint(.blue)","    Button { store.flag(message) } label: {","      Label(\"Flag\", systemImage: \"flag\")","    }","    .tint(.green)","  }","  }","}"],"syntax":"swift"},{"level":3,"anchor":"Style-Updates","type":"heading","text":"Style Updates"},{"type":"paragraph","inlineContent":[{"type":"text","text":"All styles now come with a new enum-like syntax:"}]},{"type":"codeListing","code":["List {","  ...","}",".listStyle(.grouped)"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"instead of:"}]},{"type":"codeListing","code":["List {","  ...","}",".listStyle(GroupedListStyle())"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"New (macOS-only) style, which alternates the colors of the rows:","type":"text"}]},{"type":"codeListing","code":["List {","  ...","}",".listStyle(bordered(alternatesRowBackgrounds: true))"],"syntax":"swift"},{"level":2,"anchor":"Table-macOS-only","type":"heading","text":"Table (macOS-only)"},{"type":"paragraph","inlineContent":[{"text":"New ","type":"text"},{"type":"codeVoice","code":"Table"},{"text":" view, supports selection, sorting, and more:","type":"text"}]},{"type":"codeListing","code":["struct ContentView: View {","  @State private var characters = StoryCharacter.previewData","","  var body: some View {","  Table(characters) {","    TableColumn(\"􀟈\") { CharacterIcon($0) }","    .width(20)","    TableColumn(\"Villain\") { Text($0.isVillain ? \"Villain\" : \"Hero\") }","    .width(40)","    TableColumn(\"Name\", value: \\.name)","    TableColumn(\"Powers\", value: \\.powers)","  }","  }","}"],"syntax":"swift"},{"level":2,"anchor":"Search","type":"heading","text":"Search"},{"type":"paragraph","inlineContent":[{"type":"text","text":"New "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/SwiftUI\/View\/searchable(_:text:placement:)-1r1py","isActive":true},{"type":"text","text":" view modifiers, it adds a search field where more appropriate based on the context:"}]},{"type":"codeListing","code":["NavigationView {","  List {","    ...","  }","  .searchable(...)","}"],"syntax":"swift"},{"level":2,"anchor":"Sharing-data","type":"heading","text":"Sharing data"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"onDrag"},{"type":"text","text":" now comes with a "},{"type":"codeVoice","code":"preview"},{"type":"text","text":" "},{"type":"codeVoice","code":"View"},{"type":"text","text":" parameter, letting us customize what view to show when dragging."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"new "},{"type":"codeVoice","code":"importsItemProviders"},{"type":"text","text":" view modifier makes a view a drop target that accepts item providers"}]}]},{"content":[{"inlineContent":[{"text":"new ","type":"text"},{"code":"exportsItemProviders","type":"codeVoice"},{"text":" view modifier exposes our app data to external system services","type":"text"}],"type":"paragraph"}]}]},{"level":2,"anchor":"SF-Symbols","type":"heading","text":"SF Symbols"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Two new rendering modes:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Hierarchical - like monochrome, but automatically adds multiple levels of opacity to really emphasize the key elements of the symbol","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Palette - gives more fine-grained control over individual layers color with custom fills","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI automatically chooses the correct symbol variant to use based on the context, for example a symbol used in the tabbar will use the "},{"type":"codeVoice","code":".fill"},{"type":"text","text":" variant."}]}]}]},{"level":2,"anchor":"Canvas","type":"heading","text":"Canvas"},{"type":"paragraph","inlineContent":[{"type":"text","text":"New view allowing immediate-mode drawing similar to "},{"type":"codeVoice","code":"drawRect"},{"type":"text","text":" from UIKit or AppKit:"}]},{"type":"codeListing","code":["Canvas { context, size in","  let metrics = gridMetrics(in: size)","  for (index, symbol) in symbols.enumerated() {","  let rect = metrics[index]","  let (sRect, opacity) = rect.fishEyeTransform(around: focalPoint)","","  context.opacity = opacity","  let image = context.resolve(symbol.image)","  context.draw(image, in: sRect.fit(image.size))","  }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"We can use ","type":"text"},{"code":"TimelineView","type":"codeVoice"},{"text":" to make our canvas update over time.","type":"text"}]},{"level":2,"anchor":"Displaying-sensitive-data","type":"heading","text":"Displaying sensitive data"},{"type":"paragraph","inlineContent":[{"type":"text","text":"New modifiers that automatically redact sensitive data when the user is no longer authenticated (for when the phone is locked or similar)"}]},{"type":"codeListing","code":["Image(systemName: favoriteSymbol)","  .font(.title2)","  .privacySensitive(true)"],"syntax":"swift"},{"level":2,"anchor":"Material-blur","type":"heading","text":"Material (blur)"},{"type":"paragraph","inlineContent":[{"text":"New blur\/vibrancy effects:","type":"text"}]},{"type":"codeListing","code":["struct ColorList: View {","  var body: some View {","    ZStack {","      ...","    materialOverlay","    }","  }","  ","  var materialOverlay: some View {","  VStack {","   Text(\"Symbol Browser\")","    .font(.largeTitle.bold())","   Text(\"\\(symbols.count) symbols 🎉\")","    .foregroundStyle(.secondary)","    .font(.title2.bold())","  }","  .padding()","  .background(.ultraThinMaterial, in: RoundedRectangle(cornerRadius: 16.0))","  }","}"],"syntax":"swift"},{"level":2,"anchor":"Preview","type":"heading","text":"Preview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can now preview screens in different orientations:"}]},{"type":"codeListing","code":["struct ColorList_Previews: PreviewProvider {","  static var previews: some View {","  ColorList()","    .previewInterfaceOrientation(.portrait)","","  ColorList()","    .previewInterfaceOrientation(.landscapeLeft)","  }","}"],"syntax":"swift"},{"level":2,"anchor":"Text","type":"heading","text":"Text"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"markdown support"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/attributedstring","type":"reference","isActive":true}]}]},{"content":[{"inlineContent":[{"text":"restrict dynamic type size of a text\/view via new ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/dynamictypesize(_:)-1m2tf","isActive":true,"type":"reference"},{"text":" view modifier","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"make text selectable or not via "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/textselection(_:)"},{"type":"text","text":" view modifier (macOS only)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"new powerful formatters"}],"type":"paragraph"}]}]},{"level":2,"anchor":"TextFields","type":"heading","text":"TextFields"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"support for prompts, separate from its label, to let users know what kind of content a field is expecting. In macOS, the prompt will be used as the placeholder text.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"onSubmit(_:)","type":"codeVoice"},{"text":" view modifier to detect when the user submits the text (this replaces the previous ","type":"text"},{"code":"TextField","type":"codeVoice"},{"text":"’s ","type":"text"},{"code":"onCommit","type":"codeVoice"},{"text":" parameter","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"submitLabel(_:)"},{"text":" view modifier to customize the return key action, and to help give users a hint of what kind of action will occur when submitting a field","type":"text"}]}]}]},{"type":"codeListing","code":["struct ContentView: View {","  @State private var activity: Activity = .sample","  @State private var newAttendee = PersonNameComponents()","","  var body: some View {","    TextField(\"New Person\", value: $newAttendee,","      format: .name(style: .medium)","    )","    .onSubmit {","      activity.append(Person(newAttendee))","      newAttendee = PersonNameComponents()","    }","    .submitLabel(.done)","  }","}"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"keyboard toolbar support via the usual ","type":"text"},{"code":"toolbar(_:)","type":"codeVoice"},{"text":" view modifier with new ","type":"text"},{"code":".keyboard","type":"codeVoice"},{"text":" placement","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["struct ContentView: View {","  @State private var activity: Activity = .sample","  @FocusState private var focusedField: Field?","","  var body: some View {","    Form {","      TextField(\"Name\", text: $activity.name, prompt: Text(\"New Activity\"))","      TextField(\"Location\", text: $activity.location)","      DatePicker(\"Date\", selection: $activity.date)","    }","    .toolbar {","      ToolbarItemGroup(placement: .keyboard) {","        Button(action: selectPreviousField) {","          Label(\"Previous\", systemImage: \"chevron.up\")","        }","        .disabled(!hasPreviousField)","","        Button(action: selectNextField) {","          Label(\"Next\", systemImage: \"chevron.down\")","        }","        .disabled(!hasNextField)","      }","    }","  }","","  private func selectPreviousField() {","     focusedField = focusedField.map {","      Field(rawValue: $0.rawValue - 1)!","     }","  }","","  private var hasPreviousField: Bool {","    if let currentFocusedField = focusedField {","      return currentFocusedField.rawValue > 0","    } else {","      return false","    }","  }","","  private func selectNextField() {","     focusedField = focusedField.map {","      Field(rawValue: $0.rawValue + 1)!","     }","  }","","  private var hasNextField: Bool {","    if let currentFocusedField = focusedField {","      return currentFocusedField.rawValue < Field.allCases.count","    } else {","      return false","    }","  }","}"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"textfield focus control via "},{"type":"codeVoice","code":"@FocusState"},{"type":"text","text":" property wrapper:"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["struct ContentView: View {","  @State private var activity: Activity = .sample","  @State private var newAttendee = PersonNameComponents()","  @FocusState private var addAttendeeIsFocused: Bool = false","","  var body: some View {","  VStack(alignment: .leading) {","    TextField(\"New Person\", value: $newAttendee, format: .name(style: .medium))","    .focused($addAttendeeIsFocused)","","    ControlGroup {","    Button {","      addAttendeeIsFocused = true","    } label: {","       Label(\"Add Attendee\", systemImage: \"plus\")","    }","    }","  }","  }","}"],"syntax":"swift"},{"level":2,"anchor":"Buttons","type":"heading","text":"Buttons"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"New bordered style ("},{"type":"codeVoice","code":"Button(\"Add\") {}.buttonStyle(.bordered)"},{"type":"text","text":"), which supports tinting via the "},{"type":"codeVoice","code":".tint"},{"type":"text","text":" view modifier"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"new ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/controlsize(_:)?changes=l_5"},{"text":" view modifier for different buttons appearances","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"new ","type":"text"},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/controlprominence(_:)?changes=l_5","isActive":true},{"text":" to highlight importance of each button","type":"text"}]}]}]},{"type":"codeListing","code":["struct ContentView: View {","  var body: some View {","    VStack {","      Button(action: addToJar) {","        Text(\"Add to Jar\").frame(maxWidth: 300)","      }","      .controlProminence(.increased)","      .keyboardShortcut(.defaultAction)","","      Button(action: addToWatchlist) {","        Text(\"Add to Watchlist\").frame(maxWidth: 300)","      }","      .tint(.accentColor)","    }","    .buttonStyle(.bordered)","    .controlSize(.large)","  }","","  private func addToJar() {}","  private func addToWatchlist() {}","}"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"New Button roles to give each button additional semantics, which SwiftUI uses to display the button accordingly:","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["struct ContentView: View {","  var entry: ButtonEntry = .sample","","  var body: some View {","  ButtonEntryCell(entry)","    .contextMenu {","    Section {","      Button(\"Open\") {","        \/\/ ...","      }","      \/\/ This button will have red tint as it's destructive","      Button(\"Delete...\", role: .destructive) {","        \/\/ ...","      }","    }","  }","}"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Buttons confirmation dialogs via "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/texteditor\/confirmationDialog(_:ispresented:titlevisibility:actions:)-90mxz?changes=latest_minor"},{"type":"text","text":" view modifier:"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["struct ContentView: View {","  var entry: ButtonEntry = .sample","  @State private var showConfirmation: Bool = false","","  var body: some View {","    ButtonEntryCell(entry)","      .contextMenu {","        Section {","          Button(\"Open\") {","            \/\/ ...","          }","          Button(\"Delete...\", role: .destructive) {","            showConfirmation = true","            \/\/ ...","          }","        }","      }","      .confirmationDialog(","        \"Are you sure you want to delete \\(entry.name)?\",","        isPresented: $showConfirmation","      ) {","        Button(\"Delete\", role: .destructive) {","          \/\/ delete the entry","        }","      } message: {","        Text(\"Deleting \\(entry.name) will remove it from all of your jars.\")","      }","  }","}"],"syntax":"swift"},{"level":2,"anchor":"Menus","type":"heading","text":"Menus"},{"type":"paragraph","inlineContent":[{"type":"text","text":"More flexibility and new modifiers to control primary and secondary actions:"}]},{"type":"codeListing","code":["struct ContentView: View {","  var buttonEntry: ButtonEntry = .sample","  @StateObject private var jarStore = JarStore()","","  var body: some View {","    Menu(\"Add\") {","      ForEach(jarStore.allJars) { jar in","        Button(\"Add to \\(jar.name)\") {","         jarStore.add(buttonEntry, to: jar)","        }","      }","    } primaryAction: {","      jarStore.addToDefaultJar(buttonEntry)","    }","    .menuStyle(BorderedButtonMenuStyle())","    .","  }","}"],"syntax":"swift"},{"level":2,"anchor":"ControlGroup","type":"heading","text":"ControlGroup"},{"type":"paragraph","inlineContent":[{"type":"text","text":"New view used to gather controls together (the system will display the controls at the right place with correct spacing etc):"}]},{"type":"codeListing","code":["ControlGroup {","  Button(action: archive) {","    Label(\"Archive\", systemImage: \"archiveBox\")","  }","  Button(action: delete) {","    Label(\"Delete\", systemName: \"trash\")","  }","}"],"syntax":"swift"},{"level":2,"anchor":"Written-By","type":"heading","text":"Written By"},{"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4","type":"image"}]}]},{"size":4,"content":[{"text":"Federico Zanetello","type":"heading","level":3,"anchor":"Federico-Zanetello"},{"inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","type":"reference","isActive":true,"overridingTitle":"Contributed Notes","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}]},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/zntfdr","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"zntfdr.dev","type":"reference","isActive":true}],"type":"paragraph"}]}],"type":"row","numberOfColumns":5},{"type":"paragraph","inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing"}]},{"level":2,"anchor":"Related-Sessions","type":"heading","text":"Related Sessions"},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10002-Whats-new-in-watchOS-8","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10009-Build-a-workout-app-for-Apple-Watch","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10017-Bring-Core-Data-concurrency-to-Swift-and-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10019-Discover-concurrency-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10021-Add-rich-graphics-to-your-SwiftUI-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10022-Demystify-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10023-Direct-and-reflect-focus-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10048-Principles-of-great-widgets","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10097-Whats-new-in-SF-Symbols","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10109-Whats-new-in-Foundation","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10119-SwiftUI-Accessibility-Beyond-the-basics","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10176-Craft-search-experiences-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10192-Whats-new-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10194-Swift-concurrency-Update-a-sample-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10220-Localize-your-SwiftUI-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10232-Meet-Shortcuts-for-macOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10349-SF-Symbols-in-SwiftUI"],"style":"list"},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10018-Whats-new-in-SwiftUI"},"metadata":{"roleHeading":"WWDC21","role":"sampleCode","title":"What’s new in SwiftUI","modules":[{"name":"WWDC Notes"}]},"references":{"doc://WWDCNotes/documentation/WWDCNotes":{"abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"title":"WWDC Notes","type":"topic","url":"\/documentation\/wwdcnotes","kind":"symbol","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"role":"collection"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10086-Whats-new-in-CloudKit":{"role":"sampleCode","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10086-Whats-new-in-CloudKit","abstract":[{"text":"CloudKit provides a secure, convenient, and reliable cloud database for your apps — and it’s only getting better. Discover how you can unravel your threads with support for async\/await and convenience API additions. We’ll also show you how to encourage collaboration between people using your app through sharing entire record zones of data, and explore how to adopt CloudKit features like encrypted values and help protect sensitive data within your app.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10086-whats-new-in-cloudkit","title":"What’s new in CloudKit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10194-Swift-concurrency-Update-a-sample-app":{"type":"topic","title":"Swift concurrency: Update a sample app","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10194-Swift-concurrency-Update-a-sample-app","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10194-swift-concurrency-update-a-sample-app","abstract":[{"text":"Discover Swift concurrency in action: Follow along as we update an existing sample app. Get real-world experience with async\/await, actors, and continuations. We’ll also explore techniques for migrating existing code to Swift concurrency over time.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10092-Whats-new-in-Wallet-and-Apple-Pay":{"role":"sampleCode","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10092-Whats-new-in-Wallet-and-Apple-Pay","abstract":[{"text":"Discover the redesigned Apple Pay for in-app and web payments and learn how you can incorporate the latest APIs into your app or website. Learn how to add features to your app like coupon codes, improved shipping information, and improvements to the payment detail display screen. And explore changes to Wallet passes, including auto-expiry and multi-pass support for the web.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10092-whats-new-in-wallet-and-apple-pay","title":"What’s new in Wallet and Apple Pay"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}],"type":"image","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10009-Build-a-workout-app-for-Apple-Watch":{"kind":"article","title":"Build a workout app for Apple Watch","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10009-Build-a-workout-app-for-Apple-Watch","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10009-build-a-workout-app-for-apple-watch","abstract":[{"type":"text","text":"Build a workout app from scratch using SwiftUI and HealthKit during this code along. Learn how to support the Always On state using timelines to update workout metrics. Follow best design practices for workout apps."}]},"https://developer.apple.com/documentation/swiftui/section/listsectionseparatortint(_:edges:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/section\/listsectionseparatortint(_:edges:)","title":"listSectionSeparatorTint(_:edges:)","titleInlineContent":[{"code":"listSectionSeparatorTint(_:edges:)","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/section\/listsectionseparatortint(_:edges:)"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10054-Whats-new-in-AppKit":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10054-Whats-new-in-AppKit","url":"\/documentation\/wwdcnotes\/wwdc21-10054-whats-new-in-appkit","role":"sampleCode","type":"topic","abstract":[{"type":"text","text":"Explore the latest advancements in Mac app development with AppKit. We’ll show how you can enhance your app’s design with new control features and SF Symbols 3, build powerful text experiences using TextKit 2, and harness the latest Swift features in your app."}],"title":"What’s new in AppKit","kind":"article"},"https://developer.apple.com/documentation/swiftui/view/dynamictypesize(_:)-1m2tf":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/dynamictypesize(_:)-1m2tf","title":"dynamicTypeSize(_:)","titleInlineContent":[{"text":"dynamicTypeSize(_:)","type":"text"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/dynamictypesize(_:)-1m2tf"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10066-Whats-new-in-Game-Center-Widgets-friends-and-multiplayer-improvements":{"role":"sampleCode","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10066-Whats-new-in-Game-Center-Widgets-friends-and-multiplayer-improvements","abstract":[{"text":"Power up your online gaming experience with GameKit and adopt features like multiplayer, leaderboards, and achievements in your game. We’ll take you through the latest improvements to Game Center, including player matching and multiplayer APIs, and explore how you can boost discovery of your game.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10066-whats-new-in-game-center-widgets-friends-and-multiplayer-improvements","title":"What’s new in Game Center: Widgets, friends, and multiplayer improvements"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10047-Whats-new-in-camera-capture":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10047-Whats-new-in-camera-capture","url":"\/documentation\/wwdcnotes\/wwdc21-10047-whats-new-in-camera-capture","role":"sampleCode","type":"topic","abstract":[{"type":"text","text":"Learn how you can interact with Video Effects in Control Center including Center Stage, Portrait mode, and Mic modes. We’ll show you how to detect when these features have been enabled for your app and explore ways to adopt custom interfaces to make them controllable from within your app. Discover how to enable 10-bit HDR video capture and take advantage of minimum-focus-distance reporting for improved camera capture experiences. Explore support for IOSurface compression and delivering optimal performance in camera capture."}],"title":"What’s new in camera capture","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10115-Whats-new-in-App-Analytics":{"role":"sampleCode","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10115-Whats-new-in-App-Analytics","abstract":[{"text":"App Analytics helps you maximize your opportunity on the App Store by providing privacy-friendly insights about your app. Learn about four new ways to grow your business, including information about custom product pages, in-app events, product page optimization, and new metrics about transactions on the store.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10115-whats-new-in-app-analytics","title":"What’s new in App Analytics"},"https://developer.apple.com/documentation/foundation/attributedstring":{"identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/attributedstring","title":"AttributedString","titleInlineContent":[{"text":"AttributedString","type":"text"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/foundation\/attributedstring"},"https://developer.apple.com/documentation/swiftui/view/controlprominence(_:)?changes=l_5":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/controlprominence(_:)?changes=l_5","title":"controlProminence(_:)","titleInlineContent":[{"code":"controlProminence(_:)","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/controlprominence(_:)?changes=l_5"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10048-Principles-of-great-widgets":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10048-Principles-of-great-widgets","type":"topic","title":"Principles of great widgets","url":"\/documentation\/wwdcnotes\/wwdc21-10048-principles-of-great-widgets","abstract":[{"type":"text","text":"Explore the foundations of great widgets by keeping them relevant and customizable. Learn how to keep widgets up to date with timeline entries and TimelineReloadPolicies. Discover how to adapt your widget to different presentation environments and physical location. And lastly, find out how to create customizable widgets that someone can personalize to their liking."}],"role":"sampleCode","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10176-Craft-search-experiences-in-SwiftUI":{"kind":"article","title":"Craft search experiences in SwiftUI","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10176-craft-search-experiences-in-swiftui","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10176-Craft-search-experiences-in-SwiftUI","abstract":[{"text":"Discover how you can help people quickly find specific content within your apps. Learn how to use SwiftUI’s .searchable modifier in conjunction with other views to best incorporate search for your app. And we’ll show you how to elevate your implementation by providing search suggestions to help people understand the types of searches they can perform.","type":"text"}]},"https://developer.apple.com/documentation/swiftui/view/controlsize(_:)?changes=l_5":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/controlsize(_:)?changes=l_5","title":"controlSize(_:)","titleInlineContent":[{"code":"controlSize(_:)","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/controlsize(_:)?changes=l_5"},"https://github.com/zntfdr":{"identifier":"https:\/\/github.com\/zntfdr","title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}],"type":"link","url":"https:\/\/github.com\/zntfdr"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10349-SF-Symbols-in-SwiftUI":{"kind":"article","title":"SF Symbols in SwiftUI","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10349-sf-symbols-in-swiftui","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10349-SF-Symbols-in-SwiftUI","abstract":[{"text":"Discover how you can incorporate SF Symbols into your SwiftUI app. We’ll explore basic techniques for presenting symbols, customizing their size, and showing different variants. We’ll also take you through the latest updates to symbol colorization and help you pick the right tool for your app’s needs.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10017-Bring-Core-Data-concurrency-to-Swift-and-SwiftUI":{"type":"topic","title":"Bring Core Data concurrency to Swift and SwiftUI","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10017-Bring-Core-Data-concurrency-to-Swift-and-SwiftUI","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10017-bring-core-data-concurrency-to-swift-and-swiftui","abstract":[{"text":"Discover how Core Data is adopting the new concurrency capabilities of Swift 5.5, leading to more concise, efficient, and safe asynchronous code. We’ll show you how to update Core Data in your apps to work with concurrency, and detail the many other improvements throughout the framework that make working with Swift and SwiftUI more expressive and powerful.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/zntfdr","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"title":"Federico Zanetello (214 notes)"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10052-Whats-new-in-Mac-Catalyst":{"role":"sampleCode","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10052-Whats-new-in-Mac-Catalyst","abstract":[{"text":"Discover the latest updates to Mac Catalyst and find out how you can make your app feel even more at home on macOS. Learn about a variety of new and enhanced UIKit APIs that let you customize your Mac Catalyst app to take advantage of behaviors unique to macOS.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10052-whats-new-in-mac-catalyst","title":"What’s new in Mac Catalyst"},"https://developer.apple.com/documentation/swiftui/texteditor/confirmationDialog(_:ispresented:titlevisibility:actions:)-90mxz?changes=latest_minor":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/texteditor\/confirmationDialog(_:ispresented:titlevisibility:actions:)-90mxz?changes=latest_minor","title":"confirmationDialog","titleInlineContent":[{"code":"confirmationDialog","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/texteditor\/confirmationDialog(_:ispresented:titlevisibility:actions:)-90mxz?changes=latest_minor"},"https://developer.apple.com/wwdc21/10018":{"identifier":"https:\/\/developer.apple.com\/wwdc21\/10018","checksum":null,"type":"download","url":"https:\/\/developer.apple.com\/wwdc21\/10018"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10192-Whats-new-in-Swift":{"url":"\/documentation\/wwdcnotes\/wwdc21-10192-whats-new-in-swift","abstract":[{"type":"text","text":"Join us for an update on Swift. Discover the latest language advancements that make your code easier to read and write. Explore the growing number of APIs available as Swift packages. And we’ll introduce you to Swift’s async\/await syntax, structured concurrency, and actors."}],"title":"What‘s new in Swift","kind":"article","type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10192-Whats-new-in-Swift"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10146-Whats-new-in-AVFoundation":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10146-Whats-new-in-AVFoundation","url":"\/documentation\/wwdcnotes\/wwdc21-10146-whats-new-in-avfoundation","role":"sampleCode","type":"topic","abstract":[{"type":"text","text":"Discover the latest updates to AVFoundation, Apple’s framework for inspecting, playing, and authoring audiovisual presentations. We’ll explore how you can use AVFoundation to query attributes of audiovisual assets, further customize your custom video compositions with timed metadata, and author caption files."}],"title":"What’s new in AVFoundation","kind":"article"},"https://developer.apple.com/documentation/swiftui/view/refreshable(action:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/refreshable(action:)","title":"refreshable(action:)","titleInlineContent":[{"code":"refreshable(action:)","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/refreshable(action:)"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10130-Whats-new-in-managing-Apple-devices":{"title":"What’s new in managing Apple devices","url":"\/documentation\/wwdcnotes\/wwdc21-10130-whats-new-in-managing-apple-devices","role":"sampleCode","abstract":[{"text":"Discover the latest advancements in key device management capabilities for your organization or MDM solution. Explore the refreshed device management Settings on iOS and iPadOS, an all-new return to service functionality for macOS, and other updates to device management across Apple platforms.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10130-Whats-new-in-managing-Apple-devices","kind":"article","type":"topic"},"https://developer.apple.com/documentation/swiftui/section/listrowseparator(_:edges:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/section\/listrowseparator(_:edges:)","title":"listRowSeparator(_:edges:)","titleInlineContent":[{"code":"listRowSeparator(_:edges:)","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/section\/listrowseparator(_:edges:)"},"https://developer.apple.com/documentation/swiftui/refreshaction":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/refreshaction","title":"RefreshAction","titleInlineContent":[{"text":"RefreshAction","type":"text"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/refreshaction"},"zntfdr.dev":{"identifier":"zntfdr.dev","title":"Blog","titleInlineContent":[{"text":"Blog","type":"text"}],"type":"link","url":"zntfdr.dev"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10002-Whats-new-in-watchOS-8":{"role":"sampleCode","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10002-Whats-new-in-watchOS-8","abstract":[{"text":"watchOS 8 brings all-new opportunities to keep people up to date on their watch face. With new APIs for the Always-On Retina display and updating complications from Bluetooth devices and background delivery of HealthKit data, it’s never been easier to keep your app up to date. Learn about region-based user notifications to leverage location in your app. Explore all the new enhancements to SwiftUI and watchOS that will get you excited to build your next Watch app.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10002-whats-new-in-watchos-8","title":"What’s new in watchOS 8"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10290-Whats-new-in-AVKit":{"role":"sampleCode","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10290-Whats-new-in-AVKit","abstract":[{"text":"Learn about enhancements to Picture in Picture and full screen improvements on macOS. Explore the new content source API, and learn how AVPictureInPictureController supports AVSampleBufferDisplayLayer, as well as recommended steps for an app to provide a seamless full screen experience on macOS or in a Mac Catalyst app.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10290-whats-new-in-avkit","title":"What’s new in AVKit"},"https://avatars.githubusercontent.com/u/5277837?v=4":{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4","variants":[{"traits":["1x","light"],"url":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4"}],"type":"image","alt":"Profile image of Federico Zanetello"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10059-Whats-new-in-UIKit":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10059-Whats-new-in-UIKit","url":"\/documentation\/wwdcnotes\/wwdc21-10059-whats-new-in-uikit","role":"sampleCode","type":"topic","abstract":[{"type":"text","text":"Discover the latest updates and improvements to UIKit and learn how to build better iPadOS, iOS, and Mac Catalyst apps. We’ll take you through UI refinements, productivity updates, and API enhancements, and help you explore performance improvements and security & privacy features."}],"title":"What’s new in UIKit","kind":"article"},"https://developer.apple.com/documentation/swiftui/section/swipeactions(edge:allowsfullswipe:content:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/section\/swipeactions(edge:allowsfullswipe:content:)","title":"swipeActions(edge:allowsFullSwipe:content:)","titleInlineContent":[{"code":"swipeActions(edge:allowsFullSwipe:content:)","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/section\/swipeactions(edge:allowsfullswipe:content:)"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10232-Meet-Shortcuts-for-macOS":{"title":"Meet Shortcuts for macOS","kind":"article","abstract":[{"text":"Shortcuts is coming to macOS, and your apps are a key part of that process. Discover how you can elevate the capabilities of your app by exposing those features as Shortcuts actions. We’ll show you how to build actions for your macOS apps built with Catalyst or AppKit, deploy actions across platforms, publish and share shortcuts, and enable your app to run shortcuts from other apps. We’ll also take you through how Shortcuts fits in with existing Mac automation technologies like Automator and AppleScript.","type":"text"}],"role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10232-meet-shortcuts-for-macos","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10232-Meet-Shortcuts-for-macOS"},"https://developer.apple.com/documentation/swiftui/section/listrowseparatortint(_:edges:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/section\/listrowseparatortint(_:edges:)","title":"listRowSeparatorTint(_:edges:)","titleInlineContent":[{"code":"listRowSeparatorTint(_:edges:)","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/section\/listrowseparatortint(_:edges:)"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10023-Direct-and-reflect-focus-in-SwiftUI":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10023-Direct-and-reflect-focus-in-SwiftUI","type":"topic","kind":"article","title":"Direct and reflect focus in SwiftUI","abstract":[{"type":"text","text":"With device input — as with all things in life — where you put focus matters. Discover how you can move focus in your app with SwiftUI, programmatically dismiss the keyboard, and build large navigation targets from small views. Together, these APIs can help you simplify your app’s interface and make it more powerful for people to find what they need."}],"url":"\/documentation\/wwdcnotes\/wwdc21-10023-direct-and-reflect-focus-in-swiftui"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10109-Whats-new-in-Foundation":{"role":"sampleCode","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10109-Whats-new-in-Foundation","abstract":[{"text":"Discover how the latest updates to Foundation can help you improve your app’s localization and internationalization support. Find out about the new AttributedString, designed specifically for Swift, and learn how you can use Markdown to apply style to your localized strings. Explore the grammar agreement engine, which automatically fixes up localized strings so they match grammatical gender and pluralization. And we’ll take you through improvements to date and number formatting that simplify complex requirements while also improving performance.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10109-whats-new-in-foundation","title":"What’s new in Foundation"},"https://developer.apple.com/documentation/swiftui/view/textselection(_:)":{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/textselection(_:)","title":"textSelection(_:)","titleInlineContent":[{"text":"textSelection(_:)","type":"text"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/textselection(_:)"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10019-Discover-concurrency-in-SwiftUI":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10019-Discover-concurrency-in-SwiftUI","kind":"article","title":"Discover concurrency in SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc21-10019-discover-concurrency-in-swiftui","type":"topic","abstract":[{"text":"Discover how you can use Swift’s concurrency features to build even better SwiftUI apps. We’ll show you how concurrent workflows interact with your ObservableObjects, and explore how you can use them directly in your SwiftUI views and models. Find out how to use await to make your app run smoothly on the SwiftUI runloop, and learn how to fetch remote images quickly with the AsyncImage API. And we’ll take you through the process of enabling additional asynchronous flows in your custom views.","type":"text"}],"role":"sampleCode"},"https://developer.apple.com/documentation/SwiftUI/View/searchable(_:text:placement:)-1r1py":{"identifier":"https:\/\/developer.apple.com\/documentation\/SwiftUI\/View\/searchable(_:text:placement:)-1r1py","title":"searchable(_:text:placement:)","titleInlineContent":[{"code":"searchable(_:text:placement:)","type":"codeVoice"}],"type":"link","url":"https:\/\/developer.apple.com\/documentation\/SwiftUI\/View\/searchable(_:text:placement:)-1r1py"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10022-Demystify-SwiftUI":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10022-Demystify-SwiftUI","type":"topic","title":"Demystify SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc21-10022-demystify-swiftui","abstract":[{"type":"text","text":"Peek behind the curtain into the core tenets of SwiftUI philosophy: Identity, Lifetime, and Dependencies. Find out about common patterns, learn the principles that drive the framework, and discover how you can use them to guarantee correctness and performance for your app."}],"role":"sampleCode","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10220-Localize-your-SwiftUI-app":{"kind":"article","title":"Localize your SwiftUI app","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10220-Localize-your-SwiftUI-app","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10220-localize-your-swiftui-app","abstract":[{"type":"text","text":"Learn how to localize your SwiftUI app and make it available to a global audience. Explore how you can localize strings in SwiftUI, including those with styles and formatting. We’ll demonstrate how you can save time by having SwiftUI automatically handle tasks such as layout and keyboard shortcuts, and take you through the localization workflow in Xcode 13."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10021-Add-rich-graphics-to-your-SwiftUI-app":{"kind":"article","title":"Add rich graphics to your SwiftUI app","role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10021-add-rich-graphics-to-your-swiftui-app","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10021-Add-rich-graphics-to-your-SwiftUI-app","abstract":[{"text":"Learn how you can bring your graphics to life with SwiftUI. We’ll begin by working with safe areas, including the keyboard safe area, and learn how to design beautiful, edge-to-edge graphics that won’t underlap the on-screen keyboard. We’ll also explore the materials and vibrancy you can use in SwiftUI to create easily customizable backgrounds and controls, and go over graphics APIs like drawingGroup and the all new canvas. With these tools, it’s simpler than ever to design fully interactive and interruptible animations and graphics in SwiftUI.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10119-SwiftUI-Accessibility-Beyond-the-basics":{"url":"\/documentation\/wwdcnotes\/wwdc21-10119-swiftui-accessibility-beyond-the-basics","kind":"article","abstract":[{"type":"text","text":"Go beyond the basics to deliver an exceptional accessibility experience. Learn how to use the new SwiftUI Previews in Xcode to explore the latest accessibility APIs and create fantastic, accessible apps for everyone. Find out how you can customize the automatic accessibility built into SwiftUI to make your own custom controls accessible. Explore best practices and identify where to improve your app’s navigation experience using grouping and focus. And help supercharge navigation for VoiceOver users with the addition of rotors."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10119-SwiftUI-Accessibility-Beyond-the-basics","role":"sampleCode","type":"topic","title":"SwiftUI Accessibility: Beyond the basics"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10097-Whats-new-in-SF-Symbols":{"role":"sampleCode","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10097-Whats-new-in-SF-Symbols","abstract":[{"text":"Explore the latest updates to SF Symbols, Apple’s iconography library. Designed to integrate seamlessly with San Francisco — the system font for Apple platforms — SF Symbols can help you create beautiful and consistent iconography for your app while supporting accessibility features like Dynamic Type and Bold Text. Discover the latest additions to the SF Symbols library, localization enhancements, and how you can more easily customize the color of a symbol to integrate it within your app’s own color palette. We’ll also show you how you can design and annotate custom symbols to support Monochrome, Hierarchical, Palette, and Multicolor rendering modes.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10097-whats-new-in-sf-symbols","title":"What’s new in SF Symbols"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","abstract":[{"text":"Xcode 13, Swift 5.5, iOS 15, macOS 12, tvOS 15, watchOS 8.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"type":"codeVoice","code":"MusicKit"},{"text":", ","type":"text"},{"type":"codeVoice","code":"DocC"},{"text":", ","type":"text"},{"type":"codeVoice","code":"StoreKit 2"},{"text":", and more.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"title":"WWDC21"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"type":"link","url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10012-Whats-new-in-App-Clips":{"role":"sampleCode","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10012-Whats-new-in-App-Clips","abstract":[{"text":"Discover how App Clips can elevate quick and focused experiences for specific tasks, the moment your customer needs them. We’ll take you through some of the latest improvements to App Clips, including launching an experience directly from an app, testing your App Clip locally, and creating App Clip Codes to make it easy to access your experience in the real world. We’ll also share some great examples of App Clips from our developer community that provide innovative ways to interact with people and beautiful designs.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc21-10012-whats-new-in-app-clips","title":"What’s new in App Clips"}}}