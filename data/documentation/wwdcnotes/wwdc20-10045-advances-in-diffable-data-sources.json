{"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"WWDC Notes"}],"role":"sampleCode","title":"Advances in diffable data sources","roleHeading":"WWDC20"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc20-10045-advances-in-diffable-data-sources"]}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Sample-Code","type":"heading","text":"Sample Code"},{"inlineContent":[{"text":"Download the ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/views_and_controls\/collection_views\/implementing_modern_collection_views","type":"reference","isActive":true},{"text":" to learn more about Modern Collection Views.","type":"text"}],"type":"paragraph"},{"level":2,"anchor":"Diffable-Data-Source","type":"heading","text":"Diffable Data Source"},{"level":3,"anchor":"Recap","type":"heading","text":"Recap"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Introduced in iOS 13.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Simplifies UI State."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatic animations."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"No more batch updates.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"For more, refer to the "},{"identifier":"..\/..\/wwdc19\/220","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"anchor":"Section-Snapshots","type":"heading","text":"Section Snapshots"},{"items":[{"content":[{"inlineContent":[{"text":"Encapsulate the data for a single section in a ","type":"text"},{"code":"UICollectionView","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Allow data sources to be more composable into section-sized chunks of data."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Can present the same data with different layout in different sections."}]}]},{"content":[{"inlineContent":[{"text":"Allow modeling of hierarchical data, which is needed to support rendering outline-style UIs.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":4,"anchor":"Examples","type":"heading","text":"Examples"},{"inlineContent":[{"identifier":"WWDC20-10045-section_snapshots","type":"image"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Top: Horizontally scrolling section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Middle: Outline style section."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Bottom: List section.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"It composes Diffable Data Source from three distinct section snapshots, each representing a single section’s content.","type":"text"}],"type":"paragraph"},{"level":4,"anchor":"APIs","type":"heading","text":"APIs"},{"items":[{"content":[{"inlineContent":[{"text":"Use ","type":"text"},{"type":"codeVoice","code":"append(:parent:)"},{"text":" API to add content into a section snapshot.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"The optional ","type":"text"},{"type":"codeVoice","code":"parent"},{"text":" parameter allows us to create parent-child relationships in the section snapshot.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"syntax":"swift","code":["\/\/ UICollectionViewDiffableDataSource additions for iOS 14","","extension UICollectionViewDiffableDataSource<Item, Section> {","","    func apply(_ snapshot: NSDiffableDataSourceSectionSnapshot<Item>, ","               to section: Section, ","               animatingDifferences: Bool = true, ","               completion: (() -> Void)? = nil)","","    func snapshot(for section: Section) ->   ","                  NSDiffableDataSourceSectionSnapshot<Item>","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Code example:"}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Example of using snapshots and section snapshots together","","func update(animated: Bool=true) {","","   \/\/ Add our sections in a specific order","   let sections: [Section] = [.recent, .top, .suggested]","   var snapshot = NSDiffableDataSourceSnapshot<Section, Item>()","   snapshot.appendSections(sections)","   dataSource.apply(snapshot, animatingDifferences: animated)","","   \/\/ update each section's data via section snapshots in the existing position","   for section in sections {","      let sectionItems = items(for: section)","      var sectionSnapshot = NSDiffableDataSourceSectionSnapshot<Item>()","      sectionSnapshot.append(sectionItems)","      dataSource.apply(sectionSnapshot, to: section, animatingDifferences:animated)","   }","}"],"type":"codeListing"},{"level":4,"anchor":"Child-snapshots","type":"heading","text":"Child snapshots"},{"syntax":"swift","code":["let childSnapshot = sectionSnapshot.snapshot(for: parent, includingParent: false)"],"type":"codeListing"},{"level":4,"anchor":"Expanding-and-Collapsing-Items","type":"heading","text":"Expanding and Collapsing Items"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Expansion state is persisted.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Expansion state is managed as part of a section snapshot’s state.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Call "},{"code":"apply(_:to)","type":"codeVoice"},{"type":"text","text":" to commit changes."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Automatic animations."}],"type":"paragraph"}]}],"type":"unorderedList"},{"syntax":"swift","code":["struct NSDiffableDataSourceSectionSnapshot<Item: Hashable> {","   func expand(_ items: [Item])","   func collapse(_ items: [Item])","   func isExpanded(_ item: Item) -> Bool","}"],"type":"codeListing"},{"level":4,"anchor":"Section-snapshot-handlers","type":"heading","text":"Section snapshot handlers"},{"inlineContent":[{"type":"text","text":"To be notified about expansion state changes caused by these user interactions."}],"type":"paragraph"},{"syntax":"swift","code":["\/\/ Section Snapshot Handlers: handling user interactions for expand \/ collapse state changes","","extension UICollectionViewDiffableDataSource {","","  struct SectionSnapshotHandlers<Item> {","    var shouldExpandItem: ((Item) -> Bool)?","    var willExpandItem: ((Item) -> Void)?","\t","    var shouldCollapseItem: ((Item) -> Bool)?","    var willCollapseItem: ((Item) -> Void)?","    ","    var snapshotForExpandingParent: ((Item, NSDiffableDataSourceSectionSnapshot<Item>) -> NSDiffableDataSourceSectionSnapshot<Item>)?","  }","  ","  var sectionSnapshotHandlers: SectionSnapshotHandlers<Item>"," ","}"],"type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"code":"SectionSnapshotHandlers","type":"codeVoice"},{"type":"text","text":" is a generic struct which contains five optional closures."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"snapshotForExpandingParent","type":"codeVoice"},{"text":" is used for lazy loading when the content is expensive.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":3,"anchor":"Reordering-Support","type":"heading","text":"Reordering Support"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Automatic snapshot updates."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Transactions.","type":"text"}]}]}],"type":"unorderedList"},{"level":4,"anchor":"Reordering-Handlers","type":"heading","text":"Reordering Handlers"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Used to be notified when a user-initiated reordering interaction took place."}]}]},{"content":[{"inlineContent":[{"text":"Once notified, it can persist the new visual order to the application’s backing store, which is its final source of truth.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"syntax":"swift","code":["\/\/ Diffable Data Source Reordering Handlers","","extension UICollectionViewDiffableDataSource {","","  struct ReorderingHandlers {","    var canReorderItem: ((Item) -> Bool)?","    var willReorder: ((NSDiffableDataSourceTransaction<Section, Item>) -> Void)?","    var didReorder: ((NSDiffableDataSourceTransaction<Section, Item>) -> Void)?","  }","","  var reorderingHandlers: ReorderingHandlers","}"],"type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Automatic reordering."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"When the user is done with the reordering interaction, the "},{"code":"didReorder","type":"codeVoice"},{"type":"text","text":" closure is called."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Must provide both the "},{"code":"canReorderItem","type":"codeVoice"},{"type":"text","text":" and "},{"code":"didReorder","type":"codeVoice"},{"type":"text","text":" closure to enable the reordering feature."}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":4,"text":"Reordering Transactions","anchor":"Reordering-Transactions","type":"heading"},{"inlineContent":[{"type":"text","text":"A transaction that describes the changes after reordering the items in the view."}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct NSDiffableDataSourceTransaction<Section, Item> {","   var initialSnapshot: NSDiffableDataSourceSnapshot<Section, Item> { get }","   var finalSnapshot: NSDiffableDataSourceSnapshot<Section, Item> { get }","   var difference: CollectionDifference<Item> { get }","   var sectionTransactions: [NSDiffableDataSourceSectionTransaction<Section, Item>] { get }","}"]},{"items":[{"content":[{"inlineContent":[{"code":"initialSnapshot","type":"codeVoice"},{"type":"text","text":" is the state of the Diffable Data Source before the update is applied."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"finalSnapshot"},{"text":" is the state of the Diffable Data Source after the update is applied.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Apply the data directly to "},{"type":"codeVoice","code":"difference"},{"type":"text","text":", if use a data type such as "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" for the source of truth."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"sectionTransactions","type":"codeVoice"},{"text":" provides per-section details about all the sections involved in this reordering update.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":4,"text":"Section Transactions","anchor":"Section-Transactions","type":"heading"},{"type":"codeListing","syntax":"swift","code":["struct NSDiffableDataSourceSectionTransaction<Section, Item> {","   var sectionIdentifier: Section { get }","   var initialSnapshot: NSDiffableDataSourceSectionSnapshot<Item> { get }","   var finalSnapshot: NSDiffableDataSourceSectionSnapshot<Item> { get }","   var difference: CollectionDifference<Item> { get }","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"sectionIdentifier","type":"codeVoice"},{"text":" for inspecting which section this ","type":"text"},{"code":"sectionTransaction","type":"codeVoice"},{"text":" has been applied to.","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","text":"Example","anchor":"Example","level":4},{"type":"codeListing","code":["dataSource.reorderingHandlers.didReorder = { [weak self] transaction in ","   guard let self = self else { return }","","   if let updateBackingStore = self.backingStore.applying(transaction.difference) {","      self.backingStore = updatedBackingStore","   }","}"],"syntax":"swift"},{"type":"heading","text":"Written By","anchor":"Written-By","level":2},{"type":"row","columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"identifier":"dasautoooo","type":"image"}]}]},{"size":4,"content":[{"type":"heading","anchor":"DasAuto","text":"DasAuto","level":3},{"type":"paragraph","inlineContent":[{"overridingTitle":"Contributed Notes","type":"reference","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/dasautoooo","isActive":true,"overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}]},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/dasautoooo","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/wut.im","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/x.com\/DasAutoooo","isActive":true}]}]}],"numberOfColumns":5},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true}]},{"type":"heading","text":"Related Sessions","anchor":"Related-Sessions","level":2},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10252-Make-blazing-fast-lists-and-collection-views","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10026-Lists-in-UICollectionView","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10027-Modern-cell-configuration","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-220-Advances-in-UI-Data-Sources"]},{"type":"small","inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}]}],"sampleCodeDownload":{"action":{"identifier":"https:\/\/developer.apple.com\/wwdc20\/10045","type":"reference","overridingTitle":"Watch Video (11 min)","isActive":true},"kind":"sampleDownload"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20"]]},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10045-Advances-in-diffable-data-sources","interfaceLanguage":"swift"},"sections":[],"kind":"article","abstract":[{"text":"Diffable data sources dramatically simplify the work involved in managing and updating collection and table views to create dynamic and responsive experiences in your apps. Discover how you can use section snapshots to efficiently build lists and outline collection views for iOS and iPadOS and provide support for implementing the sidebar in an iPad app. We’ll also show you how to simplify cell reordering using UICollectionViewDiffableDataSource to help you streamline your code and build app interfaces more quickly.","type":"text"}],"references":{"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"type":"image","identifier":"WWDCNotes.png","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10252-Make-blazing-fast-lists-and-collection-views":{"kind":"article","title":"Make blazing fast lists and collection views","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10252-Make-blazing-fast-lists-and-collection-views","abstract":[{"text":"Build consistently smooth scrolling list and collection views: Explore the lifecycle of a cell and learn how to apply that knowledge to eliminate rough scrolling and missed frames. We’ll also show you how to improve your overall scrolling experience and avoid costly hitches, with optimized image loading and automatic cell prefetching.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10252-make-blazing-fast-lists-and-collection-views"},"https://wut.im":{"url":"https:\/\/wut.im","type":"link","identifier":"https:\/\/wut.im","title":"Blog","titleInlineContent":[{"text":"Blog","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/dasautoooo":{"url":"\/documentation\/wwdcnotes\/dasautoooo","title":"DasAuto (6 notes)","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/dasautoooo","abstract":[{"type":"text","text":"💻 Programmer | 🕹 Lifetime Gamer"}],"role":"sampleCode","images":[{"type":"card","identifier":"dasautoooo.jpeg"},{"type":"icon","identifier":"dasautoooo.jpeg"}],"type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-220-Advances-in-UI-Data-Sources":{"role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc19-220-advances-in-ui-data-sources","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-220-Advances-in-UI-Data-Sources","abstract":[{"type":"text","text":"Use UI Data Sources to simplify updating your table view and collection view items using automatic diffing. High fidelity, quality animations of set changes are automatic and require no extra code! This improved data source mechanism completely avoids synchronization bugs, exceptions, and crashes! Learn about this simplified data model that uses on identifiers and snapshots so that you can focus on your app’s dynamic data and content instead of the minutia of UI data synchronization."}],"title":"Advances in UI Data Sources","kind":"article"},"WWDC20-Icon.png":{"variants":[{"url":"\/images\/WWDC20-Icon.png","traits":["1x","light"]}],"type":"image","identifier":"WWDC20-Icon.png","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10027-Modern-cell-configuration":{"role":"sampleCode","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10027-modern-cell-configuration","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10027-Modern-cell-configuration","abstract":[{"type":"text","text":"Discover new techniques for configuring collection view and table view cells to quickly build dynamic interfaces in your app. Explore configuration types you can use to easily populate cells with content and apply common styles. Take advantage of powerful APIs to customize the appearance of cells for different states. Find out about patterns and best practices that simplify your code, eliminate bugs, and improve performance."}],"title":"Modern cell configuration","kind":"article"},"dasautoooo.jpeg":{"variants":[{"url":"\/images\/dasautoooo.jpeg","traits":["1x","light"]}],"type":"image","identifier":"dasautoooo.jpeg","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20":{"abstract":[{"text":"Xcode 12, Swift 5.3, iOS 14, macOS 11 (Big Sur), tvOS 14, watchOS 7.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"WidgetKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit Testing","type":"codeVoice"},{"text":", and more.","type":"text"}],"role":"collectionGroup","type":"topic","images":[{"type":"icon","identifier":"WWDC20-Icon.png"},{"type":"card","identifier":"WWDC20.jpeg"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20","url":"\/documentation\/wwdcnotes\/wwdc20","kind":"article","title":"WWDC20"},"WWDC20.jpeg":{"variants":[{"url":"\/images\/WWDC20.jpeg","traits":["1x","light"]}],"type":"image","identifier":"WWDC20.jpeg","alt":null},"https://x.com/DasAutoooo":{"url":"https:\/\/x.com\/DasAutoooo","type":"link","identifier":"https:\/\/x.com\/DasAutoooo","title":"X\/Twitter","titleInlineContent":[{"text":"X\/Twitter","type":"text"}]},"../../wwdc19/220":{"url":"..\/..\/wwdc19\/220","type":"link","identifier":"..\/..\/wwdc19\/220","title":"Advances in UI Data Sources session","titleInlineContent":[{"type":"codeVoice","code":"Advances in UI Data Sources"},{"text":" session","type":"text"}]},"https://github.com/dasautoooo":{"url":"https:\/\/github.com\/dasautoooo","type":"link","identifier":"https:\/\/github.com\/dasautoooo","title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}]},"dasautoooo":{"variants":[{"url":"\/images\/dasautoooo.jpeg","traits":["1x","light"]}],"type":"image","identifier":"dasautoooo","alt":"Profile image of DasAuto"},"https://developer.apple.com/documentation/uikit/views_and_controls/collection_views/implementing_modern_collection_views":{"url":"https:\/\/developer.apple.com\/documentation\/uikit\/views_and_controls\/collection_views\/implementing_modern_collection_views","type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/uikit\/views_and_controls\/collection_views\/implementing_modern_collection_views","title":"sample code","titleInlineContent":[{"text":"sample code","type":"text"}]},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}]},"WWDC20-10045-section_snapshots":{"variants":[{"url":"\/images\/WWDC20-10045-section_snapshots.png","traits":["1x","light"]}],"type":"image","identifier":"WWDC20-10045-section_snapshots","alt":null},"doc://WWDCNotes/documentation/WWDCNotes":{"url":"\/documentation\/wwdcnotes","role":"collection","type":"topic","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","kind":"symbol","title":"WWDC Notes"},"https://developer.apple.com/wwdc20/10045":{"checksum":null,"url":"https:\/\/developer.apple.com\/wwdc20\/10045","type":"download","identifier":"https:\/\/developer.apple.com\/wwdc20\/10045"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10026-Lists-in-UICollectionView":{"abstract":[{"text":"Learn how to build lists and sidebars in your app with UICollectionView. Replace table view appearance while taking advantage of the full flexibility of compositional layout. Explore modular layout options and find out how they can unlock more design options for your apps than ever before. Find out how to combine table view-like lists with custom compositional layouts inside of a single UICollectionView. Discover how to work with lists, create richer cells, and customize your layout to create a well-designed presentation of information within your app.","type":"text"}],"role":"sampleCode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10026-Lists-in-UICollectionView","url":"\/documentation\/wwdcnotes\/wwdc20-10026-lists-in-uicollectionview","kind":"article","title":"Lists in UICollectionView"}}}