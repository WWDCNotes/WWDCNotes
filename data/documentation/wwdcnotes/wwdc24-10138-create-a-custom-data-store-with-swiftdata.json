{"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24"]]},"sampleCodeDownload":{"action":{"isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc24\/10138","overridingTitle":"Watch Video","type":"reference"},"kind":"sampleDownload"},"sections":[],"abstract":[{"text":"Combine the power of SwiftData‚Äôs expressive, declarative modeling API with your own persistence backend. Learn how to build a custom data store and explore how to progressively add persistence features in your app. To get the most out of this session, watch ‚ÄúMeet SwiftData‚Äù and ‚ÄúModel your schema with SwiftData‚Äù from WWDC23.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10138-Create-a-custom-data-store-with-SwiftData"},"metadata":{"roleHeading":"WWDC24","role":"sampleCode","title":"Create a custom data store with SwiftData","modules":[{"name":"WWDC Notes"}]},"kind":"article","primaryContentSections":[{"content":[{"text":"Key Takeaways","level":1,"type":"heading","anchor":"Key-Takeaways"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"‚ÄºÔ∏è The New Data Store Protocol","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"üèÑüèΩ‚Äç‚ôÇÔ∏è Use custom persistence backends","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"üå©Ô∏è SwiftData storage in the cloud","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"üß∞ JSON as an archival persistent store","type":"text"}]}]}]},{"numberOfColumns":2,"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"identifier":"WWDC24-10138-Overview1","type":"image"}]}]},{"size":1,"content":[{"inlineContent":[{"type":"image","identifier":"WWDC24-10138-Overview2"}],"type":"paragraph"}]}],"type":"row"},{"numberOfColumns":2,"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC24-10138-Overview3"}]}]},{"size":1,"content":[{"inlineContent":[{"type":"image","identifier":"WWDC24-10138-Overview4"}],"type":"paragraph"}]}],"type":"row"},{"text":"Presenter","level":1,"type":"heading","anchor":"Presenter"},{"inlineContent":[{"type":"text","text":"Luvena Huo, SwiftData Engineer"}],"type":"paragraph"},{"text":"Overview","level":1,"type":"heading","anchor":"Overview"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The View consumes data from a Model in a ModelContext.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The ModelContext reads and writes data using a ModelContainer with an associated Store."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The Store fetch and save data (from the persistence backend) required to support the persistent models.","type":"text"}]}]}]},{"text":"The Store in SwiftData ecoverse:","level":2,"type":"heading","anchor":"The-Store-in-SwiftData-ecoverse"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"The ModelContext instantiates persistent models with associated persistent identifiers and track changes to be saved to the permanent Store."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Remaping"}],"type":"strong"},{"text":": is the process of assigning a permanent persistent identifier to a temporary one. The temporary persistent identifiers are generated when changes are translated by the View in the ModelContext to objects not yet persisted to the Store.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Snapshots","type":"text"}],"type":"strong"},{"type":"text","text":": are used as a method of communication between the ModelContext and the Store (and viceversa). Snapshots are "},{"inlineContent":[{"type":"text","text":"‚Äúsendable, codable containers of the values in the model at that point in time‚Äù"}],"type":"emphasis"},{"type":"text","text":"."}]}]}]},{"text":"The New DataStore Protocol","level":1,"type":"heading","anchor":"The-New-DataStore-Protocol"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Allows the ModelContext to R&W model data to ","type":"text"},{"type":"strong","inlineContent":[{"text":"any storage format","type":"text"}]},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There are 3 protocols related to a store:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Data Store ","type":"text"},{"type":"strong","inlineContent":[{"text":"Configuration","type":"text"}]},{"text":": describe the store.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Data Store ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"Snapshot"}]},{"text":": communication protocol between the Store and the ModelContext. Data Store fetch request & Data Store fetch result. Associated snapshots & remapping.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Data Store"}]},{"type":"text","text":": functionality needed by the ModelContext to use the Data Store."}]}]}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Additional protocols: History protocol (check related session notes)."}],"type":"paragraph"}]}]},{"text":"JSON Store type as an example","level":1,"type":"heading","anchor":"JSON-Store-type-as-an-example"},{"type":"paragraph","inlineContent":[{"text":"Example of using ","type":"text"},{"inlineContent":[{"type":"text","text":"JSON"}],"type":"strong"},{"text":" as a file to persist the models. This is an ","type":"text"},{"inlineContent":[{"text":"archival store","type":"text"}],"type":"strong"},{"text":", meaning that the entire file is loaded & saved when performing R||W operations to the Store.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The data is stored as an ","type":"text"},{"type":"strong","inlineContent":[{"text":"array of snapshots","type":"text"}]},{"text":" in the file.","type":"text"}]},{"text":"Steps","type":"heading","level":2,"anchor":"Steps"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Reference"}],"type":"strong"},{"text":" using associated types.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Declare ","type":"text"},{"type":"strong","inlineContent":[{"text":"snapshot usage","type":"text"}]},{"text":".","type":"text"}]}]}],"type":"orderedList"},{"type":"codeListing","code":["final class JSONStoreConfiguration: DataStoreConfiguration {","    \/\/ (1): cross reference","    typealias StoreType = JSONStore","    ...","}","","final class JSONStore: DataStore {","    \/\/ (1): cross reference","    typealias Configuration = JSONStoreConfiguration","    \/\/ (2): no need to customize the default data encoding\/decoding","    typealias Snapshot = DefaultSnapshot","    ...","}"],"syntax":"swift"},{"start":3,"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement the "},{"inlineContent":[{"type":"text","text":"required methods"}],"type":"strong"},{"type":"text","text":": fetch & save. You need to implement these two methods to make the Store usable by the ModelContext."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Implement ","type":"text"},{"type":"strong","inlineContent":[{"text":"fetch","type":"text"}]},{"text":" (R): load data from the store & return results.","type":"text"}]}]}],"type":"orderedList"},{"type":"codeListing","code":["class JSONStore: DataStore {","    func fetch<T>(_ request: DataStoreFetchRequest<T>) throws -> DataStoreFetchResult<T, DefaultSnapshot> where T : PersistentModel {","        ","        \/\/ (1): load data from the store","        let decoder = JSONDecoder ()","        let data = try Data(contentsof: configuration.fileURL)","        let trips = try decoder decode ([DefaultSnapshot].self, from: data)","","        \/\/ (2): return results","        return DataStoreFetchResult(descriptor: request.descriptor, fetchedSnapshots: trips)","    }","}"],"syntax":"swift"},{"start":5,"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Implement ","type":"text"},{"inlineContent":[{"text":"save","type":"text"}],"type":"strong"},{"text":" (CUD): write the snapshots into the JSON file.","type":"text"}]}]}],"type":"orderedList"},{"type":"paragraph","inlineContent":[{"text":"Steps:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Read the current content of the file: ","type":"text"},{"inlineContent":[{"type":"text","text":"read()"}],"type":"strong"}]}]}],"type":"unorderedList"},{"type":"codeListing","code":["var snapshotsByIdentifier = [PersistentIdentifier: DefaultSnapshot]()","try self.read().forEach { snapshotsByIdentifier[$0.persistentIdentifier] = $0 }"],"syntax":"swift"},{"items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Assigning","type":"text"}],"type":"strong"},{"type":"text","text":" and "},{"inlineContent":[{"text":"remapping","type":"text"}],"type":"strong"},{"type":"text","text":" identifiers (create or update from temporary to permanent ones)."}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"codeListing","code":["var remappedIdentifiers = [PersistentIdentifier: PersistentIdentifier]()","for snapshot in request. inserted {","    let entityName = snapshot.persistentIdentifier.entityName","    let permanentIdentifier = try PersistentIdentifier.identifier(for: identifier, entityName: entityName, primaryKey: UUID())","    let snapshotCopy = snapshot.copy(persistentIdentifier: permanentIdentifier)","    remappedIdentifiers[snapshot.persistentIdentifier] = permanentIdentifier","    snapshotsByIdentifier[permanentIdentifier] = snapshotCopy","}"],"syntax":"swift"},{"type":"codeListing","code":["for snapshot in request.updated {","    snapshotsByIdentifier[snapshot.persistentIdentifier] = snapshot","ÔΩù"],"syntax":"swift"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Remove deleted"}]},{"type":"text","text":" snapshots."}]}]}],"type":"unorderedList"},{"type":"codeListing","code":["for snapshot in request.deleted {","    snapshotsByIdentifier[snapshot.persistentIdentifier] = nil","}"],"syntax":"swift"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Save"}],"type":"strong"},{"type":"text","text":" working snapshot copy to disk."}]}]}],"type":"unorderedList"},{"type":"codeListing","code":["for snapshot in request.updated {","let snapshots = snapshotsByIdentifier.values.map(‚Äπ $0 })","let encoder = JSONEncoder()","let jsonData = try encoder. encode(snapshots)","try jsonData.write(to: configuration.fileURL)"],"syntax":"swift"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Return the "},{"type":"strong","inlineContent":[{"text":"save()","type":"text"}]},{"type":"text","text":" operation result with the remapped persistent identifiers."}]}]}],"type":"unorderedList"},{"type":"codeListing","code":["return DataStoreSaveChangesResult(for: self.identifier,","remappedIdentifiers: remappedIdentifiers)"],"syntax":"swift"},{"text":"Written By","type":"heading","level":2,"anchor":"Written-By"},{"numberOfColumns":5,"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"n3twr"}]}]},{"size":4,"content":[{"anchor":"Juan","text":"Juan","level":3,"type":"heading"},{"inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/n3twr","overridingTitle":"Contributed Notes","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/n3twr","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/x.com\/n3twr","type":"reference"}],"type":"paragraph"}]}],"type":"row"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"isActive":true,"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}]},{"text":"Related Sessions","type":"heading","level":2,"anchor":"Related-Sessions"},{"style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10075-Track-model-changes-with-SwiftData-history"],"type":"links"},{"type":"small","inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}]},{"type":"small","inlineContent":[{"text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc24-10138-create-a-custom-data-store-with-swiftdata"]}],"references":{"https://github.com/n3twr":{"titleInlineContent":[{"type":"text","text":"GitHub"}],"title":"GitHub","type":"link","identifier":"https:\/\/github.com\/n3twr","url":"https:\/\/github.com\/n3twr"},"WWDC24.jpeg":{"alt":null,"type":"image","identifier":"WWDC24.jpeg","variants":[{"url":"\/images\/WWDC24.jpeg","traits":["1x","light"]}]},"WWDCNotes.png":{"alt":null,"type":"image","identifier":"WWDCNotes.png","variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}]},"https://x.com/n3twr":{"titleInlineContent":[{"type":"text","text":"X\/Twitter"}],"title":"X\/Twitter","type":"link","identifier":"https:\/\/x.com\/n3twr","url":"https:\/\/x.com\/n3twr"},"doc://WWDCNotes/documentation/WWDCNotes/n3twr":{"images":[{"type":"card","identifier":"n3twr.jpeg"},{"type":"icon","identifier":"n3twr.jpeg"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/n3twr","kind":"article","title":"Juan (3 notes)","abstract":[{"type":"text","text":"No Bio on GitHub"}],"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/n3twr"},"WWDC24-10138-Overview1":{"alt":null,"type":"image","identifier":"WWDC24-10138-Overview1","variants":[{"url":"\/images\/WWDC24-10138-Overview1.jpg","traits":["1x","light"]}]},"https://developer.apple.com/wwdc24/10138":{"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc24\/10138","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc24\/10138"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10075-Track-model-changes-with-SwiftData-history":{"abstract":[{"text":"Reveal the history of your model‚Äôs changes with SwiftData! Use the history API to understand when data store changes occurred, and learn how to use this information to build features like remote server sync and out-of-process change handing in your app. We‚Äôll also cover how you can build support for the history API into a custom data store.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc24-10075-track-model-changes-with-swiftdata-history","role":"sampleCode","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10075-Track-model-changes-with-SwiftData-history","title":"Track model changes with SwiftData history"},"n3twr.jpeg":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/n3twr.jpeg"}],"identifier":"n3twr.jpeg"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24":{"kind":"article","type":"topic","title":"WWDC24","abstract":[{"type":"text","text":"Xcode 16, Swift 6, iOS 18, macOS 15 (Sequoia), tvOS 18, visionOS 2, watchOS 11."},{"type":"text","text":" "},{"type":"text","text":"New APIs: Swift Testing, "},{"type":"codeVoice","code":"FinanceKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"TabletopKit"},{"type":"text","text":", and more."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24","images":[{"identifier":"WWDC24-Icon.png","type":"icon"},{"identifier":"WWDC24.jpeg","type":"card"}],"url":"\/documentation\/wwdcnotes\/wwdc24","role":"collectionGroup"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"type":"link","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}]},"WWDC24-10138-Overview2":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDC24-10138-Overview2.jpg"}],"identifier":"WWDC24-10138-Overview2"},"WWDC24-Icon.png":{"type":"image","alt":null,"variants":[{"url":"\/images\/WWDC24-Icon.png","traits":["1x","light"]}],"identifier":"WWDC24-Icon.png"},"n3twr":{"type":"image","alt":"Profile image of Juan","variants":[{"traits":["1x","light"],"url":"\/images\/n3twr.jpeg"}],"identifier":"n3twr"},"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"images":[{"type":"icon","identifier":"WWDCNotes.png"}],"kind":"symbol","title":"WWDC Notes","role":"collection","url":"\/documentation\/wwdcnotes"},"WWDC24-10138-Overview4":{"type":"image","alt":null,"variants":[{"url":"\/images\/WWDC24-10138-Overview4.jpg","traits":["1x","light"]}],"identifier":"WWDC24-10138-Overview4"},"WWDC24-10138-Overview3":{"type":"image","alt":null,"variants":[{"traits":["1x","light"],"url":"\/images\/WWDC24-10138-Overview3.jpg"}],"identifier":"WWDC24-10138-Overview3"},"https://":{"type":"link","url":"https:\/\/","identifier":"https:\/\/","title":"Blog","titleInlineContent":[{"type":"text","text":"Blog"}]}}}