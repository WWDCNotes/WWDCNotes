{"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10097-Whats-new-in-App-Clips","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10043-Whats-new-in-App-Store-Connect","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10074-Whats-new-in-AppKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110332-Whats-new-in-Create-ML","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10005-Whats-new-in-HealthKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10035-Whats-new-in-MapKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10008-Whats-new-in-Nearby-Interaction","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10089-Whats-new-in-PDFKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10157-Whats-new-in-SF-Symbols-4","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10048-Whats-new-in-Safari-and-WebKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110336-Whats-new-in-Screen-Time-API","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10140-Whats-new-in-SharePlay","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10039-Whats-new-in-StoreKit-testing","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110368-Whats-new-in-SwiftDocC","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10052-Whats-new-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10090-Whats-new-in-TextKit-and-text-views","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10068-Whats-new-in-UIKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10024-Whats-new-in-Vision","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10049-Whats-new-in-WKWebView","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110427-Whats-new-in-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10045-Whats-new-in-managing-Apple-devices","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10023-Whats-new-in-the-Photos-picker","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10153-Whats-new-in-web-accessibility","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10149-Whats-new-in-AVQT","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10115-Whats-new-in-CloudKit-Console","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110345-Whats-new-in-Endpoint-Security","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10145-Whats-new-in-HLS-Interstitials","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10099-Whats-new-in-Safari-Web-Extensions","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10041-Whats-new-in-Wallet-and-Apple-Pay","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10009-Whats-new-in-iPad-app-design","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10109-Whats-new-in-notarization-for-Mac-apps","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10096-Whats-new-in-privacy"],"title":"Updated Tools & Frameworks"}],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110354-Whats-new-in-Swift","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22"]]},"kind":"article","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc22-110354-whats-new-in-swift"]}],"sampleCodeDownload":{"action":{"isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc22\/110354","type":"reference","overridingTitle":"Watch Video (38 min)"},"kind":"sampleDownload"},"abstract":[{"type":"text","text":"Join us for an update on Swift. We’ll take you through performance improvements, explore more secure and extensible Swift packages, and share advancements in Swift concurrency. We’ll also introduce you to Swift Regex, better generics, and other tools built into the language to help you write more flexible & expressive code."}],"primaryContentSections":[{"content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"inlineContent":[{"identifier":"https:\/\/fbernutz.github.io\/images\/sketchnotes\/wwdc22-whats-new-in-swift.jpg","type":"image"}],"type":"paragraph"},{"type":"heading","anchor":"Community-updates","text":"Community updates","level":2},{"inlineContent":[{"type":"text","text":"Two new work groups:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"isActive":true,"identifier":"https:\/\/www.swift.org\/website-workgroup\/","type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/forums.swift.org\/t\/swift-and-c-interoperability-workgroup-announcement\/54998","type":"reference","isActive":true}]}]}]},{"inlineContent":[{"type":"text","text":"Year-round mentorships from now on "},{"type":"reference","identifier":"http:\/\/Swift.org\/diversity","isActive":true},{"type":"text","text":" has more details."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Cross-platform support:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"support for Linux package formats: new native (experimental) toolchain installers for Amazon Linux 2 and CentOS 7"}]}]}]},{"inlineContent":[{"type":"text","text":"Swift news:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"dropped dependency on an external Unicode support library, replaced with a faster native implementation"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"this has made Swift smaller, useful when Swift is statically linked (e.g., in containerized deployments for the server)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"now used in Apple’s Secure Enclave Processor"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Swift-Packages-Updates","text":"Swift Packages Updates","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Trust on first use (TOFU)"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"new security protocol where the fingerprint of a package is now being recorded when the package is first downloaded"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"subsequent downloads will validate this fingerprint and report an error if the fingerprints are different","type":"text"}]}]}]}]}]},{"type":"heading","anchor":"Plugins","text":"Plugins","level":3},{"inlineContent":[{"type":"text","text":"Command plugins:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"first step in providing more extensible and secure build tools","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"can be used for documentation generation, source code reformatting, and more","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"Example:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import PackagePlugin","","\/\/\/ You define a plug-in by creating a struct that conforms to the CommandPlugin protocol.","@main struct MyPlugin: CommandPlugin {","","  \/\/ Add a function that tells your plug-in which tool you'd like to invoke","  func performCommand(context: PluginContext, arguments: [String]) throws {","    let process = try Process.run(doccExec, arguments: doccArgs) \/\/ here we call our tool, in this case DocC","    process.waitUntilExit()","  }","","}"]},{"inlineContent":[{"type":"text","text":"DocC: Objective-C and C support"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Build tool plugins:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"plugins that can implement additional build steps"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"similar to Xcode Rules"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"example: source code generation, resource processing"}]}]}]},{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["import PackagePlugin","","@main struct MyCoolPlugin: BuildToolPlugin {","  func createBuildCommands(context: TargetBuildContext) throws -> [Command] {","","    let generatedSources = context.pluginWorkDirectory.appending(\"GeneratedSources\")","","    return [","      .buildCommand(","        displayName: \"Running MyTool\",","        executable: try context.tool(named: \"mycooltool\").path,","        arguments: [\"create\"],","        outputFilesDirectory: generatedSources)","    ]","  }","}"]},{"inlineContent":[{"text":"Plugins are declared in a new ","type":"text"},{"text":"Plugins","type":"text"},{"text":" folder in the root of our Package, plugins are treated as Swift executables.","type":"text"}],"type":"paragraph"},{"type":"heading","anchor":"Module-aliasing","text":"Module aliasing","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"solves module collisions (when two separate packages define a module with the same name)"}]}]},{"content":[{"inlineContent":[{"text":"allows you to rename modules from outside the packages that define them","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["let package = Package(","  name: \"MyStunningApp\",","  dependencies: [","    .package(url: \"https:\/\/...\/swift-metrics.git\"),","    .package(url: \"https:\/\/...\/swift-log.git\") \/\/ ⚠️ swift-log and swift-metric define a Logging module","  ],","  targets: [","    .executableTarget(","      name: \"MyStunningApp\",","      dependencies: [","        .product(name: \"Logging\", package: \"swift-log\"),","        .product(name: \"Metrics\", package: \"swift-metrics\",","                 moduleAliases: [\"Logging\": \"MetricsLogging\"]), \/\/ 👈🏻 module aliasing","])])"]},{"type":"heading","anchor":"Performance-improvements","text":"Performance improvements","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Built-time improvements","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"faster type-checking for generics","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Runtime improvements","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"optimized protocol conformance checking","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"protocol checking on app startup take as long as four seconds"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"from Swift 5.7, these checks are cached"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"for apps that rely heavily on Swift, this means launch-time can be up to twice as fast","type":"text"}],"type":"paragraph"}]}]}]}]}]}]},{"type":"heading","anchor":"Swift-driver","text":"Swift driver","level":3},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"program that coordinates the compilation of Swift source code in Swift","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"rewritten in Swift (last year)","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"can now be used as a framework directly inside the Xcode build system instead of as a separate executable","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"this allows it to coordinate builds more closely with the build system to allow things like parallelization","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"build times improvements around 5-25%"}]}]}]},{"type":"heading","anchor":"Concurrency-updates","text":"Concurrency updates","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"further fleshed out the model with data race safety at the forefront"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"distributed"},{"type":"text","text":" actors"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"actors in different machines with a network between them","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"can write a safe backend for your app in Swift","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"note that a distributed actor call can potentially fail because of network errors","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-distributed-actors","type":"reference"},{"text":" that is focused on building server-side, clustered distributed systems in Swift","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"integrated networking layer using SwiftNIO"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"implements the ","type":"text"},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/SWIM_Protocol","isActive":true,"type":"reference"},{"text":" to manage state across the cluster","type":"text"}]}]}],"type":"unorderedList"}]}]}]}]},{"type":"codeListing","syntax":"swift","code":["distributed actor Player {","   ","  var ai: PlayerBotAI?","  var gameState: GameState","  ","  distributed func makeMove() -> GameMove {","    return ai.decideNextMove(given: &gameState)","  }","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"identifier":"http:\/\/github.com\/apple\/swift-async-algorithms","isActive":true,"type":"reference"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"seamless integration with ","type":"text"},{"code":"async\/await","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"home for time-based algorithms using ","type":"text"},{"type":"codeVoice","code":"AsyncSequence"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"support for Apple platforms, Linux, and Windows","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Actor prioritization"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"actors now execute the highest-priority work first"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"new Swift concurrency instruments"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Concurrency view helps you investigate performance issues"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Swift Tasks and Swift Actors instruments provide a full suite of tools to help you visualize and optimize your concurrency code"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"provides useful statistics such as the number of tasks running simultaneously, total tasks that have been created up until that point in time"}]}]},{"content":[{"inlineContent":[{"text":"graphical representation of the parent-child relationships between tasks in structured concurrent code","type":"text"}],"type":"paragraph"}]}]}]}]}]}]},{"type":"heading","anchor":"Whats-new-in-Swift-57","text":"What’s new in Swift 5.7","level":2},{"name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Refer to "},{"identifier":"https:\/\/github.com\/apple\/swift\/blob\/5fbede201a3e83d1957458060b6fbddf29494746\/CHANGELOG.md#swift-57","isActive":true,"type":"reference"},{"type":"text","text":"."}]}],"style":"note"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"if let x = x","type":"codeVoice"},{"text":" becomes ","type":"text"},{"code":"if let x","type":"codeVoice"},{"text":" (optional unwrapping)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"No need to manually specify a closures result type (closure type inference)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Permitted pointer conversion currently:"}]}]}]},{"rows":[[[{"inlineContent":[],"type":"paragraph"}],[{"inlineContent":[{"text":"Swift","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"C"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"UnsafePointer<UInt64> const uint64 t *"},{"text":" ↔️ ","type":"text"},{"type":"codeVoice","code":"UnsafePointer<Int64> const int64 t*"}],"type":"paragraph"}],[{"inlineContent":[{"text":"❌","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"UnsafePointer<mailmap_t> const mailmap_t *","type":"codeVoice"},{"text":" ↔️ ","type":"text"},{"code":"UnsafePointer<UInt8> const char *","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"text":"❌","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"UnsafeRawPointer const void *"},{"type":"text","text":" ↔️ "},{"type":"codeVoice","code":"UnsafePointer<UInt8> const char *"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅"}],"type":"paragraph"}]]],"type":"table","header":"row"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Pointer mismatches still possible when passing to C","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"C++ working group works on improving the interoperation"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Special treatment for enabling conversions easily","type":"text"}]}]}]},{"rows":[[[{"inlineContent":[],"type":"paragraph"}],[{"inlineContent":[{"text":"Swift","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"C","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Swift calling C"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"UnsafePointer<UInt64> const uint64 t *"},{"type":"text","text":" ↔️ "},{"type":"codeVoice","code":"UnsafePointer<Int64> const int64 t*"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"UnsafePointer<mailmap_t> const mailmap_t *"},{"text":" ↔️ ","type":"text"},{"type":"codeVoice","code":"UnsafePointer<UInt8> const char *"}],"type":"paragraph"}],[{"inlineContent":[{"text":"❌","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"UnsafeRawPointer const void *"},{"type":"text","text":" ↔️ "},{"type":"codeVoice","code":"UnsafePointer<UInt8> const char *"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅"}],"type":"paragraph"}]]],"type":"table","header":"row"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"String parsing currently is hard (especially indices)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"“the problem is not the indices expression, it’s the whole function”","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Answer: Use Regexes!"}]}]},{"content":[{"inlineContent":[{"text":"Literals supported now with compile-time checks","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["func parseLine(_ line: Substring) throws -> MailmapEntry {","  let regex = \/\\h*([^<#]+?)??\\h*<([^>#]+)>\\h*(?:#|\\Z)\/","  ","  guard let match = line.prefixMatch(of: regex) else {","    throw MailmapError.badLine","  }","  ","  return MailmapEntry(name: match.1, email: match.2)","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"For those who find Regexes hard to read, new DSL:","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["import RegexBuilder","","let regex = Regex {","  ZeroOrMore(.horizontalWhitespace)","  Optionally {","    Capture (OneOrMore(.noneOf(\"<#\")))","  }","  .repetitionBehavior(.reluctant)","","  ZeroOrMore(.horizontalWhitespace)","  \"<\"","  Capture (OneOrMore(.noneOf(\">#\")))","  \">\"","  ZeroOrMore(.horizontalWhitespace)","  ChoiceOf {","    \"＃\"","    Anchor.endOfSubjectBeforeNewline","  }","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Requires ","type":"text"},{"type":"codeVoice","code":"import RegexBuilder"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Not a beginner-only feature","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"turn into reusable ","type":"text"},{"code":"RegexComponent","type":"codeVoice"},{"text":", use from other regexes, even are recursive","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"no special escaping needed","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"support literals inside of the builder","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"types can implement custom parsing logic, like "},{"type":"codeVoice","code":"Date"}],"type":"paragraph"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Regex"},{"type":"text","text":" supports useful matching functions"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Custom engine written in Swift"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Compatible with UTS #18 unicode standard"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Available in macOS 13, iOS 16, tvOS 16, watchOS 9"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Generic-code-clarity","text":"Generic code clarity","level":3},{"inlineContent":[{"text":"Assume ","type":"text"},{"code":"Mailmap","type":"codeVoice"},{"text":" is our generic:","type":"text"}],"type":"paragraph"},{"rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Something that conforms to Mailmap"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"A box whose contents conform to Mailmap"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"struct EditableMailmap: Mailmap"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"var map: Mailmap"}]}]],[[{"type":"paragraph","inlineContent":[{"code":"<Value: Mailmap>","type":"codeVoice"}]}],[{"type":"paragraph","inlineContent":[{"code":"Array<Mailmap>","type":"codeVoice"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"where Element: Mailmap"}]}],[{"type":"paragraph","inlineContent":[{"code":"where Element == Mailmap","type":"codeVoice"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"some Mailmap"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"(Mailmap) -> Mailmap"}]}]]],"type":"table","header":"row"},{"inlineContent":[{"type":"text","text":"We can be more expressive with any:"}],"type":"paragraph"},{"rows":[[[{"type":"paragraph","inlineContent":[{"type":"text","text":"Something that conforms to Mailmap"}]}],[{"type":"paragraph","inlineContent":[{"text":"A box whose contents conform to Mailmap","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"struct EditableMailmap: Mailmap"}]}],[{"type":"paragraph","inlineContent":[{"code":"var map: any Mailmap","type":"codeVoice"}]}]],[[{"type":"paragraph","inlineContent":[{"code":"<Value: Mailmap>","type":"codeVoice"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"Array<any Mailmap>"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"where Element: Mailmap"}]}],[{"type":"paragraph","inlineContent":[{"code":"where Element == any Mailmap","type":"codeVoice"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"some Mailmap"}]}],[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"(any Mailmap) -> any Mailmap"}]}]]],"type":"table","header":"row"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"easier to explain the difference between methods and understand errors"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Swift will now “open the box” for us, so less “cannot conform to” errors","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Swift 5.7 fixes the “only be used as a generic constraint” error","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"you can now specify the types in parameter, without the need to a "},{"code":"where","type":"codeVoice"},{"type":"text","text":" clause using “primary associated type”"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["protocol Collection<Element>: Sequence {","  associatedtype Index: Comparable","  associatedtype Iterator: IteratorProtocol<Element>","  associatedtype SubSequence: Collection<Element> where SubSequence.Index == Index, SubSequence.SubSequence == SubSequence","","  associatedtype Element","}"]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"AnyCollection","type":"codeVoice"},{"text":" is a type-erasing wrapper, serves same purpose of ","type":"text"},{"code":"any","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"code":"any","type":"codeVoice"},{"type":"text","text":" is a built-in language feature that makes type-erasing wrappers no longer needed in many cases"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"suggestion: replace your wrappers with typealiases, e.g. ","type":"text"},{"code":"let AnyCollection = any Collection","type":"codeVoice"},{"text":" to keep backwards-compatibility (easier migration)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Improvements to "},{"type":"codeVoice","code":"any"},{"type":"text","text":" types, but still have important limitations"}]}]},{"content":[{"inlineContent":[{"text":"Don’t use ","type":"text"},{"type":"codeVoice","code":"any"},{"text":" all the time, use generics instead, use the top one for better performance (generics)","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["func addEntries1<Entries: Collection<MailmapEntry>, Map: Mailmap>(_ entries: Entries, to mailmap: inout MailMap) {","  for entry in entries {","    mailmap.addEntry(entry)","  }","}","","func addEntries2(_ entries: any Collection<MailmapEntry>, to mailmap: inout any Mailmap) {","  for entry in entries {","    mailmap.addEntry(entry)","  }","}"]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"some ProtocolName"},{"type":"text","text":" supported in more places, simplifies definition of Generics (simplifies above example, just write "},{"type":"codeVoice","code":"some"},{"type":"text","text":" instead of "},{"type":"codeVoice","code":"any"},{"type":"text","text":")"}]}]}]},{"type":"codeListing","syntax":"swift","code":["func addEntries1(_ entries: some Collection<MailmapEntry>, to mailmap: inout some MailMap) {","  for entry in entries {","    mailmap.addEntry(entry)","  }","}","","func addEntries2(_ entries: any Collection<MailmapEntry>, to mailmap: inout any Mailmap) {","  for entry in entries {","    mailmap.addEntry(entry)","  }","}"]},{"type":"heading","anchor":"Written-By","text":"Written By","level":2},{"type":"row","numberOfColumns":5,"columns":[{"content":[{"inlineContent":[{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/6942160?v=4","type":"image"}],"type":"paragraph"}],"size":1},{"content":[{"text":"Cihat Gündüz","level":3,"anchor":"Cihat-Gündüz","type":"heading"},{"inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"isActive":true,"overridingTitle":"Contributed Notes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Jeehut","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/Jeehut","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/x.com\/Jeehut","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/fline.dev","type":"reference"}],"type":"paragraph"}],"size":4}]},{"type":"row","numberOfColumns":5,"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4","type":"image"}]}]},{"size":4,"content":[{"type":"heading","text":"Federico Zanetello","level":3,"anchor":"Federico-Zanetello"},{"type":"paragraph","inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"isActive":true,"overridingTitle":"Contributed Notes","type":"reference","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/zntfdr"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/zntfdr.dev"}]}]}]},{"type":"row","numberOfColumns":5,"columns":[{"content":[{"inlineContent":[{"type":"image","identifier":"https:\/\/avatars.githubusercontent.com\/u\/26111180?v=4"}],"type":"paragraph"}],"size":1},{"content":[{"level":3,"anchor":"Feli-Bernutz","text":"Feli Bernutz","type":"heading"},{"inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/fbernutz","type":"reference","overridingTitle":"Contributed Notes"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/fbernutz","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/x.com\/felibe444","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/fbernutz.github.io","type":"reference"}],"type":"paragraph"}],"size":4}]},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"isActive":true,"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","type":"reference"}],"type":"paragraph"},{"type":"heading","anchor":"Related-Sessions","text":"Related Sessions","level":2},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110347-Explore-more-content-with-MusicKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110350-Visualize-and-optimize-Swift-concurrency","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110352-Embrace-Swift-generics","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110353-Design-protocol-interfaces-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110355-Meet-Swift-Async-Algorithms","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110356-Meet-distributed-actors-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110357-Meet-Swift-Regex","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110358-Swift-Regex-Beyond-the-basics","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110359-Meet-Swift-Package-plugins","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110363-Improve-app-size-and-runtime-performance","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110364-Demystify-parallelization-in-Xcode-builds","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110401-Create-Swift-Package-plugins"],"style":"list"},{"inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}],"type":"small"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"What’s new in Swift","modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC22","role":"sampleCode"},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10005-Whats-new-in-HealthKit":{"title":"What’s new in HealthKit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10005-Whats-new-in-HealthKit","type":"topic","kind":"article","abstract":[{"text":"Bring the latest HealthKit features to your health & fitness app. We’ll show you how to capture more detailed sleep data through sleep stages, track swim-bike-run and interval workouts with the enhanced Workout API, and save vision prescriptions — including an image of the physical prescription — directly to HealthKit while preserving privacy.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10005-whats-new-in-healthkit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10039-Whats-new-in-StoreKit-testing":{"title":"What’s new in StoreKit testing","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10039-Whats-new-in-StoreKit-testing","type":"topic","kind":"article","abstract":[{"text":"Discover the latest tools to help you test your in-app purchases and subscriptions. We’ll show you how to bring your products from App Store Connect into StoreKit Testing in Xcode, learn about improvements to the transaction manager, and explore your in-app purchase flow in Xcode Previews. We’ll also take you through best practices when setting up an Apple ID for the sandbox environment, and show you how to create tests for refund requests, price increase consent, billing retry, and much more.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10039-whats-new-in-storekit-testing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10089-Whats-new-in-PDFKit":{"abstract":[{"text":"Discover PDFKit — a full-featured framework that helps your app view, edit, and save PDF documents. We’ll take you through the latest features in PDFKit, including support for live text and forms, creating PDFs from images, building interactive overlays, and saving annotations.","type":"text"}],"role":"sampleCode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10089-Whats-new-in-PDFKit","title":"What’s new in PDFKit","url":"\/documentation\/wwdcnotes\/wwdc22-10089-whats-new-in-pdfkit","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10049-Whats-new-in-WKWebView":{"title":"What’s new in WKWebView","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10049-Whats-new-in-WKWebView","type":"topic","kind":"article","abstract":[{"text":"Explore the latest updates to WKWebView, our framework for incorporating web content into your app’s interface. We’ll show you how to use the JavaScript fullscreen API, explore CSS viewport units, and learn more about find interactions. We’ll also take you through refinements to content blocking controls, embedding encrypted media, and using the Web Inspector.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10049-whats-new-in-wkwebview"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10145-Whats-new-in-HLS-Interstitials":{"abstract":[{"text":"HLS Interstitials can help you create seamless transitions in video content between advertisements, other interstitials, and your HLS streams. Learn how you can optimize your ad inventory, fine-tune interstitial presentation with SNAP-IN\/OUT when using HLS, and more.","type":"text"}],"role":"sampleCode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10145-Whats-new-in-HLS-Interstitials","title":"What’s new in HLS Interstitials","url":"\/documentation\/wwdcnotes\/wwdc22-10145-whats-new-in-hls-interstitials","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/Jeehut":{"url":"\/documentation\/wwdcnotes\/jeehut","role":"sampleCode","title":"Cihat Gündüz (54 notes)","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Jeehut","abstract":[{"type":"text","text":"Spatial-first Indie Developer for  Platforms. Actively contributing to Open Source since 2011!"}],"type":"topic","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110364-Demystify-parallelization-in-Xcode-builds":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110364-Demystify-parallelization-in-Xcode-builds","title":"Demystify parallelization in Xcode builds","url":"\/documentation\/wwdcnotes\/wwdc22-110364-demystify-parallelization-in-xcode-builds","role":"sampleCode","abstract":[{"type":"text","text":"Learn how the Xcode build system extracts maximum parallelism from your builds. We’ll explore how you can structure your project to improve build efficiency, take you through the process for resolving relationships between targets’ build phases in Xcode, and share how you can take full advantage of available hardware resources when compiling in Swift. We’ll also introduce you to Build Timeline — a powerful tool to help you monitor your build efficiency and performance."}]},"doc://WWDCNotes/documentation/WWDCNotes":{"url":"\/documentation\/wwdcnotes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"title":"WWDC Notes","kind":"symbol","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","role":"collection"},"https://forums.swift.org/t/swift-and-c-interoperability-workgroup-announcement/54998":{"title":"C++ Interoperability","identifier":"https:\/\/forums.swift.org\/t\/swift-and-c-interoperability-workgroup-announcement\/54998","type":"link","url":"https:\/\/forums.swift.org\/t\/swift-and-c-interoperability-workgroup-announcement\/54998","titleInlineContent":[{"type":"text","text":"C++ Interoperability"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10115-Whats-new-in-CloudKit-Console":{"title":"What’s new in CloudKit Console","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10115-Whats-new-in-CloudKit-Console","type":"topic","kind":"article","abstract":[{"text":"We’ll take you through the latest updates to CloudKit Console and discover how you can explore and debug your containers on the web like never before. Learn more about Act as iCloud, which helps you query records and view data from the perspective of another account. Discover how to share zones of records, and provide better collaboration between participants. And find out how to hide inactive containers. We’ll also share a few tips on getting the most out of CloudKit Console.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10115-whats-new-in-cloudkit-console"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10157-Whats-new-in-SF-Symbols-4":{"title":"What’s new in SF Symbols 4","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10157-Whats-new-in-SF-Symbols-4","type":"topic","kind":"article","abstract":[{"text":"Explore the latest updates to SF Symbols, Apple’s extensive library of iconography designed to integrate seamlessly with San Francisco, the system font for all Apple platforms. Discover the latest additions to the SF Symbols library and new categories in the app. Learn about the new Automatic behavior, which chooses the rendering mode that best highlights what’s unique about the symbol’s characteristics. See how to use the new Variable Color feature to make a symbol more dynamic. We’ll also learn about a more efficient way of annotating symbols with the new unified approach.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10157-whats-new-in-sf-symbols-4"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10045-Whats-new-in-managing-Apple-devices":{"abstract":[{"text":"Explore enhancements to device management across Apple platforms. Improve device deployment workflows using the latest version of Apple Configurator for iPhone. Learn about identity technologies and MDM protocol updates for macOS, iOS and iPadOS. We’ll also share an exciting change in how we provide device management documentation.","type":"text"}],"role":"sampleCode","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10045-Whats-new-in-managing-Apple-devices","title":"What’s new in managing Apple devices","url":"\/documentation\/wwdcnotes\/wwdc22-10045-whats-new-in-managing-apple-devices","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110356-Meet-distributed-actors-in-Swift":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110356-meet-distributed-actors-in-swift","abstract":[{"text":"Discover distributed actors — an extension of Swift’s actor model that simplifies development of distributed systems. We’ll explore how distributed actor isolation and location transparency can help you avoid the accidental complexity of networking, serialization, and other transport concerns when working with distributed apps and systems.","type":"text"}],"kind":"article","title":"Meet distributed actors in Swift","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110356-Meet-distributed-actors-in-Swift","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10052-Whats-new-in-SwiftUI":{"url":"\/documentation\/wwdcnotes\/wwdc22-10052-whats-new-in-swiftui","role":"sampleCode","title":"What’s new in SwiftUI","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10052-Whats-new-in-SwiftUI","abstract":[{"type":"text","text":"It’s a SwiftUI party — and you’re invited! Join us as we share the latest updates and a glimpse into the future of UI framework design. Discover deep levels of customization, advanced techniques for layout, elegant strategies for sharing, and rock-solid structural approaches for designing an app top-to-bottom in SwiftUI. We’ll also have some celebratory fun as we play with the latest graphical effects and explore APIs."}],"type":"topic","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22":{"title":"WWDC22","type":"topic","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"abstract":[{"text":"Xcode 14, Swift 5.7, iOS 16, macOS 13, tvOS 16, watchOS 9.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"WeatherKit"},{"type":"text","text":", "},{"code":"ScreenCaptureKit","type":"codeVoice"},{"type":"text","text":", "},{"code":"Swift Regex","type":"codeVoice"},{"text":", and more.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22","role":"collectionGroup","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22"},"https://github.com/apple/swift-distributed-actors":{"title":"new open source Distributed Actors package","identifier":"https:\/\/github.com\/apple\/swift-distributed-actors","type":"link","url":"https:\/\/github.com\/apple\/swift-distributed-actors","titleInlineContent":[{"type":"text","text":"new open source Distributed Actors package"}]},"https://www.swift.org/website-workgroup/":{"title":"Swift Website (SWWG)","identifier":"https:\/\/www.swift.org\/website-workgroup\/","type":"link","url":"https:\/\/www.swift.org\/website-workgroup\/","titleInlineContent":[{"type":"text","text":"Swift Website (SWWG)"}]},"https://fline.dev":{"title":"Blog","identifier":"https:\/\/fline.dev","type":"link","url":"https:\/\/fline.dev","titleInlineContent":[{"type":"text","text":"Blog"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110357-Meet-Swift-Regex":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110357-Meet-Swift-Regex","title":"Meet Swift Regex","kind":"article","role":"sampleCode","abstract":[{"text":"Learn how you can process strings more effectively when you take advantage of Swift Regex. Come for concise literals but stay for Regex builders — a new, declarative approach to string processing. We’ll also explore the Unicode models in String and share how Swift Regex can make Unicode-correct processing easy.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc22-110357-meet-swift-regex","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10097-Whats-new-in-App-Clips":{"title":"What’s new in App Clips","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10097-Whats-new-in-App-Clips","type":"topic","kind":"article","abstract":[{"text":"Explore the latest updates to App Clips! Discover how we’ve made your App Clip even easier to build with improvements to the size limit as well as CloudKit and keychain usage. We’ll also show you how to use our validation tool to verify your App Clip and automate workflows for your advanced App Clip experiences using App Store Connect.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10097-whats-new-in-app-clips"},"https://x.com/Jeehut":{"title":"X\/Twitter","identifier":"https:\/\/x.com\/Jeehut","type":"link","url":"https:\/\/x.com\/Jeehut","titleInlineContent":[{"type":"text","text":"X\/Twitter"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110358-Swift-Regex-Beyond-the-basics":{"abstract":[{"text":"Go beyond the basics of string processing with Swift Regex. We’ll share an overview of Regex and how it works, explore Foundation’s rich data parsers and discover how to integrate your own, and delve into captures. We’ll also provide best practices for matching strings and wielding Regex-powered algorithms with ease.","type":"text"}],"type":"topic","title":"Swift Regex: Beyond the basics","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22-110358-swift-regex-beyond-the-basics","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110358-Swift-Regex-Beyond-the-basics","role":"sampleCode"},"https://fbernutz.github.io":{"title":"Blog","identifier":"https:\/\/fbernutz.github.io","type":"link","url":"https:\/\/fbernutz.github.io","titleInlineContent":[{"type":"text","text":"Blog"}]},"https://github.com/fbernutz":{"title":"GitHub","identifier":"https:\/\/github.com\/fbernutz","type":"link","url":"https:\/\/github.com\/fbernutz","titleInlineContent":[{"type":"text","text":"GitHub"}]},"https://github.com/apple/swift/blob/5fbede201a3e83d1957458060b6fbddf29494746/CHANGELOG.md#swift-57":{"title":"Apple’s Swift repository CHANGELOG","identifier":"https:\/\/github.com\/apple\/swift\/blob\/5fbede201a3e83d1957458060b6fbddf29494746\/CHANGELOG.md#swift-57","type":"link","url":"https:\/\/github.com\/apple\/swift\/blob\/5fbede201a3e83d1957458060b6fbddf29494746\/CHANGELOG.md#swift-57","titleInlineContent":[{"type":"text","text":"Apple’s Swift repository CHANGELOG"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10068-Whats-new-in-UIKit":{"title":"What’s new in UIKit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10068-Whats-new-in-UIKit","type":"topic","kind":"article","abstract":[{"text":"Discover the latest updates and improvements to UIKit and learn how to build better iPadOS, iOS, and Mac Catalyst apps. We’ll take you through UI refinements, productivity updates, API enhancements, and more. We’ll also help you explore improvements to performance, security, and privacy.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10068-whats-new-in-uikit"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110363-Improve-app-size-and-runtime-performance":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110363-Improve-app-size-and-runtime-performance","title":"Improve app size and runtime performance","url":"\/documentation\/wwdcnotes\/wwdc22-110363-improve-app-size-and-runtime-performance","role":"sampleCode","abstract":[{"type":"text","text":"Learn how we’ve optimized the Swift and Objective-C runtimes to help you make your app smaller, quicker, and launch faster. Discover how you can get access to efficient protocol checks, smaller message send calls, and optimized ARC simply when you build your app with Xcode 14 and update your deployment target."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10090-Whats-new-in-TextKit-and-text-views":{"title":"What’s new in TextKit and text views","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10090-Whats-new-in-TextKit-and-text-views","type":"topic","kind":"article","abstract":[{"text":"Discover the latest updates to TextKit and text views in UI frameworks. Explore layout refinements and API enhancements, learn how you can maintain compatibility across multiple OS versions, and find out how to modernize your app with TextKit 2.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10090-whats-new-in-textkit-and-text-views"},"https://github.com/Jeehut":{"title":"GitHub","identifier":"https:\/\/github.com\/Jeehut","type":"link","url":"https:\/\/github.com\/Jeehut","titleInlineContent":[{"type":"text","text":"GitHub"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10140-Whats-new-in-SharePlay":{"title":"What’s new in SharePlay","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10140-Whats-new-in-SharePlay","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-10140-whats-new-in-shareplay","abstract":[{"text":"Join us as we share the latest updates to SharePlay. We’ll show you how you can start SharePlay sessions right from your app, take you through improvements to APIs to create richer experiences, and check out enhancements to GroupSessionMessenger. We’ll also explore best practices for adding SharePlay to your app.","type":"text"}],"role":"sampleCode"},"https://fbernutz.github.io/images/sketchnotes/wwdc22-whats-new-in-swift.jpg":{"identifier":"https:\/\/fbernutz.github.io\/images\/sketchnotes\/wwdc22-whats-new-in-swift.jpg","type":"image","variants":[{"traits":["1x","light"],"url":"https:\/\/fbernutz.github.io\/images\/sketchnotes\/wwdc22-whats-new-in-swift.jpg"}],"alt":"Sketchnote about news in swift from WWDC 22 with community updates, news for swifts packages, performance improvements, concurrency updates and info to expressive swift"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10008-Whats-new-in-Nearby-Interaction":{"title":"What’s new in Nearby Interaction","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10008-Whats-new-in-Nearby-Interaction","type":"topic","kind":"article","abstract":[{"text":"Discover how the Nearby Interaction framework can help you easily integrate Ultra Wideband (UWB) into your apps and hardware accessories. Learn how you can combine the visual-spatial power of ARKit with the radio sensitivity of the U1 chip to locate nearby stationary objects with precision. We’ll also show you how you can create background interactions using UWB accessories paired via Bluetooth.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10008-whats-new-in-nearby-interaction"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10074-Whats-new-in-AppKit":{"title":"What’s new in AppKit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10074-Whats-new-in-AppKit","type":"topic","kind":"article","abstract":[{"text":"Discover the latest advances in Mac app development using AppKit. We’ll take you through the latest updates to SF Symbols, show you how you can elevate your interface with enhanced controls, and help you learn to coordinate your windows with Stage Manager. We’ll also explore the latest sharing and collaboration features for macOS.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10074-whats-new-in-appkit"},"https://zntfdr.dev":{"title":"Blog","identifier":"https:\/\/zntfdr.dev","type":"link","url":"https:\/\/zntfdr.dev","titleInlineContent":[{"type":"text","text":"Blog"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10109-Whats-new-in-notarization-for-Mac-apps":{"title":"What’s new in notarization for Mac apps","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10109-Whats-new-in-notarization-for-Mac-apps","type":"topic","kind":"article","abstract":[{"text":"Notarization works in tandem with macOS to help people safely download software for their Mac outside of the App Store. Learn about the required transition from altool to notarytool and how the Xcode GUI can help you achieve better overall performance when notarizing your app. We’ll also share information about APIs for interacting with the Notary service from any internet-connected machine.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10109-whats-new-in-notarization-for-mac-apps"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10099-Whats-new-in-Safari-Web-Extensions":{"title":"What’s new in Safari Web Extensions","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10099-Whats-new-in-Safari-Web-Extensions","type":"topic","kind":"article","abstract":[{"text":"Learn how you can use the latest improvements to Safari Web Extensions to create even better experiences for people browsing the web. We’ll show you how to upgrade to manifest version 3, adopt the latest APIs for Web Extensions, and sync extensions across devices.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10099-whats-new-in-safari-web-extensions"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10043-Whats-new-in-App-Store-Connect":{"title":"What’s new in App Store Connect","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10043-Whats-new-in-App-Store-Connect","type":"topic","kind":"article","abstract":[{"text":"Discover the latest updates to App Store Connect, your suite of tools to create, manage, and submit apps on the App Store. Learn about enhancements to the submission experience — including the ability to manage submissions in App Store Connect on iOS and iPadOS — as well as the newest updates to the App Store Connect API and much more.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10043-whats-new-in-app-store-connect"},"https://avatars.githubusercontent.com/u/26111180?v=4":{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/26111180?v=4","type":"image","variants":[{"traits":["1x","light"],"url":"https:\/\/avatars.githubusercontent.com\/u\/26111180?v=4"}],"alt":"Profile image of Feli Bernutz"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110345-Whats-new-in-Endpoint-Security":{"title":"What’s new in Endpoint Security","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110345-Whats-new-in-Endpoint-Security","type":"topic","kind":"article","abstract":[{"text":"Learn how you can build reliable endpoint security products like anti-virus software, endpoint detection and response, and data leakage prevention solutions for macOS. We’ll take you through the latest enhancements to Endpoint Security APIs: Learn how you can support more security events and use advanced muting capabilities in your app. We’ll also explore a standalone tool to help you perform introspection from the command line.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110345-whats-new-in-endpoint-security"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10023-Whats-new-in-the-Photos-picker":{"title":"What’s new in the Photos picker","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10023-Whats-new-in-the-Photos-picker","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-10023-whats-new-in-the-photos-picker","abstract":[{"text":"PHPicker provides simple and secure integration between your app and the system Photos library. Learn how SwiftUI and Transferable can help you offer integration across iOS, iPadOS, macOS, and watchOS.","type":"text"}],"role":"sampleCode"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}],"alt":null},"https://github.com/zntfdr":{"title":"GitHub","identifier":"https:\/\/github.com\/zntfdr","type":"link","url":"https:\/\/github.com\/zntfdr","titleInlineContent":[{"type":"text","text":"GitHub"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110353-Design-protocol-interfaces-in-Swift":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110353-design-protocol-interfaces-in-swift","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110353-Design-protocol-interfaces-in-Swift","abstract":[{"type":"text","text":"Learn how you can use Swift 5.7 to design advanced abstractions using protocols. We’ll show you how to use existential types, explore how you can separate implementation from interface with opaque result types, and share the same-type requirements that can help you identify and guarantee relationships between concrete types."}],"title":"Design protocol interfaces in Swift","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110427-Whats-new-in-Xcode":{"title":"What’s new in Xcode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110427-Whats-new-in-Xcode","type":"topic","kind":"article","abstract":[{"text":"Discover the latest productivity and performance advancements in Xcode 14. We’ll introduce you to the fully redesigned SwiftUI canvas experience, explore enhancements to code completion and navigation, and take you through performance improvements we’ve made throughout the entire development process. We’ll also show you how you can now read and respond to feedback on your TestFlight builds without ever leaving Xcode.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110427-whats-new-in-xcode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110401-Create-Swift-Package-plugins":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110401-Create-Swift-Package-plugins","title":"Create Swift Package plugins","url":"\/documentation\/wwdcnotes\/wwdc22-110401-create-swift-package-plugins","role":"sampleCode","abstract":[{"text":"Tailor your development workflow and learn how to write your own package plugins in Swift. We’ll show you how you can extend Xcode’s functionality by using the PackagePlugin API to generate source code or automate release tasks and share best practices for creating great plugins.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10041-Whats-new-in-Wallet-and-Apple-Pay":{"title":"What’s new in Wallet and Apple Pay","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10041-Whats-new-in-Wallet-and-Apple-Pay","type":"topic","kind":"article","abstract":[{"text":"Discover the latest updates to Wallet & Apple Pay. We’ll show you how to support Orders in Wallet for your apps and websites and securely validate someone’s age and identity with the Identity Verification API. We’ll also explore PassKit support for SwiftUI, and discuss how you how you can improve your Apple Pay experience with Automatic Payments.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10041-whats-new-in-wallet-and-apple-pay"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110336-Whats-new-in-Screen-Time-API":{"title":"What’s new in Screen Time API","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110336-Whats-new-in-Screen-Time-API","type":"topic","kind":"article","abstract":[{"text":"Find out how you can build apps that help people manage their relationship with their device — all while putting privacy first. We’ll take you through the Screen Time API and share how you can use features like core restrictions and device activity reports to create great experiences while providing measurable control for the device’s owner, parents, and guardians.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110336-whats-new-in-screen-time-api"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"kind":"article","url":"\/documentation\/wwdcnotes\/zntfdr","title":"Federico Zanetello (214 notes)"},"doc://WWDCNotes/documentation/WWDCNotes/fbernutz":{"kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/fbernutz","abstract":[{"text":"You can learn anything, but you can’t learn everything","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/fbernutz","title":"Feli Bernutz (16 notes)","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10009-Whats-new-in-iPad-app-design":{"title":"What’s new in iPad app design","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10009-Whats-new-in-iPad-app-design","type":"topic","kind":"article","abstract":[{"text":"Discover the latest updates in iPad app design. We’ll take you through improvements to search, navigation bars, edit menus, multi-selection, and more. Learn how you can make your app both more powerful and easier to use when you incorporate customizable toolbars, multi-column tables, and find and replace.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10009-whats-new-in-ipad-app-design"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110350-Visualize-and-optimize-Swift-concurrency":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110350-Visualize-and-optimize-Swift-concurrency","abstract":[{"type":"text","text":"Learn how you can optimize your app with the Swift Concurrency template in Instruments. We’ll discuss common performance issues and show you how to use Instruments to find and resolve these problems. Learn how you can keep your UI responsive, maximize parallel performance, and analyze Swift concurrency activity within your app."}],"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22-110350-visualize-and-optimize-swift-concurrency","role":"sampleCode","title":"Visualize and optimize Swift concurrency"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10153-Whats-new-in-web-accessibility":{"title":"What’s new in web accessibility","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10153-Whats-new-in-web-accessibility","type":"topic","kind":"article","abstract":[{"text":"Discover techniques for building rich, accessible web apps with custom controls, SSML, and the dialog element. We’ll discuss different assistive technologies and help you learn how to use them when testing the accessibility of your web apps.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10153-whats-new-in-web-accessibility"},"http://Swift.org/diversity":{"title":"Swift.org\/diversity","identifier":"http:\/\/Swift.org\/diversity","type":"link","url":"http:\/\/Swift.org\/diversity","titleInlineContent":[{"type":"text","text":"Swift.org\/diversity"}]},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","type":"link","url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10096-Whats-new-in-privacy":{"title":"What’s new in privacy","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10096-Whats-new-in-privacy","type":"topic","kind":"article","abstract":[{"text":"At Apple, we believe that privacy is a fundamental human right, and protecting people’s privacy is at the center of everything we do. Discover how our engineering teams build privacy into all of our products and developer frameworks, and learn about the technologies and patterns you can adopt in your apps to build trust and protect your customers.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10096-whats-new-in-privacy"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110332-Whats-new-in-Create-ML":{"title":"What’s new in Create ML","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110332-Whats-new-in-Create-ML","type":"topic","kind":"article","abstract":[{"text":"Discover the latest updates to Create ML. We’ll share improvements to Create ML’s evaluation tools that can help you understand how your custom models will perform on real-world data. Learn how you can check model performance on each type of image in your test data and identify problems within individual images to help you troubleshoot mistaken classifications, poorly labeled data, and other errors. We’ll also show you how to test your model with iPhone and iPad in live preview using Continuity Camera, and share how you can take Action Classification even further with the new Repetition Counting capabilities of the Create ML Components framework.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110332-whats-new-in-create-ml"},"https://en.wikipedia.org/wiki/SWIM_Protocol":{"title":"SWIM consensus protocol","identifier":"https:\/\/en.wikipedia.org\/wiki\/SWIM_Protocol","type":"link","url":"https:\/\/en.wikipedia.org\/wiki\/SWIM_Protocol","titleInlineContent":[{"type":"text","text":"SWIM consensus protocol"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110368-Whats-new-in-SwiftDocC":{"title":"What’s new in Swift-DocC","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110368-Whats-new-in-SwiftDocC","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-110368-whats-new-in-swiftdocc","abstract":[{"text":"Join us for an exciting update on Swift-DocC and learn how you can write and share documentation for your own projects. We’ll explore improvements to Swift-DocC navigation and share how you can compile documentation for application targets and Objective-C code. We’ll also show you how to publish your content straight to hosting services like GitHub Pages.","type":"text"}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110347-Explore-more-content-with-MusicKit":{"title":"Explore more content with MusicKit","type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110347-explore-more-content-with-musickit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110347-Explore-more-content-with-MusicKit","kind":"article","abstract":[{"type":"text","text":"Discover how you can enhance and personalize your app using MusicKit. We’ll take you through the latest additions to the MusicKit framework and explore how you can bring music content to your app through requests, metadata, and more."}]},"https://avatars.githubusercontent.com/u/5277837?v=4":{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4","type":"image","variants":[{"traits":["1x","light"],"url":"https:\/\/avatars.githubusercontent.com\/u\/5277837?v=4"}],"alt":"Profile image of Federico Zanetello"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10035-Whats-new-in-MapKit":{"title":"What’s new in MapKit","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10035-Whats-new-in-MapKit","type":"topic","kind":"article","abstract":[{"text":"Come along with us as MapKit enters a new dimension. We’ll show you how you can upgrade your app to use the latest map and support the highly-detailed 3D City Experience. Learn how you can visualize data using overlays while ensuring they integrate smoothly into the 3D map. We’ll also cover how to create interactive and immersive experiences with Selectable Map Features and Look Around APIs.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10035-whats-new-in-mapkit"},"https://avatars.githubusercontent.com/u/6942160?v=4":{"identifier":"https:\/\/avatars.githubusercontent.com\/u\/6942160?v=4","type":"image","variants":[{"traits":["1x","light"],"url":"https:\/\/avatars.githubusercontent.com\/u\/6942160?v=4"}],"alt":"Profile image of Cihat Gündüz"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110352-Embrace-Swift-generics":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110352-Embrace-Swift-generics","title":"Embrace Swift generics","url":"\/documentation\/wwdcnotes\/wwdc22-110352-embrace-swift-generics","role":"sampleCode","abstract":[{"type":"text","text":"Generics are a fundamental tool for writing abstract code in Swift. Learn how you can identify opportunities for abstraction as your code evolves, evaluate strategies for writing one piece of code with many behaviors, and discover language features in Swift 5.7 that can help you make generic code easier to write and understand."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10024-Whats-new-in-Vision":{"title":"What’s new in Vision","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10024-Whats-new-in-Vision","type":"topic","kind":"article","abstract":[{"text":"Learn about the latest updates to Vision APIs that help your apps recognize text, detect faces and face landmarks, and implement optical flow. We’ll take you through the capabilities of optical flow for video-based apps, show you how to update your apps with revisions to the machine learning models that drive these APIs, and explore how you can visualize your Vision tasks with Quick Look Preview support in Xcode.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10024-whats-new-in-vision"},"https://x.com/felibe444":{"title":"X\/Twitter","identifier":"https:\/\/x.com\/felibe444","type":"link","url":"https:\/\/x.com\/felibe444","titleInlineContent":[{"type":"text","text":"X\/Twitter"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10048-Whats-new-in-Safari-and-WebKit":{"type":"topic","abstract":[{"type":"text","text":"Explore the latest features in Safari and WebKit and learn how you can make better and more powerful websites. We’ll take you on a tour through the latest updates to HTML, CSS enhancements, Web Inspector tooling, Web APIs, and more."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10048-Whats-new-in-Safari-and-WebKit","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10048-whats-new-in-safari-and-webkit","title":"What’s new in Safari and WebKit"},"https://developer.apple.com/wwdc22/110354":{"checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc22\/110354","type":"download","url":"https:\/\/developer.apple.com\/wwdc22\/110354"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10149-Whats-new-in-AVQT":{"title":"What’s new in AVQT","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10149-Whats-new-in-AVQT","type":"topic","kind":"article","abstract":[{"text":"Discover the latest updates and improvements to the Advanced Video Quality Tool (AVQT). We’ll take you through the interactive reports feature and help you learn how to identify video quality-related issues. We’ll also explore extended support for raw formats, show you how to evaluate specific scenes within a video, and explore how you can use AVQT for Linux to analyze videos on Linux servers and online in the cloud.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-10149-whats-new-in-avqt"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110355-Meet-Swift-Async-Algorithms":{"type":"topic","abstract":[{"type":"text","text":"Discover the latest open source Swift package from Apple: Swift Async Algorithms. We’ll explore algorithms from this package that you can use with AsyncSequence, including zip, merge, and throttle. Follow along with us as we use these algorithms to build a great messaging app. We’ll also share best practices for combining multiple AsyncSequences and using the Swift Clock type to work with values over time."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110355-Meet-Swift-Async-Algorithms","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110355-meet-swift-async-algorithms","title":"Meet Swift Async Algorithms"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency":{"type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency","title":"Eliminate data races using Swift Concurrency","url":"\/documentation\/wwdcnotes\/wwdc22-110351-eliminate-data-races-using-swift-concurrency","role":"sampleCode","abstract":[{"text":"Join us as we explore one of the core concepts in Swift concurrency: isolation of tasks and actors. We’ll take you through Swift’s approach to eliminating data races and its effect on app architecture. We’ll also discuss the importance of atomicity in your code, share the nuances of Sendable checking to maintain isolation, and revisit assumptions about ordering work in a concurrent system.","type":"text"}]},"http://github.com/apple/swift-async-algorithms":{"title":"Async Algorithms Package","identifier":"http:\/\/github.com\/apple\/swift-async-algorithms","type":"link","url":"http:\/\/github.com\/apple\/swift-async-algorithms","titleInlineContent":[{"type":"text","text":"Async Algorithms Package"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110359-Meet-Swift-Package-plugins":{"type":"topic","abstract":[{"type":"text","text":"Discover how you can perform actions on Swift packages and Xcode projects with Swift package plugins. We’ll go over how these plugins work and explore how you can use them to generate source code and automate your development workflow."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110359-Meet-Swift-Package-plugins","kind":"article","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110359-meet-swift-package-plugins","title":"Meet Swift Package plugins"}}}