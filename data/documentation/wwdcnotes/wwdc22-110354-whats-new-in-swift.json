{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110354-Whats-new-in-Swift"},"sections":[],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"inlineContent":[{"identifier":"https:\/\/fbernutz.github.io\/images\/sketchnotes\/wwdc22-whats-new-in-swift.jpg","type":"image"}],"type":"paragraph"},{"type":"heading","level":2,"anchor":"Community-updates","text":"Community updates"},{"inlineContent":[{"text":"Two new work groups:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/www.swift.org\/website-workgroup\/","isActive":true,"type":"reference"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/forums.swift.org\/t\/swift-and-c-interoperability-workgroup-announcement\/54998","isActive":true}]}]}]},{"inlineContent":[{"type":"text","text":"Year-round mentorships from now on "},{"type":"reference","isActive":true,"identifier":"http:\/\/Swift.org\/diversity"},{"type":"text","text":" has more details."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Cross-platform support:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"support for Linux package formats: new native (experimental) toolchain installers for Amazon Linux 2 and CentOS 7","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"Swift news:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"dropped dependency on an external Unicode support library, replaced with a faster native implementation"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"this has made Swift smaller, useful when Swift is statically linked (e.g., in containerized deployments for the server)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"now used in Apple’s Secure Enclave Processor"}]}]}]},{"type":"heading","level":2,"anchor":"Swift-Packages-Updates","text":"Swift Packages Updates"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Trust on first use (TOFU)"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"new security protocol where the fingerprint of a package is now being recorded when the package is first downloaded"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"subsequent downloads will validate this fingerprint and report an error if the fingerprints are different"}]}]}]}]}]},{"type":"heading","level":3,"anchor":"Plugins","text":"Plugins"},{"inlineContent":[{"text":"Command plugins:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"first step in providing more extensible and secure build tools","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"can be used for documentation generation, source code reformatting, and more","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"Example:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["import PackagePlugin","","\/\/\/ You define a plug-in by creating a struct that conforms to the CommandPlugin protocol.","@main struct MyPlugin: CommandPlugin {","","  \/\/ Add a function that tells your plug-in which tool you'd like to invoke","  func performCommand(context: PluginContext, arguments: [String]) throws {","    let process = try Process.run(doccExec, arguments: doccArgs) \/\/ here we call our tool, in this case DocC","    process.waitUntilExit()","  }","","}"],"syntax":"swift"},{"inlineContent":[{"text":"DocC: Objective-C and C support","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Build tool plugins:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"plugins that can implement additional build steps"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"similar to Xcode Rules"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"example: source code generation, resource processing","type":"text"}]}]}]},{"inlineContent":[{"type":"text","text":"Example:"}],"type":"paragraph"},{"type":"codeListing","code":["import PackagePlugin","","@main struct MyCoolPlugin: BuildToolPlugin {","  func createBuildCommands(context: TargetBuildContext) throws -> [Command] {","","    let generatedSources = context.pluginWorkDirectory.appending(\"GeneratedSources\")","","    return [","      .buildCommand(","        displayName: \"Running MyTool\",","        executable: try context.tool(named: \"mycooltool\").path,","        arguments: [\"create\"],","        outputFilesDirectory: generatedSources)","    ]","  }","}"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Plugins are declared in a new "},{"type":"text","text":"Plugins"},{"type":"text","text":" folder in the root of our Package, plugins are treated as Swift executables."}],"type":"paragraph"},{"type":"heading","level":3,"anchor":"Module-aliasing","text":"Module aliasing"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"solves module collisions (when two separate packages define a module with the same name)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"allows you to rename modules from outside the packages that define them"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["let package = Package(","  name: \"MyStunningApp\",","  dependencies: [","    .package(url: \"https:\/\/...\/swift-metrics.git\"),","    .package(url: \"https:\/\/...\/swift-log.git\") \/\/ ⚠️ swift-log and swift-metric define a Logging module","  ],","  targets: [","    .executableTarget(","      name: \"MyStunningApp\",","      dependencies: [","        .product(name: \"Logging\", package: \"swift-log\"),","        .product(name: \"Metrics\", package: \"swift-metrics\",","                 moduleAliases: [\"Logging\": \"MetricsLogging\"]), \/\/ 👈🏻 module aliasing","])])"],"syntax":"swift"},{"type":"heading","level":2,"anchor":"Performance-improvements","text":"Performance improvements"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Built-time improvements","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"faster type-checking for generics"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Runtime improvements"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"optimized protocol conformance checking","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"protocol checking on app startup take as long as four seconds","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"from Swift 5.7, these checks are cached","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"for apps that rely heavily on Swift, this means launch-time can be up to twice as fast","type":"text"}]}]}]}]}]}]}]},{"type":"heading","level":3,"anchor":"Swift-driver","text":"Swift driver"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"program that coordinates the compilation of Swift source code in Swift"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"rewritten in Swift (last year)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"can now be used as a framework directly inside the Xcode build system instead of as a separate executable"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"this allows it to coordinate builds more closely with the build system to allow things like parallelization"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"build times improvements around 5-25%"}]}]}]},{"type":"heading","level":2,"anchor":"Concurrency-updates","text":"Concurrency updates"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"further fleshed out the model with data race safety at the forefront","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"distributed"},{"type":"text","text":" actors"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"actors in different machines with a network between them"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"can write a safe backend for your app in Swift"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"note that a distributed actor call can potentially fail because of network errors"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/apple\/swift-distributed-actors"},{"type":"text","text":" that is focused on building server-side, clustered distributed systems in Swift"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"integrated networking layer using SwiftNIO"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"implements the ","type":"text"},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/SWIM_Protocol","type":"reference","isActive":true},{"text":" to manage state across the cluster","type":"text"}]}]}]}]}],"type":"unorderedList"}]}]},{"type":"codeListing","code":["distributed actor Player {","   ","  var ai: PlayerBotAI?","  var gameState: GameState","  ","  distributed func makeMove() -> GameMove {","    return ai.decideNextMove(given: &gameState)","  }","}"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"http:\/\/github.com\/apple\/swift-async-algorithms","isActive":true}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"seamless integration with ","type":"text"},{"code":"async\/await","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"home for time-based algorithms using "},{"type":"codeVoice","code":"AsyncSequence"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"support for Apple platforms, Linux, and Windows","type":"text"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"Actor prioritization","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"actors now execute the highest-priority work first","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"text":"new Swift concurrency instruments","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Swift Concurrency view helps you investigate performance issues","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Swift Tasks and Swift Actors instruments provide a full suite of tools to help you visualize and optimize your concurrency code","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"provides useful statistics such as the number of tasks running simultaneously, total tasks that have been created up until that point in time"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"graphical representation of the parent-child relationships between tasks in structured concurrent code","type":"text"}],"type":"paragraph"}]}]}]}],"type":"unorderedList"}]}]},{"type":"heading","level":2,"anchor":"Whats-new-in-Swift-57","text":"What’s new in Swift 5.7"},{"name":"Note","type":"aside","style":"note","content":[{"inlineContent":[{"text":"Refer to ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/apple\/swift\/blob\/5fbede201a3e83d1957458060b6fbddf29494746\/CHANGELOG.md#swift-57","type":"reference"},{"text":".","type":"text"}],"type":"paragraph"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"if let x = x"},{"type":"text","text":" becomes "},{"type":"codeVoice","code":"if let x"},{"type":"text","text":" (optional unwrapping)"}]}]},{"content":[{"inlineContent":[{"text":"No need to manually specify a closures result type (closure type inference)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Permitted pointer conversion currently:","type":"text"}]}]}]},{"type":"table","header":"row","rows":[[[{"inlineContent":[],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"Swift"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"C"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"UnsafePointer<UInt64> const uint64 t *"},{"text":" ↔️ ","type":"text"},{"type":"codeVoice","code":"UnsafePointer<Int64> const int64 t*"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"UnsafePointer<mailmap_t> const mailmap_t *","type":"codeVoice"},{"text":" ↔️ ","type":"text"},{"code":"UnsafePointer<UInt8> const char *","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌"}],"type":"paragraph"}],[{"inlineContent":[{"text":"✅","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"UnsafeRawPointer const void *"},{"type":"text","text":" ↔️ "},{"type":"codeVoice","code":"UnsafePointer<UInt8> const char *"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"❌"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"✅"}],"type":"paragraph"}]]]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Pointer mismatches still possible when passing to C"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"C++ working group works on improving the interoperation","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Special treatment for enabling conversions easily","type":"text"}],"type":"paragraph"}]}]},{"type":"table","header":"row","rows":[[[{"type":"paragraph","inlineContent":[]}],[{"type":"paragraph","inlineContent":[{"text":"Swift","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"C"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift calling C"}]}]],[[{"type":"paragraph","inlineContent":[{"code":"UnsafePointer<UInt64> const uint64 t *","type":"codeVoice"},{"text":" ↔️ ","type":"text"},{"code":"UnsafePointer<Int64> const int64 t*","type":"codeVoice"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"❌"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"✅"}]}],[{"type":"paragraph","inlineContent":[{"text":"✅","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"code":"UnsafePointer<mailmap_t> const mailmap_t *","type":"codeVoice"},{"text":" ↔️ ","type":"text"},{"code":"UnsafePointer<UInt8> const char *","type":"codeVoice"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"❌"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"✅"}]}],[{"type":"paragraph","inlineContent":[{"text":"✅","type":"text"}]}]],[[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"UnsafeRawPointer const void *"},{"type":"text","text":" ↔️ "},{"type":"codeVoice","code":"UnsafePointer<UInt8> const char *"}]}],[{"type":"paragraph","inlineContent":[{"type":"text","text":"❌"}]}],[{"type":"paragraph","inlineContent":[{"text":"✅","type":"text"}]}],[{"type":"paragraph","inlineContent":[{"text":"✅","type":"text"}]}]]]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"String parsing currently is hard (especially indices)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"“the problem is not the indices expression, it’s the whole function”","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Answer: Use Regexes!"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Literals supported now with compile-time checks"}]}]}]},{"type":"codeListing","code":["func parseLine(_ line: Substring) throws -> MailmapEntry {","  let regex = \/\\h*([^<#]+?)??\\h*<([^>#]+)>\\h*(?:#|\\Z)\/","  ","  guard let match = line.prefixMatch(of: regex) else {","    throw MailmapError.badLine","  }","  ","  return MailmapEntry(name: match.1, email: match.2)","}"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"For those who find Regexes hard to read, new DSL:","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["import RegexBuilder","","let regex = Regex {","  ZeroOrMore(.horizontalWhitespace)","  Optionally {","    Capture (OneOrMore(.noneOf(\"<#\")))","  }","  .repetitionBehavior(.reluctant)","","  ZeroOrMore(.horizontalWhitespace)","  \"<\"","  Capture (OneOrMore(.noneOf(\">#\")))","  \">\"","  ZeroOrMore(.horizontalWhitespace)","  ChoiceOf {","    \"＃\"","    Anchor.endOfSubjectBeforeNewline","  }","}"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Requires "},{"type":"codeVoice","code":"import RegexBuilder"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Not a beginner-only feature"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"turn into reusable "},{"type":"codeVoice","code":"RegexComponent"},{"type":"text","text":", use from other regexes, even are recursive"}]}]},{"content":[{"inlineContent":[{"text":"no special escaping needed","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"support literals inside of the builder","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"types can implement custom parsing logic, like ","type":"text"},{"type":"codeVoice","code":"Date"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"code":"Regex","type":"codeVoice"},{"text":" supports useful matching functions","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Custom engine written in Swift"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Compatible with UTS #18 unicode standard","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Available in macOS 13, iOS 16, tvOS 16, watchOS 9"}]}]}]},{"type":"heading","level":3,"anchor":"Generic-code-clarity","text":"Generic code clarity"},{"inlineContent":[{"text":"Assume ","type":"text"},{"type":"codeVoice","code":"Mailmap"},{"text":" is our generic:","type":"text"}],"type":"paragraph"},{"type":"table","header":"row","rows":[[[{"inlineContent":[{"type":"text","text":"Something that conforms to Mailmap"}],"type":"paragraph"}],[{"inlineContent":[{"text":"A box whose contents conform to Mailmap","type":"text"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"struct EditableMailmap: Mailmap","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"code":"var map: Mailmap","type":"codeVoice"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"<Value: Mailmap>","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"Array<Mailmap>"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"where Element: Mailmap"}],"type":"paragraph"}],[{"inlineContent":[{"code":"where Element == Mailmap","type":"codeVoice"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"some Mailmap"}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"(Mailmap) -> Mailmap"}],"type":"paragraph"}]]]},{"inlineContent":[{"text":"We can be more expressive with any:","type":"text"}],"type":"paragraph"},{"type":"table","header":"row","rows":[[[{"inlineContent":[{"text":"Something that conforms to Mailmap","type":"text"}],"type":"paragraph"}],[{"inlineContent":[{"type":"text","text":"A box whose contents conform to Mailmap"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"struct EditableMailmap: Mailmap"}],"type":"paragraph"}],[{"inlineContent":[{"code":"var map: any Mailmap","type":"codeVoice"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"<Value: Mailmap>"}],"type":"paragraph"}],[{"inlineContent":[{"type":"codeVoice","code":"Array<any Mailmap>"}],"type":"paragraph"}]],[[{"inlineContent":[{"code":"where Element: Mailmap","type":"codeVoice"}],"type":"paragraph"}],[{"inlineContent":[{"code":"where Element == any Mailmap","type":"codeVoice"}],"type":"paragraph"}]],[[{"inlineContent":[{"type":"codeVoice","code":"some Mailmap"}],"type":"paragraph"}],[{"inlineContent":[{"code":"(any Mailmap) -> any Mailmap","type":"codeVoice"}],"type":"paragraph"}]]]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"easier to explain the difference between methods and understand errors"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Swift will now “open the box” for us, so less “cannot conform to” errors","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift 5.7 fixes the “only be used as a generic constraint” error"}]}]},{"content":[{"inlineContent":[{"text":"you can now specify the types in parameter, without the need to a ","type":"text"},{"code":"where","type":"codeVoice"},{"text":" clause using “primary associated type”","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","code":["protocol Collection<Element>: Sequence {","  associatedtype Index: Comparable","  associatedtype Iterator: IteratorProtocol<Element>","  associatedtype SubSequence: Collection<Element> where SubSequence.Index == Index, SubSequence.SubSequence == SubSequence","","  associatedtype Element","}"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"code":"AnyCollection","type":"codeVoice"},{"type":"text","text":" is a type-erasing wrapper, serves same purpose of "},{"code":"any","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":"any"},{"type":"text","text":" is a built-in language feature that makes type-erasing wrappers no longer needed in many cases"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"suggestion: replace your wrappers with typealiases, e.g. "},{"type":"codeVoice","code":"let AnyCollection = any Collection"},{"type":"text","text":" to keep backwards-compatibility (easier migration)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Improvements to "},{"type":"codeVoice","code":"any"},{"type":"text","text":" types, but still have important limitations"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Don’t use "},{"code":"any","type":"codeVoice"},{"type":"text","text":" all the time, use generics instead, use the top one for better performance (generics)"}]}]}]},{"type":"codeListing","code":["func addEntries1<Entries: Collection<MailmapEntry>, Map: Mailmap>(_ entries: Entries, to mailmap: inout MailMap) {","  for entry in entries {","    mailmap.addEntry(entry)","  }","}","","func addEntries2(_ entries: any Collection<MailmapEntry>, to mailmap: inout any Mailmap) {","  for entry in entries {","    mailmap.addEntry(entry)","  }","}"],"syntax":"swift"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"some ProtocolName"},{"type":"text","text":" supported in more places, simplifies definition of Generics (simplifies above example, just write "},{"type":"codeVoice","code":"some"},{"type":"text","text":" instead of "},{"type":"codeVoice","code":"any"},{"type":"text","text":")"}]}]}]},{"type":"codeListing","code":["func addEntries1(_ entries: some Collection<MailmapEntry>, to mailmap: inout some MailMap) {","  for entry in entries {","    mailmap.addEntry(entry)","  }","}","","func addEntries2(_ entries: any Collection<MailmapEntry>, to mailmap: inout any Mailmap) {","  for entry in entries {","    mailmap.addEntry(entry)","  }","}"],"syntax":"swift"},{"type":"heading","level":2,"anchor":"Written-By","text":"Written By"},{"type":"row","columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"Jeehut"}]}]},{"size":4,"content":[{"anchor":"Cihat-Gündüz","level":3,"type":"heading","text":"Cihat Gündüz"},{"inlineContent":[{"isActive":true,"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Jeehut","overridingTitle":"Contributed Notes"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/Jeehut"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/x.com\/Jeehut"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"https:\/\/fline.dev"}],"type":"paragraph"}]}],"numberOfColumns":5},{"type":"row","columns":[{"content":[{"inlineContent":[{"type":"image","identifier":"zntfdr"}],"type":"paragraph"}],"size":1},{"content":[{"text":"Federico Zanetello","anchor":"Federico-Zanetello","level":3,"type":"heading"},{"inlineContent":[{"overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"type":"reference","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitle":"Contributed Notes","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/github.com\/zntfdr","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"type":"reference","identifier":"https:\/\/zntfdr.dev","isActive":true}],"type":"paragraph"}],"size":4}],"numberOfColumns":5},{"type":"row","columns":[{"content":[{"inlineContent":[{"type":"image","identifier":"fbernutz"}],"type":"paragraph"}],"size":1},{"content":[{"level":3,"text":"Feli Bernutz","type":"heading","anchor":"Feli-Bernutz"},{"type":"paragraph","inlineContent":[{"overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"overridingTitle":"Contributed Notes","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/fbernutz","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/fbernutz","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/fbernutz.github.io","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/x.com\/felibe444","type":"reference","isActive":true}]}],"size":4}],"numberOfColumns":5},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}],"type":"paragraph"},{"type":"heading","level":2,"anchor":"Related-Sessions","text":"Related Sessions"},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110347-Explore-more-content-with-MusicKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110350-Visualize-and-optimize-Swift-concurrency","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110352-Embrace-Swift-generics","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110353-Design-protocol-interfaces-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110355-Meet-Swift-Async-Algorithms","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110356-Meet-distributed-actors-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110357-Meet-Swift-Regex","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110358-Swift-Regex-Beyond-the-basics","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110359-Meet-Swift-Package-plugins","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110363-Improve-app-size-and-runtime-performance","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110364-Demystify-parallelization-in-Xcode-builds","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110401-Create-Swift-Package-plugins"]},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc22-110354-whats-new-in-swift"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"article","sampleCodeDownload":{"action":{"type":"reference","isActive":true,"overridingTitle":"Watch Video (38 min)","identifier":"https:\/\/developer.apple.com\/wwdc22\/110354"},"kind":"sampleDownload"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22"]]},"abstract":[{"type":"text","text":"Join us for an update on Swift. We’ll take you through performance improvements, explore more secure and extensible Swift packages, and share advancements in Swift concurrency. We’ll also introduce you to Swift Regex, better generics, and other tools built into the language to help you write more flexible & expressive code."}],"metadata":{"modules":[{"name":"WWDC Notes"}],"role":"sampleCode","roleHeading":"WWDC22","title":"What’s new in Swift"},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110352-Embrace-Swift-generics":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110352-Embrace-Swift-generics","type":"topic","title":"Embrace Swift generics","url":"\/documentation\/wwdcnotes\/wwdc22-110352-embrace-swift-generics","abstract":[{"text":"Generics are a fundamental tool for writing abstract code in Swift. Learn how you can identify opportunities for abstraction as your code evolves, evaluate strategies for writing one piece of code with many behaviors, and discover language features in Swift 5.7 that can help you make generic code easier to write and understand.","type":"text"}],"role":"sampleCode","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110350-Visualize-and-optimize-Swift-concurrency":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110350-Visualize-and-optimize-Swift-concurrency","title":"Visualize and optimize Swift concurrency","type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110350-visualize-and-optimize-swift-concurrency","abstract":[{"text":"Learn how you can optimize your app with the Swift Concurrency template in Instruments. We’ll discuss common performance issues and show you how to use Instruments to find and resolve these problems. Learn how you can keep your UI responsive, maximize parallel performance, and analyze Swift concurrency activity within your app.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110357-Meet-Swift-Regex":{"title":"Meet Swift Regex","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110357-Meet-Swift-Regex","kind":"article","type":"topic","abstract":[{"text":"Learn how you can process strings more effectively when you take advantage of Swift Regex. Come for concise literals but stay for Regex builders — a new, declarative approach to string processing. We’ll also explore the Unicode models in String and share how Swift Regex can make Unicode-correct processing easy.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc22-110357-meet-swift-regex","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/fbernutz":{"role":"sampleCode","url":"\/documentation\/wwdcnotes\/fbernutz","images":[{"type":"card","identifier":"fbernutz.jpeg"},{"type":"icon","identifier":"fbernutz.jpeg"}],"type":"topic","kind":"article","title":"Feli Bernutz (16 notes)","abstract":[{"type":"text","text":"You can learn anything, but you can’t learn everything"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/fbernutz"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"url":"\/documentation\/wwdcnotes\/zntfdr","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","title":"Federico Zanetello (332 notes)","type":"topic","abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"images":[{"type":"card","identifier":"zntfdr.jpeg"},{"type":"icon","identifier":"zntfdr.jpeg"}],"role":"sampleCode"},"https://github.com/apple/swift/blob/5fbede201a3e83d1957458060b6fbddf29494746/CHANGELOG.md#swift-57":{"identifier":"https:\/\/github.com\/apple\/swift\/blob\/5fbede201a3e83d1957458060b6fbddf29494746\/CHANGELOG.md#swift-57","type":"link","title":"Apple’s Swift repository CHANGELOG","url":"https:\/\/github.com\/apple\/swift\/blob\/5fbede201a3e83d1957458060b6fbddf29494746\/CHANGELOG.md#swift-57","titleInlineContent":[{"type":"text","text":"Apple’s Swift repository CHANGELOG"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110358-Swift-Regex-Beyond-the-basics":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110358-Swift-Regex-Beyond-the-basics","type":"topic","title":"Swift Regex: Beyond the basics","url":"\/documentation\/wwdcnotes\/wwdc22-110358-swift-regex-beyond-the-basics","abstract":[{"text":"Go beyond the basics of string processing with Swift Regex. We’ll share an overview of Regex and how it works, explore Foundation’s rich data parsers and discover how to integrate your own, and delve into captures. We’ll also provide best practices for matching strings and wielding Regex-powered algorithms with ease.","type":"text"}],"role":"sampleCode","kind":"article"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency":{"abstract":[{"type":"text","text":"Join us as we explore one of the core concepts in Swift concurrency: isolation of tasks and actors. We’ll take you through Swift’s approach to eliminating data races and its effect on app architecture. We’ll also discuss the importance of atomicity in your code, share the nuances of Sendable checking to maintain isolation, and revisit assumptions about ordering work in a concurrent system."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110351-Eliminate-data-races-using-Swift-Concurrency","title":"Eliminate data races using Swift Concurrency","url":"\/documentation\/wwdcnotes\/wwdc22-110351-eliminate-data-races-using-swift-concurrency","role":"sampleCode","type":"topic","kind":"article"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110364-Demystify-parallelization-in-Xcode-builds":{"title":"Demystify parallelization in Xcode builds","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110364-Demystify-parallelization-in-Xcode-builds","kind":"article","type":"topic","abstract":[{"text":"Learn how the Xcode build system extracts maximum parallelism from your builds. We’ll explore how you can structure your project to improve build efficiency, take you through the process for resolving relationships between targets’ build phases in Xcode, and share how you can take full advantage of available hardware resources when compiling in Swift. We’ll also introduce you to Build Timeline — a powerful tool to help you monitor your build efficiency and performance.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc22-110364-demystify-parallelization-in-xcode-builds","role":"sampleCode"},"https://github.com/apple/swift-distributed-actors":{"identifier":"https:\/\/github.com\/apple\/swift-distributed-actors","type":"link","title":"new open source Distributed Actors package","url":"https:\/\/github.com\/apple\/swift-distributed-actors","titleInlineContent":[{"text":"new open source Distributed Actors package","type":"text"}]},"https://github.com/Jeehut":{"identifier":"https:\/\/github.com\/Jeehut","type":"link","title":"GitHub","url":"https:\/\/github.com\/Jeehut","titleInlineContent":[{"type":"text","text":"GitHub"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22":{"kind":"article","images":[{"type":"icon","identifier":"WWDC22-Icon.png"},{"type":"card","identifier":"WWDC22.jpeg"}],"role":"collectionGroup","title":"WWDC22","abstract":[{"type":"text","text":"Xcode 14, Swift 5.7, iOS 16, macOS 13 (Ventura), tvOS 16, watchOS 9."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"WeatherKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"ScreenCaptureKit"},{"type":"text","text":", "},{"type":"codeVoice","code":"Swift Regex"},{"type":"text","text":", and more."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22","url":"\/documentation\/wwdcnotes\/wwdc22","type":"topic"},"https://fbernutz.github.io/images/sketchnotes/wwdc22-whats-new-in-swift.jpg":{"identifier":"https:\/\/fbernutz.github.io\/images\/sketchnotes\/wwdc22-whats-new-in-swift.jpg","type":"image","alt":"Sketchnote about news in swift from WWDC 22 with community updates, news for swifts packages, performance improvements, concurrency updates and info to expressive swift","variants":[{"traits":["1x","light"],"url":"https:\/\/fbernutz.github.io\/images\/sketchnotes\/wwdc22-whats-new-in-swift.jpg"}]},"doc://WWDCNotes/documentation/WWDCNotes/Jeehut":{"title":"Cihat Gündüz (60 notes)","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/Jeehut","kind":"article","type":"topic","images":[{"identifier":"Jeehut.jpeg","type":"card"},{"identifier":"Jeehut.jpeg","type":"icon"}],"abstract":[{"text":"Spatial-first Indie Developer for  Platforms. Actively contributing to Open Source since 2011!","type":"text"}],"url":"\/documentation\/wwdcnotes\/jeehut","role":"sampleCode"},"fbernutz.jpeg":{"type":"image","identifier":"fbernutz.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/fbernutz.jpeg"}],"alt":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110356-Meet-distributed-actors-in-Swift":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110356-Meet-distributed-actors-in-Swift","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110356-meet-distributed-actors-in-swift","kind":"article","title":"Meet distributed actors in Swift","abstract":[{"text":"Discover distributed actors — an extension of Swift’s actor model that simplifies development of distributed systems. We’ll explore how distributed actor isolation and location transparency can help you avoid the accidental complexity of networking, serialization, and other transport concerns when working with distributed apps and systems.","type":"text"}]},"http://Swift.org/diversity":{"type":"link","identifier":"http:\/\/Swift.org\/diversity","url":"http:\/\/Swift.org\/diversity","titleInlineContent":[{"text":"Swift.org\/diversity","type":"text"}],"title":"Swift.org\/diversity"},"https://fline.dev":{"type":"link","identifier":"https:\/\/fline.dev","url":"https:\/\/fline.dev","titleInlineContent":[{"text":"Blog","type":"text"}],"title":"Blog"},"https://zntfdr.dev":{"type":"link","identifier":"https:\/\/zntfdr.dev","url":"https:\/\/zntfdr.dev","titleInlineContent":[{"text":"Blog","type":"text"}],"title":"Blog"},"WWDCNotes.png":{"type":"image","identifier":"WWDCNotes.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes.png"}],"alt":null},"zntfdr.jpeg":{"type":"image","identifier":"zntfdr.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/zntfdr.jpeg"}],"alt":null},"https://en.wikipedia.org/wiki/SWIM_Protocol":{"type":"link","identifier":"https:\/\/en.wikipedia.org\/wiki\/SWIM_Protocol","url":"https:\/\/en.wikipedia.org\/wiki\/SWIM_Protocol","titleInlineContent":[{"text":"SWIM consensus protocol","type":"text"}],"title":"SWIM consensus protocol"},"WWDC22-Icon.png":{"type":"image","identifier":"WWDC22-Icon.png","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC22-Icon.png"}],"alt":null},"fbernutz":{"type":"image","identifier":"fbernutz","variants":[{"traits":["1x","light"],"url":"\/images\/fbernutz.jpeg"}],"alt":"Profile image of Feli Bernutz"},"WWDC22.jpeg":{"type":"image","identifier":"WWDC22.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC22.jpeg"}],"alt":null},"https://www.swift.org/website-workgroup/":{"type":"link","identifier":"https:\/\/www.swift.org\/website-workgroup\/","url":"https:\/\/www.swift.org\/website-workgroup\/","titleInlineContent":[{"text":"Swift Website (SWWG)","type":"text"}],"title":"Swift Website (SWWG)"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110347-Explore-more-content-with-MusicKit":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110347-Explore-more-content-with-MusicKit","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110347-explore-more-content-with-musickit","kind":"article","title":"Explore more content with MusicKit","abstract":[{"text":"Discover how you can enhance and personalize your app using MusicKit. We’ll take you through the latest additions to the MusicKit framework and explore how you can bring music content to your app through requests, metadata, and more.","type":"text"}]},"https://x.com/Jeehut":{"type":"link","identifier":"https:\/\/x.com\/Jeehut","url":"https:\/\/x.com\/Jeehut","titleInlineContent":[{"text":"X\/Twitter","type":"text"}],"title":"X\/Twitter"},"https://forums.swift.org/t/swift-and-c-interoperability-workgroup-announcement/54998":{"type":"link","identifier":"https:\/\/forums.swift.org\/t\/swift-and-c-interoperability-workgroup-announcement\/54998","url":"https:\/\/forums.swift.org\/t\/swift-and-c-interoperability-workgroup-announcement\/54998","titleInlineContent":[{"text":"C++ Interoperability","type":"text"}],"title":"C++ Interoperability"},"https://fbernutz.github.io":{"type":"link","identifier":"https:\/\/fbernutz.github.io","url":"https:\/\/fbernutz.github.io","titleInlineContent":[{"text":"Blog","type":"text"}],"title":"Blog"},"https://developer.apple.com/wwdc22/110354":{"type":"download","identifier":"https:\/\/developer.apple.com\/wwdc22\/110354","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc22\/110354"},"Jeehut.jpeg":{"type":"image","identifier":"Jeehut.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/Jeehut.jpeg"}],"alt":null},"Jeehut":{"type":"image","identifier":"Jeehut","variants":[{"traits":["1x","light"],"url":"\/images\/Jeehut.jpeg"}],"alt":"Profile image of Cihat Gündüz"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110401-Create-Swift-Package-plugins":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110401-Create-Swift-Package-plugins","title":"Create Swift Package plugins","abstract":[{"text":"Tailor your development workflow and learn how to write your own package plugins in Swift. We’ll show you how you can extend Xcode’s functionality by using the PackagePlugin API to generate source code or automate release tasks and share best practices for creating great plugins.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc22-110401-create-swift-package-plugins","type":"topic","kind":"article"},"http://github.com/apple/swift-async-algorithms":{"type":"link","identifier":"http:\/\/github.com\/apple\/swift-async-algorithms","url":"http:\/\/github.com\/apple\/swift-async-algorithms","titleInlineContent":[{"text":"Async Algorithms Package","type":"text"}],"title":"Async Algorithms Package"},"https://github.com/zntfdr":{"type":"link","identifier":"https:\/\/github.com\/zntfdr","url":"https:\/\/github.com\/zntfdr","titleInlineContent":[{"text":"GitHub","type":"text"}],"title":"GitHub"},"https://github.com/fbernutz":{"type":"link","identifier":"https:\/\/github.com\/fbernutz","url":"https:\/\/github.com\/fbernutz","titleInlineContent":[{"text":"GitHub","type":"text"}],"title":"GitHub"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110353-Design-protocol-interfaces-in-Swift":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110353-Design-protocol-interfaces-in-Swift","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110353-design-protocol-interfaces-in-swift","kind":"article","title":"Design protocol interfaces in Swift","abstract":[{"text":"Learn how you can use Swift 5.7 to design advanced abstractions using protocols. We’ll show you how to use existential types, explore how you can separate implementation from interface with opaque result types, and share the same-type requirements that can help you identify and guarantee relationships between concrete types.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes":{"url":"\/documentation\/wwdcnotes","kind":"symbol","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","title":"WWDC Notes","type":"topic","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"images":[{"type":"icon","identifier":"WWDCNotes.png"}],"role":"collection"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110355-Meet-Swift-Async-Algorithms":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110355-Meet-Swift-Async-Algorithms","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110355-meet-swift-async-algorithms","kind":"article","title":"Meet Swift Async Algorithms","abstract":[{"text":"Discover the latest open source Swift package from Apple: Swift Async Algorithms. We’ll explore algorithms from this package that you can use with AsyncSequence, including zip, merge, and throttle. Follow along with us as we use these algorithms to build a great messaging app. We’ll also share best practices for combining multiple AsyncSequences and using the Swift Clock type to work with values over time.","type":"text"}]},"https://x.com/felibe444":{"type":"link","identifier":"https:\/\/x.com\/felibe444","url":"https:\/\/x.com\/felibe444","titleInlineContent":[{"text":"X\/Twitter","type":"text"}],"title":"X\/Twitter"},"zntfdr":{"type":"image","identifier":"zntfdr","variants":[{"traits":["1x","light"],"url":"\/images\/zntfdr.jpeg"}],"alt":"Profile image of Federico Zanetello"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110359-Meet-Swift-Package-plugins":{"title":"Meet Swift Package plugins","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110359-Meet-Swift-Package-plugins","kind":"article","type":"topic","abstract":[{"text":"Discover how you can perform actions on Swift packages and Xcode projects with Swift package plugins. We’ll go over how these plugins work and explore how you can use them to generate source code and automate your development workflow.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc22-110359-meet-swift-package-plugins","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110363-Improve-app-size-and-runtime-performance":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110363-Improve-app-size-and-runtime-performance","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc22-110363-improve-app-size-and-runtime-performance","kind":"article","title":"Improve app size and runtime performance","abstract":[{"text":"Learn how we’ve optimized the Swift and Objective-C runtimes to help you make your app smaller, quicker, and launch faster. Discover how you can get access to efficient protocol checks, smaller message send calls, and optimized ARC simply when you build your app with Xcode 14 and update your deployment target.","type":"text"}]}}}