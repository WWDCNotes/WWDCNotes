{"sampleCodeDownload":{"action":{"identifier":"https:\/\/developer.apple.com\/wwdc24\/10089","isActive":true,"overridingTitle":"Watch Video (29 min)","type":"reference"},"kind":"sampleDownload"},"abstract":[{"text":"Discover how simple it can be to reach players on Apple platforms worldwide. We‚Äôll show you how to evaluate your Windows executable on Apple silicon, start your game port with code samples, convert your shader code to Metal, and bring your game to Mac, iPhone, and iPad. Explore enhanced Metal tools that understand HLSL shaders to validate, debug, and profile your ported shaders on Metal.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24"]]},"kind":"article","sections":[],"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc24-10089-port-advanced-games-to-apple-platforms"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"WWDC Notes"}],"role":"sampleCode","roleHeading":"WWDC24","title":"Port advanced games to Apple platforms"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"üò± ‚ÄúNo Overview Available!‚Äù","type":"text"}]},{"inlineContent":[{"type":"text","text":"Be the hero to change that by watching the video and providing notes! It‚Äôs super easy:"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing"}],"type":"paragraph"},{"level":2,"type":"heading","text":"Related Sessions","anchor":"Related-Sessions"},{"style":"list","type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10085-Design-advanced-games-for-Apple-platforms","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10160-Program-Metal-in-C++-with-metalcpp","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10124-Bring-your-game-to-Mac-Part-2-Compile-your-shaders","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10125-Bring-your-game-to-Mac-Part-3-Render-with-Metal","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10614-Advancements-in-Game-Controllers","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-520-Introducing-Core-Haptics","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10079-Discover-geometryaware-audio-with-the-Physical-Audio-Spatialization-Engine-PHASE","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10157-Discover-Metal-debugging-profiling-and-asset-creation-tools"]},{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}],"type":"small"},{"inlineContent":[{"text":"All content copyright ¬© 2012 ‚Äì 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}],"type":"small"}],"kind":"content"}],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10089-Port-advanced-games-to-Apple-platforms","interfaceLanguage":"swift"},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10079-Discover-geometryaware-audio-with-the-Physical-Audio-Spatialization-Engine-PHASE":{"url":"\/documentation\/wwdcnotes\/wwdc21-10079-discover-geometryaware-audio-with-the-physical-audio-spatialization-engine-phase","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10079-Discover-geometryaware-audio-with-the-Physical-Audio-Spatialization-Engine-PHASE","type":"topic","kind":"article","abstract":[{"type":"text","text":"Explore how geometry-aware audio can help you build complex, interactive, and immersive audio scenes for your apps and games. Meet PHASE, Apple‚Äôs spatial audio API, and learn how the Physical Audio Spatialization Engine (PHASE) keeps the sound aligned with your experience at all times ‚Äî helping you create spatial soundscapes and scenes during the development process, rather than waiting until post production. We‚Äôll take you through an overview of the API and its classes, including Sources, Listeners, Acoustic Geometry, and Materials, and introduce the concept of Spatial Modeling. We‚Äôll also show you how to quickly combine PHASE‚Äôs basic building blocks to start building an integrated audio experience for your app or game."}],"title":"Discover geometry-aware audio with the Physical Audio Spatialization Engine (PHASE)"},"https://wwdcnotes.github.io/WWDCNotes/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","url":"https:\/\/wwdcnotes.github.io\/WWDCNotes\/documentation\/wwdcnotes\/contributing","titleInlineContent":[{"type":"text","text":"Learn More‚Ä¶"}],"title":"Learn More‚Ä¶","type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24-10085-Design-advanced-games-for-Apple-platforms":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10085-Design-advanced-games-for-Apple-platforms","url":"\/documentation\/wwdcnotes\/wwdc24-10085-design-advanced-games-for-apple-platforms","kind":"article","abstract":[{"type":"text","text":"Learn how to adapt your high-end game so it feels at home on Mac, iPad, and iPhone. We‚Äôll go over how to make your game look stunning on different displays, tailor your input and controls to be intuitive on each device, and take advantage of Apple technologies that deliver great player experiences."}],"type":"topic","title":"Design advanced games for Apple platforms","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10124-Bring-your-game-to-Mac-Part-2-Compile-your-shaders":{"kind":"article","type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc23-10124-bring-your-game-to-mac-part-2-compile-your-shaders","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10124-Bring-your-game-to-Mac-Part-2-Compile-your-shaders","title":"Bring your game to Mac, Part 2: Compile your shaders","abstract":[{"text":"Discover how the Metal shader converter streamlines the process of bringing your HLSL shaders to Metal as we continue our three-part series on bringing your game to Mac. Find out how to build a fast, end-to-end shader pipeline from DXIL that supports all shader stages and allows you to leverage the advanced features of Apple GPUs. We‚Äôll also show you how to reduce app launch time and stutters by generating GPU binaries with the offline compiler.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24":{"abstract":[{"type":"text","text":"Xcode 16, Swift 6, iOS 18, macOS 15 (Sequoia), tvOS 18, visionOS 2, watchOS 11."},{"text":" ","type":"text"},{"text":"New APIs: Swift Testing, ","type":"text"},{"code":"FinanceKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"TabletopKit","type":"codeVoice"},{"text":", and more.","type":"text"}],"title":"WWDC24","url":"\/documentation\/wwdcnotes\/wwdc24","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24","role":"collectionGroup","images":[{"identifier":"WWDC24-Icon.png","type":"icon"},{"identifier":"WWDC24.jpeg","type":"card"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10160-Program-Metal-in-C++-with-metalcpp":{"title":"Program Metal in C++ with metal-cpp","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10160-Program-Metal-in-C++-with-metalcpp","abstract":[{"type":"text","text":"Your C++ games and apps can now tap into the power of Metal. We‚Äôll show you how metal-cpp helps you bridge your C++ code to Metal, explore how each manages object lifecycles, and demonstrate utilities that can help these language cooperate in your app. We‚Äôll also share best practices for designing app architecture to elegantly integrate Objective-C and C++ together."}],"url":"\/documentation\/wwdcnotes\/wwdc22-10160-program-metal-in-c++-with-metalcpp","role":"sampleCode","kind":"article"},"WWDC24-Icon.png":{"identifier":"WWDC24-Icon.png","alt":null,"variants":[{"url":"\/images\/WWDC24-Icon.png","traits":["1x","light"]}],"type":"image"},"WWDC24.jpeg":{"identifier":"WWDC24.jpeg","alt":null,"variants":[{"url":"\/images\/WWDC24.jpeg","traits":["1x","light"]}],"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-520-Introducing-Core-Haptics":{"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-520-Introducing-Core-Haptics","abstract":[{"text":"Core Haptics lets you design fully customized haptic patterns with synchronized audio. See examples of how haptics and audio enables you to create a greater sense of immersion in your app or game. Learn how to create, play back, and share content, and where Core Haptics fits in with other audio and vibration APIs.","type":"text"}],"kind":"article","title":"Introducing Core Haptics","url":"\/documentation\/wwdcnotes\/wwdc19-520-introducing-core-haptics","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10614-Advancements-in-Game-Controllers":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10614-Advancements-in-Game-Controllers","url":"\/documentation\/wwdcnotes\/wwdc20-10614-advancements-in-game-controllers","abstract":[{"type":"text","text":"Let‚Äôs rumble! Discover how you can bring third-party game controllers and custom haptics into your games on iPhone, iPad, Mac, and Apple TV. We‚Äôll show you how to add support for the latest controllers ‚Äî including Xbox‚Äôs Elite Wireless Controller Series 2 and Adaptive Controller ‚Äî and map your game‚Äôs controls accordingly. Learn how you can use the Game Controller framework in tandem with Core Haptics to enable rumble feedback. And find out how you can take your gaming experience to the next level with custom button mapping, nonstandard inputs, and control over specialty features like motion sensors, lights, and battery level."}],"type":"topic","role":"sampleCode","title":"Advancements in Game Controllers"},"https://developer.apple.com/wwdc24/10089":{"identifier":"https:\/\/developer.apple.com\/wwdc24\/10089","url":"https:\/\/developer.apple.com\/wwdc24\/10089","checksum":null,"type":"download"},"WWDCNotes.png":{"identifier":"WWDCNotes.png","alt":null,"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10125-Bring-your-game-to-Mac-Part-3-Render-with-Metal":{"kind":"article","title":"Bring your game to Mac, Part 3: Render with Metal","type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10125-Bring-your-game-to-Mac-Part-3-Render-with-Metal","url":"\/documentation\/wwdcnotes\/wwdc23-10125-bring-your-game-to-mac-part-3-render-with-metal","abstract":[{"type":"text","text":"Discover how you can support Metal in your rendering code as we close out our three-part series on bringing your game to Mac. Once you‚Äôve evaluated your existing Windows binary with the game porting toolkit and brought your HLSL shaders over to Metal, learn how you can optimally implement the features that high-end, modern games require. We‚Äôll show you how to manage GPU resource bindings, residency, and synchronization. Find out how to optimize GPU commands submission, render rich visuals with MetalFX Upscaling, and more."}]},"doc://WWDCNotes/documentation/WWDCNotes":{"type":"topic","title":"WWDC Notes","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"kind":"symbol","url":"\/documentation\/wwdcnotes","role":"collection"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10157-Discover-Metal-debugging-profiling-and-asset-creation-tools":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10157-Discover-Metal-debugging-profiling-and-asset-creation-tools","title":"Discover Metal debugging, profiling, and asset creation tools","type":"topic","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc21-10157-discover-metal-debugging-profiling-and-asset-creation-tools","role":"sampleCode","abstract":[{"type":"text","text":"Explore how Xcode can help you take your Metal debugging, profiling and asset creation workflows to the next level. Discover the latest tools for ray tracing and GPU profiling, and learn about Metal Debugger workflows. We‚Äôll also show you how to use the Texture Converter tool, which supports all modern GPU texture formats and can easily integrate into your multi-platform asset creation pipelines."}]}}}