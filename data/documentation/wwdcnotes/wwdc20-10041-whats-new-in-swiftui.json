{"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20"]]},"variants":[{"paths":["\/documentation\/wwdcnotes\/wwdc20-10041-whats-new-in-swiftui"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"What’s new in SwiftUI","modules":[{"name":"WWDC Notes"}],"role":"sampleCode","roleHeading":"WWDC20"},"sampleCodeDownload":{"kind":"sampleDownload","action":{"type":"reference","overridingTitle":"Watch Video (27 min)","isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc20\/10041"}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10041-Whats-new-in-SwiftUI"},"kind":"article","abstract":[{"type":"text","text":"SwiftUI can help you build better and more powerful apps for iPhone, iPad, Mac, Apple Watch, and Apple TV.  Learn more about the latest refinements to SwiftUI, including interface improvements like outlines, grids, and toolbars. Take advantage of SwiftUI’s enhanced support across Apple frameworks to enable features like Sign In with Apple. Discover new visual effects, as well as new controls and styles. And find out how the new app and scene APIs enable you to create apps entirely in SwiftUI, as well as custom complications and all new widgets."}],"sections":[],"primaryContentSections":[{"kind":"content","content":[{"text":"100% SwiftUI Apps","anchor":"100-SwiftUI-Apps","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"We can now build an entire app completely in SwiftUI."}],"type":"paragraph"},{"inlineContent":[{"text":"This is a fully functional app:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["@main","struct HelloWorld: App {","    var body: some Scene {","        WindowGroup {","            Text(\"Hello, world!\").padding()","        }","    }","}"]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can do so thanks to the new "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/app","isActive":true},{"type":"text","text":" protocol, which requires a "},{"type":"codeVoice","code":"body"},{"type":"text","text":" of type "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/scene","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/windowgroup","isActive":true,"type":"reference"},{"text":" lets us create scenes easily based on the platform, and more.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/documentgroup"},{"type":"text","text":" lets us open, edit, and save document-based scenes."}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"anchor":"LaunchScreen","type":"heading","text":"LaunchScreen"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"New ","type":"text"},{"type":"codeVoice","code":"Launch Screen"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Info.plist"},{"text":" key","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lets us declare standard UI components such as images, navigation bar, tab bar, background colors as the app launch screen."}]}]},{"content":[{"inlineContent":[{"text":"Replaces the ","type":"text"},{"type":"codeVoice","code":"LaunchScreen.storyboard"},{"text":".","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":2,"anchor":"Widgets","type":"heading","text":"Widgets"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Built exclusively with SwiftUI"}]}]},{"content":[{"inlineContent":[{"text":"Widgets are just like Views, however instead of conforming to ","type":"text"},{"code":"View","type":"codeVoice"},{"text":", they conform to the ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/widget"},{"text":" protocol, and the ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" returns a ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/widgetconfiguration"},{"text":" instance.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Apple-Watch","type":"heading","level":2,"text":"Apple Watch"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"We can use SwiftUI to build custom complications"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Lists","type":"heading","level":2,"text":"Lists"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Stacks behave more like ","type":"text"},{"code":"List","type":"codeVoice"},{"text":" by prepending them with with Lazy (e.g. ","type":"text"},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/lazyvstack","isActive":true,"type":"reference"},{"text":")","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"New grid component via ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/lazyhgrid","type":"reference"},{"text":", ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/lazyvgrid","type":"reference"},{"text":", and ","type":"text"},{"isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/griditem","type":"reference"}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"Toolbar-and-Controls","type":"heading","level":2,"text":"Toolbar and Controls"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"New "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/toolbar(content:)","isActive":true},{"type":"text","text":" modifier and "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/toolbaritem","isActive":true},{"type":"text","text":", those are examples of "},{"inlineContent":[{"type":"text","text":"semantic placements"}],"type":"strong"},{"type":"text","text":", we describe to SwiftUI the role that these toolbar items have, and SwiftUI will automatically place them properly."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"We can also specify the placement in the ","type":"text"},{"type":"codeVoice","code":"ToolBarItem"},{"text":" explicitly in its initializer","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/label","isActive":true}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"new View that combines a text and an image (in reality "},{"code":"Label","type":"codeVoice"},{"type":"text","text":" accepts two "},{"code":"AnyView","type":"codeVoice"},{"type":"text","text":" instances)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"code":"Label","type":"codeVoice"},{"type":"text","text":"s adapt neatly based on the context and dynamic type size, sometimes the text might not be shown (for example on navigation bars)"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/progressview","isActive":true}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"can display determinant and indeterminate progress"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"linear and circular style","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"customizable"}]}]}]}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/gauge","isActive":true}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"used to display a value relative to a range (min\/max)"}]}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"Other important modifiers"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"codeVoice","code":".help"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"codeVoice","code":".keyboardShortcut"}],"type":"paragraph"}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"anchor":"Effects-and-Styling","type":"heading","level":2,"text":"Effects and Styling"},{"items":[{"content":[{"inlineContent":[{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/matchedgeometryeffect(id:in:properties:anchor:issource:)","isActive":true,"type":"reference"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/containerrelativeshape","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We can add a new "},{"type":"codeVoice","code":"AppAccentColor"},{"type":"text","text":" color assets in our bundle to have our app automatically adapt that accent color in all our UI."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"We can also customize some parts of our UI with a different color than the app accent color by using the relative tint modifier such as "},{"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/listitemtint(_:)-12mbh","type":"reference","isActive":true}],"type":"paragraph"}]}],"type":"unorderedList"},{"anchor":"System-Integration","type":"heading","level":2,"text":"System Integration"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"The new "},{"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/link","isActive":true},{"type":"text","text":" view lets open a webpage or deep link to another app, this is the equivalent of creating a button with a "},{"type":"codeVoice","code":"UIApplication.shared.open"},{"type":"text","text":" action"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"drag and drop support","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/signinwithapplebutton"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"More integrations:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"AVKit","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"MapKit","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"SceneKit","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"SpriteKit"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"QuickLook","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"HomeKit","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"ClockKit"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"StoreKit","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"WatchKit","type":"text"}]}]}]}]}],"type":"unorderedList"},{"anchor":"Written-By","type":"heading","level":2,"text":"Written By"},{"type":"row","columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"identifier":"zntfdr","type":"image"}]}]},{"size":4,"content":[{"text":"Federico Zanetello","level":3,"anchor":"Federico-Zanetello","type":"heading"},{"inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"isActive":true,"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitle":"Contributed Notes","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/github.com\/zntfdr","type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"isActive":true,"identifier":"https:\/\/zntfdr.dev","type":"reference"}],"type":"paragraph"}]}],"numberOfColumns":5},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"isActive":true,"type":"reference","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"}]},{"anchor":"Related-Sessions","type":"heading","level":2,"text":"Related Sessions"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10028-Meet-WidgetKit","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10031-Stacks-Grids-and-Outlines-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10033-Build-SwiftUI-views-for-widgets","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10034-Widgets-Codealong-part-1-The-adventure-begins","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10035-Widgets-Codealong-part-2-Alternate-timelines","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10036-Widgets-Codealong-part-3-Advancing-timelines","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10037-App-essentials-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10039-Build-documentbased-apps-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10040-Data-Essentials-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10042-Build-SwiftUI-apps-for-tvOS","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10048-Build-complications-in-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10056-Optimize-the-interface-of-your-Mac-Catalyst-app","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10119-Introduction-to-SwiftUI","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10143-Whats-new-in-Mac-Catalyst","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10170-Whats-new-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10175-The-details-of-UI-typography","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10207-SF-Symbols-2"],"type":"links","style":"list"},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}]}],"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10039-Build-documentbased-apps-in-SwiftUI":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10039-Build-documentbased-apps-in-SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc20-10039-build-documentbased-apps-in-swiftui","title":"Build document-based apps in SwiftUI","kind":"article","role":"sampleCode","type":"topic","abstract":[{"type":"text","text":"Learn how to build a document-based app entirely in SwiftUI! We’ll walk you through the DocumentGroup API and how it composes with your App and Scenes, allowing you to add out-of-the-box support for document management — such as document browsing and standard commands — no heavy lifting required. You’ll learn to set up Universal Type Identifiers as well as gain understanding into what makes a top-notch document-based app."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10207-SF-Symbols-2":{"url":"\/documentation\/wwdcnotes\/wwdc20-10207-sf-symbols-2","abstract":[{"text":"SF Symbols make it easy to adopt high-quality, Apple-designed symbols created to look great with San Francisco, the system font for all Apple platforms. Discover how you can use SF Symbols in AppKit, UIKit, and SwiftUI. Learn how to work with SF Symbols in common design tools and how to use them in code. And we’ll walk you through the latest updates, including additions to the repertoire, alignment improvements, changes with right-to-left localization, and multicolor symbols.","type":"text"}],"kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10207-SF-Symbols-2","title":"SF Symbols 2","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10175-The-details-of-UI-typography":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc20-10175-the-details-of-ui-typography","title":"The details of UI typography","abstract":[{"text":"Learn how to achieve exceptional typography in your app’s user interface that enhances legibility, accessibility, and consistency across Apple platforms. Get up to speed on the latest advancements to the San Francisco font family including the move to variable fonts for accommodating optical sizes and weights. We’ll also share tips about how to get the most out of systems fonts, support dynamic type with custom fonts.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10175-The-details-of-UI-typography","role":"sampleCode","type":"topic"},"https://developer.apple.com/documentation/swiftui/scene":{"title":"some Scene","type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/scene","titleInlineContent":[{"code":"some Scene","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/scene"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10056-Optimize-the-interface-of-your-Mac-Catalyst-app":{"kind":"article","type":"topic","abstract":[{"type":"text","text":"Discover how to tailor your Mac Catalyst app so that it looks and feels even more at home on the Mac by using the new “Optimize Interface for Mac” option in Xcode. Explore new layout and appearance options for Catalyst apps, and learn how they can provide you with graphical performance gains, sharper text, and an interface designed specifically for Apple’s desktops and laptops. We’ll show you how to take advantage of these options and provide best practices for organizing your code when developing for multiple platforms."}],"role":"sampleCode","title":"Optimize the interface of your Mac Catalyst app","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10056-Optimize-the-interface-of-your-Mac-Catalyst-app","url":"\/documentation\/wwdcnotes\/wwdc20-10056-optimize-the-interface-of-your-mac-catalyst-app"},"https://developer.apple.com/documentation/swiftui/app":{"title":"App","type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/app","titleInlineContent":[{"type":"codeVoice","code":"App"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/app"},"https://github.com/zntfdr":{"title":"GitHub","type":"link","url":"https:\/\/github.com\/zntfdr","titleInlineContent":[{"type":"text","text":"GitHub"}],"identifier":"https:\/\/github.com\/zntfdr"},"https://developer.apple.com/documentation/swiftui/view/listitemtint(_:)-12mbh":{"title":"listItemTint","type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/listitemtint(_:)-12mbh","titleInlineContent":[{"type":"codeVoice","code":"listItemTint"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/listitemtint(_:)-12mbh"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10034-Widgets-Codealong-part-1-The-adventure-begins":{"url":"\/documentation\/wwdcnotes\/wwdc20-10034-widgets-codealong-part-1-the-adventure-begins","type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10034-Widgets-Codealong-part-1-The-adventure-begins","kind":"article","abstract":[{"type":"text","text":"Take your app on a most wondrous adventure to the home and Today screens of iPhone, iPad, and Mac. Grab the starter project and code along with us! We will guide you through the process of creating a widget for your app from start to finish so that you can provide people with beautiful views and glanceable information in an easily-accessible place. Discover how to create a widget project, learn fundamental concepts for widgets and their structure, configure the widget and its provider, and start exploring timeline concepts."}],"title":"Widgets Code-along, part 1: The adventure begins"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10042-Build-SwiftUI-apps-for-tvOS":{"abstract":[{"text":"Add a new dimension to your tvOS app with SwiftUI. We’ll show you how to build layouts powered by SwiftUI and customize your interface with custom buttons, provide more functionality in your app with a context menu, check if views are focused, and manage default focus.","type":"text"}],"title":"Build SwiftUI apps for tvOS","role":"sampleCode","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10042-Build-SwiftUI-apps-for-tvOS","url":"\/documentation\/wwdcnotes\/wwdc20-10042-build-swiftui-apps-for-tvos"},"https://developer.apple.com/documentation/swiftui/containerrelativeshape":{"title":"ContainerRelativeShape","type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/containerrelativeshape","titleInlineContent":[{"code":"ContainerRelativeShape","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/containerrelativeshape"},"https://developer.apple.com/documentation/swiftui/griditem":{"title":"GridItem","type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/griditem","titleInlineContent":[{"type":"codeVoice","code":"GridItem"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/griditem"},"zntfdr":{"type":"image","variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}],"alt":"Profile image of Federico Zanetello","identifier":"zntfdr"},"https://developer.apple.com/documentation/swiftui/lazyhgrid":{"title":"LazyHGrid","type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/lazyhgrid","titleInlineContent":[{"type":"codeVoice","code":"LazyHGrid"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/lazyhgrid"},"WWDC20-Icon.png":{"type":"image","variants":[{"url":"\/images\/WWDC20-Icon.png","traits":["1x","light"]}],"alt":null,"identifier":"WWDC20-Icon.png"},"https://developer.apple.com/documentation/swiftui/widgetconfiguration":{"title":"some WidgetConfiguration","type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/widgetconfiguration","titleInlineContent":[{"type":"codeVoice","code":"some WidgetConfiguration"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/widgetconfiguration"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10119-Introduction-to-SwiftUI":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10119-Introduction-to-SwiftUI","abstract":[{"type":"text","text":"Explore the world of declarative-style programming: Discover how to build a fully-functioning SwiftUI app from scratch as we explain the benefits of writing declarative code and how SwiftUI and Xcode can combine forces to help you build great apps, faster."}],"kind":"article","title":"Introduction to SwiftUI","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc20-10119-introduction-to-swiftui"},"WWDCNotes.png":{"type":"image","variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"alt":null,"identifier":"WWDCNotes.png"},"https://developer.apple.com/documentation/swiftui/view/toolbar(content:)":{"title":".toolbar","type":"link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/toolbar(content:)","titleInlineContent":[{"type":"codeVoice","code":".toolbar"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/toolbar(content:)"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10037-App-essentials-in-SwiftUI":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10037-App-essentials-in-SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc20-10037-app-essentials-in-swiftui","title":"App essentials in SwiftUI","abstract":[{"text":"Thanks to the new App protocol, SwiftUI now supports building entire apps! See how Apps, Scenes, and Views fit together. Learn how easy it is to implement the features people expect from a best-in-class product while saving time and reducing complexity. Easily add expected functionality to your interface using the new commands modifier, and explore the ins and outs of the new WindowGroup API.","type":"text"}],"role":"sampleCode","kind":"article","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10036-Widgets-Codealong-part-3-Advancing-timelines":{"url":"\/documentation\/wwdcnotes\/wwdc20-10036-widgets-codealong-part-3-advancing-timelines","type":"topic","role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10036-Widgets-Codealong-part-3-Advancing-timelines","kind":"article","abstract":[{"type":"text","text":"Take your widget to the next level as we embark upon the third and final stage of the widgets code-along. Pick up where you left off in Part 2 or start with the Part 3 starter project to go warp speed ahead. We’ll explore advanced concepts for widgets, timelines, and configuration. Learn how to load in-process and background URLs and link directly to content within your app. And discover how to create multiple widgets that explore different features within your app, as well as making your widget dynamically configurable."}],"title":"Widgets Code-along, part 3: Advancing timelines"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10028-Meet-WidgetKit":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10028-Meet-WidgetKit","url":"\/documentation\/wwdcnotes\/wwdc20-10028-meet-widgetkit","title":"Meet WidgetKit","abstract":[{"type":"text","text":"Meet WidgetKit: the best way to bring your app’s most useful information directly to the home screen. We’ll show you what makes a great widget and take a look at WidgetKit’s features and functionality. Learn how to get started creating a widget, and find out how WidgetKit leverages the power of SwiftUI to provide a stateless experience. Discover how to harness your existing proactive technologies to make sure your widget surfaces relevant material. And create a Timeline that ensures your content is always fresh."}],"role":"sampleCode","kind":"article","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"abstract":[{"text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more.","type":"text"}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","url":"\/documentation\/wwdcnotes\/zntfdr","title":"Federico Zanetello (332 notes)","kind":"article","images":[{"identifier":"zntfdr.jpeg","type":"card"},{"identifier":"zntfdr.jpeg","type":"icon"}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10031-Stacks-Grids-and-Outlines-in-SwiftUI":{"title":"Stacks, Grids, and Outlines in SwiftUI","kind":"article","abstract":[{"text":"Display detailed data in your SwiftUI apps more quickly and efficiently with improved stacks and new list and outline views. Now available on iOS and iPadOS for the first time, outlines are a new multi-platform tool for expressing hierarchical data that work alongside stacks and lists. Learn how to use new and improved tools in SwiftUI to display more content on screen when using table views, create smooth-scrolling and responsive stacks, and build out list views for content that needs more than a vStack can provide. Take your layout options even further with the new grid view, as well as disclosure groups.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10031-Stacks-Grids-and-Outlines-in-SwiftUI","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc20-10031-stacks-grids-and-outlines-in-swiftui","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10143-Whats-new-in-Mac-Catalyst":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10143-Whats-new-in-Mac-Catalyst","url":"\/documentation\/wwdcnotes\/wwdc20-10143-whats-new-in-mac-catalyst","title":"What’s new in Mac Catalyst","abstract":[{"type":"text","text":"Discover the latest updates to Mac Catalyst and find out how you can bring your iPadOS app to the Mac. Explore enhancements to the application lifecycle, integrate new extensions into your apps, and learn how the new look and feel of macOS impacts Mac Catalyst apps. Get a taste of the new Optimized for Mac mode. And learn more about all the improvements — including framework availability and beautiful new designs — that make bringing your iPad app to the Mac easier than ever."}],"role":"sampleCode","kind":"article","type":"topic"},"https://developer.apple.com/documentation/swiftui/lazyvgrid":{"titleInlineContent":[{"code":"LazyVGrid","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/lazyvgrid","type":"link","title":"LazyVGrid","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/lazyvgrid"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10048-Build-complications-in-SwiftUI":{"abstract":[{"text":"Spice up your graphic complications on Apple Watch using SwiftUI. We’ll teach you how to use custom SwiftUI views in complications on watch faces like Meridian and Infograph, look at some best practices when creating your complications, and show you how to preview your work in Xcode 12.","type":"text"}],"title":"Build complications in SwiftUI","role":"sampleCode","kind":"article","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10048-Build-complications-in-SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc20-10048-build-complications-in-swiftui"},"https://developer.apple.com/documentation/swiftui/signinwithapplebutton":{"titleInlineContent":[{"code":"SignInWithAppleButton","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/signinwithapplebutton","type":"link","title":"SignInWithAppleButton","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/signinwithapplebutton"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10033-Build-SwiftUI-views-for-widgets":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10033-Build-SwiftUI-views-for-widgets","abstract":[{"text":"Widgets are bite-sized pieces of information from your app that someone can choose to place on their home screen or Today view. Discover the process of building the views for a widget from scratch using SwiftUI. Brush up on the syntax that you’ll need for widget-specific construction and learn how to incorporate those commands and customize your widget’s interface for a great glanceable experience.","type":"text"}],"role":"sampleCode","title":"Build SwiftUI views for widgets","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc20-10033-build-swiftui-views-for-widgets"},"zntfdr.jpeg":{"variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}],"identifier":"zntfdr.jpeg","type":"image","alt":null},"doc://WWDCNotes/documentation/WWDCNotes":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","role":"collection","type":"topic","url":"\/documentation\/wwdcnotes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"kind":"symbol","title":"WWDC Notes","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10040-Data-Essentials-in-SwiftUI":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10040-Data-Essentials-in-SwiftUI","url":"\/documentation\/wwdcnotes\/wwdc20-10040-data-essentials-in-swiftui","kind":"article","title":"Data Essentials in SwiftUI","abstract":[{"text":"Data is a complex part of any app, but SwiftUI makes it easy to ensure a smooth, data-driven experience from prototyping to production. Discover @State and @Binding, two powerful tools that can preserve and seamlessly update your Source of Truth. We’ll also show you how ObservableObject lets you connect your views to your data model. Learn about some tricky challenges and cool new ways to solve them — directly from the experts!","type":"text"}],"role":"sampleCode"},"https://zntfdr.dev":{"titleInlineContent":[{"type":"text","text":"Blog"}],"identifier":"https:\/\/zntfdr.dev","type":"link","title":"Blog","url":"https:\/\/zntfdr.dev"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10170-Whats-new-in-Swift":{"title":"What’s new in Swift","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10170-Whats-new-in-Swift","kind":"article","role":"sampleCode","type":"topic","abstract":[{"text":"Join us for an update on Swift. Discover the latest advancements in runtime performance, along with improvements to the developer experience that make your code faster to read, edit, and debug. Find out how to take advantage of new language features like multiple trailing closures. Learn about new libraries available in the SDK, and explore the growing number of APIs available as Swift Packages.","type":"text"}],"url":"\/documentation\/wwdcnotes\/wwdc20-10170-whats-new-in-swift"},"https://developer.apple.com/documentation/swiftui/progressview":{"titleInlineContent":[{"code":"ProgressView","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/progressview","type":"link","title":"ProgressView","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/progressview"},"https://developer.apple.com/documentation/swiftui/lazyvstack":{"titleInlineContent":[{"code":"LazyVStack","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/lazyvstack","type":"link","title":"LazyVStack","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/lazyvstack"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10035-Widgets-Codealong-part-2-Alternate-timelines":{"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10035-Widgets-Codealong-part-2-Alternate-timelines","abstract":[{"type":"text","text":"Our code-along continues as we help our widget rewrite the future and travel into an alternate timeline. Continue where you left off from Part 1, or traverse time and space and begin with the Part 2 starter project to jump right into the action. Find out how you can integrate system intelligence into your widgets to help them dynamically change at different points during the day and surface the most relevant information. Explore core timeline concepts, support multiple widget families, and learn how to make your widget configurable."}],"kind":"article","title":"Widgets Code-along, part 2: Alternate timelines","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc20-10035-widgets-codealong-part-2-alternate-timelines"},"https://developer.apple.com/documentation/swiftui/link":{"titleInlineContent":[{"code":"Link","type":"codeVoice"}],"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/link","type":"link","title":"Link","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/link"},"https://developer.apple.com/wwdc20/10041":{"identifier":"https:\/\/developer.apple.com\/wwdc20\/10041","type":"download","checksum":null,"url":"https:\/\/developer.apple.com\/wwdc20\/10041"},"https://developer.apple.com/documentation/swiftui/gauge":{"title":"Gauge","titleInlineContent":[{"type":"codeVoice","code":"Gauge"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/gauge","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/gauge","type":"link"},"https://developer.apple.com/documentation/swiftui/view/matchedgeometryeffect(id:in:properties:anchor:issource:)":{"title":"matchedGeometryEffect","titleInlineContent":[{"code":"matchedGeometryEffect","type":"codeVoice"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/matchedgeometryeffect(id:in:properties:anchor:issource:)","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/view\/matchedgeometryeffect(id:in:properties:anchor:issource:)","type":"link"},"WWDC20.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDC20.jpeg"}],"identifier":"WWDC20.jpeg","type":"image","alt":null},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link"},"https://developer.apple.com/documentation/swiftui/windowgroup":{"title":"WindowGroup","titleInlineContent":[{"type":"codeVoice","code":"WindowGroup"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/windowgroup","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/windowgroup","type":"link"},"https://developer.apple.com/documentation/swiftui/toolbaritem":{"title":"ToolBarItem","titleInlineContent":[{"code":"ToolBarItem","type":"codeVoice"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/toolbaritem","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/toolbaritem","type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20":{"url":"\/documentation\/wwdcnotes\/wwdc20","title":"WWDC20","images":[{"type":"icon","identifier":"WWDC20-Icon.png"},{"type":"card","identifier":"WWDC20.jpeg"}],"abstract":[{"text":"Xcode 12, Swift 5.3, iOS 14, macOS 11 (Big Sur), tvOS 14, watchOS 7.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"type":"codeVoice","code":"WidgetKit"},{"text":", ","type":"text"},{"type":"codeVoice","code":"StoreKit Testing"},{"text":", and more.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20","kind":"article","type":"topic","role":"collectionGroup"},"https://developer.apple.com/documentation/swiftui/documentgroup":{"title":"DocumentGroup","titleInlineContent":[{"type":"codeVoice","code":"DocumentGroup"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/documentgroup","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/documentgroup","type":"link"},"https://developer.apple.com/documentation/swiftui/label":{"title":"Label","titleInlineContent":[{"code":"Label","type":"codeVoice"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/label","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/label","type":"link"},"https://developer.apple.com/documentation/swiftui/widget":{"title":"Widget","titleInlineContent":[{"type":"codeVoice","code":"Widget"}],"url":"https:\/\/developer.apple.com\/documentation\/swiftui\/widget","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/widget","type":"link"}}}