{"sampleCodeDownload":{"action":{"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc20\/10169","overridingTitle":"Watch Video (15 min)","isActive":true},"kind":"sampleDownload"},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20"]]},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10169-Swift-packages-Resources-and-localization","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Bring your resources along for the ride when you organize and share code using Swift packages. Discover how to include assets like images and storyboards in a package and how to access them from code. And learn how to add localized strings to make your code accessible to people around the world."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"content":[{"type":"heading","anchor":"Adding-Resources-to-a-Package","level":2,"text":"Adding Resources to a Package"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"New with Xcode 12\/Swift 5.3"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Adding resources to a package works with existing APIs"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding resources does not affect the OS version requirements of our package"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"To add resoruces, we create an assets catalog, a.k.a. a folder with ","type":"text"},{"code":".xcassets","type":"codeVoice"},{"text":" suffix, the same way as an Xcode project.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"to access to the package resources, we need to pass a bundle parameter where the resource is needed, for example: "},{"type":"codeVoice","code":"Image(\"myPackageImage\", bundle: .module)"}]}]}]},{"type":"heading","anchor":"Resource-purpose","level":3,"text":"Resource purpose"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Some resources (as seen in the image below) are automatically added in the package assets, for example:"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC20-10169-clearResources"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Some other resources, that are not places in an assets catalog (for development purposes for example), need to have an intent declared in the package manifest"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"WWDC20-10169-ambiguousResources"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"In order to exclude assets or folders to be embed in our package, add these resources in the ","type":"text"},{"code":"excluded","type":"codeVoice"},{"text":" array of the target","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"In order to include standalone assets (a.k.a. assets not in an asset catalog), we need to declare them in with the ","type":"text"},{"code":"resources","type":"codeVoice"},{"text":" array of its target.","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"most resources should use the ","type":"text"},{"code":".process","type":"codeVoice"},{"text":" action, so that they are transformed as appropriate at build time, the exact processing that depends on the platform for which the package is built.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"in case we would like to have a full folder available at runtime, while also preserving its structure as it is, we will use the "},{"code":".copy","type":"codeVoice"},{"type":"text","text":" type instead"}]}]}],"type":"unorderedList"}]}],"type":"unorderedList"},{"code":["\/\/ swift-tools-version:5.3","import PackageDescription","","let package = Package(name: \"MyPackage\",","    products: [","        ...","    ],","    targets: [","        .target(name: \"MyLibrary\",","            excludes: [","                \"Internal Notes.txt\", \/\/ excluding this file","                \"Artwork Creation\"], \/\/ excluding this folder content on build time","            resources: [","                .process(\"Logo.png\"), \/\/ processed and available at runtime","                .copy(\"Game Data\")] \/\/ copied and available at runtime exactly as it is","        )","    ]",")"],"syntax":"swift","type":"codeListing"},{"text":"Localizing Resources","level":2,"type":"heading","anchor":"Localizing-Resources"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"first we need to add a default localization in the package declaration","type":"text"}]}]}],"type":"unorderedList"},{"code":["let package = Package(","    name: ...","    defaultLocalization: \"en\", \/\/ mandatory if our package supports localizations","    products: [","        ...","    ],","    targets: [","        ...","    ]",")"],"syntax":"swift","type":"codeListing"},{"items":[{"content":[{"inlineContent":[{"text":"it works like an Xcode project: we create the languages ","type":"text"},{"code":"en.lproj","type":"codeVoice"},{"text":" folders at the root of our target and add a ","type":"text"},{"code":"Localizable.strings","type":"codeVoice"},{"text":" file in each with the localizations","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"like for assets, wherever our localizations are needed we need to specify the bundle, for example: ","type":"text"},{"code":"Text(\"user_greeting\", bundle: .module)","type":"codeVoice"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"no need to declare the "},{"code":".lproj","type":"codeVoice"},{"type":"text","text":" in the package manifest"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"localized resources within the assets catalog are also supported","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Written By","level":2,"type":"heading","anchor":"Written-By"},{"columns":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"zntfdr","type":"image"}]}],"size":1},{"content":[{"text":"Federico Zanetello","type":"heading","anchor":"Federico-Zanetello","level":3},{"inlineContent":[{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitle":"Contributed Notes","isActive":true,"type":"reference","overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}]},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/zntfdr","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/zntfdr.dev","isActive":true,"type":"reference"}],"type":"paragraph"}],"size":4}],"numberOfColumns":5,"type":"row"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference","isActive":true}]},{"text":"Related Sessions","level":2,"type":"heading","anchor":"Related-Sessions"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10019-Get-to-know-Create-ML-Components","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10110-Build-global-apps-Localization-by-example","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110401-Create-Swift-Package-plugins","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10096-Explore-Packages-and-Projects-with-Xcode-Playgrounds","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10142-Build-scalable-enterprise-app-suites","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10147-Distribute-binary-frameworks-as-Swift-packages","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10170-Whats-new-in-Swift","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-403-Creating-Great-Localized-Experiences-with-Xcode-11","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-408-Adopting-Swift-Packages-in-Xcode","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-410-Creating-Swift-Packages"],"type":"links","style":"list"},{"type":"small","inlineContent":[{"inlineContent":[{"type":"text","text":"Legal Notice"}],"type":"strong"}]},{"type":"small","inlineContent":[{"text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}]}],"kind":"content"}],"metadata":{"roleHeading":"WWDC20","modules":[{"name":"WWDC Notes"}],"role":"sampleCode","title":"Swift packages: Resources and localization"},"sections":[],"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc20-10169-swift-packages-resources-and-localization"]}],"references":{"https://github.com/zntfdr":{"title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}],"url":"https:\/\/github.com\/zntfdr","identifier":"https:\/\/github.com\/zntfdr","type":"link"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-408-Adopting-Swift-Packages-in-Xcode":{"role":"sampleCode","title":"Adopting Swift Packages in Xcode","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc19-408-adopting-swift-packages-in-xcode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-408-Adopting-Swift-Packages-in-Xcode","type":"topic","abstract":[{"text":"Swift packages are a great way to organize and share code, and are now supported while building apps for all Apple platforms in Xcode 11. Find out how to use community-developed packages in your project, how Swift packages are structured, and how package versioning and dependencies work.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10170-Whats-new-in-Swift":{"type":"topic","abstract":[{"text":"Join us for an update on Swift. Discover the latest advancements in runtime performance, along with improvements to the developer experience that make your code faster to read, edit, and debug. Find out how to take advantage of new language features like multiple trailing closures. Learn about new libraries available in the SDK, and explore the growing number of APIs available as Swift Packages.","type":"text"}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10170-Whats-new-in-Swift","title":"What’s new in Swift","url":"\/documentation\/wwdcnotes\/wwdc20-10170-whats-new-in-swift","role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20","role":"collectionGroup","title":"WWDC20","type":"topic","abstract":[{"type":"text","text":"Xcode 12, Swift 5.3, iOS 14, macOS 11 (Big Sur), tvOS 14, watchOS 7."},{"type":"text","text":" "},{"text":"New APIs: ","type":"text"},{"code":"WidgetKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit Testing","type":"codeVoice"},{"text":", and more.","type":"text"}],"kind":"article","images":[{"identifier":"WWDC20-Icon.png","type":"icon"},{"identifier":"WWDC20.jpeg","type":"card"}],"url":"\/documentation\/wwdcnotes\/wwdc20"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10019-Get-to-know-Create-ML-Components":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10019-Get-to-know-Create-ML-Components","title":"Get to know Create ML Components","kind":"article","abstract":[{"type":"text","text":"Create ML makes it easy to build custom machine learning models for image classification, object detection, sound classification, hand pose classification, action classification, tabular data regression, and more. And with the Create ML Components framework, you can further customize underlying tasks and improve your model. We’ll explore the feature extractors, transformers, and estimators that make up these tasks, and show you how you can combine them with other components and pre-processing steps to build custom tasks for concepts like image regression."}],"url":"\/documentation\/wwdcnotes\/wwdc22-10019-get-to-know-create-ml-components","role":"sampleCode","type":"topic"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-110401-Create-Swift-Package-plugins":{"title":"Create Swift Package plugins","abstract":[{"type":"text","text":"Tailor your development workflow and learn how to write your own package plugins in Swift. We’ll show you how you can extend Xcode’s functionality by using the PackagePlugin API to generate source code or automate release tasks and share best practices for creating great plugins."}],"role":"sampleCode","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc22-110401-create-swift-package-plugins","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-110401-Create-Swift-Package-plugins"},"doc://WWDCNotes/documentation/WWDCNotes":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","role":"collection","title":"WWDC Notes","type":"topic","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"kind":"symbol","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"url":"\/documentation\/wwdcnotes"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"title":"Federico Zanetello (332 notes)","url":"\/documentation\/wwdcnotes\/zntfdr","abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","kind":"article","role":"sampleCode","images":[{"type":"card","identifier":"zntfdr.jpeg"},{"type":"icon","identifier":"zntfdr.jpeg"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10142-Build-scalable-enterprise-app-suites":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10142-Build-scalable-enterprise-app-suites","kind":"article","role":"sampleCode","title":"Build scalable enterprise app suites","url":"\/documentation\/wwdcnotes\/wwdc20-10142-build-scalable-enterprise-app-suites","type":"topic","abstract":[{"text":"Learn how to build focused enterprise apps that work well together. In this session, we’ll introduce you to Apple Retail’s suite of enterprise apps, which help employees interact with customers, track operations, manage stores, and stay connected. Discover how Apple Retail created a unified set of apps by adopting Swift Packages and testing for app scalability. And explore how managing apps in production with configurations can help tailor app suites to different regions and locations.","type":"text"}]},"WWDC20.jpeg":{"alt":null,"variants":[{"url":"\/images\/WWDC20.jpeg","traits":["1x","light"]}],"identifier":"WWDC20.jpeg","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-410-Creating-Swift-Packages":{"url":"\/documentation\/wwdcnotes\/wwdc19-410-creating-swift-packages","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-410-Creating-Swift-Packages","type":"topic","kind":"article","title":"Creating Swift Packages","abstract":[{"text":"Whether you want to publish code to share with the community, or you just want a convenient way to organize the code in your apps, Swift packages are here to help. Learn how to create local packages for your own development, how to customize your package via the manifest file, and how to go about publishing a package for others to use.","type":"text"}],"role":"sampleCode"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10096-Explore-Packages-and-Projects-with-Xcode-Playgrounds":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10096-Explore-Packages-and-Projects-with-Xcode-Playgrounds","kind":"article","role":"sampleCode","title":"Explore Packages and Projects with Xcode Playgrounds","url":"\/documentation\/wwdcnotes\/wwdc20-10096-explore-packages-and-projects-with-xcode-playgrounds","type":"topic","abstract":[{"text":"Xcode Playgrounds helps developers explore Swift and framework APIs and provides a scratchpad for rapid experimentation. Learn how Xcode Playgrounds utilizes Xcode’s modern build system, provides improved support for resources, and integrates into your projects, frameworks, and Swift packages to improve your documentation and development workflow.","type":"text"}]},"WWDC20-10169-ambiguousResources":{"alt":null,"variants":[{"url":"\/images\/WWDC20-10169-ambiguousResources.png","traits":["1x","light"]}],"identifier":"WWDC20-10169-ambiguousResources","type":"image"},"WWDC20-10169-clearResources":{"alt":null,"variants":[{"url":"\/images\/WWDC20-10169-clearResources.png","traits":["1x","light"]}],"identifier":"WWDC20-10169-clearResources","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10147-Distribute-binary-frameworks-as-Swift-packages":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10147-Distribute-binary-frameworks-as-Swift-packages","kind":"article","role":"sampleCode","title":"Distribute binary frameworks as Swift packages","url":"\/documentation\/wwdcnotes\/wwdc20-10147-distribute-binary-frameworks-as-swift-packages","type":"topic","abstract":[{"text":"Discover how you can add third-party frameworks to your app and keep them up to date using Swift packages in Xcode. We’ll show you how to author packages that reference frameworks, explain binary targets and how to specify them in your package manifest file, and demonstrate how to compute checksums so that your clients always get the exact binary you expect.","type":"text"}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-403-Creating-Great-Localized-Experiences-with-Xcode-11":{"kind":"article","url":"\/documentation\/wwdcnotes\/wwdc19-403-creating-great-localized-experiences-with-xcode-11","type":"topic","title":"Creating Great Localized Experiences with Xcode 11","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-403-Creating-Great-Localized-Experiences-with-Xcode-11","role":"sampleCode","abstract":[{"type":"text","text":"Learn how your app can support per-app language settings in iOS 13. Get the details on localizing assets with asset catalogs and simplifying your localization workflow with Xcode 11. Understand how to generate screenshots in multiple languages for localization and testing."}]},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10110-Build-global-apps-Localization-by-example":{"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc22-10110-build-global-apps-localization-by-example","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10110-Build-global-apps-Localization-by-example","title":"Build global apps: Localization by example","role":"sampleCode","kind":"article","abstract":[{"type":"text","text":"Learn how you can run your apps on devices around the world and help everyone have a great experience — regardless of the language they speak. We’ll explore how Apple APIs can provide a solid foundation when creating apps for diverse audiences, and we’ll share examples, challenges, and best practices from our own experiences."}]},"zntfdr.jpeg":{"alt":null,"variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}],"identifier":"zntfdr.jpeg","type":"image"},"https://developer.apple.com/wwdc20/10169":{"checksum":null,"url":"https:\/\/developer.apple.com\/wwdc20\/10169","identifier":"https:\/\/developer.apple.com\/wwdc20\/10169","type":"download"},"WWDCNotes.png":{"alt":null,"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"identifier":"WWDCNotes.png","type":"image"},"WWDC20-Icon.png":{"alt":null,"variants":[{"url":"\/images\/WWDC20-Icon.png","traits":["1x","light"]}],"identifier":"WWDC20-Icon.png","type":"image"},"https://zntfdr.dev":{"title":"Blog","titleInlineContent":[{"text":"Blog","type":"text"}],"url":"https:\/\/zntfdr.dev","identifier":"https:\/\/zntfdr.dev","type":"link"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}],"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link"},"zntfdr":{"alt":"Profile image of Federico Zanetello","variants":[{"url":"\/images\/zntfdr.jpeg","traits":["1x","light"]}],"identifier":"zntfdr","type":"image"}}}