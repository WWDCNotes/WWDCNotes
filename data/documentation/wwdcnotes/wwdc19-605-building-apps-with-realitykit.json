{"primaryContentSections":[{"content":[{"level":2,"type":"heading","anchor":"RealityKit-recap","text":"RealityKit recap"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"It’s ARKit made it easy.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Allows to seamlessly blend rendered content with a real world environment.","type":"text"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Add-interaction-Hit-testing","text":"Add interaction (Hit testing)"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Hit testing works by turning a 2D point that was tapped on your device’s screen into a ray in our virtual scene. That ray is then cast into the scene and RealityKit finds all of the objects that are intersected by the ray. Any entities that were intersected by the ray are returned and you now know what objects lie under the tap."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In order for hit testing to work, our entities must be\/have a collision type shape."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Collision shapes are geometric shapes.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Can be generated automatically (must ask explicitly when loading the model), by using the entity visual bounds."}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Animation","text":"Animation"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Transform: Position, Scale, Rotation","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Asset: Animations that are baked into the assets that are loaded in from USDZs or reality files."}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Occlusion-Materials","text":"Occlusion Materials"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Occlusion materials are invisible, but when applied to geometry in a scene they hide virtual content behind them revealing the video pass through. Useful to hide (part of) entities that should be visible at the current moment"}]}]}]},{"level":2,"type":"heading","anchor":"Components","text":"Components"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"RealityKit uses the entity component design pattern to build objects within the virtual world.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"An entity itself is comprised of pieces called “components.”","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"These components define specific behaviors and data that can be added to individual entities. Using entities and components allows for reuse of code and is flexible to use."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"It’s a ","type":"text"},{"code":"Struct","type":"codeVoice"},{"text":" conforming to the ","type":"text"},{"code":"Component","type":"codeVoice"},{"text":" protocol","type":"text"}]}]}]},{"level":2,"type":"heading","anchor":"Multiplayer","text":"Multiplayer"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Automatic scene synchronization","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Built on ","type":"text"},{"code":"MultipeerConnectivity","type":"codeVoice"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The models must be loaded separately by the different clients.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Entity Ownership"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"It’s the right to modify an Entity","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"By default this is given to the owner of the AR experience (the host)","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"The host can decide to give this right to others (the clients)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"To do this, the client can ask for the ownership of an entity, and the host can grant it."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This can be done automatically with the "},{"type":"codeVoice","code":"ownershipTransferMode"},{"type":"text","text":" property"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Once the ownership has been transferred, even the host has to request for ownership.","type":"text"}]}]}],"type":"unorderedList"}]}]},{"inlineContent":[{"text":"We can also add local only entities\/components, which are components not shared with other players.This is useful for showing what belongs to the device user, and not the opponents on a game for example.","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Written-By","text":"Written By"},{"columns":[{"size":1,"content":[{"inlineContent":[{"identifier":"zntfdr","type":"image"}],"type":"paragraph"}]},{"size":4,"content":[{"type":"heading","text":"Federico Zanetello","level":3,"anchor":"Federico-Zanetello"},{"inlineContent":[{"type":"reference","isActive":true,"overridingTitleInlineContent":[{"text":"Contributed Notes","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","overridingTitle":"Contributed Notes"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/zntfdr"},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/zntfdr.dev"}],"type":"paragraph"}]}],"type":"row","numberOfColumns":5},{"inlineContent":[{"text":"Missing anything? Corrections? ","type":"text"},{"isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Related-Sessions","text":"Related Sessions"},{"type":"links","style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-603-Introducing-RealityKit-and-Reality-Composer","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-604-Introducing-ARKit-3","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-607-Bringing-People-into-AR","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-610-Building-Collaborative-AR-Experiences"]},{"inlineContent":[{"inlineContent":[{"text":"Legal Notice","type":"text"}],"type":"strong"}],"type":"small"},{"inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}],"type":"small"}],"kind":"content"}],"sampleCodeDownload":{"kind":"sampleDownload","action":{"identifier":"https:\/\/developer.apple.com\/wwdc19\/605","isActive":true,"overridingTitle":"Watch Video (39 min)","type":"reference"}},"sections":[],"kind":"article","hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19"]]},"metadata":{"title":"Building Apps with RealityKit","roleHeading":"WWDC19","role":"sampleCode","modules":[{"name":"WWDC Notes"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc19-605-building-apps-with-realitykit"]}],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-605-Building-Apps-with-RealityKit","interfaceLanguage":"swift"},"abstract":[{"text":"Gain a practical understanding of RealityKit capabilities by developing a game using its easy-to-learn API. Learn the recommended approach for loading assets, building a scene, applying animations, and handling game input. See how entities and components express the powerful elements of RealityKit while providing flexibility for customization. Find out how to take advantage of built-in networking and get details about extending the game into an immersive muliti-player experience.","type":"text"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-610-Building-Collaborative-AR-Experiences":{"role":"sampleCode","title":"Building Collaborative AR Experiences","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-610-Building-Collaborative-AR-Experiences","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc19-610-building-collaborative-ar-experiences","abstract":[{"type":"text","text":"With iOS 13, ARKit and RealityKit enable apps to establish shared AR experiences faster and easier than ever. Understand how collaborative sessions allow multiple devices to build a combined world map and share AR anchors and updates in real-time. Learn how to incorporate collaborative sessions into ARKit-based apps, then roll into SwiftStrike, an engaging and immersive multiplayer AR game built using RealityKit and Swift."}]},"WWDC19.jpeg":{"identifier":"WWDC19.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/WWDC19.jpeg"}],"type":"image","alt":null},"https://zntfdr.dev":{"title":"Blog","titleInlineContent":[{"type":"text","text":"Blog"}],"identifier":"https:\/\/zntfdr.dev","type":"link","url":"https:\/\/zntfdr.dev"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19":{"abstract":[{"type":"text","text":"Xcode 11, Swift 5.1, iOS 13, macOS 10.15 (Catalina), tvOS 13, watchOS 6."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"code":"Combine","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Core Haptics"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Create ML"},{"text":", and more.","type":"text"}],"images":[{"type":"icon","identifier":"WWDC19-Icon.png"},{"type":"card","identifier":"WWDC19.jpeg"}],"role":"collectionGroup","kind":"article","type":"topic","title":"WWDC19","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19","url":"\/documentation\/wwdcnotes\/wwdc19"},"doc://WWDCNotes/documentation/WWDCNotes":{"role":"collection","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","images":[{"type":"icon","identifier":"WWDCNotes.png"}],"url":"\/documentation\/wwdcnotes","title":"WWDC Notes","type":"topic","kind":"symbol"},"zntfdr":{"identifier":"zntfdr","variants":[{"traits":["1x","light"],"url":"\/images\/zntfdr.jpeg"}],"type":"image","alt":"Profile image of Federico Zanetello"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-604-Introducing-ARKit-3":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-604-Introducing-ARKit-3","abstract":[{"type":"text","text":"ARKit is the groundbreaking augmented reality (AR) platform for iOS that can transform how people connect with the world around them. Explore the state-of-the-art capabilities of ARKit 3 and discover the innovative foundation it provides for RealityKit. Learn how ARKit makes AR even more immersive through understanding of body position and movement for motion capture and people occlusion. Check out additions for multiple face tracking, collaborative session building, a coaching UI for on-boarding, and much more."}],"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc19-604-introducing-arkit-3","title":"Introducing ARKit 3"},"WWDCNotes.png":{"alt":null,"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"identifier":"WWDCNotes.png","type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-607-Bringing-People-into-AR":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-607-Bringing-People-into-AR","abstract":[{"type":"text","text":"ARKit 3 enables a revolutionary capability for robust integration of real people into AR scenes. Learn how apps can use live motion capture to animate virtual characters or be applied to 2D and 3D simulation. See how People Occlusion enables even more immersive AR experiences by enabling virtual content to pass behind people in the real world."}],"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc19-607-bringing-people-into-ar","title":"Bringing People into AR"},"zntfdr.jpeg":{"identifier":"zntfdr.jpeg","variants":[{"traits":["1x","light"],"url":"\/images\/zntfdr.jpeg"}],"type":"image","alt":null},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"images":[{"type":"card","identifier":"zntfdr.jpeg"},{"type":"icon","identifier":"zntfdr.jpeg"}],"role":"sampleCode","kind":"article","type":"topic","title":"Federico Zanetello (332 notes)","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","url":"\/documentation\/wwdcnotes\/zntfdr"},"https://github.com/zntfdr":{"title":"GitHub","titleInlineContent":[{"type":"text","text":"GitHub"}],"identifier":"https:\/\/github.com\/zntfdr","type":"link","url":"https:\/\/github.com\/zntfdr"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Contributions are welcome!","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}]},"https://developer.apple.com/wwdc19/605":{"checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc19\/605","type":"download","url":"https:\/\/developer.apple.com\/wwdc19\/605"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-603-Introducing-RealityKit-and-Reality-Composer":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-603-Introducing-RealityKit-and-Reality-Composer","abstract":[{"type":"text","text":"Architected for AR, RealityKit provides developers access to world-class capabilities for rendering, animation, physics, and spatial audio. See how RealityKit reimagines the traditional 3D engine to make AR development faster and easier for developers than ever before. Understand the building blocks of developing RealityKit based apps and games, and learn about prototyping and producing content for AR experiences with Reality Composer."}],"type":"topic","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc19-603-introducing-realitykit-and-reality-composer","title":"Introducing RealityKit and Reality Composer"},"WWDC19-Icon.png":{"alt":null,"variants":[{"url":"\/images\/WWDC19-Icon.png","traits":["1x","light"]}],"identifier":"WWDC19-Icon.png","type":"image"}}}