{"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24-10155-Swift-Charts-Vectorized-and-function-plots","interfaceLanguage":"swift"},"kind":"article","metadata":{"title":"Swift Charts: Vectorized and function plots","modules":[{"name":"WWDC Notes"}],"roleHeading":"WWDC24","role":"sampleCode"},"sampleCodeDownload":{"action":{"type":"reference","identifier":"https:\/\/developer.apple.com\/wwdc24\/10155","overridingTitle":"Watch Video (13 min)","isActive":true},"kind":"sampleDownload"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc24-10155-swift-charts-vectorized-and-function-plots"]}],"abstract":[{"type":"text","text":"The plot thickens! Learn how to render beautiful charts representing math functions and extensive datasets using function and vectorized plots in your app. Whether you’re looking to display functions common in aerodynamics, magnetism, and higher order field theory, or create large interactive heat maps, Swift Charts has you covered."}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Presenter","anchor":"Presenter"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Zhiyu (Apollo) Zhu, SwiftUI Engineer"}]}]}]},{"type":"heading","level":2,"text":"Key takeaways","anchor":"Key-takeaways"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"🌦️ Present weather trends","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"🎭 Track mood & vitals","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"📉 Plot Mathematical Functions","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"📊 Vectorized Plotting APIs","type":"text"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC24-10155-plot-api-variants","type":"image"}]},{"type":"heading","level":2,"text":"LinePlot and AreaPlot API","anchor":"LinePlot-and-AreaPlot-API"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"LinePlots allow plotting of normal distributions across a graph of data."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Accessible by default meaning Voice Over can describe the chart as well as use of Audio Graph"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["func normalDistribution(_ x: Double, mean: Double, standardDeciation: Double) -> Double {"]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC24-10155-normal-distribution-equation","type":"image"}]},{"type":"codeListing","syntax":"swift","code":["}"]},{"tabs":[{"title":"LinePlot","content":[{"type":"paragraph","inlineContent":[{"identifier":"WWDC24-10155-lineplot-distribution-graph","type":"image"}]},{"type":"codeListing","code":["Chart {","LinePlot(","x: \"Capacity density\", y: \"Probability\"",") { x in","normalDistribution(","    x,","    mean: mean, ","    standardDeviation: standardDeviation",")","}",".foregroundStyle(.gray)","}"],"syntax":"swift"}]},{"title":"AreaPlot","content":[{"inlineContent":[{"type":"image","identifier":"WWDC24-10155-areaplot-distribution-graph"}],"type":"paragraph"},{"syntax":"swift","code":["Chart {","AreaPlot(","    x: \"Capacity density\", y: \"Probability\"",") { x in","    normalDistribution(","        x,","        mean: mean, ","        standardDeviation: standardDeviation","    )","}",".foregroundStyle(.gray)",".opacity(0.2)","}"],"type":"codeListing"}]}],"type":"tabNavigator"},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"AreaPlot"}]},{"type":"text","text":" can visualize area between functions by returning a tuple of yStart and yEnd for a given input "},{"type":"codeVoice","code":"x"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Functions accept an unbound range of x values."}]},{"tabs":[{"title":"Bound","content":[{"type":"paragraph","inlineContent":[{"identifier":"WWDC24-10155-areaplot-graph","type":"image"}]}]},{"title":"Unbound","content":[{"inlineContent":[{"identifier":"WWDC24-10155-areaplot-graph-unbound","type":"image"}],"type":"paragraph"}]}],"type":"tabNavigator"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Set Bounds using "},{"type":"strong","inlineContent":[{"text":"XScale","type":"text"}]},{"type":"text","text":" and "},{"type":"strong","inlineContent":[{"type":"text","text":"YScale"}]},{"type":"text","text":". Also you can limit AreaPlot’s "},{"type":"strong","inlineContent":[{"type":"text","text":"domain"}]},{"type":"text","text":"."}]},{"type":"codeListing","syntax":"swift","code":["Chart {","    AreaPlot(","        x: \"x\", yStart: \"cos(x)\", yEnd: \"sin(x)\",","        domain: -135...45","    ) { x in","        (yStart: cos(x \/ 180 * .pi),","        yEnd: sin(x \/ 180 * .pi))","    }","}",".chartXScale(domain: -315...225)",".chartYScale(domain: -5...5)"]},{"type":"heading","level":2,"text":"Parametric Functions","anchor":"Parametric-Functions"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Parametric fuctions can be graphed using the same LinePlot API"}]},{"type":"paragraph","inlineContent":[{"code":"x","type":"codeVoice"},{"type":"text","text":" and "},{"code":"y","type":"codeVoice"},{"type":"text","text":" are defined in terms of a 3rd variable, "},{"code":"t","type":"codeVoice"},{"type":"text","text":"."}]},{"tabs":[{"title":"Function","content":[{"inlineContent":[{"identifier":"WWDC24-10155-parametric-function","type":"image"}],"type":"paragraph"}]},{"title":"Graph","content":[{"inlineContent":[{"type":"image","identifier":"WWDC24-10155-parametric-graph"}],"type":"paragraph"}]}],"type":"tabNavigator"},{"type":"codeListing","syntax":"swift","code":["Chart {","    LinePlot(","        x: \"x\", y: \"y\", t: \"t\", domain: -.pi ... .pi","    ) { t in","        let x = sqrt(2) * pow(sin(t), 3)","        let y = cos(t) * (2 - cos(t) - pow(cos(t), 2))","        return (x, y)","    }","}",".chartXScale(domain: -3...3)",".chartYScale(domain: -4...2)"]},{"type":"heading","level":2,"text":"Piecewise functions","anchor":"Piecewise-functions"},{"type":"paragraph","inlineContent":[{"text":"Piecewise functions may not have certain values within domain.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Returning "},{"type":"codeVoice","code":".nan"},{"type":"text","text":" informs Swift Charts there’s not a number for that input value "},{"type":"codeVoice","code":"x"},{"type":"text","text":" or special values of "},{"type":"codeVoice","code":"x"}]},{"tabs":[{"content":[{"syntax":"swift","code":["Chart {","    LinePlot(x: \"x\", y: \"x + 1 for x ≥ 0\") { x in","        guard x != 0 else {","            return .nan","        }","        return x + 1","    }","}",".chartXScale(domain: -5...10)",".chartYScale(domain: -5...10)"],"type":"codeListing"}],"title":"Not a Number"},{"content":[{"type":"codeListing","code":["Chart {","    LinePlot(x: \"x\", y: \"1 \/ x\") { x in","        guard x != 0 else {","            return .nan","        }","        return 1 \/ x","    }","}",".chartXScale(domain: -10...10)",".chartYScale(domain: -10...10)"],"syntax":"swift"}],"title":"Special Values"}],"type":"tabNavigator"},{"type":"heading","level":2,"text":"Extensive Data Visualizations","anchor":"Extensive-Data-Visualizations"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Scatter plots can visualize a classification model"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC24-10155-scatter-plot","type":"image"}]},{"type":"paragraph","inlineContent":[{"text":"Heatmaps can visualize a transformer language model’s self-attention","type":"text"}]},{"type":"paragraph","inlineContent":[{"identifier":"WWDC24-10155-heatmap","type":"image"}]},{"type":"heading","level":2,"text":"Marks API Review","anchor":"Marks-API-Review"},{"type":"paragraph","inlineContent":[{"text":"The flexibility of marks allows you to style each data point differently, though entire collections tend to be styled homogeneously.","type":"text"}]},{"tabs":[{"title":"Highly customized Chart","content":[{"type":"codeListing","syntax":"swift","code":["Chart {","    ForEach(model.data) {","        if $0.capacityDensity > 0.0001 {","            RectangleMark(","                x: .value(\"Longitude\", $0.x),","                y: .value(\"Latitude\", $0.y)","            )   ","            .foregroundStyle(by: .value(\"Axis type\", $0.axisType))","        } else {","            PointMark(","                x: .value(\"Longitude\", $0.x),","                y: .value(\"Latitude\", $0.y)","            )","            .opacity(0.5)","        }","    }","}"]}]},{"title":"Homogeneously styled Chart","content":[{"code":["Chart {","    ForEach(model.data) {","        RectangleMark(","            x: .value(\"Longitude\", $0.x),","            y: .value(\"Latitude\", $0.y)","        )","        .foregroundStyle(by: .value(\"Axis type\", $0.panelAxisType))","        .opacity($0.capacityDensity)","    }","}"],"type":"codeListing","syntax":"swift"}]}],"type":"tabNavigator"},{"type":"heading","level":2,"text":"RectanglePlot API Example","anchor":"RectanglePlot-API-Example"},{"type":"codeListing","syntax":"swift","code":["Chart {","    RectanglePlot(","        model.data,","        x: .value(\"Longitude\", \\.x),","        y: .value(\"Latitude\", \\.y)","    )","    .foregroundStyle(by: .value(\"Axis type\", \\.panelAxisType))","    .opacity(\\.capacityDensity)","}"]},{"type":"heading","level":2,"text":"PointPlot API Example","anchor":"PointPlot-API-Example"},{"type":"paragraph","inlineContent":[{"text":"PointPlots take the same ","type":"text"},{"code":".value","type":"codeVoice"},{"text":" syntax. It’s use of KeyPaths allow styling all points without iterating over the dataset. Use of ","type":"text"},{"code":".symbolSize","type":"codeVoice"},{"text":" makes points represent capacity.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["Chart {","    contiguousUSMap","","    PointPlot(","        model.data,","        x: .value(\"Longitude\", \\.x),","        y: .value(\"Latitude\", \\.y)","    )","    .symbolSize(by: .value(\"Capacity\", \\.capacity))","    .foregroundStyle(","        by: .value(\"Axis type\", \\.panelAxisType)","    )","}"]},{"type":"paragraph","inlineContent":[{"text":"Model definition","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["@Observable class Model {","    var data: [DataPoint]","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Stored Properties allows Swift Charts to access the "},{"code":"x","type":"codeVoice"},{"type":"text","text":" and "},{"code":"y","type":"codeVoice"},{"type":"text","text":" values for all data points with a constant memory offset instead of calling the getter for every data point."}]},{"type":"codeListing","syntax":"swift","code":["struct DataPoint: Identifiable {","    let id: Int","","    let: capacity: Double","    let: panelAxisType: String","","    let: xLongitude: Double","    let: yLatitude: Double","","    \/\/ Albers projection","    var x: Double","    var y: Double","}"]},{"type":"heading","level":3,"text":"Chart Modifiers","anchor":"Chart-Modifiers"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"foregroundStyle"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"opacity"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"symbol"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"symbolSize"}]}]},{"content":[{"inlineContent":[{"text":"lineStyle","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"accessibilityLabel"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"accessibilityValue"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"accessibilityIdentifier"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"position"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"accessibilityHidden","type":"text"}]}]}]},{"type":"heading","level":2,"text":"When to Use","anchor":"When-to-Use"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"inlineContent":[{"text":"Vectorized Plots","type":"text"}],"type":"strong"},{"type":"text","text":" for larger datasets where the entire plot is customized with the same modifiers and properties."}]}]},{"content":[{"inlineContent":[{"text":"Use the ","type":"text"},{"type":"strong","inlineContent":[{"text":"Mark API","type":"text"}]},{"text":" when you have fewer data points, but need to customize each element with individual mark types and modifiers, or if you need complex layering with zIndex.","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","level":2,"text":"Vectorized Plot Performance","anchor":"Vectorized-Plot-Performance"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Group data by style"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Avoid computed properties"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Specify scale domains if known"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Avoid unnecessary styling","type":"text"}]}]}]},{"type":"heading","level":2,"text":"Written By","anchor":"Written-By"},{"columns":[{"size":1,"content":[{"type":"paragraph","inlineContent":[{"type":"image","identifier":"dl-alexandre"}]}]},{"size":4,"content":[{"type":"heading","level":3,"text":"Dalton Alexandre","anchor":"Dalton-Alexandre"},{"type":"paragraph","inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/dl-alexandre","overridingTitle":"Contributed Notes","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/dl-alexandre","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/daltonalexandre.carrd.co","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"|","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/x.com\/d_creatio","type":"reference","isActive":true}]}]}],"type":"row","numberOfColumns":5},{"type":"thematicBreak"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference"}]},{"type":"heading","level":2,"text":"Related Sessions","anchor":"Related-Sessions"},{"type":"links","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10136-Hello-Swift-Charts","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10037-Explore-pie-charts-and-interactivity-in-Swift-Charts"],"style":"list"},{"type":"small","inlineContent":[{"type":"strong","inlineContent":[{"text":"Legal Notice","type":"text"}]}]},{"type":"small","inlineContent":[{"type":"text","text":"All content copyright © 2012 – 2024 Apple Inc. All rights reserved."},{"type":"text","text":" "},{"type":"text","text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries."},{"type":"text","text":" "},{"type":"text","text":"This website is not made by, affiliated with, nor endorsed by Apple."}]}]}],"references":{"WWDC24-10155-scatter-plot":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC24-10155-scatter-plot.jpeg","traits":["1x","light"]}],"identifier":"WWDC24-10155-scatter-plot","alt":null,"type":"image"},"WWDCNotes.png":{"alt":null,"identifier":"WWDCNotes.png","variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"type":"image"},"WWDC24-10155-lineplot-distribution-graph":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC24-10155-lineplot-distribution-graph.jpeg"}],"alt":null,"type":"image","identifier":"WWDC24-10155-lineplot-distribution-graph"},"WWDC24.jpeg":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC24.jpeg","traits":["1x","light"]}],"identifier":"WWDC24.jpeg","alt":null,"type":"image"},"WWDC24-10155-heatmap":{"alt":null,"identifier":"WWDC24-10155-heatmap","variants":[{"url":"\/images\/WWDCNotes\/WWDC24-10155-heatmap.jpeg","traits":["1x","light"]}],"type":"image"},"dl-alexandre.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/dl-alexandre.jpeg"}],"alt":null,"type":"image","identifier":"dl-alexandre.jpeg"},"WWDC24-10155-plot-api-variants":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC24-10155-plot-api-variants.jpeg","traits":["1x","light"]}],"identifier":"WWDC24-10155-plot-api-variants","alt":null,"type":"image"},"WWDC24-10155-parametric-function":{"alt":null,"identifier":"WWDC24-10155-parametric-function","variants":[{"url":"\/images\/WWDCNotes\/WWDC24-10155-parametric-function.jpeg","traits":["1x","light"]}],"type":"image"},"WWDC24-10155-parametric-graph":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC24-10155-parametric-graph.jpeg"}],"alt":null,"type":"image","identifier":"WWDC24-10155-parametric-graph"},"dl-alexandre":{"variants":[{"url":"\/images\/WWDCNotes\/dl-alexandre.jpeg","traits":["1x","light"]}],"identifier":"dl-alexandre","alt":"Profile image of Dalton Alexandre","type":"image"},"https://github.com/dl-alexandre":{"title":"GitHub","url":"https:\/\/github.com\/dl-alexandre","identifier":"https:\/\/github.com\/dl-alexandre","type":"link","titleInlineContent":[{"text":"GitHub","type":"text"}]},"WWDC24-10155-areaplot-graph":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC24-10155-areaplot-graph.jpeg"}],"alt":null,"type":"image","identifier":"WWDC24-10155-areaplot-graph"},"doc://WWDCNotes/documentation/WWDCNotes/dl-alexandre":{"url":"\/documentation\/wwdcnotes\/dl-alexandre","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/dl-alexandre","title":"Dalton Alexandre (5 notes)","role":"sampleCode","abstract":[{"type":"text","text":"Software Developer"}],"kind":"article","images":[{"identifier":"dl-alexandre.jpeg","type":"card"},{"identifier":"dl-alexandre.jpeg","type":"icon"}]},"WWDC24-Icon.png":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC24-Icon.png","traits":["1x","light"]}],"identifier":"WWDC24-Icon.png","alt":null,"type":"image"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","titleInlineContent":[{"text":"Contributions are welcome!","type":"text"}]},"https://daltonalexandre.carrd.co":{"titleInlineContent":[{"text":"Blog","type":"text"}],"url":"https:\/\/daltonalexandre.carrd.co","title":"Blog","type":"link","identifier":"https:\/\/daltonalexandre.carrd.co"},"WWDC24-10155-normal-distribution-equation":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC24-10155-normal-distribution-equation.jpeg","traits":["1x","light"]}],"identifier":"WWDC24-10155-normal-distribution-equation","alt":null,"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC23-10037-Explore-pie-charts-and-interactivity-in-Swift-Charts":{"url":"\/documentation\/wwdcnotes\/wwdc23-10037-explore-pie-charts-and-interactivity-in-swift-charts","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC23-10037-Explore-pie-charts-and-interactivity-in-Swift-Charts","role":"sampleCode","abstract":[{"type":"text","text":"Swift Charts has come full circle: Get ready to bake up pie and donut charts in your app with the latest improvements to the framework. Learn how to make your charts scrollable, explore the chart selection API for revealing additional details in your data, and find out how enabling additional interactivity can make your charts even more delightful."}],"title":"Explore pie charts and interactivity in Swift Charts","type":"topic","kind":"article"},"https://x.com/d_creatio":{"title":"X\/Twitter","url":"https:\/\/x.com\/d_creatio","identifier":"https:\/\/x.com\/d_creatio","type":"link","titleInlineContent":[{"text":"X\/Twitter","type":"text"}]},"WWDC24-10155-areaplot-graph-unbound":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC24-10155-areaplot-graph-unbound.jpeg"}],"alt":null,"type":"image","identifier":"WWDC24-10155-areaplot-graph-unbound"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC24":{"kind":"article","images":[{"type":"icon","identifier":"WWDC24-Icon.png"},{"type":"card","identifier":"WWDC24.jpeg"}],"role":"collectionGroup","url":"\/documentation\/wwdcnotes\/wwdc24","title":"WWDC24","type":"topic","abstract":[{"text":"Xcode 16, Swift 6, iOS 18, macOS 15 (Sequoia), tvOS 18, visionOS 2, watchOS 11.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: Swift Testing, ","type":"text"},{"type":"codeVoice","code":"FinanceKit"},{"text":", ","type":"text"},{"type":"codeVoice","code":"TabletopKit"},{"text":", and more.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC24"},"WWDC24-10155-areaplot-distribution-graph":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC24-10155-areaplot-distribution-graph.jpeg","traits":["1x","light"]}],"identifier":"WWDC24-10155-areaplot-distribution-graph","alt":null,"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes":{"kind":"symbol","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","role":"collection","url":"\/documentation\/wwdcnotes","type":"topic","title":"WWDC Notes","images":[{"type":"icon","identifier":"WWDCNotes.png"}]},"https://developer.apple.com/wwdc24/10155":{"url":"https:\/\/developer.apple.com\/wwdc24\/10155","identifier":"https:\/\/developer.apple.com\/wwdc24\/10155","type":"download","checksum":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC22-10136-Hello-Swift-Charts":{"title":"Hello Swift Charts","url":"\/documentation\/wwdcnotes\/wwdc22-10136-hello-swift-charts","kind":"article","role":"sampleCode","abstract":[{"type":"text","text":"Say hello to Swift Charts — a flexible framework that helps you create charts entirely in SwiftUI that look and feel right at home on all Apple platforms. Discover how you can use compositional syntax to make informative, delightful, and accessible charts with less code. We’ll share the building blocks for making visualizations with Swift Charts, and explore how you can change your charts’ design with a simple modifier. We’ll also take you through the latest updates to Xcode Previews to help you chart a path toward an engaging experience."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC22-10136-Hello-Swift-Charts"}}}