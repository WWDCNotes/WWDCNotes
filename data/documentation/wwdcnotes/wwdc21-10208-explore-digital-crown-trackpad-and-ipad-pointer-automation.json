{"metadata":{"title":"Explore Digital Crown, Trackpad, and iPad pointer automation","role":"sampleCode","roleHeading":"WWDC21","modules":[{"name":"WWDC Notes"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc21-10208-explore-digital-crown-trackpad-and-ipad-pointer-automation"]}],"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10208-Explore-Digital-Crown-Trackpad-and-iPad-pointer-automation","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"üò± ‚ÄúNo Overview Available!‚Äù"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Be the hero to change that by watching the video and providing notes! It‚Äôs super easy:"},{"type":"text","text":" "},{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","isActive":true,"type":"reference"}],"type":"paragraph"},{"text":"Related Sessions","level":2,"anchor":"Related-Sessions","type":"heading"},{"items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10207-Embrace-Expected-Failures-in-XCTest","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10296-Diagnose-unreliable-code-with-test-repetitions"],"type":"links","style":"list"}]}],"abstract":[{"type":"text","text":"Learn how you can interact with devices in UI Tests in Xcode 13. Discover newly-automatable input methods including iPadOS pointer, watchOS Digital Crown, and enhanced macOS trackpad scrolling APIs."}],"sampleCodeDownload":{"action":{"overridingTitle":"Watch Video (9 min)","identifier":"https:\/\/developer.apple.com\/wwdc21\/10208","type":"reference","isActive":true},"kind":"sampleDownload"},"sections":[],"kind":"article","schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21"]]},"references":{"WWDC21.jpeg":{"variants":[{"traits":["1x","light"],"url":"\/images\/WWDC21.jpeg"}],"type":"image","alt":null,"identifier":"WWDC21.jpeg"},"doc://WWDCNotes/documentation/WWDCNotes":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","role":"collection","title":"WWDC Notes","type":"topic","abstract":[{"type":"text","text":"Session notes shared by the community for the community."}],"kind":"symbol","images":[{"identifier":"WWDCNotes.png","type":"icon"}],"url":"\/documentation\/wwdcnotes"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10207-Embrace-Expected-Failures-in-XCTest":{"title":"Embrace Expected Failures in XCTest","type":"topic","kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10207-Embrace-Expected-Failures-in-XCTest","abstract":[{"text":"Testing is a crucial part of building a great app: Great tests can help you track down important issues before release, improve your workflow, and provide a quality experience upon release. For issues that can‚Äôt be immediately resolved, however, XCTest can help provide better context around those problems with XCTExpectFailure. Learn how this API works, its strict behavior, and how to improve the signal-to-noise ratio in your tests to identify new issues more efficiently.","type":"text"}],"role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc21-10207-embrace-expected-failures-in-xctest"},"WWDC21-Icon.png":{"variants":[{"url":"\/images\/WWDC21-Icon.png","traits":["1x","light"]}],"alt":null,"identifier":"WWDC21-Icon.png","type":"image"},"WWDCNotes.png":{"variants":[{"url":"\/images\/WWDCNotes.png","traits":["1x","light"]}],"alt":null,"identifier":"WWDCNotes.png","type":"image"},"https://developer.apple.com/wwdc21/10208":{"identifier":"https:\/\/developer.apple.com\/wwdc21\/10208","url":"https:\/\/developer.apple.com\/wwdc21\/10208","type":"download","checksum":null},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21":{"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21","title":"WWDC21","role":"collectionGroup","images":[{"identifier":"WWDC21-Icon.png","type":"icon"},{"identifier":"WWDC21.jpeg","type":"card"}],"abstract":[{"text":"Xcode 13, Swift 5.5, iOS 15, macOS 12 (Monterey), tvOS 15, watchOS 8.","type":"text"},{"text":" ","type":"text"},{"text":"New APIs: ","type":"text"},{"code":"MusicKit","type":"codeVoice"},{"text":", ","type":"text"},{"code":"DocC","type":"codeVoice"},{"text":", ","type":"text"},{"code":"StoreKit 2","type":"codeVoice"},{"text":", and more.","type":"text"}],"type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10296-Diagnose-unreliable-code-with-test-repetitions":{"title":"Diagnose unreliable code with test repetitions","abstract":[{"type":"text","text":"Test repetitions can help you debug even the most unreliable code. Discover how you can use the maximum repetitions, until failure, and retry on failure testing modes within test plans, Xcode, and xcodebuild to track down bugs and crashers and make your app more stable for everyone."}],"role":"sampleCode","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10296-Diagnose-unreliable-code-with-test-repetitions","kind":"article","type":"topic","url":"\/documentation\/wwdcnotes\/wwdc21-10296-diagnose-unreliable-code-with-test-repetitions"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","title":"Learn More‚Ä¶","url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","titleInlineContent":[{"type":"text","text":"Learn More‚Ä¶"}]}}}