{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/wwdcnotes\/wwdc19-403-creating-great-localized-experiences-with-xcode-11"]}],"kind":"article","primaryContentSections":[{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Users can now change the language setting per app, this is huge!"},{"type":"text","text":" "},{"type":"text","text":"Available both on macOS and iOS."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"This setting is in the system setting, we can forward the user there by calling: "},{"type":"codeVoice","code":"UIApplication.shared.open(URL(string: UIApplication.openSettingsURLString)!)"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Once the language has changed, the app will be relaunched with the new language preference."}],"type":"paragraph"},{"inlineContent":[{"text":"15x faster strings extraction from storyboards","type":"text"}],"type":"paragraph"},{"text":"Device-specific strings","anchor":"Device-specific-strings","type":"heading","level":2},{"inlineContent":[{"text":"We now have ","type":"text"},{"code":".stringsdict","type":"codeVoice"},{"text":" for device-specific strings:","type":"text"},{"text":"\n","type":"text"},{"text":"this is awesome for iPad apps brought to Mac, because they can now display text like “tap here” and “click here” any without further logic required.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Dictionary Rule: "},{"type":"codeVoice","code":"NSStringDeviceSpecificRuleType"},{"type":"text","text":" "},{"type":"text","text":"Values: "},{"type":"codeVoice","code":"appletv"},{"type":"text","text":", "},{"type":"codeVoice","code":"applewatch"},{"type":"text","text":", "},{"type":"codeVoice","code":"ipad"},{"type":"text","text":", "},{"type":"codeVoice","code":"iphone"},{"type":"text","text":", "},{"type":"codeVoice","code":"ipod"},{"type":"text","text":", "},{"type":"codeVoice","code":"mac"},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Localizable Assets","anchor":"Localizable-Assets","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Localizable assets directly on the assets catalog (finally!)"}],"type":"paragraph"},{"inlineContent":[{"type":"image","identifier":"WWDC19-403-assets"}],"type":"paragraph"},{"text":"Written By","anchor":"Written-By","type":"heading","level":2},{"numberOfColumns":5,"type":"row","columns":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"zntfdr","type":"image"}]}],"size":1},{"content":[{"type":"heading","text":"Federico Zanetello","anchor":"Federico-Zanetello","level":3},{"inlineContent":[{"overridingTitleInlineContent":[{"type":"text","text":"Contributed Notes"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","type":"reference","overridingTitle":"Contributed Notes","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/github.com\/zntfdr","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"|"},{"type":"text","text":" "},{"identifier":"https:\/\/zntfdr.dev","type":"reference","isActive":true}],"type":"paragraph"}],"size":4}]},{"type":"thematicBreak"},{"inlineContent":[{"type":"text","text":"Missing anything? Corrections? "},{"isActive":true,"identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"reference"}],"type":"paragraph"},{"text":"Related Sessions","anchor":"Related-Sessions","type":"heading","level":2},{"style":"list","items":["doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10221-Streamline-your-localized-strings","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10140-Build-locationaware-enterprise-apps","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10169-Swift-packages-Resources-and-localization","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-206-Introducing-SF-Symbols","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-413-Testing-in-Xcode"],"type":"links"},{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Legal Notice"}]}],"type":"small"},{"inlineContent":[{"text":"All content copyright © 2012 – 2025 Apple Inc. All rights reserved.","type":"text"},{"text":" ","type":"text"},{"text":"Swift, the Swift logo, Swift Playgrounds, Xcode, Instruments, Cocoa Touch, Touch ID, FaceID, iPhone, iPad, Safari, Apple Vision, Apple Watch, App Store, iPadOS, watchOS, visionOS, tvOS, Mac, and macOS are trademarks of Apple Inc., registered in the U.S. and other countries.","type":"text"},{"text":" ","type":"text"},{"text":"This website is not made by, affiliated with, nor endorsed by Apple.","type":"text"}],"type":"small"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/WWDCNotes\/documentation\/WWDCNotes","doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19"]]},"identifier":{"url":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-403-Creating-Great-Localized-Experiences-with-Xcode-11","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Learn how your app can support per-app language settings in iOS 13. Get the details on localizing assets with asset catalogs and simplifying your localization workflow with Xcode 11. Understand how to generate screenshots in multiple languages for localization and testing."}],"sampleCodeDownload":{"action":{"overridingTitle":"Watch Video (34 min)","isActive":true,"identifier":"https:\/\/developer.apple.com\/wwdc19\/403","type":"reference"},"kind":"sampleDownload"},"metadata":{"roleHeading":"WWDC19","role":"sampleCode","title":"Creating Great Localized Experiences with Xcode 11","modules":[{"name":"WWDC Notes"}]},"references":{"WWDCNotes.png":{"identifier":"WWDCNotes.png","variants":[{"url":"\/images\/WWDCNotes\/WWDCNotes.png","traits":["1x","light"]}],"alt":null,"type":"image"},"https://developer.apple.com/wwdc19/403":{"url":"https:\/\/developer.apple.com\/wwdc19\/403","type":"download","checksum":null,"identifier":"https:\/\/developer.apple.com\/wwdc19\/403"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10140-Build-locationaware-enterprise-apps":{"role":"sampleCode","abstract":[{"type":"text","text":"Develop location-aware enterprise apps for your business and personalize your employee’s everyday experience. Learn how Apple built the Caffe Macs app for its on-campus cafeterias using iBeacons and Location Services and how you can apply these tools and frameworks to your own apps, while preserving employee privacy. From there, discover how you can use localization to deliver a great experience for your international employees."}],"type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10140-Build-locationaware-enterprise-apps","kind":"article","title":"Build location-aware enterprise apps","url":"\/documentation\/wwdcnotes\/wwdc20-10140-build-locationaware-enterprise-apps"},"WWDC19.jpeg":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC19.jpeg","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"WWDC19.jpeg"},"zntfdr":{"alt":"Profile image of Federico Zanetello","type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/zntfdr.jpeg"}],"identifier":"zntfdr"},"zntfdr.jpeg":{"identifier":"zntfdr.jpeg","variants":[{"url":"\/images\/WWDCNotes\/zntfdr.jpeg","traits":["1x","light"]}],"alt":null,"type":"image"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19":{"images":[{"identifier":"WWDC19-Icon.png","type":"icon"},{"identifier":"WWDC19.jpeg","type":"card"}],"role":"collectionGroup","abstract":[{"type":"text","text":"Xcode 11, Swift 5.1, iOS 13, macOS 10.15 (Catalina), tvOS 13, watchOS 6."},{"type":"text","text":" "},{"type":"text","text":"New APIs: "},{"type":"codeVoice","code":"Combine"},{"type":"text","text":", "},{"type":"codeVoice","code":"Core Haptics"},{"type":"text","text":", "},{"type":"codeVoice","code":"Create ML"},{"type":"text","text":", and more."}],"kind":"article","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19","type":"topic","title":"WWDC19","url":"\/documentation\/wwdcnotes\/wwdc19"},"doc://WWDCNotes/documentation/WWDCNotes/zntfdr":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/zntfdr","kind":"article","role":"sampleCode","title":"Federico Zanetello (332 notes)","images":[{"type":"card","identifier":"zntfdr.jpeg"},{"type":"icon","identifier":"zntfdr.jpeg"}],"abstract":[{"type":"text","text":"Software engineer with a strong passion for well-written code, thought-out composable architectures, automation, tests, and more."}],"type":"topic","url":"\/documentation\/wwdcnotes\/zntfdr"},"https://wwdcnotes.com/documentation/wwdcnotes/contributing":{"title":"Contributions are welcome!","titleInlineContent":[{"type":"text","text":"Contributions are welcome!"}],"url":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing","type":"link","identifier":"https:\/\/wwdcnotes.com\/documentation\/wwdcnotes\/contributing"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC21-10221-Streamline-your-localized-strings":{"title":"Streamline your localized strings","type":"topic","abstract":[{"text":"When you localize the text within your app, you can help make your app more accessible to a worldwide audience. Discover best practices for building your localization workflow, including how to write and format strings accurately, and learn how to prepare strings for localization in different languages using Xcode.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC21-10221-Streamline-your-localized-strings","role":"sampleCode","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc21-10221-streamline-your-localized-strings"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC20-10169-Swift-packages-Resources-and-localization":{"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC20-10169-Swift-packages-Resources-and-localization","title":"Swift packages: Resources and localization","role":"sampleCode","type":"topic","abstract":[{"type":"text","text":"Bring your resources along for the ride when you organize and share code using Swift packages. Discover how to include assets like images and storyboards in a package and how to access them from code. And learn how to add localized strings to make your code accessible to people around the world."}],"url":"\/documentation\/wwdcnotes\/wwdc20-10169-swift-packages-resources-and-localization","kind":"article"},"https://zntfdr.dev":{"titleInlineContent":[{"text":"Blog","type":"text"}],"url":"https:\/\/zntfdr.dev","type":"link","title":"Blog","identifier":"https:\/\/zntfdr.dev"},"https://github.com/zntfdr":{"identifier":"https:\/\/github.com\/zntfdr","title":"GitHub","titleInlineContent":[{"text":"GitHub","type":"text"}],"type":"link","url":"https:\/\/github.com\/zntfdr"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-206-Introducing-SF-Symbols":{"title":"Introducing SF Symbols","type":"topic","abstract":[{"text":"SF Symbols introduces a comprehensive library of vector-based symbols that you can incorporate into your app to simplify the layout of user interface elements through automatic alignment with surrounding text, and support for multiple weights and sizes. Learn how easy it is to adapt to different screen sizes and layouts, and improve the accessibility and localizability of your app. Get details on how to create new symbols for your specific needs that perfectly match the visual style of SF Symbols.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-206-Introducing-SF-Symbols","role":"sampleCode","kind":"article","url":"\/documentation\/wwdcnotes\/wwdc19-206-introducing-sf-symbols"},"WWDC19-403-assets":{"variants":[{"url":"\/images\/WWDCNotes\/WWDC19-403-assets.png","traits":["1x","light"]}],"alt":null,"type":"image","identifier":"WWDC19-403-assets"},"doc://WWDCNotes/documentation/WWDCNotes":{"images":[{"type":"icon","identifier":"WWDCNotes.png"}],"role":"collection","kind":"symbol","type":"topic","abstract":[{"text":"Session notes shared by the community for the community.","type":"text"}],"identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes","title":"WWDC Notes","url":"\/documentation\/wwdcnotes"},"doc://WWDCNotes/documentation/WWDCNotes/WWDC19-413-Testing-in-Xcode":{"kind":"article","title":"Testing in Xcode","role":"sampleCode","url":"\/documentation\/wwdcnotes\/wwdc19-413-testing-in-xcode","type":"topic","identifier":"doc:\/\/WWDCNotes\/documentation\/WWDCNotes\/WWDC19-413-Testing-in-Xcode","abstract":[{"type":"text","text":"Unit testing is an essential tool to consistently verify your code works correctly. Learn about the built-in testing features in Xcode, using XCTest. Find out how to organize your tests and run them under different configurations using test plans, new in Xcode 11. Discover how to automate testing and efficiently work with the results."}]},"WWDC19-Icon.png":{"alt":null,"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/WWDCNotes\/WWDC19-Icon.png"}],"identifier":"WWDC19-Icon.png"}}}